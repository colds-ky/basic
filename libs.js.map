{
  "version": 3,
  "sources": ["node_modules/@atproto/syntax/src/handle.ts", "node_modules/@atproto/syntax/src/did.ts", "node_modules/@atproto/syntax/src/nsid.ts", "node_modules/@atproto/syntax/src/aturi_validation.ts", "node_modules/@atproto/syntax/src/aturi.ts", "node_modules/@atproto/syntax/src/tid.ts", "node_modules/@atproto/syntax/src/recordkey.ts", "node_modules/@atproto/syntax/src/datetime.ts", "node_modules/@atproto/syntax/src/index.ts", "node_modules/zod/lib/helpers/util.js", "node_modules/zod/lib/ZodError.js", "node_modules/zod/lib/locales/en.js", "node_modules/zod/lib/errors.js", "node_modules/zod/lib/helpers/parseUtil.js", "node_modules/zod/lib/helpers/typeAliases.js", "node_modules/zod/lib/helpers/errorUtil.js", "node_modules/zod/lib/types.js", "node_modules/zod/lib/external.js", "node_modules/zod/lib/index.js", "node_modules/@atproto/common-web/src/check.ts", "node_modules/@atproto/common-web/src/util.ts", "node_modules/@atproto/common-web/src/arrays.ts", "node_modules/@atproto/common-web/src/async.ts", "node_modules/@atproto/common-web/src/tid.ts", "node_modules/@atproto/common-web/node_modules/multiformats/esm/vendor/varint.js", "node_modules/@atproto/common-web/node_modules/multiformats/esm/src/varint.js", "node_modules/@atproto/common-web/node_modules/multiformats/esm/src/bytes.js", "node_modules/@atproto/common-web/node_modules/multiformats/esm/src/hashes/digest.js", "node_modules/@atproto/common-web/node_modules/multiformats/esm/vendor/base-x.js", "node_modules/@atproto/common-web/node_modules/multiformats/esm/src/bases/base.js", "node_modules/@atproto/common-web/node_modules/multiformats/esm/src/bases/base58.js", "node_modules/@atproto/common-web/node_modules/multiformats/esm/src/bases/base32.js", "node_modules/@atproto/common-web/node_modules/multiformats/esm/src/cid.js", "node_modules/uint8arrays/esm/src/compare.js", "node_modules/uint8arrays/esm/src/concat.js", "node_modules/uint8arrays/esm/src/equals.js", "node_modules/uint8arrays/node_modules/multiformats/esm/vendor/base-x.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bytes.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bases/base.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bases/identity.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bases/base2.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bases/base8.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bases/base10.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bases/base16.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bases/base32.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bases/base36.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bases/base58.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bases/base64.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/bases/base256emoji.js", "node_modules/uint8arrays/node_modules/multiformats/esm/vendor/varint.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/varint.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/hashes/digest.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/hashes/hasher.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/hashes/sha2-browser.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/hashes/identity.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/codecs/raw.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/codecs/json.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/cid.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/index.js", "node_modules/uint8arrays/node_modules/multiformats/esm/src/basics.js", "node_modules/uint8arrays/esm/src/util/bases.js", "node_modules/uint8arrays/esm/src/from-string.js", "node_modules/uint8arrays/esm/src/to-string.js", "node_modules/uint8arrays/esm/src/xor.js", "node_modules/uint8arrays/esm/src/index.js", "node_modules/@atproto/common-web/src/ipld.ts", "node_modules/@atproto/common-web/src/retry.ts", "node_modules/@atproto/common-web/src/types.ts", "node_modules/@atproto/common-web/src/times.ts", "node_modules/graphemer/lib/boundaries.js", "node_modules/graphemer/lib/GraphemerHelper.js", "node_modules/graphemer/lib/GraphemerIterator.js", "node_modules/graphemer/lib/Graphemer.js", "node_modules/graphemer/lib/index.js", "node_modules/@atproto/common-web/src/strings.ts", "node_modules/@atproto/common-web/src/did-doc.ts", "node_modules/@atproto/common-web/src/index.ts", "node_modules/@atproto/lexicon/node_modules/multiformats/esm/vendor/varint.js", "node_modules/@atproto/lexicon/node_modules/multiformats/esm/src/varint.js", "node_modules/@atproto/lexicon/node_modules/multiformats/esm/src/bytes.js", "node_modules/@atproto/lexicon/node_modules/multiformats/esm/src/hashes/digest.js", "node_modules/@atproto/lexicon/node_modules/multiformats/esm/vendor/base-x.js", "node_modules/@atproto/lexicon/node_modules/multiformats/esm/src/bases/base.js", "node_modules/@atproto/lexicon/node_modules/multiformats/esm/src/bases/base58.js", "node_modules/@atproto/lexicon/node_modules/multiformats/esm/src/bases/base32.js", "node_modules/@atproto/lexicon/node_modules/multiformats/esm/src/cid.js", "node_modules/iso-datestring-validator/dist/index.js", "node_modules/@atproto/lexicon/src/validators/formats.ts", "node_modules/@atproto/lexicon/src/validators/primitives.ts", "node_modules/@atproto/lexicon/src/blob-refs.ts", "node_modules/@atproto/lexicon/src/validators/blob.ts", "node_modules/@atproto/lexicon/src/validators/complex.ts", "node_modules/@atproto/lexicon/src/util.ts", "node_modules/@atproto/lexicon/src/types.ts", "node_modules/@atproto/lexicon/src/validators/xrpc.ts", "node_modules/@atproto/lexicon/src/validation.ts", "node_modules/@atproto/lexicon/src/lexicons.ts", "node_modules/@atproto/lexicon/src/serialize.ts", "node_modules/@atproto/lexicon/src/index.ts", "node_modules/@atproto/api/dist/types.js", "node_modules/@atproto/api/src/const.ts", "node_modules/@atproto/api/src/util.ts", "node_modules/@atproto/xrpc/src/types.ts", "node_modules/@atproto/xrpc/src/util.ts", "node_modules/@atproto/xrpc/src/client.ts", "node_modules/@atproto/xrpc/src/index.ts", "node_modules/@atproto/api/src/client/lexicons.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/deleteAccount.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/disableAccountInvites.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/disableInviteCodes.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/enableAccountInvites.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/getAccountInfo.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/getAccountInfos.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/getInviteCodes.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/getSubjectStatus.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/sendEmail.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/updateAccountEmail.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/updateAccountHandle.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/updateAccountPassword.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/updateSubjectStatus.ts", "node_modules/@atproto/api/src/client/types/com/atproto/identity/getRecommendedDidCredentials.ts", "node_modules/@atproto/api/src/client/types/com/atproto/identity/requestPlcOperationSignature.ts", "node_modules/@atproto/api/src/client/types/com/atproto/identity/resolveHandle.ts", "node_modules/@atproto/api/src/client/types/com/atproto/identity/signPlcOperation.ts", "node_modules/@atproto/api/src/client/types/com/atproto/identity/submitPlcOperation.ts", "node_modules/@atproto/api/src/client/types/com/atproto/identity/updateHandle.ts", "node_modules/@atproto/api/src/client/types/com/atproto/label/queryLabels.ts", "node_modules/@atproto/api/src/client/types/com/atproto/moderation/createReport.ts", "node_modules/@atproto/api/src/client/util.ts", "node_modules/@atproto/api/src/client/types/com/atproto/repo/applyWrites.ts", "node_modules/@atproto/api/src/client/types/com/atproto/repo/createRecord.ts", "node_modules/@atproto/api/src/client/types/com/atproto/repo/deleteRecord.ts", "node_modules/@atproto/api/src/client/types/com/atproto/repo/describeRepo.ts", "node_modules/@atproto/api/src/client/types/com/atproto/repo/getRecord.ts", "node_modules/@atproto/api/src/client/types/com/atproto/repo/importRepo.ts", "node_modules/@atproto/api/src/client/types/com/atproto/repo/listMissingBlobs.ts", "node_modules/@atproto/api/src/client/types/com/atproto/repo/listRecords.ts", "node_modules/@atproto/api/src/client/types/com/atproto/repo/putRecord.ts", "node_modules/@atproto/api/src/client/types/com/atproto/repo/uploadBlob.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/activateAccount.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/checkAccountStatus.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/confirmEmail.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/createAccount.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/createAppPassword.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/createInviteCode.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/createInviteCodes.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/createSession.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/deactivateAccount.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/deleteAccount.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/deleteSession.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/describeServer.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/getAccountInviteCodes.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/getServiceAuth.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/getSession.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/listAppPasswords.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/refreshSession.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/requestAccountDelete.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/requestEmailConfirmation.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/requestEmailUpdate.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/requestPasswordReset.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/reserveSigningKey.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/resetPassword.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/revokeAppPassword.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/updateEmail.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/getBlob.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/getBlocks.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/getCheckout.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/getHead.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/getLatestCommit.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/getRecord.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/getRepo.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/listBlobs.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/listRepos.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/notifyOfUpdate.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/requestCrawl.ts", "node_modules/@atproto/api/src/client/types/com/atproto/temp/checkSignupQueue.ts", "node_modules/@atproto/api/src/client/types/com/atproto/temp/fetchLabels.ts", "node_modules/@atproto/api/src/client/types/com/atproto/temp/requestPhoneVerification.ts", "node_modules/@atproto/api/src/client/types/app/bsky/actor/getPreferences.ts", "node_modules/@atproto/api/src/client/types/app/bsky/actor/getProfile.ts", "node_modules/@atproto/api/src/client/types/app/bsky/actor/getProfiles.ts", "node_modules/@atproto/api/src/client/types/app/bsky/actor/getSuggestions.ts", "node_modules/@atproto/api/src/client/types/app/bsky/actor/putPreferences.ts", "node_modules/@atproto/api/src/client/types/app/bsky/actor/searchActors.ts", "node_modules/@atproto/api/src/client/types/app/bsky/actor/searchActorsTypeahead.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/describeFeedGenerator.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getActorFeeds.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getActorLikes.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getAuthorFeed.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeed.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedGenerator.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedGenerators.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getFeedSkeleton.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getLikes.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getListFeed.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getPostThread.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getPosts.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getRepostedBy.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getSuggestedFeeds.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/getTimeline.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/searchPosts.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/getBlocks.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/getFollowers.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/getFollows.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/getList.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/getListBlocks.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/getListMutes.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/getLists.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/getMutes.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/getRelationships.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/getSuggestedFollowsByActor.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/muteActor.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/muteActorList.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/unmuteActor.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/unmuteActorList.ts", "node_modules/@atproto/api/src/client/types/app/bsky/labeler/getServices.ts", "node_modules/@atproto/api/src/client/types/app/bsky/notification/getUnreadCount.ts", "node_modules/@atproto/api/src/client/types/app/bsky/notification/listNotifications.ts", "node_modules/@atproto/api/src/client/types/app/bsky/notification/registerPush.ts", "node_modules/@atproto/api/src/client/types/app/bsky/notification/updateSeen.ts", "node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getPopularFeedGenerators.ts", "node_modules/@atproto/api/src/client/types/app/bsky/unspecced/getTaggedSuggestions.ts", "node_modules/@atproto/api/src/client/types/app/bsky/unspecced/searchActorsSkeleton.ts", "node_modules/@atproto/api/src/client/types/app/bsky/unspecced/searchPostsSkeleton.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/communication/createTemplate.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/communication/deleteTemplate.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/communication/listTemplates.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/communication/updateTemplate.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/moderation/emitEvent.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/moderation/getEvent.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/moderation/getRecord.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/moderation/getRepo.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/moderation/queryEvents.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/moderation/queryStatuses.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/moderation/searchRepos.ts", "node_modules/@atproto/api/src/client/types/com/atproto/admin/defs.ts", "node_modules/@atproto/api/src/client/types/com/atproto/label/defs.ts", "node_modules/@atproto/api/src/client/types/com/atproto/label/subscribeLabels.ts", "node_modules/@atproto/api/src/client/types/com/atproto/moderation/defs.ts", "node_modules/@atproto/api/src/client/types/com/atproto/repo/strongRef.ts", "node_modules/@atproto/api/src/client/types/com/atproto/server/defs.ts", "node_modules/@atproto/api/src/client/types/com/atproto/sync/subscribeRepos.ts", "node_modules/@atproto/api/src/client/types/app/bsky/actor/defs.ts", "node_modules/@atproto/api/src/client/types/app/bsky/actor/profile.ts", "node_modules/@atproto/api/src/client/types/app/bsky/embed/external.ts", "node_modules/@atproto/api/src/client/types/app/bsky/embed/images.ts", "node_modules/@atproto/api/src/client/types/app/bsky/embed/record.ts", "node_modules/@atproto/api/src/client/types/app/bsky/embed/recordWithMedia.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/defs.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/generator.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/like.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/post.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/repost.ts", "node_modules/@atproto/api/src/client/types/app/bsky/feed/threadgate.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/block.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/defs.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/follow.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/list.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/listblock.ts", "node_modules/@atproto/api/src/client/types/app/bsky/graph/listitem.ts", "node_modules/@atproto/api/src/client/types/app/bsky/labeler/defs.ts", "node_modules/@atproto/api/src/client/types/app/bsky/labeler/service.ts", "node_modules/@atproto/api/src/client/types/app/bsky/richtext/facet.ts", "node_modules/@atproto/api/src/client/types/app/bsky/unspecced/defs.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/communication/defs.ts", "node_modules/@atproto/api/src/client/types/tools/ozone/moderation/defs.ts", "node_modules/@atproto/api/src/client/index.ts", "node_modules/@atproto/api/src/agent.ts", "node_modules/@atproto/api/src/rich-text/unicode.ts", "node_modules/@atproto/api/src/rich-text/sanitization.ts", "node_modules/tlds/index.json", "node_modules/@atproto/api/src/rich-text/util.ts", "node_modules/@atproto/api/src/rich-text/detection.ts", "node_modules/@atproto/api/src/rich-text/rich-text.ts", "node_modules/@atproto/api/src/moderation/types.ts", "node_modules/@atproto/api/src/moderation/ui.ts", "node_modules/@atproto/api/src/moderation/const/labels.ts", "node_modules/@atproto/api/src/moderation/decision.ts", "node_modules/@atproto/api/src/moderation/subjects/account.ts", "node_modules/@atproto/api/src/moderation/subjects/profile.ts", "node_modules/@atproto/api/src/moderation/subjects/notification.ts", "node_modules/@atproto/api/src/moderation/mutewords.ts", "node_modules/@atproto/api/src/moderation/subjects/post.ts", "node_modules/@atproto/api/src/moderation/subjects/feed-generator.ts", "node_modules/@atproto/api/src/moderation/subjects/user-list.ts", "node_modules/@atproto/api/src/moderation/util.ts", "node_modules/@atproto/api/src/moderation/index.ts", "node_modules/@atproto/api/src/mocker.ts", "node_modules/@atproto/api/src/bsky-agent.ts", "node_modules/@atproto/api/src/index.ts", "node_modules/varint/encode.js", "node_modules/varint/decode.js", "node_modules/varint/length.js", "node_modules/varint/index.js", "lib/shorten.js", "lib/is-promise.js", "lib/coldsky-agent.js", "lib/throttled-async-cache.js", "node_modules/cbor-x/decode.js", "node_modules/cbor-x/encode.js", "node_modules/multiformats/src/bytes.ts", "node_modules/multiformats/src/vendor/base-x.js", "node_modules/multiformats/src/bases/base.ts", "node_modules/multiformats/src/bases/base32.ts", "node_modules/multiformats/src/bases/base58.ts", "node_modules/multiformats/src/vendor/varint.js", "node_modules/multiformats/src/varint.ts", "node_modules/multiformats/src/hashes/digest.ts", "node_modules/multiformats/src/cid.ts", "node_modules/cborg/lib/is.js", "node_modules/cborg/lib/token.js", "node_modules/cborg/lib/byte-utils.js", "node_modules/cborg/lib/bl.js", "node_modules/cborg/lib/common.js", "node_modules/cborg/lib/0uint.js", "node_modules/cborg/lib/1negint.js", "node_modules/cborg/lib/2bytes.js", "node_modules/cborg/lib/3string.js", "node_modules/cborg/lib/4array.js", "node_modules/cborg/lib/5map.js", "node_modules/cborg/lib/6tag.js", "node_modules/cborg/lib/7float.js", "node_modules/cborg/lib/jump.js", "node_modules/cborg/lib/encode.js", "node_modules/cborg/lib/decode.js", "node_modules/@ipld/dag-cbor/src/index.js", "node_modules/@ipld/car/src/decoder-common.js", "node_modules/@ipld/car/src/header-validator.js", "node_modules/@ipld/car/src/decoder.js", "node_modules/@ipld/car/src/reader-browser.js", "lib/firehose.js", "package.json", "lib/firehose-short-dids.js", "src/api/akpa.js", "lib/plc-directory.js", "lib/index.js"],
  "sourcesContent": ["export const INVALID_HANDLE = 'handle.invalid'\n\n// Currently these are registration-time restrictions, not protocol-level\n// restrictions. We have a couple accounts in the wild that we need to clean up\n// before hard-disallow.\n// See also: https://en.wikipedia.org/wiki/Top-level_domain#Reserved_domains\nexport const DISALLOWED_TLDS = [\n  '.local',\n  '.arpa',\n  '.invalid',\n  '.localhost',\n  '.internal',\n  '.example',\n  '.alt',\n  // policy could concievably change on \".onion\" some day\n  '.onion',\n  // NOTE: .test is allowed in testing and devopment. In practical terms\n  // \"should\" \"never\" actually resolve and get registered in production\n]\n\n// Handle constraints, in English:\n//  - must be a possible domain name\n//    - RFC-1035 is commonly referenced, but has been updated. eg, RFC-3696,\n//      section 2. and RFC-3986, section 3. can now have leading numbers (eg,\n//      4chan.org)\n//    - \"labels\" (sub-names) are made of ASCII letters, digits, hyphens\n//    - can not start or end with a hyphen\n//    - TLD (last component) should not start with a digit\n//    - can't end with a hyphen (can end with digit)\n//    - each segment must be between 1 and 63 characters (not including any periods)\n//    - overall length can't be more than 253 characters\n//    - separated by (ASCII) periods; does not start or end with period\n//    - case insensitive\n//    - domains (handles) are equal if they are the same lower-case\n//    - punycode allowed for internationalization\n//  - no whitespace, null bytes, joining chars, etc\n//  - does not validate whether domain or TLD exists, or is a reserved or\n//    special TLD (eg, .onion or .local)\n//  - does not validate punycode\nexport const ensureValidHandle = (handle: string): void => {\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9.-]*$/.test(handle)) {\n    throw new InvalidHandleError(\n      'Disallowed characters in handle (ASCII letters, digits, dashes, periods only)',\n    )\n  }\n\n  if (handle.length > 253) {\n    throw new InvalidHandleError('Handle is too long (253 chars max)')\n  }\n  const labels = handle.split('.')\n  if (labels.length < 2) {\n    throw new InvalidHandleError('Handle domain needs at least two parts')\n  }\n  for (let i = 0; i < labels.length; i++) {\n    const l = labels[i]\n    if (l.length < 1) {\n      throw new InvalidHandleError('Handle parts can not be empty')\n    }\n    if (l.length > 63) {\n      throw new InvalidHandleError('Handle part too long (max 63 chars)')\n    }\n    if (l.endsWith('-') || l.startsWith('-')) {\n      throw new InvalidHandleError(\n        'Handle parts can not start or end with hyphens',\n      )\n    }\n    if (i + 1 == labels.length && !/^[a-zA-Z]/.test(l)) {\n      throw new InvalidHandleError(\n        'Handle final component (TLD) must start with ASCII letter',\n      )\n    }\n  }\n}\n\n// simple regex translation of above constraints\nexport const ensureValidHandleRegex = (handle: string): void => {\n  if (\n    !/^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?$/.test(\n      handle,\n    )\n  ) {\n    throw new InvalidHandleError(\"Handle didn't validate via regex\")\n  }\n  if (handle.length > 253) {\n    throw new InvalidHandleError('Handle is too long (253 chars max)')\n  }\n}\n\nexport const normalizeHandle = (handle: string): string => {\n  return handle.toLowerCase()\n}\n\nexport const normalizeAndEnsureValidHandle = (handle: string): string => {\n  const normalized = normalizeHandle(handle)\n  ensureValidHandle(normalized)\n  return normalized\n}\n\nexport const isValidHandle = (handle: string): boolean => {\n  try {\n    ensureValidHandle(handle)\n  } catch (err) {\n    if (err instanceof InvalidHandleError) {\n      return false\n    }\n    throw err\n  }\n\n  return true\n}\n\nexport const isValidTld = (handle: string): boolean => {\n  return !DISALLOWED_TLDS.some((domain) => handle.endsWith(domain))\n}\n\nexport class InvalidHandleError extends Error {}\nexport class ReservedHandleError extends Error {}\nexport class UnsupportedDomainError extends Error {}\nexport class DisallowedDomainError extends Error {}\n", "// Human-readable constraints:\n//   - valid W3C DID (https://www.w3.org/TR/did-core/#did-syntax)\n//      - entire URI is ASCII: [a-zA-Z0-9._:%-]\n//      - always starts \"did:\" (lower-case)\n//      - method name is one or more lower-case letters, followed by \":\"\n//      - remaining identifier can have any of the above chars, but can not end in \":\"\n//      - it seems that a bunch of \":\" can be included, and don't need spaces between\n//      - \"%\" is used only for \"percent encoding\" and must be followed by two hex characters (and thus can't end in \"%\")\n//      - query (\"?\") and fragment (\"#\") stuff is defined for \"DID URIs\", but not as part of identifier itself\n//      - \"The current specification does not take a position on the maximum length of a DID\"\n//   - in current atproto, only allowing did:plc and did:web. But not *forcing* this at lexicon layer\n//   - hard length limit of 8KBytes\n//   - not going to validate \"percent encoding\" here\nexport const ensureValidDid = (did: string): void => {\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9._:%-]*$/.test(did)) {\n    throw new InvalidDidError(\n      'Disallowed characters in DID (ASCII letters, digits, and a couple other characters only)',\n    )\n  }\n\n  const parts = did.split(':')\n  if (parts.length < 3) {\n    throw new InvalidDidError(\n      'DID requires prefix, method, and method-specific content',\n    )\n  }\n\n  if (parts[0] != 'did') {\n    throw new InvalidDidError('DID requires \"did:\" prefix')\n  }\n\n  if (!/^[a-z]+$/.test(parts[1])) {\n    throw new InvalidDidError('DID method must be lower-case letters')\n  }\n\n  if (did.endsWith(':') || did.endsWith('%')) {\n    throw new InvalidDidError('DID can not end with \":\" or \"%\"')\n  }\n\n  if (did.length > 2 * 1024) {\n    throw new InvalidDidError('DID is too long (2048 chars max)')\n  }\n}\n\nexport const ensureValidDidRegex = (did: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints\n  if (!/^did:[a-z]+:[a-zA-Z0-9._:%-]*[a-zA-Z0-9._-]$/.test(did)) {\n    throw new InvalidDidError(\"DID didn't validate via regex\")\n  }\n\n  if (did.length > 2 * 1024) {\n    throw new InvalidDidError('DID is too long (2048 chars max)')\n  }\n}\n\nexport class InvalidDidError extends Error {}\n", "/*\nGrammar:\n\nalpha     = \"a\" / \"b\" / \"c\" / \"d\" / \"e\" / \"f\" / \"g\" / \"h\" / \"i\" / \"j\" / \"k\" / \"l\" / \"m\" / \"n\" / \"o\" / \"p\" / \"q\" / \"r\" / \"s\" / \"t\" / \"u\" / \"v\" / \"w\" / \"x\" / \"y\" / \"z\" / \"A\" / \"B\" / \"C\" / \"D\" / \"E\" / \"F\" / \"G\" / \"H\" / \"I\" / \"J\" / \"K\" / \"L\" / \"M\" / \"N\" / \"O\" / \"P\" / \"Q\" / \"R\" / \"S\" / \"T\" / \"U\" / \"V\" / \"W\" / \"X\" / \"Y\" / \"Z\"\nnumber    = \"1\" / \"2\" / \"3\" / \"4\" / \"5\" / \"6\" / \"7\" / \"8\" / \"9\" / \"0\"\ndelim     = \".\"\nsegment   = alpha *( alpha / number / \"-\" )\nauthority = segment *( delim segment )\nname      = alpha *( alpha )\nnsid      = authority delim name\n\n*/\n\nexport class NSID {\n  segments: string[] = []\n\n  static parse(nsid: string): NSID {\n    return new NSID(nsid)\n  }\n\n  static create(authority: string, name: string): NSID {\n    const segments = [...authority.split('.').reverse(), name].join('.')\n    return new NSID(segments)\n  }\n\n  static isValid(nsid: string): boolean {\n    try {\n      NSID.parse(nsid)\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  constructor(nsid: string) {\n    ensureValidNsid(nsid)\n    this.segments = nsid.split('.')\n  }\n\n  get authority() {\n    return this.segments\n      .slice(0, this.segments.length - 1)\n      .reverse()\n      .join('.')\n  }\n\n  get name() {\n    return this.segments.at(this.segments.length - 1)\n  }\n\n  toString() {\n    return this.segments.join('.')\n  }\n}\n\n// Human readable constraints on NSID:\n// - a valid domain in reversed notation\n// - followed by an additional period-separated name, which is camel-case letters\nexport const ensureValidNsid = (nsid: string): void => {\n  const toCheck = nsid\n\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9.-]*$/.test(toCheck)) {\n    throw new InvalidNsidError(\n      'Disallowed characters in NSID (ASCII letters, digits, dashes, periods only)',\n    )\n  }\n\n  if (toCheck.length > 253 + 1 + 63) {\n    throw new InvalidNsidError('NSID is too long (317 chars max)')\n  }\n  const labels = toCheck.split('.')\n  if (labels.length < 3) {\n    throw new InvalidNsidError('NSID needs at least three parts')\n  }\n  for (let i = 0; i < labels.length; i++) {\n    const l = labels[i]\n    if (l.length < 1) {\n      throw new InvalidNsidError('NSID parts can not be empty')\n    }\n    if (l.length > 63) {\n      throw new InvalidNsidError('NSID part too long (max 63 chars)')\n    }\n    if (l.endsWith('-') || l.startsWith('-')) {\n      throw new InvalidNsidError('NSID parts can not start or end with hyphen')\n    }\n    if (/^[0-9]/.test(l) && i == 0) {\n      throw new InvalidNsidError('NSID first part may not start with a digit')\n    }\n    if (!/^[a-zA-Z]+$/.test(l) && i + 1 == labels.length) {\n      throw new InvalidNsidError('NSID name part must be only letters')\n    }\n  }\n}\n\nexport const ensureValidNsidRegex = (nsid: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints\n  if (\n    !/^[a-zA-Z]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(\\.[a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(\\.[a-zA-Z]([a-zA-Z]{0,61}[a-zA-Z])?)$/.test(\n      nsid,\n    )\n  ) {\n    throw new InvalidNsidError(\"NSID didn't validate via regex\")\n  }\n  if (nsid.length > 253 + 1 + 63) {\n    throw new InvalidNsidError('NSID is too long (317 chars max)')\n  }\n}\n\nexport class InvalidNsidError extends Error {}\n", "import { ensureValidHandle, ensureValidHandleRegex } from './handle'\nimport { ensureValidDid, ensureValidDidRegex } from './did'\nimport { ensureValidNsid, ensureValidNsidRegex } from './nsid'\n\n// Human-readable constraints on ATURI:\n//   - following regular URLs, a 8KByte hard total length limit\n//   - follows ATURI docs on website\n//      - all ASCII characters, no whitespace. non-ASCII could be URL-encoded\n//      - starts \"at://\"\n//      - \"authority\" is a valid DID or a valid handle\n//      - optionally, follow \"authority\" with \"/\" and valid NSID as start of path\n//      - optionally, if NSID given, follow that with \"/\" and rkey\n//      - rkey path component can include URL-encoded (\"percent encoded\"), or:\n//          ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\" / \":\" / \"@\" / \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\" / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n//          [a-zA-Z0-9._~:@!$&'\\(\\)*+,;=-]\n//      - rkey must have at least one char\n//      - regardless of path component, a fragment can follow  as \"#\" and then a JSON pointer (RFC-6901)\nexport const ensureValidAtUri = (uri: string) => {\n  // JSON pointer is pretty different from rest of URI, so split that out first\n  const uriParts = uri.split('#')\n  if (uriParts.length > 2) {\n    throw new Error('ATURI can have at most one \"#\", separating fragment out')\n  }\n  const fragmentPart = uriParts[1] || null\n  uri = uriParts[0]\n\n  // check that all chars are boring ASCII\n  if (!/^[a-zA-Z0-9._~:@!$&')(*+,;=%/-]*$/.test(uri)) {\n    throw new Error('Disallowed characters in ATURI (ASCII)')\n  }\n\n  const parts = uri.split('/')\n  if (parts.length >= 3 && (parts[0] != 'at:' || parts[1].length != 0)) {\n    throw new Error('ATURI must start with \"at://\"')\n  }\n  if (parts.length < 3) {\n    throw new Error('ATURI requires at least method and authority sections')\n  }\n\n  try {\n    if (parts[2].startsWith('did:')) {\n      ensureValidDid(parts[2])\n    } else {\n      ensureValidHandle(parts[2])\n    }\n  } catch {\n    throw new Error('ATURI authority must be a valid handle or DID')\n  }\n\n  if (parts.length >= 4) {\n    if (parts[3].length == 0) {\n      throw new Error(\n        'ATURI can not have a slash after authority without a path segment',\n      )\n    }\n    try {\n      ensureValidNsid(parts[3])\n    } catch {\n      throw new Error(\n        'ATURI requires first path segment (if supplied) to be valid NSID',\n      )\n    }\n  }\n\n  if (parts.length >= 5) {\n    if (parts[4].length == 0) {\n      throw new Error(\n        'ATURI can not have a slash after collection, unless record key is provided',\n      )\n    }\n    // would validate rkey here, but there are basically no constraints!\n  }\n\n  if (parts.length >= 6) {\n    throw new Error(\n      'ATURI path can have at most two parts, and no trailing slash',\n    )\n  }\n\n  if (uriParts.length >= 2 && fragmentPart == null) {\n    throw new Error('ATURI fragment must be non-empty and start with slash')\n  }\n\n  if (fragmentPart != null) {\n    if (fragmentPart.length == 0 || fragmentPart[0] != '/') {\n      throw new Error('ATURI fragment must be non-empty and start with slash')\n    }\n    // NOTE: enforcing *some* checks here for sanity. Eg, at least no whitespace\n    if (!/^\\/[a-zA-Z0-9._~:@!$&')(*+,;=%[\\]/-]*$/.test(fragmentPart)) {\n      throw new Error('Disallowed characters in ATURI fragment (ASCII)')\n    }\n  }\n\n  if (uri.length > 8 * 1024) {\n    throw new Error('ATURI is far too long')\n  }\n}\n\nexport const ensureValidAtUriRegex = (uri: string): void => {\n  // simple regex to enforce most constraints via just regex and length.\n  // hand wrote this regex based on above constraints. whew!\n  const aturiRegex =\n    /^at:\\/\\/(?<authority>[a-zA-Z0-9._:%-]+)(\\/(?<collection>[a-zA-Z0-9-.]+)(\\/(?<rkey>[a-zA-Z0-9._~:@!$&%')(*+,;=-]+))?)?(#(?<fragment>\\/[a-zA-Z0-9._~:@!$&%')(*+,;=\\-[\\]/\\\\]*))?$/\n  const rm = uri.match(aturiRegex)\n  if (!rm || !rm.groups) {\n    throw new Error(\"ATURI didn't validate via regex\")\n  }\n  const groups = rm.groups\n\n  try {\n    ensureValidHandleRegex(groups.authority)\n  } catch {\n    try {\n      ensureValidDidRegex(groups.authority)\n    } catch {\n      throw new Error('ATURI authority must be a valid handle or DID')\n    }\n  }\n\n  if (groups.collection) {\n    try {\n      ensureValidNsidRegex(groups.collection)\n    } catch {\n      throw new Error('ATURI collection path segment must be a valid NSID')\n    }\n  }\n\n  if (uri.length > 8 * 1024) {\n    throw new Error('ATURI is far too long')\n  }\n}\n", "export * from './aturi_validation'\n\nexport const ATP_URI_REGEX =\n  // proto-    --did--------------   --name----------------   --path----   --query--   --hash--\n  /^(at:\\/\\/)?((?:did:[a-z0-9:%-]+)|(?:[a-z0-9][a-z0-9.:-]*))(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i\n//                       --path-----   --query--  --hash--\nconst RELATIVE_REGEX = /^(\\/[^?#\\s]*)?(\\?[^#\\s]+)?(#[^\\s]+)?$/i\n\nexport class AtUri {\n  hash: string\n  host: string\n  pathname: string\n  searchParams: URLSearchParams\n\n  constructor(uri: string, base?: string) {\n    let parsed\n    if (base) {\n      parsed = parse(base)\n      if (!parsed) {\n        throw new Error(`Invalid at uri: ${base}`)\n      }\n      const relativep = parseRelative(uri)\n      if (!relativep) {\n        throw new Error(`Invalid path: ${uri}`)\n      }\n      Object.assign(parsed, relativep)\n    } else {\n      parsed = parse(uri)\n      if (!parsed) {\n        throw new Error(`Invalid at uri: ${uri}`)\n      }\n    }\n\n    this.hash = parsed.hash\n    this.host = parsed.host\n    this.pathname = parsed.pathname\n    this.searchParams = parsed.searchParams\n  }\n\n  static make(handleOrDid: string, collection?: string, rkey?: string) {\n    let str = handleOrDid\n    if (collection) str += '/' + collection\n    if (rkey) str += '/' + rkey\n    return new AtUri(str)\n  }\n\n  get protocol() {\n    return 'at:'\n  }\n\n  get origin() {\n    return `at://${this.host}`\n  }\n\n  get hostname() {\n    return this.host\n  }\n\n  set hostname(v: string) {\n    this.host = v\n  }\n\n  get search() {\n    return this.searchParams.toString()\n  }\n\n  set search(v: string) {\n    this.searchParams = new URLSearchParams(v)\n  }\n\n  get collection() {\n    return this.pathname.split('/').filter(Boolean)[0] || ''\n  }\n\n  set collection(v: string) {\n    const parts = this.pathname.split('/').filter(Boolean)\n    parts[0] = v\n    this.pathname = parts.join('/')\n  }\n\n  get rkey() {\n    return this.pathname.split('/').filter(Boolean)[1] || ''\n  }\n\n  set rkey(v: string) {\n    const parts = this.pathname.split('/').filter(Boolean)\n    if (!parts[0]) parts[0] = 'undefined'\n    parts[1] = v\n    this.pathname = parts.join('/')\n  }\n\n  get href() {\n    return this.toString()\n  }\n\n  toString() {\n    let path = this.pathname || '/'\n    if (!path.startsWith('/')) {\n      path = `/${path}`\n    }\n    let qs = this.searchParams.toString()\n    if (qs && !qs.startsWith('?')) {\n      qs = `?${qs}`\n    }\n    let hash = this.hash\n    if (hash && !hash.startsWith('#')) {\n      hash = `#${hash}`\n    }\n    return `at://${this.host}${path}${qs}${hash}`\n  }\n}\n\nfunction parse(str: string) {\n  const match = ATP_URI_REGEX.exec(str)\n  if (match) {\n    return {\n      hash: match[5] || '',\n      host: match[2] || '',\n      pathname: match[3] || '',\n      searchParams: new URLSearchParams(match[4] || ''),\n    }\n  }\n  return undefined\n}\n\nfunction parseRelative(str: string) {\n  const match = RELATIVE_REGEX.exec(str)\n  if (match) {\n    return {\n      hash: match[3] || '',\n      pathname: match[1] || '',\n      searchParams: new URLSearchParams(match[2] || ''),\n    }\n  }\n  return undefined\n}\n", "export const ensureValidTid = (tid: string): void => {\n  if (tid.length != 13) {\n    throw new InvalidTidError('TID must be 13 characters')\n  }\n  // simple regex to enforce most constraints via just regex and length.\n  if (!/^[234567abcdefghij][234567abcdefghijklmnopqrstuvwxyz]{12}$/.test(tid)) {\n    throw new InvalidTidError('TID syntax not valid (regex)')\n  }\n}\n\nexport const isValidTid = (tid: string): boolean => {\n  try {\n    ensureValidTid(tid)\n  } catch (err) {\n    if (err instanceof InvalidTidError) {\n      return false\n    }\n    throw err\n  }\n\n  return true\n}\n\nexport class InvalidTidError extends Error {}\n", "export const ensureValidRecordKey = (rkey: string): void => {\n  if (rkey.length > 512 || rkey.length < 1) {\n    throw new InvalidRecordKeyError('record key must be 1 to 512 characters')\n  }\n  // simple regex to enforce most constraints via just regex and length.\n  if (!/^[a-zA-Z0-9_~.:-]{1,512}$/.test(rkey)) {\n    throw new InvalidRecordKeyError('record key syntax not valid (regex)')\n  }\n  if (rkey == '.' || rkey == '..')\n    throw new InvalidRecordKeyError('record key can not be \".\" or \"..\"')\n}\n\nexport const isValidRecordKey = (rkey: string): boolean => {\n  try {\n    ensureValidRecordKey(rkey)\n  } catch (err) {\n    if (err instanceof InvalidRecordKeyError) {\n      return false\n    }\n    throw err\n  }\n\n  return true\n}\n\nexport class InvalidRecordKeyError extends Error {}\n", "/* Validates datetime string against atproto Lexicon 'datetime' format.\n * Syntax is described at: https://atproto.com/specs/lexicon#datetime\n */\nexport const ensureValidDatetime = (dtStr: string): void => {\n  const date = new Date(dtStr)\n  // must parse as ISO 8601; this also verifies semantics like month is not 13 or 00\n  if (isNaN(date.getTime())) {\n    throw new InvalidDatetimeError('datetime did not parse as ISO 8601')\n  }\n  if (date.toISOString().startsWith('-')) {\n    throw new InvalidDatetimeError('datetime normalized to a negative time')\n  }\n  // regex and other checks for RFC-3339\n  if (\n    !/^[0-9]{4}-[01][0-9]-[0-3][0-9]T[0-2][0-9]:[0-6][0-9]:[0-6][0-9](.[0-9]{1,20})?(Z|([+-][0-2][0-9]:[0-5][0-9]))$/.test(\n      dtStr,\n    )\n  ) {\n    throw new InvalidDatetimeError(\"datetime didn't validate via regex\")\n  }\n  if (dtStr.length > 64) {\n    throw new InvalidDatetimeError('datetime is too long (64 chars max)')\n  }\n  if (dtStr.endsWith('-00:00')) {\n    throw new InvalidDatetimeError(\n      'datetime can not use \"-00:00\" for UTC timezone',\n    )\n  }\n  if (dtStr.startsWith('000')) {\n    throw new InvalidDatetimeError('datetime so close to year zero not allowed')\n  }\n}\n\n/* Same logic as ensureValidDatetime(), but returns a boolean instead of throwing an exception.\n */\nexport const isValidDatetime = (dtStr: string): boolean => {\n  try {\n    ensureValidDatetime(dtStr)\n  } catch (err) {\n    if (err instanceof InvalidDatetimeError) {\n      return false\n    }\n    throw err\n  }\n\n  return true\n}\n\n/* Takes a flexible datetime string and normalizes representation.\n *\n * This function will work with any valid atproto datetime (eg, anything which isValidDatetime() is true for). It *additionally* is more flexible about accepting datetimes that don't comply to RFC 3339, or are missing timezone information, and normalizing them to a valid datetime.\n *\n * One use-case is a consistent, sortable string. Another is to work with older invalid createdAt datetimes.\n *\n * Successful output will be a valid atproto datetime with millisecond precision (3 sub-second digits) and UTC timezone with trailing 'Z' syntax. Throws `InvalidDatetimeError` if the input string could not be parsed as a datetime, even with permissive parsing.\n *\n * Expected output format: YYYY-MM-DDTHH:mm:ss.sssZ\n */\nexport const normalizeDatetime = (dtStr: string): string => {\n  if (isValidDatetime(dtStr)) {\n    const outStr = new Date(dtStr).toISOString()\n    if (isValidDatetime(outStr)) {\n      return outStr\n    }\n  }\n\n  // check if this permissive datetime is missing a timezone\n  if (!/.*(([+-]\\d\\d:?\\d\\d)|[a-zA-Z])$/.test(dtStr)) {\n    const date = new Date(dtStr + 'Z')\n    if (!isNaN(date.getTime())) {\n      const tzStr = date.toISOString()\n      if (isValidDatetime(tzStr)) {\n        return tzStr\n      }\n    }\n  }\n\n  // finally try parsing as simple datetime\n  const date = new Date(dtStr)\n  if (isNaN(date.getTime())) {\n    throw new InvalidDatetimeError(\n      'datetime did not parse as any timestamp format',\n    )\n  }\n  const isoStr = date.toISOString()\n  if (isValidDatetime(isoStr)) {\n    return isoStr\n  } else {\n    throw new InvalidDatetimeError(\n      'datetime normalized to invalid timestamp string',\n    )\n  }\n}\n\n/* Variant of normalizeDatetime() which always returns a valid datetime strings.\n *\n * If a InvalidDatetimeError is encountered, returns the UNIX epoch time as a UTC datetime (1970-01-01T00:00:00.000Z).\n */\nexport const normalizeDatetimeAlways = (dtStr: string): string => {\n  try {\n    return normalizeDatetime(dtStr)\n  } catch (err) {\n    if (err instanceof InvalidDatetimeError) {\n      return new Date(0).toISOString()\n    }\n    throw err\n  }\n}\n\n/* Indicates a datetime string did not pass full atproto Lexicon datetime string format checks.\n */\nexport class InvalidDatetimeError extends Error {}\n", "export * from './handle'\nexport * from './did'\nexport * from './nsid'\nexport * from './aturi'\nexport * from './tid'\nexport * from './recordkey'\nexport * from './datetime'\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParsedType = exports.ZodParsedType = exports.objectUtil = exports.util = void 0;\nvar util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util = exports.util || (exports.util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil = exports.objectUtil || (exports.objectUtil = {}));\nexports.ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return exports.ZodParsedType.undefined;\n        case \"string\":\n            return exports.ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\n        case \"boolean\":\n            return exports.ZodParsedType.boolean;\n        case \"function\":\n            return exports.ZodParsedType.function;\n        case \"bigint\":\n            return exports.ZodParsedType.bigint;\n        case \"symbol\":\n            return exports.ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return exports.ZodParsedType.array;\n            }\n            if (data === null) {\n                return exports.ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return exports.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return exports.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return exports.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return exports.ZodParsedType.date;\n            }\n            return exports.ZodParsedType.object;\n        default:\n            return exports.ZodParsedType.unknown;\n    }\n};\nexports.getParsedType = getParsedType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_1 = require(\"./helpers/util\");\nexports.ZodIssueCode = util_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util_1.util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../helpers/util\");\nconst ZodError_1 = require(\"../ZodError\");\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodError_1.ZodIssueCode.invalid_type:\n            if (issue.received === util_1.ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodError_1.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util_1.util.jsonStringifyReplacer)}`;\n            break;\n        case ZodError_1.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_1.util.joinValues(issue.options)}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util_1.util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodError_1.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodError_1.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodError_1.ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util_1.util.assertNever(issue);\n    }\n    return { message };\n};\nexports.default = errorMap;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorMap = exports.setErrorMap = exports.defaultErrorMap = void 0;\nconst en_1 = __importDefault(require(\"./locales/en\"));\nexports.defaultErrorMap = en_1.default;\nlet overrideErrorMap = en_1.default;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexports.setErrorMap = setErrorMap;\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\nexports.getErrorMap = getErrorMap;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\nconst errors_1 = require(\"../errors\");\nconst en_1 = __importDefault(require(\"../locales/en\"));\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nexports.makeIssue = makeIssue;\nexports.EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = (0, exports.makeIssue)({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            (0, errors_1.getErrorMap)(),\n            en_1.default, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexports.addIssueToContext = addIssueToContext;\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return exports.INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return exports.INVALID;\n            if (value.status === \"aborted\")\n                return exports.INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (key.value !== \"__proto__\" &&\n                (typeof value.value !== \"undefined\" || pair.alwaysSet)) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexports.ParseStatus = ParseStatus;\nexports.INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nexports.DIRTY = DIRTY;\nconst OK = (value) => ({ status: \"valid\", value });\nexports.OK = OK;\nconst isAborted = (x) => x.status === \"aborted\";\nexports.isAborted = isAborted;\nconst isDirty = (x) => x.status === \"dirty\";\nexports.isDirty = isDirty;\nconst isValid = (x) => x.status === \"valid\";\nexports.isValid = isValid;\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\nexports.isAsync = isAsync;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorUtil = void 0;\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil = exports.errorUtil || (exports.errorUtil = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.date = exports.boolean = exports.bigint = exports.array = exports.any = exports.coerce = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.custom = exports.ZodReadonly = exports.ZodPipeline = exports.ZodBranded = exports.BRAND = exports.ZodNaN = exports.ZodCatch = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodSymbol = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.ZodType = void 0;\nexports.NEVER = exports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.symbol = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.pipeline = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = exports.intersection = exports.instanceof = exports.function = exports.enum = exports.effect = exports.discriminatedUnion = void 0;\nconst errors_1 = require(\"./errors\");\nconst errorUtil_1 = require(\"./helpers/errorUtil\");\nconst parseUtil_1 = require(\"./helpers/parseUtil\");\nconst util_1 = require(\"./helpers/util\");\nconst ZodError_1 = require(\"./ZodError\");\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if ((0, parseUtil_1.isValid)(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError_1.ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.readonly = this.readonly.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return (0, util_1.getParsedType)(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: (0, util_1.getParsedType)(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new parseUtil_1.ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: (0, util_1.getParsedType)(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if ((0, parseUtil_1.isAsync)(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await ((0, parseUtil_1.isAsync)(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodError_1.ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    readonly() {\n        return ZodReadonly.create(this);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nexports.ZodType = ZodType;\nexports.Schema = ZodType;\nexports.ZodSchema = ZodType;\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /^[0-9A-HJKMNP-TV-Z]{26}$/;\n// const uuidRegex =\n//   /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst uuidRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n//old email regex\n// const emailRegex = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((?!-)([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{1,})[^-<>()[\\].,;:\\s@\"]$/i;\n// eslint-disable-next-line\n// const emailRegex =\n//   /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\n// const emailRegex =\n//   /^[a-zA-Z0-9\\.\\!\\#\\$\\%\\&\\'\\*\\+\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// const emailRegex =\n//   /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i;\nconst emailRegex = /^(?!\\.)(?!.*\\.\\.)([A-Z0-9_+-\\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\\-]*\\.)+[A-Z]{2,}$/i;\n// const emailRegex =\n//   /^[a-z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-z0-9-]+(?:\\.[a-z0-9\\-]+)*$/i;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emojiRegex = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nlet emojiRegex;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\n// Adapted from https://stackoverflow.com/a/3143231\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"email\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex) {\n                    emojiRegex = new RegExp(_emojiRegex, \"u\");\n                }\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"emoji\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"uuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ulid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"url\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"regex\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ip\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _regex(regex, validation, message) {\n        return this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_1.ZodIssueCode.invalid_string,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil_1.errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    /**\n     * @deprecated Use z.string().min(1) instead.\n     * @see {@link ZodString.min}\n     */\n    nonempty(message) {\n        return this.min(1, errorUtil_1.errorUtil.errToObj(message));\n    }\n    trim() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    toLowerCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n    }\n    toUpperCase() {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodString = ZodString;\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util_1.util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util_1.util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nexports.ZodNumber = ZodNumber;\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodBigInt = ZodBigInt;\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodBoolean = ZodBoolean;\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_date,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nexports.ZodDate = ZodDate;\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodSymbol = ZodSymbol;\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUndefined = ZodUndefined;\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodNull = ZodNull;\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodAny = ZodAny;\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUnknown = ZodUnknown;\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        (0, parseUtil_1.addIssueToContext)(ctx, {\n            code: ZodError_1.ZodIssueCode.invalid_type,\n            expected: util_1.ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return parseUtil_1.INVALID;\n    }\n}\nexports.ZodNever = ZodNever;\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodVoid = ZodVoid;\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: tooBig ? ZodError_1.ZodIssueCode.too_big : ZodError_1.ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return parseUtil_1.ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodArray = ZodArray;\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        // extend<\n        //   Augmentation extends ZodRawShape,\n        //   NewOutput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_output\"]\n        //       : k extends keyof Output\n        //       ? Output[k]\n        //       : never;\n        //   }>,\n        //   NewInput extends util.flatten<{\n        //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n        //       ? Augmentation[k][\"_input\"]\n        //       : k extends keyof Input\n        //       ? Input[k]\n        //       : never;\n        //   }>\n        // >(\n        //   augmentation: Augmentation\n        // ): ZodObject<\n        //   extendShape<T, Augmentation>,\n        //   UnknownKeys,\n        //   Catchall,\n        //   NewOutput,\n        //   NewInput\n        // > {\n        //   return new ZodObject({\n        //     ...this._def,\n        //     shape: () => ({\n        //       ...this._def.shape(),\n        //       ...augmentation,\n        //     }),\n        //   }) as any;\n        // }\n        /**\n         * @deprecated Use `.extend` instead\n         *  */\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util_1.util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return parseUtil_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil_1.errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil_1.errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    // const AugmentFactory =\n    //   <Def extends ZodObjectDef>(def: Def) =>\n    //   <Augmentation extends ZodRawShape>(\n    //     augmentation: Augmentation\n    //   ): ZodObject<\n    //     extendShape<ReturnType<Def[\"shape\"]>, Augmentation>,\n    //     Def[\"unknownKeys\"],\n    //     Def[\"catchall\"]\n    //   > => {\n    //     return new ZodObject({\n    //       ...def,\n    //       shape: () => ({\n    //         ...def.shape(),\n    //         ...augmentation,\n    //       }),\n    //     }) as any;\n    //   };\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    // merge<\n    //   Incoming extends AnyZodObject,\n    //   Augmentation extends Incoming[\"shape\"],\n    //   NewOutput extends {\n    //     [k in keyof Augmentation | keyof Output]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_output\"]\n    //       : k extends keyof Output\n    //       ? Output[k]\n    //       : never;\n    //   },\n    //   NewInput extends {\n    //     [k in keyof Augmentation | keyof Input]: k extends keyof Augmentation\n    //       ? Augmentation[k][\"_input\"]\n    //       : k extends keyof Input\n    //       ? Input[k]\n    //       : never;\n    //   }\n    // >(\n    //   merging: Incoming\n    // ): ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"],\n    //   NewOutput,\n    //   NewInput\n    // > {\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    // merge<Incoming extends AnyZodObject>(\n    //   merging: Incoming\n    // ): //ZodObject<T & Incoming[\"_shape\"], UnknownKeys, Catchall> = (merging) => {\n    // ZodObject<\n    //   extendShape<T, ReturnType<Incoming[\"_def\"][\"shape\"]>>,\n    //   Incoming[\"_def\"][\"unknownKeys\"],\n    //   Incoming[\"_def\"][\"catchall\"]\n    // > {\n    //   // const mergedShape = objectUtil.mergeShapes(\n    //   //   this._def.shape(),\n    //   //   merging._def.shape()\n    //   // );\n    //   const merged: any = new ZodObject({\n    //     unknownKeys: merging._def.unknownKeys,\n    //     catchall: merging._def.catchall,\n    //     shape: () =>\n    //       objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n    //     typeName: ZodFirstPartyTypeKind.ZodObject,\n    //   }) as any;\n    //   return merged;\n    // }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util_1.util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    /**\n     * @deprecated\n     */\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util_1.util.objectKeys(this.shape));\n    }\n}\nexports.ZodObject = ZodObject;\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError_1.ZodError(result.ctx.common.issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError_1.ZodError(issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nexports.ZodUnion = ZodUnion;\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\nfunction mergeValues(a, b) {\n    const aType = (0, util_1.getParsedType)(a);\n    const bType = (0, util_1.getParsedType)(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === util_1.ZodParsedType.object && bType === util_1.ZodParsedType.object) {\n        const bKeys = util_1.util.objectKeys(b);\n        const sharedKeys = util_1.util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === util_1.ZodParsedType.array && bType === util_1.ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === util_1.ZodParsedType.date &&\n        bType === util_1.ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if ((0, parseUtil_1.isAborted)(parsedLeft) || (0, parseUtil_1.isAborted)(parsedRight)) {\n                return parseUtil_1.INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.invalid_intersection_types,\n                });\n                return parseUtil_1.INVALID;\n            }\n            if ((0, parseUtil_1.isDirty)(parsedLeft) || (0, parseUtil_1.isDirty)(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nexports.ZodIntersection = ZodIntersection;\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return parseUtil_1.INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nexports.ZodTuple = ZodTuple;\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return parseUtil_1.ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexports.ZodRecord = ZodRecord;\nclass ZodMap extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.map) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return parseUtil_1.INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return parseUtil_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nexports.ZodMap = ZodMap;\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.set) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodSet = ZodSet;\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.function) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return (0, parseUtil_1.OK)(async function (...args) {\n                const error = new ZodError_1.ZodError([]);\n                const parsedArgs = await me._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await Reflect.apply(fn, this, parsedArgs);\n                const parsedReturns = await me._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            // Would love a way to avoid disabling this rule, but we need\n            // an alias (using an arrow function was what caused 2651).\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            const me = this;\n            return (0, parseUtil_1.OK)(function (...args) {\n                const parsedArgs = me._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = Reflect.apply(fn, this, parsedArgs.data);\n                const parsedReturns = me._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodFunction = ZodFunction;\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nexports.ZodLazy = ZodLazy;\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nexports.ZodLiteral = ZodLiteral;\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nexports.ZodEnum = ZodEnum;\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util_1.util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.string &&\n            ctx.parsedType !== util_1.ZodParsedType.number) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nexports.ZodNativeEnum = ZodNativeEnum;\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.promise &&\n            ctx.common.async === false) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const promisified = ctx.parsedType === util_1.ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return (0, parseUtil_1.OK)(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nexports.ZodPromise = ZodPromise;\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        const checkCtx = {\n            addIssue: (arg) => {\n                (0, parseUtil_1.addIssueToContext)(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data, checkCtx);\n            if (ctx.common.issues.length) {\n                return {\n                    status: \"dirty\",\n                    value: ctx.data,\n                };\n            }\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!(0, parseUtil_1.isValid)(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!(0, parseUtil_1.isValid)(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util_1.util.assertNever(effect);\n    }\n}\nexports.ZodEffects = ZodEffects;\nexports.ZodTransformer = ZodEffects;\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.undefined) {\n            return (0, parseUtil_1.OK)(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodOptional = ZodOptional;\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.null) {\n            return (0, parseUtil_1.OK)(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodNullable = ZodNullable;\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === util_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nexports.ZodDefault = ZodDefault;\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        // newCtx is used to not collect issues from inner types in ctx\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if ((0, parseUtil_1.isAsync)(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError_1.ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError_1.ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nexports.ZodCatch = ZodCatch;\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nexports.ZodNaN = ZodNaN;\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexports.BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexports.ZodBranded = ZodBranded;\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return (0, parseUtil_1.DIRTY)(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return parseUtil_1.INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexports.ZodPipeline = ZodPipeline;\nclass ZodReadonly extends ZodType {\n    _parse(input) {\n        const result = this._def.innerType._parse(input);\n        if ((0, parseUtil_1.isValid)(result)) {\n            result.value = Object.freeze(result.value);\n        }\n        return result;\n    }\n}\nexports.ZodReadonly = ZodReadonly;\nZodReadonly.create = (type, params) => {\n    return new ZodReadonly({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodReadonly,\n        ...processCreateParams(params),\n    });\n};\nconst custom = (check, params = {}, \n/**\n * @deprecated\n *\n * Pass `fatal` into the params object instead:\n *\n * ```ts\n * z.string().custom((val) => val.length > 5, { fatal: false })\n * ```\n *\n */\nfatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nexports.custom = custom;\nexports.late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n    ZodFirstPartyTypeKind[\"ZodReadonly\"] = \"ZodReadonly\";\n})(ZodFirstPartyTypeKind = exports.ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = {}));\n// requires TS 4.4+\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => (0, exports.custom)((data) => data instanceof cls, params);\nexports.instanceof = instanceOfType;\nconst stringType = ZodString.create;\nexports.string = stringType;\nconst numberType = ZodNumber.create;\nexports.number = numberType;\nconst nanType = ZodNaN.create;\nexports.nan = nanType;\nconst bigIntType = ZodBigInt.create;\nexports.bigint = bigIntType;\nconst booleanType = ZodBoolean.create;\nexports.boolean = booleanType;\nconst dateType = ZodDate.create;\nexports.date = dateType;\nconst symbolType = ZodSymbol.create;\nexports.symbol = symbolType;\nconst undefinedType = ZodUndefined.create;\nexports.undefined = undefinedType;\nconst nullType = ZodNull.create;\nexports.null = nullType;\nconst anyType = ZodAny.create;\nexports.any = anyType;\nconst unknownType = ZodUnknown.create;\nexports.unknown = unknownType;\nconst neverType = ZodNever.create;\nexports.never = neverType;\nconst voidType = ZodVoid.create;\nexports.void = voidType;\nconst arrayType = ZodArray.create;\nexports.array = arrayType;\nconst objectType = ZodObject.create;\nexports.object = objectType;\nconst strictObjectType = ZodObject.strictCreate;\nexports.strictObject = strictObjectType;\nconst unionType = ZodUnion.create;\nexports.union = unionType;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nexports.discriminatedUnion = discriminatedUnionType;\nconst intersectionType = ZodIntersection.create;\nexports.intersection = intersectionType;\nconst tupleType = ZodTuple.create;\nexports.tuple = tupleType;\nconst recordType = ZodRecord.create;\nexports.record = recordType;\nconst mapType = ZodMap.create;\nexports.map = mapType;\nconst setType = ZodSet.create;\nexports.set = setType;\nconst functionType = ZodFunction.create;\nexports.function = functionType;\nconst lazyType = ZodLazy.create;\nexports.lazy = lazyType;\nconst literalType = ZodLiteral.create;\nexports.literal = literalType;\nconst enumType = ZodEnum.create;\nexports.enum = enumType;\nconst nativeEnumType = ZodNativeEnum.create;\nexports.nativeEnum = nativeEnumType;\nconst promiseType = ZodPromise.create;\nexports.promise = promiseType;\nconst effectsType = ZodEffects.create;\nexports.effect = effectsType;\nexports.transformer = effectsType;\nconst optionalType = ZodOptional.create;\nexports.optional = optionalType;\nconst nullableType = ZodNullable.create;\nexports.nullable = nullableType;\nconst preprocessType = ZodEffects.createWithPreprocess;\nexports.preprocess = preprocessType;\nconst pipelineType = ZodPipeline.create;\nexports.pipeline = pipelineType;\nconst ostring = () => stringType().optional();\nexports.ostring = ostring;\nconst onumber = () => numberType().optional();\nexports.onumber = onumber;\nconst oboolean = () => booleanType().optional();\nexports.oboolean = oboolean;\nexports.coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexports.NEVER = parseUtil_1.INVALID;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./helpers/parseUtil\"), exports);\n__exportStar(require(\"./helpers/typeAliases\"), exports);\n__exportStar(require(\"./helpers/util\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./ZodError\"), exports);\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.z = void 0;\nconst z = __importStar(require(\"./external\"));\nexports.z = z;\n__exportStar(require(\"./external\"), exports);\nexports.default = z;\n", "import { ZodError } from 'zod'\n\nexport interface Checkable<T> {\n  parse: (obj: unknown) => T\n  safeParse: (\n    obj: unknown,\n  ) => { success: true; data: T } | { success: false; error: ZodError }\n}\n\nexport interface Def<T> {\n  name: string\n  schema: Checkable<T>\n}\n\nexport const is = <T>(obj: unknown, def: Checkable<T>): obj is T => {\n  return def.safeParse(obj).success\n}\n\nexport const assure = <T>(def: Checkable<T>, obj: unknown): T => {\n  return def.parse(obj)\n}\n\nexport const isObject = (obj: unknown): obj is Record<string, unknown> => {\n  return typeof obj === 'object' && obj !== null\n}\n", "export const noUndefinedVals = <T>(\n  obj: Record<string, T | undefined>,\n): Record<string, T> => {\n  Object.keys(obj).forEach((k) => {\n    if (obj[k] === undefined) {\n      delete obj[k]\n    }\n  })\n  return obj as Record<string, T>\n}\n\nexport const jitter = (maxMs: number) => {\n  return Math.round((Math.random() - 0.5) * maxMs * 2)\n}\n\nexport const wait = (ms: number) => {\n  return new Promise((res) => setTimeout(res, ms))\n}\n\nexport type BailableWait = {\n  bail: () => void\n  wait: () => Promise<void>\n}\n\nexport const bailableWait = (ms: number): BailableWait => {\n  let bail\n  const waitPromise = new Promise<void>((res) => {\n    const timeout = setTimeout(res, ms)\n    bail = () => {\n      clearTimeout(timeout)\n      res()\n    }\n  })\n  return { bail, wait: () => waitPromise }\n}\n\nexport const flattenUint8Arrays = (arrs: Uint8Array[]): Uint8Array => {\n  const length = arrs.reduce((acc, cur) => {\n    return acc + cur.length\n  }, 0)\n  const flattened = new Uint8Array(length)\n  let offset = 0\n  arrs.forEach((arr) => {\n    flattened.set(arr, offset)\n    offset += arr.length\n  })\n  return flattened\n}\n\nexport const streamToBuffer = async (\n  stream: AsyncIterable<Uint8Array>,\n): Promise<Uint8Array> => {\n  const arrays: Uint8Array[] = []\n  for await (const chunk of stream) {\n    arrays.push(chunk)\n  }\n  return flattenUint8Arrays(arrays)\n}\n\nconst S32_CHAR = '234567abcdefghijklmnopqrstuvwxyz'\n\nexport const s32encode = (i: number): string => {\n  let s = ''\n  while (i) {\n    const c = i % 32\n    i = Math.floor(i / 32)\n    s = S32_CHAR.charAt(c) + s\n  }\n  return s\n}\n\nexport const s32decode = (s: string): number => {\n  let i = 0\n  for (const c of s) {\n    i = i * 32 + S32_CHAR.indexOf(c)\n  }\n  return i\n}\n\nexport const asyncFilter = async <T>(\n  arr: T[],\n  fn: (t: T) => Promise<boolean>,\n) => {\n  const results = await Promise.all(arr.map((t) => fn(t)))\n  return arr.filter((_, i) => results[i])\n}\n\nexport const isErrnoException = (\n  err: unknown,\n): err is NodeJS.ErrnoException => {\n  return !!err && err['code']\n}\n\nexport const errHasMsg = (err: unknown, msg: string): boolean => {\n  return !!err && typeof err === 'object' && err['message'] === msg\n}\n\nexport const chunkArray = <T>(arr: T[], chunkSize: number): T[][] => {\n  return arr.reduce((acc, cur, i) => {\n    const chunkI = Math.floor(i / chunkSize)\n    if (!acc[chunkI]) {\n      acc[chunkI] = []\n    }\n    acc[chunkI].push(cur)\n    return acc\n  }, [] as T[][])\n}\n\nexport const range = (num: number): number[] => {\n  const nums: number[] = []\n  for (let i = 0; i < num; i++) {\n    nums.push(i)\n  }\n  return nums\n}\n\nexport const dedupeStrs = (strs: string[]): string[] => {\n  return [...new Set(strs)]\n}\n\nexport const parseIntWithFallback = <T>(\n  value: string | undefined,\n  fallback: T,\n): number | T => {\n  const parsed = parseInt(value || '', 10)\n  return isNaN(parsed) ? fallback : parsed\n}\n", "export const keyBy = <T>(arr: T[], key: string): Record<string, T> => {\n  return arr.reduce((acc, cur) => {\n    acc[cur[key]] = cur\n    return acc\n  }, {} as Record<string, T>)\n}\n\nexport const mapDefined = <T, S>(\n  arr: T[],\n  fn: (obj: T) => S | undefined,\n): S[] => {\n  const output: S[] = []\n  for (const item of arr) {\n    const val = fn(item)\n    if (val !== undefined) {\n      output.push(val)\n    }\n  }\n  return output\n}\n", "import { bailableWait } from './util'\n\n// reads values from a generator into a list\n// breaks when isDone signals `true` AND `waitFor` completes OR when a max length is reached\n// NOTE: does not signal generator to close. it *will* continue to produce values\nexport const readFromGenerator = async <T>(\n  gen: AsyncGenerator<T>,\n  isDone: (last?: T) => Promise<boolean> | boolean,\n  waitFor: Promise<unknown> = Promise.resolve(),\n  maxLength = Number.MAX_SAFE_INTEGER,\n): Promise<T[]> => {\n  const evts: T[] = []\n  let bail: undefined | (() => void)\n  let hasBroke = false\n  const awaitDone = async () => {\n    if (await isDone(evts.at(-1))) {\n      return true\n    }\n    const bailable = bailableWait(20)\n    await bailable.wait()\n    bail = bailable.bail\n    if (hasBroke) return false\n    return await awaitDone()\n  }\n  const breakOn: Promise<void> = new Promise((resolve) => {\n    waitFor.then(() => {\n      awaitDone().then(() => resolve())\n    })\n  })\n\n  try {\n    while (evts.length < maxLength) {\n      const maybeEvt = await Promise.race([gen.next(), breakOn])\n      if (!maybeEvt) break\n      const evt = maybeEvt as IteratorResult<T>\n      if (evt.done) break\n      evts.push(evt.value)\n    }\n  } finally {\n    hasBroke = true\n    bail && bail()\n  }\n  return evts\n}\n\nexport type Deferrable = {\n  resolve: () => void\n  complete: Promise<void>\n}\n\nexport const createDeferrable = (): Deferrable => {\n  let resolve\n  const promise: Promise<void> = new Promise((res) => {\n    resolve = () => res()\n  })\n  return { resolve, complete: promise }\n}\n\nexport const createDeferrables = (count: number): Deferrable[] => {\n  const list: Deferrable[] = []\n  for (let i = 0; i < count; i++) {\n    list.push(createDeferrable())\n  }\n  return list\n}\n\nexport const allComplete = async (deferrables: Deferrable[]): Promise<void> => {\n  await Promise.all(deferrables.map((d) => d.complete))\n}\n\nexport class AsyncBuffer<T> {\n  private buffer: T[] = []\n  private promise: Promise<void>\n  private resolve: () => void\n  private closed = false\n  private toThrow: unknown | undefined\n\n  constructor(public maxSize?: number) {\n    // Initializing to satisfy types/build, immediately reset by resetPromise()\n    this.promise = Promise.resolve()\n    this.resolve = () => null\n    this.resetPromise()\n  }\n\n  get curr(): T[] {\n    return this.buffer\n  }\n\n  get size(): number {\n    return this.buffer.length\n  }\n\n  get isClosed(): boolean {\n    return this.closed\n  }\n\n  resetPromise() {\n    this.promise = new Promise<void>((r) => (this.resolve = r))\n  }\n\n  push(item: T) {\n    this.buffer.push(item)\n    this.resolve()\n  }\n\n  pushMany(items: T[]) {\n    items.forEach((i) => this.buffer.push(i))\n    this.resolve()\n  }\n\n  async *events(): AsyncGenerator<T> {\n    while (true) {\n      if (this.closed && this.buffer.length === 0) {\n        if (this.toThrow) {\n          throw this.toThrow\n        } else {\n          return\n        }\n      }\n      await this.promise\n      if (this.toThrow) {\n        throw this.toThrow\n      }\n      if (this.maxSize && this.size > this.maxSize) {\n        throw new AsyncBufferFullError(this.maxSize)\n      }\n      const [first, ...rest] = this.buffer\n      if (first) {\n        this.buffer = rest\n        yield first\n      } else {\n        this.resetPromise()\n      }\n    }\n  }\n\n  throw(err: unknown) {\n    this.toThrow = err\n    this.closed = true\n    this.resolve()\n  }\n\n  close() {\n    this.closed = true\n    this.resolve()\n  }\n}\n\nexport class AsyncBufferFullError extends Error {\n  constructor(maxSize: number) {\n    super(`ReachedMaxBufferSize: ${maxSize}`)\n  }\n}\n\nexport const handleAllSettledErrors = (\n  results: PromiseSettledResult<unknown>[],\n) => {\n  const errors = results.filter(isRejected).map((res) => res.reason)\n  if (errors.length === 0) {\n    return\n  }\n  if (errors.length === 1) {\n    throw errors[0]\n  }\n  throw new AggregateError(\n    errors,\n    'Multiple errors: ' + errors.map((err) => err?.message).join('\\n'),\n  )\n}\n\nconst isRejected = (\n  result: PromiseSettledResult<unknown>,\n): result is PromiseRejectedResult => {\n  return result.status === 'rejected'\n}\n", "import { s32encode, s32decode } from './util'\n\nconst TID_LEN = 13\n\nlet lastTimestamp = 0\nlet timestampCount = 0\nlet clockid: number | null = null\n\nfunction dedash(str: string): string {\n  return str.replaceAll('-', '')\n}\n\nexport class TID {\n  str: string\n\n  constructor(str: string) {\n    const noDashes = dedash(str)\n    if (noDashes.length !== TID_LEN) {\n      throw new Error(`Poorly formatted TID: ${noDashes.length} length`)\n    }\n    this.str = noDashes\n  }\n\n  static next(prev?: TID): TID {\n    // javascript does not have microsecond precision\n    // instead, we append a counter to the timestamp to indicate if multiple timestamps were created within the same millisecond\n    // take max of current time & last timestamp to prevent tids moving backwards if system clock drifts backwards\n    const time = Math.max(Date.now(), lastTimestamp)\n    if (time === lastTimestamp) {\n      timestampCount++\n    }\n    lastTimestamp = time\n    const timestamp = time * 1000 + timestampCount\n    // the bottom 32 clock ids can be randomized & are not guaranteed to be collision resistant\n    // we use the same clockid for all tids coming from this machine\n    if (clockid === null) {\n      clockid = Math.floor(Math.random() * 32)\n    }\n    const tid = TID.fromTime(timestamp, clockid)\n    if (!prev || tid.newerThan(prev)) {\n      return tid\n    }\n    return TID.fromTime(prev.timestamp() + 1, clockid)\n  }\n\n  static nextStr(prev?: string): string {\n    return TID.next(prev ? new TID(prev) : undefined).toString()\n  }\n\n  static fromTime(timestamp: number, clockid: number): TID {\n    // base32 encode with encoding variant sort (s32)\n    const str = `${s32encode(timestamp)}${s32encode(clockid).padStart(2, '2')}`\n    return new TID(str)\n  }\n\n  static fromStr(str: string): TID {\n    return new TID(str)\n  }\n\n  static oldestFirst(a: TID, b: TID): number {\n    return a.compareTo(b)\n  }\n\n  static newestFirst(a: TID, b: TID): number {\n    return b.compareTo(a)\n  }\n\n  static is(str: string): boolean {\n    return dedash(str).length === TID_LEN\n  }\n\n  timestamp(): number {\n    return s32decode(this.str.slice(0, 11))\n  }\n\n  clockid(): number {\n    return s32decode(this.str.slice(11, 13))\n  }\n\n  formatted(): string {\n    const str = this.toString()\n    return `${str.slice(0, 4)}-${str.slice(4, 7)}-${str.slice(\n      7,\n      11,\n    )}-${str.slice(11, 13)}`\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  // newer > older\n  compareTo(other: TID): number {\n    if (this.str > other.str) return 1\n    if (this.str < other.str) return -1\n    return 0\n  }\n\n  equals(other: TID): boolean {\n    return this.str === other.str\n  }\n\n  newerThan(other: TID): boolean {\n    return this.compareTo(other) > 0\n  }\n\n  olderThan(other: TID): boolean {\n    return this.compareTo(other) < 0\n  }\n}\n\nexport default TID\n", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "export function compare(a, b) {\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] < b[i]) {\n      return -1;\n    }\n    if (a[i] > b[i]) {\n      return 1;\n    }\n  }\n  if (a.byteLength > b.byteLength) {\n    return 1;\n  }\n  if (a.byteLength < b.byteLength) {\n    return -1;\n  }\n  return 0;\n}", "export function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = new Uint8Array(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}", "export function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});", "import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});", "import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});", "import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});", "import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});", "import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}", "import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});", "import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};", "import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);", "const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "import { CID } from './cid.js';\nimport * as varint from './varint.js';\nimport * as bytes from './bytes.js';\nimport * as hasher from './hashes/hasher.js';\nimport * as digest from './hashes/digest.js';\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n};", "import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};", "import { bases } from 'multiformats/basics';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;", "import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}", "import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.encoder.encode(array).substring(1);\n}", "export function xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n  const result = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return result;\n}", "import { compare } from './compare.js';\nimport { concat } from './concat.js';\nimport { equals } from './equals.js';\nimport { fromString } from './from-string.js';\nimport { toString } from './to-string.js';\nimport { xor } from './xor.js';\nexport {\n  compare,\n  concat,\n  equals,\n  fromString,\n  toString,\n  xor\n};", "import { CID } from 'multiformats/cid'\nimport * as ui8 from 'uint8arrays'\n\nexport type JsonValue =\n  | boolean\n  | number\n  | string\n  | null\n  | undefined\n  | unknown\n  | Array<JsonValue>\n  | { [key: string]: JsonValue }\n\nexport type IpldValue =\n  | JsonValue\n  | CID\n  | Uint8Array\n  | Array<IpldValue>\n  | { [key: string]: IpldValue }\n\n// @NOTE avoiding use of check.is() here only because it makes\n// these implementations slow, and they often live in hot paths.\n\nexport const jsonToIpld = (val: JsonValue): IpldValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => jsonToIpld(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // check for dag json values\n    if (typeof val['$link'] === 'string' && Object.keys(val).length === 1) {\n      return CID.parse(val['$link'])\n    }\n    if (typeof val['$bytes'] === 'string' && Object.keys(val).length === 1) {\n      return ui8.fromString(val['$bytes'], 'base64')\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = jsonToIpld(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const ipldToJson = (val: IpldValue): JsonValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => ipldToJson(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert bytes\n    if (val instanceof Uint8Array) {\n      return {\n        $bytes: ui8.toString(val, 'base64'),\n      }\n    }\n    // convert cids\n    if (CID.asCID(val)) {\n      return {\n        $link: (val as CID).toString(),\n      }\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = ipldToJson(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val as JsonValue\n}\n\nexport const ipldEquals = (a: IpldValue, b: IpldValue): boolean => {\n  // walk arrays\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false\n    for (let i = 0; i < a.length; i++) {\n      if (!ipldEquals(a[i], b[i])) return false\n    }\n    return true\n  }\n  // objects\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    // check bytes\n    if (a instanceof Uint8Array && b instanceof Uint8Array) {\n      return ui8.equals(a, b)\n    }\n    // check cids\n    if (CID.asCID(a) && CID.asCID(b)) {\n      return CID.asCID(a)?.equals(CID.asCID(b))\n    }\n    // walk plain objects\n    if (Object.keys(a).length !== Object.keys(b).length) return false\n    for (const key of Object.keys(a)) {\n      if (!ipldEquals(a[key], b[key])) return false\n    }\n    return true\n  }\n  return a === b\n}\n", "import { wait } from './util'\n\nexport type RetryOptions = {\n  maxRetries?: number\n  getWaitMs?: (n: number) => number | null\n  retryable?: (err: unknown) => boolean\n}\n\nexport async function retry<T>(\n  fn: () => Promise<T>,\n  opts: RetryOptions = {},\n): Promise<T> {\n  const { maxRetries = 3, retryable = () => true, getWaitMs = backoffMs } = opts\n  let retries = 0\n  let doneError: unknown\n  while (!doneError) {\n    try {\n      return await fn()\n    } catch (err) {\n      const waitMs = getWaitMs(retries)\n      const willRetry =\n        retries < maxRetries && waitMs !== null && retryable(err)\n      if (willRetry) {\n        retries += 1\n        if (waitMs !== 0) {\n          await wait(waitMs)\n        }\n      } else {\n        doneError = err\n      }\n    }\n  }\n  throw doneError\n}\n\n// Waits exponential backoff with max and jitter: ~100, ~200, ~400, ~800, ~1000, ~1000, ...\nexport function backoffMs(n: number, multiplier = 100, max = 1000) {\n  const exponentialMs = Math.pow(2, n) * multiplier\n  const ms = Math.min(exponentialMs, max)\n  return jitter(ms)\n}\n\n// Adds randomness +/-15% of value\nfunction jitter(value: number) {\n  const delta = value * 0.15\n  return value + randomRange(-delta, delta)\n}\n\nfunction randomRange(from: number, to: number) {\n  const rand = Math.random() * (to - from)\n  return rand + from\n}\n", "import { CID } from 'multiformats/cid'\nimport { z } from 'zod'\nimport { Def } from './check'\n\nconst cidSchema = z\n  .any()\n  .refine((obj: unknown) => CID.asCID(obj) !== null, {\n    message: 'Not a CID',\n  })\n  .transform((obj: unknown) => CID.asCID(obj) as CID)\n\nexport const schema = {\n  cid: cidSchema,\n  bytes: z.instanceof(Uint8Array),\n  string: z.string(),\n  array: z.array(z.unknown()),\n  map: z.record(z.string(), z.unknown()),\n  unknown: z.unknown(),\n}\n\nexport const def = {\n  cid: {\n    name: 'cid',\n    schema: schema.cid,\n  } as Def<CID>,\n  bytes: {\n    name: 'bytes',\n    schema: schema.bytes,\n  } as Def<Uint8Array>,\n  string: {\n    name: 'string',\n    schema: schema.string,\n  } as Def<string>,\n  map: {\n    name: 'map',\n    schema: schema.map,\n  } as Def<Record<string, unknown>>,\n  unknown: {\n    name: 'unknown',\n    schema: schema.unknown,\n  } as Def<unknown>,\n}\n\nexport type ArrayEl<A> = A extends readonly (infer T)[] ? T : never\n\nexport type NotEmptyArray<T> = [T, ...T[]]\n", "export const SECOND = 1000\nexport const MINUTE = SECOND * 60\nexport const HOUR = MINUTE * 60\nexport const DAY = HOUR * 24\n\nexport const lessThanAgoMs = (time: Date, range: number) => {\n  return Date.now() < time.getTime() + range\n}\n\nexport const addHoursToDate = (hours: number, startingDate?: Date): Date => {\n  // When date is passed, clone before calling `setHours()` so that we are not mutating the original date\n  const currentDate = startingDate ? new Date(startingDate) : new Date()\n  currentDate.setHours(currentDate.getHours() + hours)\n  return currentDate\n}\n", "\"use strict\";\n/**\n * The Grapheme_Cluster_Break property value\n * @see https://www.unicode.org/reports/tr29/#Default_Grapheme_Cluster_Table\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EXTENDED_PICTOGRAPHIC = exports.CLUSTER_BREAK = void 0;\nvar CLUSTER_BREAK;\n(function (CLUSTER_BREAK) {\n    CLUSTER_BREAK[CLUSTER_BREAK[\"CR\"] = 0] = \"CR\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LF\"] = 1] = \"LF\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"CONTROL\"] = 2] = \"CONTROL\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"EXTEND\"] = 3] = \"EXTEND\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"REGIONAL_INDICATOR\"] = 4] = \"REGIONAL_INDICATOR\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"SPACINGMARK\"] = 5] = \"SPACINGMARK\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"L\"] = 6] = \"L\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"V\"] = 7] = \"V\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"T\"] = 8] = \"T\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LV\"] = 9] = \"LV\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"LVT\"] = 10] = \"LVT\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"OTHER\"] = 11] = \"OTHER\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"PREPEND\"] = 12] = \"PREPEND\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_BASE\"] = 13] = \"E_BASE\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_MODIFIER\"] = 14] = \"E_MODIFIER\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"ZWJ\"] = 15] = \"ZWJ\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"GLUE_AFTER_ZWJ\"] = 16] = \"GLUE_AFTER_ZWJ\";\n    CLUSTER_BREAK[CLUSTER_BREAK[\"E_BASE_GAZ\"] = 17] = \"E_BASE_GAZ\";\n})(CLUSTER_BREAK = exports.CLUSTER_BREAK || (exports.CLUSTER_BREAK = {}));\n/**\n * The Emoji character property is an extension of UCD but shares the same namespace and structure\n * @see http://www.unicode.org/reports/tr51/tr51-14.html#Emoji_Properties_and_Data_Files\n *\n * Here we model Extended_Pictograhpic only to implement UAX #29 GB11\n * \\p{Extended_Pictographic} Extend* ZWJ\t\u00D7\t\\p{Extended_Pictographic}\n *\n * The Emoji character property should not be mixed with Grapheme_Cluster_Break since they are not exclusive\n */\nexports.EXTENDED_PICTOGRAPHIC = 101;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boundaries_1 = require(\"./boundaries\");\n// BreakTypes\n// @type {BreakType}\nconst NotBreak = 0;\nconst BreakStart = 1;\nconst Break = 2;\nconst BreakLastRegional = 3;\nconst BreakPenultimateRegional = 4;\nclass GraphemerHelper {\n    /**\n     * Check if the the character at the position {pos} of the string is surrogate\n     * @param str {string}\n     * @param pos {number}\n     * @returns {boolean}\n     */\n    static isSurrogate(str, pos) {\n        return (0xd800 <= str.charCodeAt(pos) &&\n            str.charCodeAt(pos) <= 0xdbff &&\n            0xdc00 <= str.charCodeAt(pos + 1) &&\n            str.charCodeAt(pos + 1) <= 0xdfff);\n    }\n    /**\n     * The String.prototype.codePointAt polyfill\n     * Private function, gets a Unicode code point from a JavaScript UTF-16 string\n     * handling surrogate pairs appropriately\n     * @param str {string}\n     * @param idx {number}\n     * @returns {number}\n     */\n    static codePointAt(str, idx) {\n        if (idx === undefined) {\n            idx = 0;\n        }\n        const code = str.charCodeAt(idx);\n        // if a high surrogate\n        if (0xd800 <= code && code <= 0xdbff && idx < str.length - 1) {\n            const hi = code;\n            const low = str.charCodeAt(idx + 1);\n            if (0xdc00 <= low && low <= 0xdfff) {\n                return (hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000;\n            }\n            return hi;\n        }\n        // if a low surrogate\n        if (0xdc00 <= code && code <= 0xdfff && idx >= 1) {\n            const hi = str.charCodeAt(idx - 1);\n            const low = code;\n            if (0xd800 <= hi && hi <= 0xdbff) {\n                return (hi - 0xd800) * 0x400 + (low - 0xdc00) + 0x10000;\n            }\n            return low;\n        }\n        // just return the char if an unmatched surrogate half or a\n        // single-char codepoint\n        return code;\n    }\n    //\n    /**\n     * Private function, returns whether a break is allowed between the two given grapheme breaking classes\n     * Implemented the UAX #29 3.1.1 Grapheme Cluster Boundary Rules on extended grapheme clusters\n     * @param start {number}\n     * @param mid {Array<number>}\n     * @param end {number}\n     * @param startEmoji {number}\n     * @param midEmoji {Array<number>}\n     * @param endEmoji {number}\n     * @returns {number}\n     */\n    static shouldBreak(start, mid, end, startEmoji, midEmoji, endEmoji) {\n        const all = [start].concat(mid).concat([end]);\n        const allEmoji = [startEmoji].concat(midEmoji).concat([endEmoji]);\n        const previous = all[all.length - 2];\n        const next = end;\n        const nextEmoji = endEmoji;\n        // Lookahead terminator for:\n        // GB12. ^ (RI RI)* RI ? RI\n        // GB13. [^RI] (RI RI)* RI ? RI\n        const rIIndex = all.lastIndexOf(boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR);\n        if (rIIndex > 0 &&\n            all.slice(1, rIIndex).every(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n            }) &&\n            [boundaries_1.CLUSTER_BREAK.PREPEND, boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR].indexOf(previous) === -1) {\n            if (all.filter(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n            }).length %\n                2 ===\n                1) {\n                return BreakLastRegional;\n            }\n            else {\n                return BreakPenultimateRegional;\n            }\n        }\n        // GB3. CR \u00D7 LF\n        if (previous === boundaries_1.CLUSTER_BREAK.CR && next === boundaries_1.CLUSTER_BREAK.LF) {\n            return NotBreak;\n        }\n        // GB4. (Control|CR|LF) \u00F7\n        else if (previous === boundaries_1.CLUSTER_BREAK.CONTROL ||\n            previous === boundaries_1.CLUSTER_BREAK.CR ||\n            previous === boundaries_1.CLUSTER_BREAK.LF) {\n            return BreakStart;\n        }\n        // GB5. \u00F7 (Control|CR|LF)\n        else if (next === boundaries_1.CLUSTER_BREAK.CONTROL ||\n            next === boundaries_1.CLUSTER_BREAK.CR ||\n            next === boundaries_1.CLUSTER_BREAK.LF) {\n            return BreakStart;\n        }\n        // GB6. L \u00D7 (L|V|LV|LVT)\n        else if (previous === boundaries_1.CLUSTER_BREAK.L &&\n            (next === boundaries_1.CLUSTER_BREAK.L ||\n                next === boundaries_1.CLUSTER_BREAK.V ||\n                next === boundaries_1.CLUSTER_BREAK.LV ||\n                next === boundaries_1.CLUSTER_BREAK.LVT)) {\n            return NotBreak;\n        }\n        // GB7. (LV|V) \u00D7 (V|T)\n        else if ((previous === boundaries_1.CLUSTER_BREAK.LV || previous === boundaries_1.CLUSTER_BREAK.V) &&\n            (next === boundaries_1.CLUSTER_BREAK.V || next === boundaries_1.CLUSTER_BREAK.T)) {\n            return NotBreak;\n        }\n        // GB8. (LVT|T) \u00D7 (T)\n        else if ((previous === boundaries_1.CLUSTER_BREAK.LVT || previous === boundaries_1.CLUSTER_BREAK.T) &&\n            next === boundaries_1.CLUSTER_BREAK.T) {\n            return NotBreak;\n        }\n        // GB9. \u00D7 (Extend|ZWJ)\n        else if (next === boundaries_1.CLUSTER_BREAK.EXTEND || next === boundaries_1.CLUSTER_BREAK.ZWJ) {\n            return NotBreak;\n        }\n        // GB9a. \u00D7 SpacingMark\n        else if (next === boundaries_1.CLUSTER_BREAK.SPACINGMARK) {\n            return NotBreak;\n        }\n        // GB9b. Prepend \u00D7\n        else if (previous === boundaries_1.CLUSTER_BREAK.PREPEND) {\n            return NotBreak;\n        }\n        // GB11. \\p{Extended_Pictographic} Extend* ZWJ \u00D7 \\p{Extended_Pictographic}\n        const previousNonExtendIndex = allEmoji\n            .slice(0, -1)\n            .lastIndexOf(boundaries_1.EXTENDED_PICTOGRAPHIC);\n        if (previousNonExtendIndex !== -1 &&\n            allEmoji[previousNonExtendIndex] === boundaries_1.EXTENDED_PICTOGRAPHIC &&\n            all.slice(previousNonExtendIndex + 1, -2).every(function (c) {\n                return c === boundaries_1.CLUSTER_BREAK.EXTEND;\n            }) &&\n            previous === boundaries_1.CLUSTER_BREAK.ZWJ &&\n            nextEmoji === boundaries_1.EXTENDED_PICTOGRAPHIC) {\n            return NotBreak;\n        }\n        // GB12. ^ (RI RI)* RI \u00D7 RI\n        // GB13. [^RI] (RI RI)* RI \u00D7 RI\n        if (mid.indexOf(boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR) !== -1) {\n            return Break;\n        }\n        if (previous === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR &&\n            next === boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR) {\n            return NotBreak;\n        }\n        // GB999. Any ? Any\n        return BreakStart;\n    }\n}\nexports.default = GraphemerHelper;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * GraphemerIterator\n *\n * Takes a string and a \"BreakHandler\" method during initialisation\n * and creates an iterable object that returns individual graphemes.\n *\n * @param str {string}\n * @return GraphemerIterator\n */\nclass GraphemerIterator {\n    constructor(str, nextBreak) {\n        this._index = 0;\n        this._str = str;\n        this._nextBreak = nextBreak;\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n    next() {\n        let brk;\n        if ((brk = this._nextBreak(this._str, this._index)) < this._str.length) {\n            const value = this._str.slice(this._index, brk);\n            this._index = brk;\n            return { value: value, done: false };\n        }\n        if (this._index < this._str.length) {\n            const value = this._str.slice(this._index);\n            this._index = this._str.length;\n            return { value: value, done: false };\n        }\n        return { value: undefined, done: true };\n    }\n}\nexports.default = GraphemerIterator;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst boundaries_1 = require(\"./boundaries\");\nconst GraphemerHelper_1 = __importDefault(require(\"./GraphemerHelper\"));\nconst GraphemerIterator_1 = __importDefault(require(\"./GraphemerIterator\"));\nclass Graphemer {\n    /**\n     * Returns the next grapheme break in the string after the given index\n     * @param string {string}\n     * @param index {number}\n     * @returns {number}\n     */\n    static nextBreak(string, index) {\n        if (index === undefined) {\n            index = 0;\n        }\n        if (index < 0) {\n            return 0;\n        }\n        if (index >= string.length - 1) {\n            return string.length;\n        }\n        const prevCP = GraphemerHelper_1.default.codePointAt(string, index);\n        const prev = Graphemer.getGraphemeBreakProperty(prevCP);\n        const prevEmoji = Graphemer.getEmojiProperty(prevCP);\n        const mid = [];\n        const midEmoji = [];\n        for (let i = index + 1; i < string.length; i++) {\n            // check for already processed low surrogates\n            if (GraphemerHelper_1.default.isSurrogate(string, i - 1)) {\n                continue;\n            }\n            const nextCP = GraphemerHelper_1.default.codePointAt(string, i);\n            const next = Graphemer.getGraphemeBreakProperty(nextCP);\n            const nextEmoji = Graphemer.getEmojiProperty(nextCP);\n            if (GraphemerHelper_1.default.shouldBreak(prev, mid, next, prevEmoji, midEmoji, nextEmoji)) {\n                return i;\n            }\n            mid.push(next);\n            midEmoji.push(nextEmoji);\n        }\n        return string.length;\n    }\n    /**\n     * Breaks the given string into an array of grapheme clusters\n     * @param str {string}\n     * @returns {string[]}\n     */\n    splitGraphemes(str) {\n        const res = [];\n        let index = 0;\n        let brk;\n        while ((brk = Graphemer.nextBreak(str, index)) < str.length) {\n            res.push(str.slice(index, brk));\n            index = brk;\n        }\n        if (index < str.length) {\n            res.push(str.slice(index));\n        }\n        return res;\n    }\n    /**\n     * Returns an iterator of grapheme clusters in the given string\n     * @param str {string}\n     * @returns {GraphemerIterator}\n     */\n    iterateGraphemes(str) {\n        return new GraphemerIterator_1.default(str, Graphemer.nextBreak);\n    }\n    /**\n     * Returns the number of grapheme clusters in the given string\n     * @param str {string}\n     * @returns {number}\n     */\n    countGraphemes(str) {\n        let count = 0;\n        let index = 0;\n        let brk;\n        while ((brk = Graphemer.nextBreak(str, index)) < str.length) {\n            index = brk;\n            count++;\n        }\n        if (index < str.length) {\n            count++;\n        }\n        return count;\n    }\n    /**\n     * Given a Unicode code point, determines this symbol's grapheme break property\n     * @param code {number} Unicode code point\n     * @returns {number}\n     */\n    static getGraphemeBreakProperty(code) {\n        // Grapheme break property taken from:\n        // https://www.unicode.org/Public/UCD/latest/ucd/auxiliary/GraphemeBreakProperty.txt\n        // and generated by\n        // node ./scripts/generate-grapheme-break.js\n        if (code < 0xbf09) {\n            if (code < 0xac54) {\n                if (code < 0x102d) {\n                    if (code < 0xb02) {\n                        if (code < 0x93b) {\n                            if (code < 0x6df) {\n                                if (code < 0x5bf) {\n                                    if (code < 0x7f) {\n                                        if (code < 0xb) {\n                                            if (code < 0xa) {\n                                                // Cc  [10] <control-0000>..<control-0009>\n                                                if (0x0 <= code && code <= 0x9) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Cc       <control-000A>\n                                                if (0xa === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LF;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd) {\n                                                // Cc   [2] <control-000B>..<control-000C>\n                                                if (0xb <= code && code <= 0xc) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe) {\n                                                    // Cc       <control-000D>\n                                                    if (0xd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.CR;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cc  [18] <control-000E>..<control-001F>\n                                                    if (0xe <= code && code <= 0x1f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x300) {\n                                            if (code < 0xad) {\n                                                // Cc  [33] <control-007F>..<control-009F>\n                                                if (0x7f <= code && code <= 0x9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       SOFT HYPHEN\n                                                if (0xad === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x483) {\n                                                // Mn [112] COMBINING GRAVE ACCENT..COMBINING LATIN SMALL LETTER X\n                                                if (0x300 <= code && code <= 0x36f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x591) {\n                                                    // Mn   [5] COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\n                                                    // Me   [2] COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..COMBINING CYRILLIC MILLIONS SIGN\n                                                    if (0x483 <= code && code <= 0x489) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [45] HEBREW ACCENT ETNAHTA..HEBREW POINT METEG\n                                                    if (0x591 <= code && code <= 0x5bd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x610) {\n                                        if (code < 0x5c4) {\n                                            if (code < 0x5c1) {\n                                                // Mn       HEBREW POINT RAFE\n                                                if (0x5bf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] HEBREW POINT SHIN DOT..HEBREW POINT SIN DOT\n                                                if (0x5c1 <= code && code <= 0x5c2) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x5c7) {\n                                                // Mn   [2] HEBREW MARK UPPER DOT..HEBREW MARK LOWER DOT\n                                                if (0x5c4 <= code && code <= 0x5c5) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x600) {\n                                                    // Mn       HEBREW POINT QAMATS QATAN\n                                                    if (0x5c7 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf   [6] ARABIC NUMBER SIGN..ARABIC NUMBER MARK ABOVE\n                                                    if (0x600 <= code && code <= 0x605) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x670) {\n                                            if (code < 0x61c) {\n                                                // Mn  [11] ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM..ARABIC SMALL KASRA\n                                                if (0x610 <= code && code <= 0x61a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x64b) {\n                                                    // Cf       ARABIC LETTER MARK\n                                                    if (0x61c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [21] ARABIC FATHATAN..ARABIC WAVY HAMZA BELOW\n                                                    if (0x64b <= code && code <= 0x65f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x6d6) {\n                                                // Mn       ARABIC LETTER SUPERSCRIPT ALEF\n                                                if (0x670 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x6dd) {\n                                                    // Mn   [7] ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA..ARABIC SMALL HIGH SEEN\n                                                    if (0x6d6 <= code && code <= 0x6dc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf       ARABIC END OF AYAH\n                                                    if (0x6dd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x81b) {\n                                    if (code < 0x730) {\n                                        if (code < 0x6ea) {\n                                            if (code < 0x6e7) {\n                                                // Mn   [6] ARABIC SMALL HIGH ROUNDED ZERO..ARABIC SMALL HIGH MADDA\n                                                if (0x6df <= code && code <= 0x6e4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] ARABIC SMALL HIGH YEH..ARABIC SMALL HIGH NOON\n                                                if (0x6e7 <= code && code <= 0x6e8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x70f) {\n                                                // Mn   [4] ARABIC EMPTY CENTRE LOW STOP..ARABIC SMALL LOW MEEM\n                                                if (0x6ea <= code && code <= 0x6ed) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       SYRIAC ABBREVIATION MARK\n                                                if (0x70f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                                // Mn       SYRIAC LETTER SUPERSCRIPT ALAPH\n                                                if (0x711 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x7eb) {\n                                            if (code < 0x7a6) {\n                                                // Mn  [27] SYRIAC PTHAHA ABOVE..SYRIAC BARREKH\n                                                if (0x730 <= code && code <= 0x74a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [11] THAANA ABAFILI..THAANA SUKUN\n                                                if (0x7a6 <= code && code <= 0x7b0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x7fd) {\n                                                // Mn   [9] NKO COMBINING SHORT HIGH TONE..NKO COMBINING DOUBLE DOT ABOVE\n                                                if (0x7eb <= code && code <= 0x7f3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x816) {\n                                                    // Mn       NKO DANTAYALAN\n                                                    if (0x7fd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] SAMARITAN MARK IN..SAMARITAN MARK DAGESH\n                                                    if (0x816 <= code && code <= 0x819) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x898) {\n                                        if (code < 0x829) {\n                                            if (code < 0x825) {\n                                                // Mn   [9] SAMARITAN MARK EPENTHETIC YUT..SAMARITAN VOWEL SIGN A\n                                                if (0x81b <= code && code <= 0x823) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [3] SAMARITAN VOWEL SIGN SHORT A..SAMARITAN VOWEL SIGN U\n                                                if (0x825 <= code && code <= 0x827) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x859) {\n                                                // Mn   [5] SAMARITAN VOWEL SIGN LONG I..SAMARITAN MARK NEQUDAA\n                                                if (0x829 <= code && code <= 0x82d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x890) {\n                                                    // Mn   [3] MANDAIC AFFRICATION MARK..MANDAIC GEMINATION MARK\n                                                    if (0x859 <= code && code <= 0x85b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf   [2] ARABIC POUND MARK ABOVE..ARABIC PIASTRE MARK ABOVE\n                                                    if (0x890 <= code && code <= 0x891) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x8e3) {\n                                            if (code < 0x8ca) {\n                                                // Mn   [8] ARABIC SMALL HIGH WORD AL-JUZ..ARABIC HALF MADDA OVER MADDA\n                                                if (0x898 <= code && code <= 0x89f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x8e2) {\n                                                    // Mn  [24] ARABIC SMALL HIGH FARSI YEH..ARABIC SMALL HIGH SIGN SAFHA\n                                                    if (0x8ca <= code && code <= 0x8e1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf       ARABIC DISPUTED END OF AYAH\n                                                    if (0x8e2 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x903) {\n                                                // Mn  [32] ARABIC TURNED DAMMA BELOW..DEVANAGARI SIGN ANUSVARA\n                                                if (0x8e3 <= code && code <= 0x902) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DEVANAGARI SIGN VISARGA\n                                                if (0x903 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DEVANAGARI VOWEL SIGN OE\n                                                if (0x93a === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xa01) {\n                                if (code < 0x982) {\n                                    if (code < 0x94d) {\n                                        if (code < 0x93e) {\n                                            // Mc       DEVANAGARI VOWEL SIGN OOE\n                                            if (0x93b === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       DEVANAGARI SIGN NUKTA\n                                            if (0x93c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x941) {\n                                                // Mc   [3] DEVANAGARI VOWEL SIGN AA..DEVANAGARI VOWEL SIGN II\n                                                if (0x93e <= code && code <= 0x940) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x949) {\n                                                    // Mn   [8] DEVANAGARI VOWEL SIGN U..DEVANAGARI VOWEL SIGN AI\n                                                    if (0x941 <= code && code <= 0x948) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [4] DEVANAGARI VOWEL SIGN CANDRA O..DEVANAGARI VOWEL SIGN AU\n                                                    if (0x949 <= code && code <= 0x94c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x951) {\n                                            if (code < 0x94e) {\n                                                // Mn       DEVANAGARI SIGN VIRAMA\n                                                if (0x94d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] DEVANAGARI VOWEL SIGN PRISHTHAMATRA E..DEVANAGARI VOWEL SIGN AW\n                                                if (0x94e <= code && code <= 0x94f) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x962) {\n                                                // Mn   [7] DEVANAGARI STRESS SIGN UDATTA..DEVANAGARI VOWEL SIGN UUE\n                                                if (0x951 <= code && code <= 0x957) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x981) {\n                                                    // Mn   [2] DEVANAGARI VOWEL SIGN VOCALIC L..DEVANAGARI VOWEL SIGN VOCALIC LL\n                                                    if (0x962 <= code && code <= 0x963) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SIGN CANDRABINDU\n                                                    if (0x981 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x9c7) {\n                                        if (code < 0x9be) {\n                                            if (code < 0x9bc) {\n                                                // Mc   [2] BENGALI SIGN ANUSVARA..BENGALI SIGN VISARGA\n                                                if (0x982 <= code && code <= 0x983) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BENGALI SIGN NUKTA\n                                                if (0x9bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x9bf) {\n                                                // Mc       BENGALI VOWEL SIGN AA\n                                                if (0x9be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9c1) {\n                                                    // Mc   [2] BENGALI VOWEL SIGN I..BENGALI VOWEL SIGN II\n                                                    if (0x9bf <= code && code <= 0x9c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] BENGALI VOWEL SIGN U..BENGALI VOWEL SIGN VOCALIC RR\n                                                    if (0x9c1 <= code && code <= 0x9c4) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x9d7) {\n                                            if (code < 0x9cb) {\n                                                // Mc   [2] BENGALI VOWEL SIGN E..BENGALI VOWEL SIGN AI\n                                                if (0x9c7 <= code && code <= 0x9c8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9cd) {\n                                                    // Mc   [2] BENGALI VOWEL SIGN O..BENGALI VOWEL SIGN AU\n                                                    if (0x9cb <= code && code <= 0x9cc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SIGN VIRAMA\n                                                    if (0x9cd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x9e2) {\n                                                // Mc       BENGALI AU LENGTH MARK\n                                                if (0x9d7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x9fe) {\n                                                    // Mn   [2] BENGALI VOWEL SIGN VOCALIC L..BENGALI VOWEL SIGN VOCALIC LL\n                                                    if (0x9e2 <= code && code <= 0x9e3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BENGALI SANDHI MARK\n                                                    if (0x9fe === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xa83) {\n                                    if (code < 0xa47) {\n                                        if (code < 0xa3c) {\n                                            if (code < 0xa03) {\n                                                // Mn   [2] GURMUKHI SIGN ADAK BINDI..GURMUKHI SIGN BINDI\n                                                if (0xa01 <= code && code <= 0xa02) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GURMUKHI SIGN VISARGA\n                                                if (0xa03 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa3e) {\n                                                // Mn       GURMUKHI SIGN NUKTA\n                                                if (0xa3c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa41) {\n                                                    // Mc   [3] GURMUKHI VOWEL SIGN AA..GURMUKHI VOWEL SIGN II\n                                                    if (0xa3e <= code && code <= 0xa40) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GURMUKHI VOWEL SIGN U..GURMUKHI VOWEL SIGN UU\n                                                    if (0xa41 <= code && code <= 0xa42) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa70) {\n                                            if (code < 0xa4b) {\n                                                // Mn   [2] GURMUKHI VOWEL SIGN EE..GURMUKHI VOWEL SIGN AI\n                                                if (0xa47 <= code && code <= 0xa48) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa51) {\n                                                    // Mn   [3] GURMUKHI VOWEL SIGN OO..GURMUKHI SIGN VIRAMA\n                                                    if (0xa4b <= code && code <= 0xa4d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       GURMUKHI SIGN UDAAT\n                                                    if (0xa51 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa75) {\n                                                // Mn   [2] GURMUKHI TIPPI..GURMUKHI ADDAK\n                                                if (0xa70 <= code && code <= 0xa71) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa81) {\n                                                    // Mn       GURMUKHI SIGN YAKASH\n                                                    if (0xa75 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GUJARATI SIGN CANDRABINDU..GUJARATI SIGN ANUSVARA\n                                                    if (0xa81 <= code && code <= 0xa82) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xac9) {\n                                        if (code < 0xabe) {\n                                            // Mc       GUJARATI SIGN VISARGA\n                                            if (0xa83 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       GUJARATI SIGN NUKTA\n                                            if (0xabc === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac1) {\n                                                // Mc   [3] GUJARATI VOWEL SIGN AA..GUJARATI VOWEL SIGN II\n                                                if (0xabe <= code && code <= 0xac0) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac7) {\n                                                    // Mn   [5] GUJARATI VOWEL SIGN U..GUJARATI VOWEL SIGN CANDRA E\n                                                    if (0xac1 <= code && code <= 0xac5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] GUJARATI VOWEL SIGN E..GUJARATI VOWEL SIGN AI\n                                                    if (0xac7 <= code && code <= 0xac8) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xae2) {\n                                            if (code < 0xacb) {\n                                                // Mc       GUJARATI VOWEL SIGN CANDRA O\n                                                if (0xac9 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xacd) {\n                                                    // Mc   [2] GUJARATI VOWEL SIGN O..GUJARATI VOWEL SIGN AU\n                                                    if (0xacb <= code && code <= 0xacc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       GUJARATI SIGN VIRAMA\n                                                    if (0xacd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xafa) {\n                                                // Mn   [2] GUJARATI VOWEL SIGN VOCALIC L..GUJARATI VOWEL SIGN VOCALIC LL\n                                                if (0xae2 <= code && code <= 0xae3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb01) {\n                                                    // Mn   [6] GUJARATI SIGN SUKUN..GUJARATI SIGN TWO-CIRCLE NUKTA ABOVE\n                                                    if (0xafa <= code && code <= 0xaff) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       ORIYA SIGN CANDRABINDU\n                                                    if (0xb01 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xcf3) {\n                            if (code < 0xc04) {\n                                if (code < 0xb82) {\n                                    if (code < 0xb47) {\n                                        if (code < 0xb3e) {\n                                            if (code < 0xb3c) {\n                                                // Mc   [2] ORIYA SIGN ANUSVARA..ORIYA SIGN VISARGA\n                                                if (0xb02 <= code && code <= 0xb03) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       ORIYA SIGN NUKTA\n                                                if (0xb3c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb40) {\n                                                // Mc       ORIYA VOWEL SIGN AA\n                                                // Mn       ORIYA VOWEL SIGN I\n                                                if (0xb3e <= code && code <= 0xb3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb41) {\n                                                    // Mc       ORIYA VOWEL SIGN II\n                                                    if (0xb40 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] ORIYA VOWEL SIGN U..ORIYA VOWEL SIGN VOCALIC RR\n                                                    if (0xb41 <= code && code <= 0xb44) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb4d) {\n                                            if (code < 0xb4b) {\n                                                // Mc   [2] ORIYA VOWEL SIGN E..ORIYA VOWEL SIGN AI\n                                                if (0xb47 <= code && code <= 0xb48) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] ORIYA VOWEL SIGN O..ORIYA VOWEL SIGN AU\n                                                if (0xb4b <= code && code <= 0xb4c) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb55) {\n                                                // Mn       ORIYA SIGN VIRAMA\n                                                if (0xb4d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb62) {\n                                                    // Mn   [2] ORIYA SIGN OVERLINE..ORIYA AI LENGTH MARK\n                                                    // Mc       ORIYA AU LENGTH MARK\n                                                    if (0xb55 <= code && code <= 0xb57) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] ORIYA VOWEL SIGN VOCALIC L..ORIYA VOWEL SIGN VOCALIC LL\n                                                    if (0xb62 <= code && code <= 0xb63) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbc6) {\n                                        if (code < 0xbbf) {\n                                            // Mn       TAMIL SIGN ANUSVARA\n                                            if (0xb82 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       TAMIL VOWEL SIGN AA\n                                            if (0xbbe === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbc0) {\n                                                // Mc       TAMIL VOWEL SIGN I\n                                                if (0xbbf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc1) {\n                                                    // Mn       TAMIL VOWEL SIGN II\n                                                    if (0xbc0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] TAMIL VOWEL SIGN U..TAMIL VOWEL SIGN UU\n                                                    if (0xbc1 <= code && code <= 0xbc2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbd7) {\n                                            if (code < 0xbca) {\n                                                // Mc   [3] TAMIL VOWEL SIGN E..TAMIL VOWEL SIGN AI\n                                                if (0xbc6 <= code && code <= 0xbc8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbcd) {\n                                                    // Mc   [3] TAMIL VOWEL SIGN O..TAMIL VOWEL SIGN AU\n                                                    if (0xbca <= code && code <= 0xbcc) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TAMIL SIGN VIRAMA\n                                                    if (0xbcd === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc00) {\n                                                // Mc       TAMIL AU LENGTH MARK\n                                                if (0xbd7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc01) {\n                                                    // Mn       TELUGU SIGN COMBINING CANDRABINDU ABOVE\n                                                    if (0xc00 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] TELUGU SIGN CANDRABINDU..TELUGU SIGN VISARGA\n                                                    if (0xc01 <= code && code <= 0xc03) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcbe) {\n                                    if (code < 0xc4a) {\n                                        if (code < 0xc3e) {\n                                            // Mn       TELUGU SIGN COMBINING ANUSVARA ABOVE\n                                            if (0xc04 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mn       TELUGU SIGN NUKTA\n                                            if (0xc3c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc41) {\n                                                // Mn   [3] TELUGU VOWEL SIGN AA..TELUGU VOWEL SIGN II\n                                                if (0xc3e <= code && code <= 0xc40) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc46) {\n                                                    // Mc   [4] TELUGU VOWEL SIGN U..TELUGU VOWEL SIGN VOCALIC RR\n                                                    if (0xc41 <= code && code <= 0xc44) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] TELUGU VOWEL SIGN E..TELUGU VOWEL SIGN AI\n                                                    if (0xc46 <= code && code <= 0xc48) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc81) {\n                                            if (code < 0xc55) {\n                                                // Mn   [4] TELUGU VOWEL SIGN O..TELUGU SIGN VIRAMA\n                                                if (0xc4a <= code && code <= 0xc4d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc62) {\n                                                    // Mn   [2] TELUGU LENGTH MARK..TELUGU AI LENGTH MARK\n                                                    if (0xc55 <= code && code <= 0xc56) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TELUGU VOWEL SIGN VOCALIC L..TELUGU VOWEL SIGN VOCALIC LL\n                                                    if (0xc62 <= code && code <= 0xc63) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc82) {\n                                                // Mn       KANNADA SIGN CANDRABINDU\n                                                if (0xc81 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbc) {\n                                                    // Mc   [2] KANNADA SIGN ANUSVARA..KANNADA SIGN VISARGA\n                                                    if (0xc82 <= code && code <= 0xc83) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KANNADA SIGN NUKTA\n                                                    if (0xcbc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcc6) {\n                                        if (code < 0xcc0) {\n                                            // Mc       KANNADA VOWEL SIGN AA\n                                            if (0xcbe === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       KANNADA VOWEL SIGN I\n                                            if (0xcbf === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc2) {\n                                                // Mc   [2] KANNADA VOWEL SIGN II..KANNADA VOWEL SIGN U\n                                                if (0xcc0 <= code && code <= 0xcc1) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc3) {\n                                                    // Mc       KANNADA VOWEL SIGN UU\n                                                    if (0xcc2 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KANNADA VOWEL SIGN VOCALIC R..KANNADA VOWEL SIGN VOCALIC RR\n                                                    if (0xcc3 <= code && code <= 0xcc4) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xccc) {\n                                            if (code < 0xcc7) {\n                                                // Mn       KANNADA VOWEL SIGN E\n                                                if (0xcc6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcca) {\n                                                    // Mc   [2] KANNADA VOWEL SIGN EE..KANNADA VOWEL SIGN AI\n                                                    if (0xcc7 <= code && code <= 0xcc8) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KANNADA VOWEL SIGN O..KANNADA VOWEL SIGN OO\n                                                    if (0xcca <= code && code <= 0xccb) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd5) {\n                                                // Mn   [2] KANNADA VOWEL SIGN AU..KANNADA SIGN VIRAMA\n                                                if (0xccc <= code && code <= 0xccd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce2) {\n                                                    // Mc   [2] KANNADA LENGTH MARK..KANNADA AI LENGTH MARK\n                                                    if (0xcd5 <= code && code <= 0xcd6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\n                                                    if (0xce2 <= code && code <= 0xce3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xddf) {\n                                if (code < 0xd4e) {\n                                    if (code < 0xd3f) {\n                                        if (code < 0xd02) {\n                                            if (code < 0xd00) {\n                                                // Mc       KANNADA SIGN COMBINING ANUSVARA ABOVE RIGHT\n                                                if (0xcf3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\n                                                if (0xd00 <= code && code <= 0xd01) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd3b) {\n                                                // Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\n                                                if (0xd02 <= code && code <= 0xd03) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3e) {\n                                                    // Mn   [2] MALAYALAM SIGN VERTICAL BAR VIRAMA..MALAYALAM SIGN CIRCULAR VIRAMA\n                                                    if (0xd3b <= code && code <= 0xd3c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       MALAYALAM VOWEL SIGN AA\n                                                    if (0xd3e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd46) {\n                                            if (code < 0xd41) {\n                                                // Mc   [2] MALAYALAM VOWEL SIGN I..MALAYALAM VOWEL SIGN II\n                                                if (0xd3f <= code && code <= 0xd40) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] MALAYALAM VOWEL SIGN U..MALAYALAM VOWEL SIGN VOCALIC RR\n                                                if (0xd41 <= code && code <= 0xd44) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd4a) {\n                                                // Mc   [3] MALAYALAM VOWEL SIGN E..MALAYALAM VOWEL SIGN AI\n                                                if (0xd46 <= code && code <= 0xd48) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd4d) {\n                                                    // Mc   [3] MALAYALAM VOWEL SIGN O..MALAYALAM VOWEL SIGN AU\n                                                    if (0xd4a <= code && code <= 0xd4c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MALAYALAM SIGN VIRAMA\n                                                    if (0xd4d === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xdca) {\n                                        if (code < 0xd62) {\n                                            // Lo       MALAYALAM LETTER DOT REPH\n                                            if (0xd4e === code) {\n                                                return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                            }\n                                            // Mc       MALAYALAM AU LENGTH MARK\n                                            if (0xd57 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd81) {\n                                                // Mn   [2] MALAYALAM VOWEL SIGN VOCALIC L..MALAYALAM VOWEL SIGN VOCALIC LL\n                                                if (0xd62 <= code && code <= 0xd63) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd82) {\n                                                    // Mn       SINHALA SIGN CANDRABINDU\n                                                    if (0xd81 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SINHALA SIGN ANUSVARAYA..SINHALA SIGN VISARGAYA\n                                                    if (0xd82 <= code && code <= 0xd83) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xdd2) {\n                                            if (code < 0xdcf) {\n                                                // Mn       SINHALA SIGN AL-LAKUNA\n                                                if (0xdca === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xdd0) {\n                                                    // Mc       SINHALA VOWEL SIGN AELA-PILLA\n                                                    if (0xdcf === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SINHALA VOWEL SIGN KETTI AEDA-PILLA..SINHALA VOWEL SIGN DIGA AEDA-PILLA\n                                                    if (0xdd0 <= code && code <= 0xdd1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xdd6) {\n                                                // Mn   [3] SINHALA VOWEL SIGN KETTI IS-PILLA..SINHALA VOWEL SIGN KETTI PAA-PILLA\n                                                if (0xdd2 <= code && code <= 0xdd4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xdd8) {\n                                                    // Mn       SINHALA VOWEL SIGN DIGA PAA-PILLA\n                                                    if (0xdd6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [7] SINHALA VOWEL SIGN GAETTA-PILLA..SINHALA VOWEL SIGN KOMBUVA HAA GAYANUKITTA\n                                                    if (0xdd8 <= code && code <= 0xdde) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xf35) {\n                                    if (code < 0xe47) {\n                                        if (code < 0xe31) {\n                                            if (code < 0xdf2) {\n                                                // Mc       SINHALA VOWEL SIGN GAYANUKITTA\n                                                if (0xddf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] SINHALA VOWEL SIGN DIGA GAETTA-PILLA..SINHALA VOWEL SIGN DIGA GAYANUKITTA\n                                                if (0xdf2 <= code && code <= 0xdf3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xe33) {\n                                                // Mn       THAI CHARACTER MAI HAN-AKAT\n                                                if (0xe31 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe34) {\n                                                    // Lo       THAI CHARACTER SARA AM\n                                                    if (0xe33 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] THAI CHARACTER SARA I..THAI CHARACTER PHINTHU\n                                                    if (0xe34 <= code && code <= 0xe3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xeb4) {\n                                            if (code < 0xeb1) {\n                                                // Mn   [8] THAI CHARACTER MAITAIKHU..THAI CHARACTER YAMAKKAN\n                                                if (0xe47 <= code && code <= 0xe4e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       LAO VOWEL SIGN MAI KAN\n                                                if (0xeb1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Lo       LAO VOWEL SIGN AM\n                                                if (0xeb3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xec8) {\n                                                // Mn   [9] LAO VOWEL SIGN I..LAO SEMIVOWEL SIGN LO\n                                                if (0xeb4 <= code && code <= 0xebc) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf18) {\n                                                    // Mn   [7] LAO TONE MAI EK..LAO YAMAKKAN\n                                                    if (0xec8 <= code && code <= 0xece) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIBETAN ASTROLOGICAL SIGN -KHYUD PA..TIBETAN ASTROLOGICAL SIGN SDONG TSHUGS\n                                                    if (0xf18 <= code && code <= 0xf19) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xf7f) {\n                                        if (code < 0xf39) {\n                                            // Mn       TIBETAN MARK NGAS BZUNG NYI ZLA\n                                            if (0xf35 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mn       TIBETAN MARK NGAS BZUNG SGOR RTAGS\n                                            if (0xf37 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xf3e) {\n                                                // Mn       TIBETAN MARK TSA -PHRU\n                                                if (0xf39 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf71) {\n                                                    // Mc   [2] TIBETAN SIGN YAR TSHES..TIBETAN SIGN MAR TSHES\n                                                    if (0xf3e <= code && code <= 0xf3f) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [14] TIBETAN VOWEL SIGN AA..TIBETAN SIGN RJES SU NGA RO\n                                                    if (0xf71 <= code && code <= 0xf7e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xf8d) {\n                                            if (code < 0xf80) {\n                                                // Mc       TIBETAN SIGN RNAM BCAD\n                                                if (0xf7f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xf86) {\n                                                    // Mn   [5] TIBETAN VOWEL SIGN REVERSED I..TIBETAN MARK HALANTA\n                                                    if (0xf80 <= code && code <= 0xf84) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIBETAN SIGN LCI RTAGS..TIBETAN SIGN YANG RTAGS\n                                                    if (0xf86 <= code && code <= 0xf87) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xf99) {\n                                                // Mn  [11] TIBETAN SUBJOINED SIGN LCE TSA CAN..TIBETAN SUBJOINED LETTER JA\n                                                if (0xf8d <= code && code <= 0xf97) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfc6) {\n                                                    // Mn  [36] TIBETAN SUBJOINED LETTER NYA..TIBETAN SUBJOINED LETTER FIXED-FORM RA\n                                                    if (0xf99 <= code && code <= 0xfbc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TIBETAN SYMBOL PADMA GDAN\n                                                    if (0xfc6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1c24) {\n                        if (code < 0x1930) {\n                            if (code < 0x1732) {\n                                if (code < 0x1082) {\n                                    if (code < 0x103d) {\n                                        if (code < 0x1032) {\n                                            if (code < 0x1031) {\n                                                // Mn   [4] MYANMAR VOWEL SIGN I..MYANMAR VOWEL SIGN UU\n                                                if (0x102d <= code && code <= 0x1030) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MYANMAR VOWEL SIGN E\n                                                if (0x1031 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1039) {\n                                                // Mn   [6] MYANMAR VOWEL SIGN AI..MYANMAR SIGN DOT BELOW\n                                                if (0x1032 <= code && code <= 0x1037) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x103b) {\n                                                    // Mn   [2] MYANMAR SIGN VIRAMA..MYANMAR SIGN ASAT\n                                                    if (0x1039 <= code && code <= 0x103a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] MYANMAR CONSONANT SIGN MEDIAL YA..MYANMAR CONSONANT SIGN MEDIAL RA\n                                                    if (0x103b <= code && code <= 0x103c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1058) {\n                                            if (code < 0x1056) {\n                                                // Mn   [2] MYANMAR CONSONANT SIGN MEDIAL WA..MYANMAR CONSONANT SIGN MEDIAL HA\n                                                if (0x103d <= code && code <= 0x103e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] MYANMAR VOWEL SIGN VOCALIC R..MYANMAR VOWEL SIGN VOCALIC RR\n                                                if (0x1056 <= code && code <= 0x1057) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x105e) {\n                                                // Mn   [2] MYANMAR VOWEL SIGN VOCALIC L..MYANMAR VOWEL SIGN VOCALIC LL\n                                                if (0x1058 <= code && code <= 0x1059) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1071) {\n                                                    // Mn   [3] MYANMAR CONSONANT SIGN MON MEDIAL NA..MYANMAR CONSONANT SIGN MON MEDIAL LA\n                                                    if (0x105e <= code && code <= 0x1060) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] MYANMAR VOWEL SIGN GEBA KAREN I..MYANMAR VOWEL SIGN KAYAH EE\n                                                    if (0x1071 <= code && code <= 0x1074) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1100) {\n                                        if (code < 0x1085) {\n                                            // Mn       MYANMAR CONSONANT SIGN SHAN MEDIAL WA\n                                            if (0x1082 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       MYANMAR VOWEL SIGN SHAN E\n                                            if (0x1084 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x108d) {\n                                                // Mn   [2] MYANMAR VOWEL SIGN SHAN E ABOVE..MYANMAR VOWEL SIGN SHAN FINAL Y\n                                                if (0x1085 <= code && code <= 0x1086) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MYANMAR SIGN SHAN COUNCIL EMPHATIC TONE\n                                                if (0x108d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       MYANMAR VOWEL SIGN AITON AI\n                                                if (0x109d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x135d) {\n                                            if (code < 0x1160) {\n                                                // Lo  [96] HANGUL CHOSEONG KIYEOK..HANGUL CHOSEONG FILLER\n                                                if (0x1100 <= code && code <= 0x115f) {\n                                                    return boundaries_1.CLUSTER_BREAK.L;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a8) {\n                                                    // Lo  [72] HANGUL JUNGSEONG FILLER..HANGUL JUNGSEONG O-YAE\n                                                    if (0x1160 <= code && code <= 0x11a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.V;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [88] HANGUL JONGSEONG KIYEOK..HANGUL JONGSEONG SSANGNIEUN\n                                                    if (0x11a8 <= code && code <= 0x11ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.T;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1712) {\n                                                // Mn   [3] ETHIOPIC COMBINING GEMINATION AND VOWEL LENGTH MARK..ETHIOPIC COMBINING GEMINATION MARK\n                                                if (0x135d <= code && code <= 0x135f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1715) {\n                                                    // Mn   [3] TAGALOG VOWEL SIGN I..TAGALOG SIGN VIRAMA\n                                                    if (0x1712 <= code && code <= 0x1714) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       TAGALOG SIGN PAMUDPOD\n                                                    if (0x1715 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x17c9) {\n                                    if (code < 0x17b6) {\n                                        if (code < 0x1752) {\n                                            if (code < 0x1734) {\n                                                // Mn   [2] HANUNOO VOWEL SIGN I..HANUNOO VOWEL SIGN U\n                                                if (0x1732 <= code && code <= 0x1733) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       HANUNOO SIGN PAMUDPOD\n                                                if (0x1734 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1772) {\n                                                // Mn   [2] BUHID VOWEL SIGN I..BUHID VOWEL SIGN U\n                                                if (0x1752 <= code && code <= 0x1753) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x17b4) {\n                                                    // Mn   [2] TAGBANWA VOWEL SIGN I..TAGBANWA VOWEL SIGN U\n                                                    if (0x1772 <= code && code <= 0x1773) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KHMER VOWEL INHERENT AQ..KHMER VOWEL INHERENT AA\n                                                    if (0x17b4 <= code && code <= 0x17b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x17be) {\n                                            if (code < 0x17b7) {\n                                                // Mc       KHMER VOWEL SIGN AA\n                                                if (0x17b6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [7] KHMER VOWEL SIGN I..KHMER VOWEL SIGN UA\n                                                if (0x17b7 <= code && code <= 0x17bd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x17c6) {\n                                                // Mc   [8] KHMER VOWEL SIGN OE..KHMER VOWEL SIGN AU\n                                                if (0x17be <= code && code <= 0x17c5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x17c7) {\n                                                    // Mn       KHMER SIGN NIKAHIT\n                                                    if (0x17c6 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KHMER SIGN REAHMUK..KHMER SIGN YUUKALEAPINTU\n                                                    if (0x17c7 <= code && code <= 0x17c8) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1885) {\n                                        if (code < 0x180b) {\n                                            if (code < 0x17dd) {\n                                                // Mn  [11] KHMER SIGN MUUSIKATOAN..KHMER SIGN BATHAMASAT\n                                                if (0x17c9 <= code && code <= 0x17d3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KHMER SIGN ATTHACAN\n                                                if (0x17dd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x180e) {\n                                                // Mn   [3] MONGOLIAN FREE VARIATION SELECTOR ONE..MONGOLIAN FREE VARIATION SELECTOR THREE\n                                                if (0x180b <= code && code <= 0x180d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       MONGOLIAN VOWEL SEPARATOR\n                                                if (0x180e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                                // Mn       MONGOLIAN FREE VARIATION SELECTOR FOUR\n                                                if (0x180f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1923) {\n                                            if (code < 0x18a9) {\n                                                // Mn   [2] MONGOLIAN LETTER ALI GALI BALUDA..MONGOLIAN LETTER ALI GALI THREE BALUDA\n                                                if (0x1885 <= code && code <= 0x1886) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1920) {\n                                                    // Mn       MONGOLIAN LETTER ALI GALI DAGALGA\n                                                    if (0x18a9 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] LIMBU VOWEL SIGN A..LIMBU VOWEL SIGN U\n                                                    if (0x1920 <= code && code <= 0x1922) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1927) {\n                                                // Mc   [4] LIMBU VOWEL SIGN EE..LIMBU VOWEL SIGN AU\n                                                if (0x1923 <= code && code <= 0x1926) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1929) {\n                                                    // Mn   [2] LIMBU VOWEL SIGN E..LIMBU VOWEL SIGN O\n                                                    if (0x1927 <= code && code <= 0x1928) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] LIMBU SUBJOINED LETTER YA..LIMBU SUBJOINED LETTER WA\n                                                    if (0x1929 <= code && code <= 0x192b) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1b3b) {\n                                if (code < 0x1a58) {\n                                    if (code < 0x1a19) {\n                                        if (code < 0x1933) {\n                                            if (code < 0x1932) {\n                                                // Mc   [2] LIMBU SMALL LETTER KA..LIMBU SMALL LETTER NGA\n                                                if (0x1930 <= code && code <= 0x1931) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       LIMBU SMALL LETTER ANUSVARA\n                                                if (0x1932 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1939) {\n                                                // Mc   [6] LIMBU SMALL LETTER TA..LIMBU SMALL LETTER LA\n                                                if (0x1933 <= code && code <= 0x1938) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1a17) {\n                                                    // Mn   [3] LIMBU SIGN MUKPHRENG..LIMBU SIGN SA-I\n                                                    if (0x1939 <= code && code <= 0x193b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] BUGINESE VOWEL SIGN I..BUGINESE VOWEL SIGN U\n                                                    if (0x1a17 <= code && code <= 0x1a18) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1a55) {\n                                            if (code < 0x1a1b) {\n                                                // Mc   [2] BUGINESE VOWEL SIGN E..BUGINESE VOWEL SIGN O\n                                                if (0x1a19 <= code && code <= 0x1a1a) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BUGINESE VOWEL SIGN AE\n                                                if (0x1a1b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1a56) {\n                                                // Mc       TAI THAM CONSONANT SIGN MEDIAL RA\n                                                if (0x1a55 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI THAM CONSONANT SIGN MEDIAL LA\n                                                if (0x1a56 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       TAI THAM CONSONANT SIGN LA TANG LAI\n                                                if (0x1a57 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1a73) {\n                                        if (code < 0x1a62) {\n                                            if (code < 0x1a60) {\n                                                // Mn   [7] TAI THAM SIGN MAI KANG LAI..TAI THAM CONSONANT SIGN SA\n                                                if (0x1a58 <= code && code <= 0x1a5e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI THAM SIGN SAKOT\n                                                if (0x1a60 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1a65) {\n                                                // Mn       TAI THAM VOWEL SIGN MAI SAT\n                                                if (0x1a62 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1a6d) {\n                                                    // Mn   [8] TAI THAM VOWEL SIGN I..TAI THAM VOWEL SIGN OA BELOW\n                                                    if (0x1a65 <= code && code <= 0x1a6c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [6] TAI THAM VOWEL SIGN OY..TAI THAM VOWEL SIGN THAM AI\n                                                    if (0x1a6d <= code && code <= 0x1a72) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1b00) {\n                                            if (code < 0x1a7f) {\n                                                // Mn  [10] TAI THAM VOWEL SIGN OA ABOVE..TAI THAM SIGN KHUEN-LUE KARAN\n                                                if (0x1a73 <= code && code <= 0x1a7c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1ab0) {\n                                                    // Mn       TAI THAM COMBINING CRYPTOGRAMMIC DOT\n                                                    if (0x1a7f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [14] COMBINING DOUBLED CIRCUMFLEX ACCENT..COMBINING PARENTHESES BELOW\n                                                    // Me       COMBINING PARENTHESES OVERLAY\n                                                    // Mn  [16] COMBINING LATIN SMALL LETTER W BELOW..COMBINING LATIN SMALL LETTER INSULAR T\n                                                    if (0x1ab0 <= code && code <= 0x1ace) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1b04) {\n                                                // Mn   [4] BALINESE SIGN ULU RICEM..BALINESE SIGN SURANG\n                                                if (0x1b00 <= code && code <= 0x1b03) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b34) {\n                                                    // Mc       BALINESE SIGN BISAH\n                                                    if (0x1b04 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BALINESE SIGN REREKAN\n                                                    // Mc       BALINESE VOWEL SIGN TEDUNG\n                                                    // Mn   [5] BALINESE VOWEL SIGN ULU..BALINESE VOWEL SIGN RA REPA\n                                                    if (0x1b34 <= code && code <= 0x1b3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x1ba8) {\n                                    if (code < 0x1b6b) {\n                                        if (code < 0x1b3d) {\n                                            // Mc       BALINESE VOWEL SIGN RA REPA TEDUNG\n                                            if (0x1b3b === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BALINESE VOWEL SIGN LA LENGA\n                                            if (0x1b3c === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1b42) {\n                                                // Mc   [5] BALINESE VOWEL SIGN LA LENGA TEDUNG..BALINESE VOWEL SIGN TALING REPA TEDUNG\n                                                if (0x1b3d <= code && code <= 0x1b41) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b43) {\n                                                    // Mn       BALINESE VOWEL SIGN PEPET\n                                                    if (0x1b42 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] BALINESE VOWEL SIGN PEPET TEDUNG..BALINESE ADEG ADEG\n                                                    if (0x1b43 <= code && code <= 0x1b44) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1ba1) {\n                                            if (code < 0x1b80) {\n                                                // Mn   [9] BALINESE MUSICAL SYMBOL COMBINING TEGEH..BALINESE MUSICAL SYMBOL COMBINING GONG\n                                                if (0x1b6b <= code && code <= 0x1b73) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1b82) {\n                                                    // Mn   [2] SUNDANESE SIGN PANYECEK..SUNDANESE SIGN PANGLAYAR\n                                                    if (0x1b80 <= code && code <= 0x1b81) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       SUNDANESE SIGN PANGWISAD\n                                                    if (0x1b82 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1ba2) {\n                                                // Mc       SUNDANESE CONSONANT SIGN PAMINGKAL\n                                                if (0x1ba1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1ba6) {\n                                                    // Mn   [4] SUNDANESE CONSONANT SIGN PANYAKRA..SUNDANESE VOWEL SIGN PANYUKU\n                                                    if (0x1ba2 <= code && code <= 0x1ba5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SUNDANESE VOWEL SIGN PANAELAENG..SUNDANESE VOWEL SIGN PANOLONG\n                                                    if (0x1ba6 <= code && code <= 0x1ba7) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1be8) {\n                                        if (code < 0x1bab) {\n                                            if (code < 0x1baa) {\n                                                // Mn   [2] SUNDANESE VOWEL SIGN PAMEPET..SUNDANESE VOWEL SIGN PANEULEUNG\n                                                if (0x1ba8 <= code && code <= 0x1ba9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       SUNDANESE SIGN PAMAAEH\n                                                if (0x1baa === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1be6) {\n                                                // Mn   [3] SUNDANESE SIGN VIRAMA..SUNDANESE CONSONANT SIGN PASANGAN WA\n                                                if (0x1bab <= code && code <= 0x1bad) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       BATAK SIGN TOMPI\n                                                if (0x1be6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       BATAK VOWEL SIGN E\n                                                if (0x1be7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1bee) {\n                                            if (code < 0x1bea) {\n                                                // Mn   [2] BATAK VOWEL SIGN PAKPAK E..BATAK VOWEL SIGN EE\n                                                if (0x1be8 <= code && code <= 0x1be9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bed) {\n                                                    // Mc   [3] BATAK VOWEL SIGN I..BATAK VOWEL SIGN O\n                                                    if (0x1bea <= code && code <= 0x1bec) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BATAK VOWEL SIGN KARO O\n                                                    if (0x1bed === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1bef) {\n                                                // Mc       BATAK VOWEL SIGN U\n                                                if (0x1bee === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bf2) {\n                                                    // Mn   [3] BATAK VOWEL SIGN U FOR SIMALUNGUN SA..BATAK CONSONANT SIGN H\n                                                    if (0x1bef <= code && code <= 0x1bf1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] BATAK PANGOLAT..BATAK PANONGONAN\n                                                    if (0x1bf2 <= code && code <= 0x1bf3) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xa952) {\n                            if (code < 0x2d7f) {\n                                if (code < 0x1cf7) {\n                                    if (code < 0x1cd4) {\n                                        if (code < 0x1c34) {\n                                            if (code < 0x1c2c) {\n                                                // Mc   [8] LEPCHA SUBJOINED LETTER YA..LEPCHA VOWEL SIGN UU\n                                                if (0x1c24 <= code && code <= 0x1c2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [8] LEPCHA VOWEL SIGN E..LEPCHA CONSONANT SIGN T\n                                                if (0x1c2c <= code && code <= 0x1c33) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1c36) {\n                                                // Mc   [2] LEPCHA CONSONANT SIGN NYIN-DO..LEPCHA CONSONANT SIGN KANG\n                                                if (0x1c34 <= code && code <= 0x1c35) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1cd0) {\n                                                    // Mn   [2] LEPCHA SIGN RAN..LEPCHA SIGN NUKTA\n                                                    if (0x1c36 <= code && code <= 0x1c37) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] VEDIC TONE KARSHANA..VEDIC TONE PRENKHA\n                                                    if (0x1cd0 <= code && code <= 0x1cd2) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1ce2) {\n                                            if (code < 0x1ce1) {\n                                                // Mn  [13] VEDIC SIGN YAJURVEDIC MIDLINE SVARITA..VEDIC TONE RIGVEDIC KASHMIRI INDEPENDENT SVARITA\n                                                if (0x1cd4 <= code && code <= 0x1ce0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       VEDIC TONE ATHARVAVEDIC INDEPENDENT SVARITA\n                                                if (0x1ce1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1ced) {\n                                                // Mn   [7] VEDIC SIGN VISARGA SVARITA..VEDIC SIGN VISARGA ANUDATTA WITH TAIL\n                                                if (0x1ce2 <= code && code <= 0x1ce8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       VEDIC SIGN TIRYAK\n                                                if (0x1ced === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       VEDIC TONE CANDRA ABOVE\n                                                if (0x1cf4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x200d) {\n                                        if (code < 0x1dc0) {\n                                            if (code < 0x1cf8) {\n                                                // Mc       VEDIC SIGN ATIKRAMA\n                                                if (0x1cf7 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] VEDIC TONE RING ABOVE..VEDIC TONE DOUBLE RING ABOVE\n                                                if (0x1cf8 <= code && code <= 0x1cf9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x200b) {\n                                                // Mn  [64] COMBINING DOTTED GRAVE ACCENT..COMBINING RIGHT ARROWHEAD AND DOWN ARROWHEAD BELOW\n                                                if (0x1dc0 <= code && code <= 0x1dff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Cf       ZERO WIDTH SPACE\n                                                if (0x200b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                                // Cf       ZERO WIDTH NON-JOINER\n                                                if (0x200c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x2060) {\n                                            if (code < 0x200e) {\n                                                // Cf       ZERO WIDTH JOINER\n                                                if (0x200d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.ZWJ;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x2028) {\n                                                    // Cf   [2] LEFT-TO-RIGHT MARK..RIGHT-TO-LEFT MARK\n                                                    if (0x200e <= code && code <= 0x200f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Zl       LINE SEPARATOR\n                                                    // Zp       PARAGRAPH SEPARATOR\n                                                    // Cf   [5] LEFT-TO-RIGHT EMBEDDING..RIGHT-TO-LEFT OVERRIDE\n                                                    if (0x2028 <= code && code <= 0x202e) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x20d0) {\n                                                // Cf   [5] WORD JOINER..INVISIBLE PLUS\n                                                // Cn       <reserved-2065>\n                                                // Cf  [10] LEFT-TO-RIGHT ISOLATE..NOMINAL DIGIT SHAPES\n                                                if (0x2060 <= code && code <= 0x206f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x2cef) {\n                                                    // Mn  [13] COMBINING LEFT HARPOON ABOVE..COMBINING FOUR DOTS ABOVE\n                                                    // Me   [4] COMBINING ENCLOSING CIRCLE..COMBINING ENCLOSING CIRCLE BACKSLASH\n                                                    // Mn       COMBINING LEFT RIGHT ARROW ABOVE\n                                                    // Me   [3] COMBINING ENCLOSING SCREEN..COMBINING ENCLOSING UPWARD POINTING TRIANGLE\n                                                    // Mn  [12] COMBINING REVERSE SOLIDUS OVERLAY..COMBINING ASTERISK ABOVE\n                                                    if (0x20d0 <= code && code <= 0x20f0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] COPTIC COMBINING NI ABOVE..COPTIC COMBINING SPIRITUS LENIS\n                                                    if (0x2cef <= code && code <= 0x2cf1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xa823) {\n                                    if (code < 0xa674) {\n                                        if (code < 0x302a) {\n                                            if (code < 0x2de0) {\n                                                // Mn       TIFINAGH CONSONANT JOINER\n                                                if (0x2d7f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [32] COMBINING CYRILLIC LETTER BE..COMBINING CYRILLIC LETTER IOTIFIED BIG YUS\n                                                if (0x2de0 <= code && code <= 0x2dff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x3099) {\n                                                // Mn   [4] IDEOGRAPHIC LEVEL TONE MARK..IDEOGRAPHIC ENTERING TONE MARK\n                                                // Mc   [2] HANGUL SINGLE DOT TONE MARK..HANGUL DOUBLE DOT TONE MARK\n                                                if (0x302a <= code && code <= 0x302f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa66f) {\n                                                    // Mn   [2] COMBINING KATAKANA-HIRAGANA VOICED SOUND MARK..COMBINING KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK\n                                                    if (0x3099 <= code && code <= 0x309a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       COMBINING CYRILLIC VZMET\n                                                    // Me   [3] COMBINING CYRILLIC TEN MILLIONS SIGN..COMBINING CYRILLIC THOUSAND MILLIONS SIGN\n                                                    if (0xa66f <= code && code <= 0xa672) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa802) {\n                                            if (code < 0xa69e) {\n                                                // Mn  [10] COMBINING CYRILLIC LETTER UKRAINIAN IE..COMBINING CYRILLIC PAYEROK\n                                                if (0xa674 <= code && code <= 0xa67d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa6f0) {\n                                                    // Mn   [2] COMBINING CYRILLIC LETTER EF..COMBINING CYRILLIC LETTER IOTIFIED E\n                                                    if (0xa69e <= code && code <= 0xa69f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] BAMUM COMBINING MARK KOQNDON..BAMUM COMBINING MARK TUKWENTIS\n                                                    if (0xa6f0 <= code && code <= 0xa6f1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa806) {\n                                                // Mn       SYLOTI NAGRI SIGN DVISVARA\n                                                if (0xa802 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       SYLOTI NAGRI SIGN HASANTA\n                                                if (0xa806 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       SYLOTI NAGRI SIGN ANUSVARA\n                                                if (0xa80b === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xa8b4) {\n                                        if (code < 0xa827) {\n                                            if (code < 0xa825) {\n                                                // Mc   [2] SYLOTI NAGRI VOWEL SIGN A..SYLOTI NAGRI VOWEL SIGN I\n                                                if (0xa823 <= code && code <= 0xa824) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SYLOTI NAGRI VOWEL SIGN U..SYLOTI NAGRI VOWEL SIGN E\n                                                if (0xa825 <= code && code <= 0xa826) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa82c) {\n                                                // Mc       SYLOTI NAGRI VOWEL SIGN OO\n                                                if (0xa827 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa880) {\n                                                    // Mn       SYLOTI NAGRI SIGN ALTERNATE HASANTA\n                                                    if (0xa82c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SAURASHTRA SIGN ANUSVARA..SAURASHTRA SIGN VISARGA\n                                                    if (0xa880 <= code && code <= 0xa881) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa8ff) {\n                                            if (code < 0xa8c4) {\n                                                // Mc  [16] SAURASHTRA CONSONANT SIGN HAARU..SAURASHTRA VOWEL SIGN AU\n                                                if (0xa8b4 <= code && code <= 0xa8c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa8e0) {\n                                                    // Mn   [2] SAURASHTRA SIGN VIRAMA..SAURASHTRA SIGN CANDRABINDU\n                                                    if (0xa8c4 <= code && code <= 0xa8c5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [18] COMBINING DEVANAGARI DIGIT ZERO..COMBINING DEVANAGARI SIGN AVAGRAHA\n                                                    if (0xa8e0 <= code && code <= 0xa8f1) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa926) {\n                                                // Mn       DEVANAGARI VOWEL SIGN AY\n                                                if (0xa8ff === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa947) {\n                                                    // Mn   [8] KAYAH LI VOWEL UE..KAYAH LI TONE CALYA PLOPHU\n                                                    if (0xa926 <= code && code <= 0xa92d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [11] REJANG VOWEL SIGN I..REJANG CONSONANT SIGN R\n                                                    if (0xa947 <= code && code <= 0xa951) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xaab2) {\n                                if (code < 0xa9e5) {\n                                    if (code < 0xa9b4) {\n                                        if (code < 0xa980) {\n                                            if (code < 0xa960) {\n                                                // Mc   [2] REJANG CONSONANT SIGN H..REJANG VIRAMA\n                                                if (0xa952 <= code && code <= 0xa953) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [29] HANGUL CHOSEONG TIKEUT-MIEUM..HANGUL CHOSEONG SSANGYEORINHIEUH\n                                                if (0xa960 <= code && code <= 0xa97c) {\n                                                    return boundaries_1.CLUSTER_BREAK.L;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa983) {\n                                                // Mn   [3] JAVANESE SIGN PANYANGGA..JAVANESE SIGN LAYAR\n                                                if (0xa980 <= code && code <= 0xa982) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       JAVANESE SIGN WIGNYAN\n                                                if (0xa983 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       JAVANESE SIGN CECAK TELU\n                                                if (0xa9b3 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xa9ba) {\n                                            if (code < 0xa9b6) {\n                                                // Mc   [2] JAVANESE VOWEL SIGN TARUNG..JAVANESE VOWEL SIGN TOLONG\n                                                if (0xa9b4 <= code && code <= 0xa9b5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] JAVANESE VOWEL SIGN WULU..JAVANESE VOWEL SIGN SUKU MENDUT\n                                                if (0xa9b6 <= code && code <= 0xa9b9) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xa9bc) {\n                                                // Mc   [2] JAVANESE VOWEL SIGN TALING..JAVANESE VOWEL SIGN DIRGA MURE\n                                                if (0xa9ba <= code && code <= 0xa9bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xa9be) {\n                                                    // Mn   [2] JAVANESE VOWEL SIGN PEPET..JAVANESE CONSONANT SIGN KERET\n                                                    if (0xa9bc <= code && code <= 0xa9bd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] JAVANESE CONSONANT SIGN PENGKAL..JAVANESE PANGKON\n                                                    if (0xa9be <= code && code <= 0xa9c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xaa35) {\n                                        if (code < 0xaa2f) {\n                                            if (code < 0xaa29) {\n                                                // Mn       MYANMAR SIGN SHAN SAW\n                                                if (0xa9e5 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [6] CHAM VOWEL SIGN AA..CHAM VOWEL SIGN OE\n                                                if (0xaa29 <= code && code <= 0xaa2e) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaa31) {\n                                                // Mc   [2] CHAM VOWEL SIGN O..CHAM VOWEL SIGN AI\n                                                if (0xaa2f <= code && code <= 0xaa30) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaa33) {\n                                                    // Mn   [2] CHAM VOWEL SIGN AU..CHAM VOWEL SIGN UE\n                                                    if (0xaa31 <= code && code <= 0xaa32) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] CHAM CONSONANT SIGN YA..CHAM CONSONANT SIGN RA\n                                                    if (0xaa33 <= code && code <= 0xaa34) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaa4d) {\n                                            if (code < 0xaa43) {\n                                                // Mn   [2] CHAM CONSONANT SIGN LA..CHAM CONSONANT SIGN WA\n                                                if (0xaa35 <= code && code <= 0xaa36) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       CHAM CONSONANT SIGN FINAL NG\n                                                if (0xaa43 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       CHAM CONSONANT SIGN FINAL M\n                                                if (0xaa4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaa7c) {\n                                                // Mc       CHAM CONSONANT SIGN FINAL H\n                                                if (0xaa4d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MYANMAR SIGN TAI LAING TONE-2\n                                                if (0xaa7c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       TAI VIET MAI KANG\n                                                if (0xaab0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xabe6) {\n                                    if (code < 0xaaec) {\n                                        if (code < 0xaabe) {\n                                            if (code < 0xaab7) {\n                                                // Mn   [3] TAI VIET VOWEL I..TAI VIET VOWEL U\n                                                if (0xaab2 <= code && code <= 0xaab4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] TAI VIET MAI KHIT..TAI VIET VOWEL IA\n                                                if (0xaab7 <= code && code <= 0xaab8) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaac1) {\n                                                // Mn   [2] TAI VIET VOWEL AM..TAI VIET TONE MAI EK\n                                                if (0xaabe <= code && code <= 0xaabf) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       TAI VIET TONE MAI THO\n                                                if (0xaac1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       MEETEI MAYEK VOWEL SIGN II\n                                                if (0xaaeb === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaaf6) {\n                                            if (code < 0xaaee) {\n                                                // Mn   [2] MEETEI MAYEK VOWEL SIGN UU..MEETEI MAYEK VOWEL SIGN AAI\n                                                if (0xaaec <= code && code <= 0xaaed) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaaf5) {\n                                                    // Mc   [2] MEETEI MAYEK VOWEL SIGN AU..MEETEI MAYEK VOWEL SIGN AAU\n                                                    if (0xaaee <= code && code <= 0xaaef) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       MEETEI MAYEK VOWEL SIGN VISARGA\n                                                    if (0xaaf5 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xabe3) {\n                                                // Mn       MEETEI MAYEK VIRAMA\n                                                if (0xaaf6 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xabe5) {\n                                                    // Mc   [2] MEETEI MAYEK VOWEL SIGN ONAP..MEETEI MAYEK VOWEL SIGN INAP\n                                                    if (0xabe3 <= code && code <= 0xabe4) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MEETEI MAYEK VOWEL SIGN ANAP\n                                                    if (0xabe5 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xac00) {\n                                        if (code < 0xabe9) {\n                                            if (code < 0xabe8) {\n                                                // Mc   [2] MEETEI MAYEK VOWEL SIGN YENAP..MEETEI MAYEK VOWEL SIGN SOUNAP\n                                                if (0xabe6 <= code && code <= 0xabe7) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       MEETEI MAYEK VOWEL SIGN UNAP\n                                                if (0xabe8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xabec) {\n                                                // Mc   [2] MEETEI MAYEK VOWEL SIGN CHEINAP..MEETEI MAYEK VOWEL SIGN NUNG\n                                                if (0xabe9 <= code && code <= 0xabea) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MEETEI MAYEK LUM IYEK\n                                                if (0xabec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       MEETEI MAYEK APUN IYEK\n                                                if (0xabed === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xac1d) {\n                                            if (code < 0xac01) {\n                                                // Lo       HANGUL SYLLABLE GA\n                                                if (0xac00 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac1c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GAG..HANGUL SYLLABLE GAH\n                                                    if (0xac01 <= code && code <= 0xac1b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GAE\n                                                    if (0xac1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac38) {\n                                                // Lo  [27] HANGUL SYLLABLE GAEG..HANGUL SYLLABLE GAEH\n                                                if (0xac1d <= code && code <= 0xac37) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac39) {\n                                                    // Lo       HANGUL SYLLABLE GYA\n                                                    if (0xac38 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GYAG..HANGUL SYLLABLE GYAH\n                                                    if (0xac39 <= code && code <= 0xac53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0xb5a1) {\n                    if (code < 0xb0ed) {\n                        if (code < 0xaea0) {\n                            if (code < 0xad6d) {\n                                if (code < 0xace0) {\n                                    if (code < 0xac8d) {\n                                        if (code < 0xac70) {\n                                            if (code < 0xac55) {\n                                                // Lo       HANGUL SYLLABLE GYAE\n                                                if (0xac54 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GYAEG..HANGUL SYLLABLE GYAEH\n                                                if (0xac55 <= code && code <= 0xac6f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xac71) {\n                                                // Lo       HANGUL SYLLABLE GEO\n                                                if (0xac70 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xac8c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GEOG..HANGUL SYLLABLE GEOH\n                                                    if (0xac71 <= code && code <= 0xac8b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GE\n                                                    if (0xac8c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaca9) {\n                                            if (code < 0xaca8) {\n                                                // Lo  [27] HANGUL SYLLABLE GEG..HANGUL SYLLABLE GEH\n                                                if (0xac8d <= code && code <= 0xaca7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GYEO\n                                                if (0xaca8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xacc4) {\n                                                // Lo  [27] HANGUL SYLLABLE GYEOG..HANGUL SYLLABLE GYEOH\n                                                if (0xaca9 <= code && code <= 0xacc3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xacc5) {\n                                                    // Lo       HANGUL SYLLABLE GYE\n                                                    if (0xacc4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GYEG..HANGUL SYLLABLE GYEH\n                                                    if (0xacc5 <= code && code <= 0xacdf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xad19) {\n                                        if (code < 0xacfc) {\n                                            if (code < 0xace1) {\n                                                // Lo       HANGUL SYLLABLE GO\n                                                if (0xace0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GOG..HANGUL SYLLABLE GOH\n                                                if (0xace1 <= code && code <= 0xacfb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xacfd) {\n                                                // Lo       HANGUL SYLLABLE GWA\n                                                if (0xacfc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad18) {\n                                                    // Lo  [27] HANGUL SYLLABLE GWAG..HANGUL SYLLABLE GWAH\n                                                    if (0xacfd <= code && code <= 0xad17) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GWAE\n                                                    if (0xad18 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xad50) {\n                                            if (code < 0xad34) {\n                                                // Lo  [27] HANGUL SYLLABLE GWAEG..HANGUL SYLLABLE GWAEH\n                                                if (0xad19 <= code && code <= 0xad33) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad35) {\n                                                    // Lo       HANGUL SYLLABLE GOE\n                                                    if (0xad34 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GOEG..HANGUL SYLLABLE GOEH\n                                                    if (0xad35 <= code && code <= 0xad4f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xad51) {\n                                                // Lo       HANGUL SYLLABLE GYO\n                                                if (0xad50 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xad6c) {\n                                                    // Lo  [27] HANGUL SYLLABLE GYOG..HANGUL SYLLABLE GYOH\n                                                    if (0xad51 <= code && code <= 0xad6b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GU\n                                                    if (0xad6c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xadf9) {\n                                    if (code < 0xadc0) {\n                                        if (code < 0xad89) {\n                                            if (code < 0xad88) {\n                                                // Lo  [27] HANGUL SYLLABLE GUG..HANGUL SYLLABLE GUH\n                                                if (0xad6d <= code && code <= 0xad87) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GWEO\n                                                if (0xad88 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xada4) {\n                                                // Lo  [27] HANGUL SYLLABLE GWEOG..HANGUL SYLLABLE GWEOH\n                                                if (0xad89 <= code && code <= 0xada3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xada5) {\n                                                    // Lo       HANGUL SYLLABLE GWE\n                                                    if (0xada4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GWEG..HANGUL SYLLABLE GWEH\n                                                    if (0xada5 <= code && code <= 0xadbf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaddc) {\n                                            if (code < 0xadc1) {\n                                                // Lo       HANGUL SYLLABLE GWI\n                                                if (0xadc0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GWIG..HANGUL SYLLABLE GWIH\n                                                if (0xadc1 <= code && code <= 0xaddb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaddd) {\n                                                // Lo       HANGUL SYLLABLE GYU\n                                                if (0xaddc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xadf8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GYUG..HANGUL SYLLABLE GYUH\n                                                    if (0xaddd <= code && code <= 0xadf7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GEU\n                                                    if (0xadf8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xae4c) {\n                                        if (code < 0xae15) {\n                                            if (code < 0xae14) {\n                                                // Lo  [27] HANGUL SYLLABLE GEUG..HANGUL SYLLABLE GEUH\n                                                if (0xadf9 <= code && code <= 0xae13) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GYI\n                                                if (0xae14 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xae30) {\n                                                // Lo  [27] HANGUL SYLLABLE GYIG..HANGUL SYLLABLE GYIH\n                                                if (0xae15 <= code && code <= 0xae2f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae31) {\n                                                    // Lo       HANGUL SYLLABLE GI\n                                                    if (0xae30 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GIG..HANGUL SYLLABLE GIH\n                                                    if (0xae31 <= code && code <= 0xae4b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xae69) {\n                                            if (code < 0xae4d) {\n                                                // Lo       HANGUL SYLLABLE GGA\n                                                if (0xae4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae68) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGAG..HANGUL SYLLABLE GGAH\n                                                    if (0xae4d <= code && code <= 0xae67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGAE\n                                                    if (0xae68 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xae84) {\n                                                // Lo  [27] HANGUL SYLLABLE GGAEG..HANGUL SYLLABLE GGAEH\n                                                if (0xae69 <= code && code <= 0xae83) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xae85) {\n                                                    // Lo       HANGUL SYLLABLE GGYA\n                                                    if (0xae84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYAG..HANGUL SYLLABLE GGYAH\n                                                    if (0xae85 <= code && code <= 0xae9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xafb9) {\n                                if (code < 0xaf2c) {\n                                    if (code < 0xaed9) {\n                                        if (code < 0xaebc) {\n                                            if (code < 0xaea1) {\n                                                // Lo       HANGUL SYLLABLE GGYAE\n                                                if (0xaea0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGYAEG..HANGUL SYLLABLE GGYAEH\n                                                if (0xaea1 <= code && code <= 0xaebb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaebd) {\n                                                // Lo       HANGUL SYLLABLE GGEO\n                                                if (0xaebc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaed8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGEOG..HANGUL SYLLABLE GGEOH\n                                                    if (0xaebd <= code && code <= 0xaed7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGE\n                                                    if (0xaed8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaef5) {\n                                            if (code < 0xaef4) {\n                                                // Lo  [27] HANGUL SYLLABLE GGEG..HANGUL SYLLABLE GGEH\n                                                if (0xaed9 <= code && code <= 0xaef3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GGYEO\n                                                if (0xaef4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf10) {\n                                                // Lo  [27] HANGUL SYLLABLE GGYEOG..HANGUL SYLLABLE GGYEOH\n                                                if (0xaef5 <= code && code <= 0xaf0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf11) {\n                                                    // Lo       HANGUL SYLLABLE GGYE\n                                                    if (0xaf10 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYEG..HANGUL SYLLABLE GGYEH\n                                                    if (0xaf11 <= code && code <= 0xaf2b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xaf65) {\n                                        if (code < 0xaf48) {\n                                            if (code < 0xaf2d) {\n                                                // Lo       HANGUL SYLLABLE GGO\n                                                if (0xaf2c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGOG..HANGUL SYLLABLE GGOH\n                                                if (0xaf2d <= code && code <= 0xaf47) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf49) {\n                                                // Lo       HANGUL SYLLABLE GGWA\n                                                if (0xaf48 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf64) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWAG..HANGUL SYLLABLE GGWAH\n                                                    if (0xaf49 <= code && code <= 0xaf63) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGWAE\n                                                    if (0xaf64 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xaf9c) {\n                                            if (code < 0xaf80) {\n                                                // Lo  [27] HANGUL SYLLABLE GGWAEG..HANGUL SYLLABLE GGWAEH\n                                                if (0xaf65 <= code && code <= 0xaf7f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaf81) {\n                                                    // Lo       HANGUL SYLLABLE GGOE\n                                                    if (0xaf80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGOEG..HANGUL SYLLABLE GGOEH\n                                                    if (0xaf81 <= code && code <= 0xaf9b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaf9d) {\n                                                // Lo       HANGUL SYLLABLE GGYO\n                                                if (0xaf9c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xafb8) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGYOG..HANGUL SYLLABLE GGYOH\n                                                    if (0xaf9d <= code && code <= 0xafb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGU\n                                                    if (0xafb8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb060) {\n                                    if (code < 0xb00c) {\n                                        if (code < 0xafd5) {\n                                            if (code < 0xafd4) {\n                                                // Lo  [27] HANGUL SYLLABLE GGUG..HANGUL SYLLABLE GGUH\n                                                if (0xafb9 <= code && code <= 0xafd3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE GGWEO\n                                                if (0xafd4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xaff0) {\n                                                // Lo  [27] HANGUL SYLLABLE GGWEOG..HANGUL SYLLABLE GGWEOH\n                                                if (0xafd5 <= code && code <= 0xafef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xaff1) {\n                                                    // Lo       HANGUL SYLLABLE GGWE\n                                                    if (0xaff0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWEG..HANGUL SYLLABLE GGWEH\n                                                    if (0xaff1 <= code && code <= 0xb00b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb029) {\n                                            if (code < 0xb00d) {\n                                                // Lo       HANGUL SYLLABLE GGWI\n                                                if (0xb00c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb028) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGWIG..HANGUL SYLLABLE GGWIH\n                                                    if (0xb00d <= code && code <= 0xb027) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE GGYU\n                                                    if (0xb028 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb044) {\n                                                // Lo  [27] HANGUL SYLLABLE GGYUG..HANGUL SYLLABLE GGYUH\n                                                if (0xb029 <= code && code <= 0xb043) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb045) {\n                                                    // Lo       HANGUL SYLLABLE GGEU\n                                                    if (0xb044 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE GGEUG..HANGUL SYLLABLE GGEUH\n                                                    if (0xb045 <= code && code <= 0xb05f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb099) {\n                                        if (code < 0xb07c) {\n                                            if (code < 0xb061) {\n                                                // Lo       HANGUL SYLLABLE GGYI\n                                                if (0xb060 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE GGYIG..HANGUL SYLLABLE GGYIH\n                                                if (0xb061 <= code && code <= 0xb07b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb07d) {\n                                                // Lo       HANGUL SYLLABLE GGI\n                                                if (0xb07c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb098) {\n                                                    // Lo  [27] HANGUL SYLLABLE GGIG..HANGUL SYLLABLE GGIH\n                                                    if (0xb07d <= code && code <= 0xb097) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NA\n                                                    if (0xb098 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb0d0) {\n                                            if (code < 0xb0b4) {\n                                                // Lo  [27] HANGUL SYLLABLE NAG..HANGUL SYLLABLE NAH\n                                                if (0xb099 <= code && code <= 0xb0b3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb0b5) {\n                                                    // Lo       HANGUL SYLLABLE NAE\n                                                    if (0xb0b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NAEG..HANGUL SYLLABLE NAEH\n                                                    if (0xb0b5 <= code && code <= 0xb0cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb0d1) {\n                                                // Lo       HANGUL SYLLABLE NYA\n                                                if (0xb0d0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb0ec) {\n                                                    // Lo  [27] HANGUL SYLLABLE NYAG..HANGUL SYLLABLE NYAH\n                                                    if (0xb0d1 <= code && code <= 0xb0eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYAE\n                                                    if (0xb0ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xb354) {\n                            if (code < 0xb220) {\n                                if (code < 0xb179) {\n                                    if (code < 0xb140) {\n                                        if (code < 0xb109) {\n                                            if (code < 0xb108) {\n                                                // Lo  [27] HANGUL SYLLABLE NYAEG..HANGUL SYLLABLE NYAEH\n                                                if (0xb0ed <= code && code <= 0xb107) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NEO\n                                                if (0xb108 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb124) {\n                                                // Lo  [27] HANGUL SYLLABLE NEOG..HANGUL SYLLABLE NEOH\n                                                if (0xb109 <= code && code <= 0xb123) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb125) {\n                                                    // Lo       HANGUL SYLLABLE NE\n                                                    if (0xb124 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NEG..HANGUL SYLLABLE NEH\n                                                    if (0xb125 <= code && code <= 0xb13f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb15c) {\n                                            if (code < 0xb141) {\n                                                // Lo       HANGUL SYLLABLE NYEO\n                                                if (0xb140 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE NYEOG..HANGUL SYLLABLE NYEOH\n                                                if (0xb141 <= code && code <= 0xb15b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb15d) {\n                                                // Lo       HANGUL SYLLABLE NYE\n                                                if (0xb15c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb178) {\n                                                    // Lo  [27] HANGUL SYLLABLE NYEG..HANGUL SYLLABLE NYEH\n                                                    if (0xb15d <= code && code <= 0xb177) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NO\n                                                    if (0xb178 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb1cc) {\n                                        if (code < 0xb195) {\n                                            if (code < 0xb194) {\n                                                // Lo  [27] HANGUL SYLLABLE NOG..HANGUL SYLLABLE NOH\n                                                if (0xb179 <= code && code <= 0xb193) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NWA\n                                                if (0xb194 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb1b0) {\n                                                // Lo  [27] HANGUL SYLLABLE NWAG..HANGUL SYLLABLE NWAH\n                                                if (0xb195 <= code && code <= 0xb1af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb1b1) {\n                                                    // Lo       HANGUL SYLLABLE NWAE\n                                                    if (0xb1b0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NWAEG..HANGUL SYLLABLE NWAEH\n                                                    if (0xb1b1 <= code && code <= 0xb1cb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb1e9) {\n                                            if (code < 0xb1cd) {\n                                                // Lo       HANGUL SYLLABLE NOE\n                                                if (0xb1cc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb1e8) {\n                                                    // Lo  [27] HANGUL SYLLABLE NOEG..HANGUL SYLLABLE NOEH\n                                                    if (0xb1cd <= code && code <= 0xb1e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYO\n                                                    if (0xb1e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb204) {\n                                                // Lo  [27] HANGUL SYLLABLE NYOG..HANGUL SYLLABLE NYOH\n                                                if (0xb1e9 <= code && code <= 0xb203) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb205) {\n                                                    // Lo       HANGUL SYLLABLE NU\n                                                    if (0xb204 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NUG..HANGUL SYLLABLE NUH\n                                                    if (0xb205 <= code && code <= 0xb21f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb2ad) {\n                                    if (code < 0xb259) {\n                                        if (code < 0xb23c) {\n                                            if (code < 0xb221) {\n                                                // Lo       HANGUL SYLLABLE NWEO\n                                                if (0xb220 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE NWEOG..HANGUL SYLLABLE NWEOH\n                                                if (0xb221 <= code && code <= 0xb23b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb23d) {\n                                                // Lo       HANGUL SYLLABLE NWE\n                                                if (0xb23c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb258) {\n                                                    // Lo  [27] HANGUL SYLLABLE NWEG..HANGUL SYLLABLE NWEH\n                                                    if (0xb23d <= code && code <= 0xb257) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NWI\n                                                    if (0xb258 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb290) {\n                                            if (code < 0xb274) {\n                                                // Lo  [27] HANGUL SYLLABLE NWIG..HANGUL SYLLABLE NWIH\n                                                if (0xb259 <= code && code <= 0xb273) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb275) {\n                                                    // Lo       HANGUL SYLLABLE NYU\n                                                    if (0xb274 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE NYUG..HANGUL SYLLABLE NYUH\n                                                    if (0xb275 <= code && code <= 0xb28f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb291) {\n                                                // Lo       HANGUL SYLLABLE NEU\n                                                if (0xb290 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb2ac) {\n                                                    // Lo  [27] HANGUL SYLLABLE NEUG..HANGUL SYLLABLE NEUH\n                                                    if (0xb291 <= code && code <= 0xb2ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE NYI\n                                                    if (0xb2ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb300) {\n                                        if (code < 0xb2c9) {\n                                            if (code < 0xb2c8) {\n                                                // Lo  [27] HANGUL SYLLABLE NYIG..HANGUL SYLLABLE NYIH\n                                                if (0xb2ad <= code && code <= 0xb2c7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE NI\n                                                if (0xb2c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb2e4) {\n                                                // Lo  [27] HANGUL SYLLABLE NIG..HANGUL SYLLABLE NIH\n                                                if (0xb2c9 <= code && code <= 0xb2e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb2e5) {\n                                                    // Lo       HANGUL SYLLABLE DA\n                                                    if (0xb2e4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DAG..HANGUL SYLLABLE DAH\n                                                    if (0xb2e5 <= code && code <= 0xb2ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb31d) {\n                                            if (code < 0xb301) {\n                                                // Lo       HANGUL SYLLABLE DAE\n                                                if (0xb300 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb31c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DAEG..HANGUL SYLLABLE DAEH\n                                                    if (0xb301 <= code && code <= 0xb31b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DYA\n                                                    if (0xb31c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb338) {\n                                                // Lo  [27] HANGUL SYLLABLE DYAG..HANGUL SYLLABLE DYAH\n                                                if (0xb31d <= code && code <= 0xb337) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb339) {\n                                                    // Lo       HANGUL SYLLABLE DYAE\n                                                    if (0xb338 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYAEG..HANGUL SYLLABLE DYAEH\n                                                    if (0xb339 <= code && code <= 0xb353) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xb46d) {\n                                if (code < 0xb3e0) {\n                                    if (code < 0xb38d) {\n                                        if (code < 0xb370) {\n                                            if (code < 0xb355) {\n                                                // Lo       HANGUL SYLLABLE DEO\n                                                if (0xb354 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DEOG..HANGUL SYLLABLE DEOH\n                                                if (0xb355 <= code && code <= 0xb36f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb371) {\n                                                // Lo       HANGUL SYLLABLE DE\n                                                if (0xb370 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb38c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DEG..HANGUL SYLLABLE DEH\n                                                    if (0xb371 <= code && code <= 0xb38b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DYEO\n                                                    if (0xb38c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb3a9) {\n                                            if (code < 0xb3a8) {\n                                                // Lo  [27] HANGUL SYLLABLE DYEOG..HANGUL SYLLABLE DYEOH\n                                                if (0xb38d <= code && code <= 0xb3a7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DYE\n                                                if (0xb3a8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb3c4) {\n                                                // Lo  [27] HANGUL SYLLABLE DYEG..HANGUL SYLLABLE DYEH\n                                                if (0xb3a9 <= code && code <= 0xb3c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb3c5) {\n                                                    // Lo       HANGUL SYLLABLE DO\n                                                    if (0xb3c4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DOG..HANGUL SYLLABLE DOH\n                                                    if (0xb3c5 <= code && code <= 0xb3df) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb419) {\n                                        if (code < 0xb3fc) {\n                                            if (code < 0xb3e1) {\n                                                // Lo       HANGUL SYLLABLE DWA\n                                                if (0xb3e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DWAG..HANGUL SYLLABLE DWAH\n                                                if (0xb3e1 <= code && code <= 0xb3fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb3fd) {\n                                                // Lo       HANGUL SYLLABLE DWAE\n                                                if (0xb3fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb418) {\n                                                    // Lo  [27] HANGUL SYLLABLE DWAEG..HANGUL SYLLABLE DWAEH\n                                                    if (0xb3fd <= code && code <= 0xb417) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DOE\n                                                    if (0xb418 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb450) {\n                                            if (code < 0xb434) {\n                                                // Lo  [27] HANGUL SYLLABLE DOEG..HANGUL SYLLABLE DOEH\n                                                if (0xb419 <= code && code <= 0xb433) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb435) {\n                                                    // Lo       HANGUL SYLLABLE DYO\n                                                    if (0xb434 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYOG..HANGUL SYLLABLE DYOH\n                                                    if (0xb435 <= code && code <= 0xb44f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb451) {\n                                                // Lo       HANGUL SYLLABLE DU\n                                                if (0xb450 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb46c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DUG..HANGUL SYLLABLE DUH\n                                                    if (0xb451 <= code && code <= 0xb46b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DWEO\n                                                    if (0xb46c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb514) {\n                                    if (code < 0xb4c0) {\n                                        if (code < 0xb489) {\n                                            if (code < 0xb488) {\n                                                // Lo  [27] HANGUL SYLLABLE DWEOG..HANGUL SYLLABLE DWEOH\n                                                if (0xb46d <= code && code <= 0xb487) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DWE\n                                                if (0xb488 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb4a4) {\n                                                // Lo  [27] HANGUL SYLLABLE DWEG..HANGUL SYLLABLE DWEH\n                                                if (0xb489 <= code && code <= 0xb4a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4a5) {\n                                                    // Lo       HANGUL SYLLABLE DWI\n                                                    if (0xb4a4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DWIG..HANGUL SYLLABLE DWIH\n                                                    if (0xb4a5 <= code && code <= 0xb4bf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb4dd) {\n                                            if (code < 0xb4c1) {\n                                                // Lo       HANGUL SYLLABLE DYU\n                                                if (0xb4c0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4dc) {\n                                                    // Lo  [27] HANGUL SYLLABLE DYUG..HANGUL SYLLABLE DYUH\n                                                    if (0xb4c1 <= code && code <= 0xb4db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DEU\n                                                    if (0xb4dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb4f8) {\n                                                // Lo  [27] HANGUL SYLLABLE DEUG..HANGUL SYLLABLE DEUH\n                                                if (0xb4dd <= code && code <= 0xb4f7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb4f9) {\n                                                    // Lo       HANGUL SYLLABLE DYI\n                                                    if (0xb4f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DYIG..HANGUL SYLLABLE DYIH\n                                                    if (0xb4f9 <= code && code <= 0xb513) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb54d) {\n                                        if (code < 0xb530) {\n                                            if (code < 0xb515) {\n                                                // Lo       HANGUL SYLLABLE DI\n                                                if (0xb514 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DIG..HANGUL SYLLABLE DIH\n                                                if (0xb515 <= code && code <= 0xb52f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb531) {\n                                                // Lo       HANGUL SYLLABLE DDA\n                                                if (0xb530 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb54c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDAG..HANGUL SYLLABLE DDAH\n                                                    if (0xb531 <= code && code <= 0xb54b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDAE\n                                                    if (0xb54c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb584) {\n                                            if (code < 0xb568) {\n                                                // Lo  [27] HANGUL SYLLABLE DDAEG..HANGUL SYLLABLE DDAEH\n                                                if (0xb54d <= code && code <= 0xb567) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb569) {\n                                                    // Lo       HANGUL SYLLABLE DDYA\n                                                    if (0xb568 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYAG..HANGUL SYLLABLE DDYAH\n                                                    if (0xb569 <= code && code <= 0xb583) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb585) {\n                                                // Lo       HANGUL SYLLABLE DDYAE\n                                                if (0xb584 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb5a0) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYAEG..HANGUL SYLLABLE DDYAEH\n                                                    if (0xb585 <= code && code <= 0xb59f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDEO\n                                                    if (0xb5a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0xba55) {\n                        if (code < 0xb808) {\n                            if (code < 0xb6d4) {\n                                if (code < 0xb62d) {\n                                    if (code < 0xb5f4) {\n                                        if (code < 0xb5bd) {\n                                            if (code < 0xb5bc) {\n                                                // Lo  [27] HANGUL SYLLABLE DDEOG..HANGUL SYLLABLE DDEOH\n                                                if (0xb5a1 <= code && code <= 0xb5bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DDE\n                                                if (0xb5bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb5d8) {\n                                                // Lo  [27] HANGUL SYLLABLE DDEG..HANGUL SYLLABLE DDEH\n                                                if (0xb5bd <= code && code <= 0xb5d7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb5d9) {\n                                                    // Lo       HANGUL SYLLABLE DDYEO\n                                                    if (0xb5d8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYEOG..HANGUL SYLLABLE DDYEOH\n                                                    if (0xb5d9 <= code && code <= 0xb5f3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb610) {\n                                            if (code < 0xb5f5) {\n                                                // Lo       HANGUL SYLLABLE DDYE\n                                                if (0xb5f4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DDYEG..HANGUL SYLLABLE DDYEH\n                                                if (0xb5f5 <= code && code <= 0xb60f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb611) {\n                                                // Lo       HANGUL SYLLABLE DDO\n                                                if (0xb610 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb62c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDOG..HANGUL SYLLABLE DDOH\n                                                    if (0xb611 <= code && code <= 0xb62b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDWA\n                                                    if (0xb62c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb680) {\n                                        if (code < 0xb649) {\n                                            if (code < 0xb648) {\n                                                // Lo  [27] HANGUL SYLLABLE DDWAG..HANGUL SYLLABLE DDWAH\n                                                if (0xb62d <= code && code <= 0xb647) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE DDWAE\n                                                if (0xb648 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb664) {\n                                                // Lo  [27] HANGUL SYLLABLE DDWAEG..HANGUL SYLLABLE DDWAEH\n                                                if (0xb649 <= code && code <= 0xb663) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb665) {\n                                                    // Lo       HANGUL SYLLABLE DDOE\n                                                    if (0xb664 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDOEG..HANGUL SYLLABLE DDOEH\n                                                    if (0xb665 <= code && code <= 0xb67f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb69d) {\n                                            if (code < 0xb681) {\n                                                // Lo       HANGUL SYLLABLE DDYO\n                                                if (0xb680 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb69c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYOG..HANGUL SYLLABLE DDYOH\n                                                    if (0xb681 <= code && code <= 0xb69b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDU\n                                                    if (0xb69c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb6b8) {\n                                                // Lo  [27] HANGUL SYLLABLE DDUG..HANGUL SYLLABLE DDUH\n                                                if (0xb69d <= code && code <= 0xb6b7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb6b9) {\n                                                    // Lo       HANGUL SYLLABLE DDWEO\n                                                    if (0xb6b8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDWEOG..HANGUL SYLLABLE DDWEOH\n                                                    if (0xb6b9 <= code && code <= 0xb6d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb761) {\n                                    if (code < 0xb70d) {\n                                        if (code < 0xb6f0) {\n                                            if (code < 0xb6d5) {\n                                                // Lo       HANGUL SYLLABLE DDWE\n                                                if (0xb6d4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE DDWEG..HANGUL SYLLABLE DDWEH\n                                                if (0xb6d5 <= code && code <= 0xb6ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb6f1) {\n                                                // Lo       HANGUL SYLLABLE DDWI\n                                                if (0xb6f0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb70c) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDWIG..HANGUL SYLLABLE DDWIH\n                                                    if (0xb6f1 <= code && code <= 0xb70b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDYU\n                                                    if (0xb70c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb744) {\n                                            if (code < 0xb728) {\n                                                // Lo  [27] HANGUL SYLLABLE DDYUG..HANGUL SYLLABLE DDYUH\n                                                if (0xb70d <= code && code <= 0xb727) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb729) {\n                                                    // Lo       HANGUL SYLLABLE DDEU\n                                                    if (0xb728 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE DDEUG..HANGUL SYLLABLE DDEUH\n                                                    if (0xb729 <= code && code <= 0xb743) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb745) {\n                                                // Lo       HANGUL SYLLABLE DDYI\n                                                if (0xb744 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb760) {\n                                                    // Lo  [27] HANGUL SYLLABLE DDYIG..HANGUL SYLLABLE DDYIH\n                                                    if (0xb745 <= code && code <= 0xb75f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE DDI\n                                                    if (0xb760 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb7b4) {\n                                        if (code < 0xb77d) {\n                                            if (code < 0xb77c) {\n                                                // Lo  [27] HANGUL SYLLABLE DDIG..HANGUL SYLLABLE DDIH\n                                                if (0xb761 <= code && code <= 0xb77b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RA\n                                                if (0xb77c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb798) {\n                                                // Lo  [27] HANGUL SYLLABLE RAG..HANGUL SYLLABLE RAH\n                                                if (0xb77d <= code && code <= 0xb797) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb799) {\n                                                    // Lo       HANGUL SYLLABLE RAE\n                                                    if (0xb798 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RAEG..HANGUL SYLLABLE RAEH\n                                                    if (0xb799 <= code && code <= 0xb7b3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb7d1) {\n                                            if (code < 0xb7b5) {\n                                                // Lo       HANGUL SYLLABLE RYA\n                                                if (0xb7b4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb7d0) {\n                                                    // Lo  [27] HANGUL SYLLABLE RYAG..HANGUL SYLLABLE RYAH\n                                                    if (0xb7b5 <= code && code <= 0xb7cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYAE\n                                                    if (0xb7d0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb7ec) {\n                                                // Lo  [27] HANGUL SYLLABLE RYAEG..HANGUL SYLLABLE RYAEH\n                                                if (0xb7d1 <= code && code <= 0xb7eb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb7ed) {\n                                                    // Lo       HANGUL SYLLABLE REO\n                                                    if (0xb7ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE REOG..HANGUL SYLLABLE REOH\n                                                    if (0xb7ed <= code && code <= 0xb807) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xb921) {\n                                if (code < 0xb894) {\n                                    if (code < 0xb841) {\n                                        if (code < 0xb824) {\n                                            if (code < 0xb809) {\n                                                // Lo       HANGUL SYLLABLE RE\n                                                if (0xb808 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE REG..HANGUL SYLLABLE REH\n                                                if (0xb809 <= code && code <= 0xb823) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb825) {\n                                                // Lo       HANGUL SYLLABLE RYEO\n                                                if (0xb824 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb840) {\n                                                    // Lo  [27] HANGUL SYLLABLE RYEOG..HANGUL SYLLABLE RYEOH\n                                                    if (0xb825 <= code && code <= 0xb83f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYE\n                                                    if (0xb840 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb85d) {\n                                            if (code < 0xb85c) {\n                                                // Lo  [27] HANGUL SYLLABLE RYEG..HANGUL SYLLABLE RYEH\n                                                if (0xb841 <= code && code <= 0xb85b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RO\n                                                if (0xb85c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb878) {\n                                                // Lo  [27] HANGUL SYLLABLE ROG..HANGUL SYLLABLE ROH\n                                                if (0xb85d <= code && code <= 0xb877) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb879) {\n                                                    // Lo       HANGUL SYLLABLE RWA\n                                                    if (0xb878 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RWAG..HANGUL SYLLABLE RWAH\n                                                    if (0xb879 <= code && code <= 0xb893) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xb8cd) {\n                                        if (code < 0xb8b0) {\n                                            if (code < 0xb895) {\n                                                // Lo       HANGUL SYLLABLE RWAE\n                                                if (0xb894 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE RWAEG..HANGUL SYLLABLE RWAEH\n                                                if (0xb895 <= code && code <= 0xb8af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb8b1) {\n                                                // Lo       HANGUL SYLLABLE ROE\n                                                if (0xb8b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb8cc) {\n                                                    // Lo  [27] HANGUL SYLLABLE ROEG..HANGUL SYLLABLE ROEH\n                                                    if (0xb8b1 <= code && code <= 0xb8cb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYO\n                                                    if (0xb8cc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb904) {\n                                            if (code < 0xb8e8) {\n                                                // Lo  [27] HANGUL SYLLABLE RYOG..HANGUL SYLLABLE RYOH\n                                                if (0xb8cd <= code && code <= 0xb8e7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb8e9) {\n                                                    // Lo       HANGUL SYLLABLE RU\n                                                    if (0xb8e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RUG..HANGUL SYLLABLE RUH\n                                                    if (0xb8e9 <= code && code <= 0xb903) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb905) {\n                                                // Lo       HANGUL SYLLABLE RWEO\n                                                if (0xb904 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb920) {\n                                                    // Lo  [27] HANGUL SYLLABLE RWEOG..HANGUL SYLLABLE RWEOH\n                                                    if (0xb905 <= code && code <= 0xb91f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RWE\n                                                    if (0xb920 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xb9c8) {\n                                    if (code < 0xb974) {\n                                        if (code < 0xb93d) {\n                                            if (code < 0xb93c) {\n                                                // Lo  [27] HANGUL SYLLABLE RWEG..HANGUL SYLLABLE RWEH\n                                                if (0xb921 <= code && code <= 0xb93b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE RWI\n                                                if (0xb93c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb958) {\n                                                // Lo  [27] HANGUL SYLLABLE RWIG..HANGUL SYLLABLE RWIH\n                                                if (0xb93d <= code && code <= 0xb957) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb959) {\n                                                    // Lo       HANGUL SYLLABLE RYU\n                                                    if (0xb958 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RYUG..HANGUL SYLLABLE RYUH\n                                                    if (0xb959 <= code && code <= 0xb973) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xb991) {\n                                            if (code < 0xb975) {\n                                                // Lo       HANGUL SYLLABLE REU\n                                                if (0xb974 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb990) {\n                                                    // Lo  [27] HANGUL SYLLABLE REUG..HANGUL SYLLABLE REUH\n                                                    if (0xb975 <= code && code <= 0xb98f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE RYI\n                                                    if (0xb990 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb9ac) {\n                                                // Lo  [27] HANGUL SYLLABLE RYIG..HANGUL SYLLABLE RYIH\n                                                if (0xb991 <= code && code <= 0xb9ab) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xb9ad) {\n                                                    // Lo       HANGUL SYLLABLE RI\n                                                    if (0xb9ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE RIG..HANGUL SYLLABLE RIH\n                                                    if (0xb9ad <= code && code <= 0xb9c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xba01) {\n                                        if (code < 0xb9e4) {\n                                            if (code < 0xb9c9) {\n                                                // Lo       HANGUL SYLLABLE MA\n                                                if (0xb9c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MAG..HANGUL SYLLABLE MAH\n                                                if (0xb9c9 <= code && code <= 0xb9e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xb9e5) {\n                                                // Lo       HANGUL SYLLABLE MAE\n                                                if (0xb9e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba00) {\n                                                    // Lo  [27] HANGUL SYLLABLE MAEG..HANGUL SYLLABLE MAEH\n                                                    if (0xb9e5 <= code && code <= 0xb9ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MYA\n                                                    if (0xba00 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xba38) {\n                                            if (code < 0xba1c) {\n                                                // Lo  [27] HANGUL SYLLABLE MYAG..HANGUL SYLLABLE MYAH\n                                                if (0xba01 <= code && code <= 0xba1b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba1d) {\n                                                    // Lo       HANGUL SYLLABLE MYAE\n                                                    if (0xba1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYAEG..HANGUL SYLLABLE MYAEH\n                                                    if (0xba1d <= code && code <= 0xba37) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xba39) {\n                                                // Lo       HANGUL SYLLABLE MEO\n                                                if (0xba38 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba54) {\n                                                    // Lo  [27] HANGUL SYLLABLE MEOG..HANGUL SYLLABLE MEOH\n                                                    if (0xba39 <= code && code <= 0xba53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE ME\n                                                    if (0xba54 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xbcbc) {\n                            if (code < 0xbb88) {\n                                if (code < 0xbae1) {\n                                    if (code < 0xbaa8) {\n                                        if (code < 0xba71) {\n                                            if (code < 0xba70) {\n                                                // Lo  [27] HANGUL SYLLABLE MEG..HANGUL SYLLABLE MEH\n                                                if (0xba55 <= code && code <= 0xba6f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE MYEO\n                                                if (0xba70 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xba8c) {\n                                                // Lo  [27] HANGUL SYLLABLE MYEOG..HANGUL SYLLABLE MYEOH\n                                                if (0xba71 <= code && code <= 0xba8b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xba8d) {\n                                                    // Lo       HANGUL SYLLABLE MYE\n                                                    if (0xba8c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYEG..HANGUL SYLLABLE MYEH\n                                                    if (0xba8d <= code && code <= 0xbaa7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbac4) {\n                                            if (code < 0xbaa9) {\n                                                // Lo       HANGUL SYLLABLE MO\n                                                if (0xbaa8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MOG..HANGUL SYLLABLE MOH\n                                                if (0xbaa9 <= code && code <= 0xbac3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbac5) {\n                                                // Lo       HANGUL SYLLABLE MWA\n                                                if (0xbac4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbae0) {\n                                                    // Lo  [27] HANGUL SYLLABLE MWAG..HANGUL SYLLABLE MWAH\n                                                    if (0xbac5 <= code && code <= 0xbadf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MWAE\n                                                    if (0xbae0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbb34) {\n                                        if (code < 0xbafd) {\n                                            if (code < 0xbafc) {\n                                                // Lo  [27] HANGUL SYLLABLE MWAEG..HANGUL SYLLABLE MWAEH\n                                                if (0xbae1 <= code && code <= 0xbafb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE MOE\n                                                if (0xbafc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbb18) {\n                                                // Lo  [27] HANGUL SYLLABLE MOEG..HANGUL SYLLABLE MOEH\n                                                if (0xbafd <= code && code <= 0xbb17) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb19) {\n                                                    // Lo       HANGUL SYLLABLE MYO\n                                                    if (0xbb18 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYOG..HANGUL SYLLABLE MYOH\n                                                    if (0xbb19 <= code && code <= 0xbb33) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbb51) {\n                                            if (code < 0xbb35) {\n                                                // Lo       HANGUL SYLLABLE MU\n                                                if (0xbb34 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb50) {\n                                                    // Lo  [27] HANGUL SYLLABLE MUG..HANGUL SYLLABLE MUH\n                                                    if (0xbb35 <= code && code <= 0xbb4f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MWEO\n                                                    if (0xbb50 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbb6c) {\n                                                // Lo  [27] HANGUL SYLLABLE MWEOG..HANGUL SYLLABLE MWEOH\n                                                if (0xbb51 <= code && code <= 0xbb6b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbb6d) {\n                                                    // Lo       HANGUL SYLLABLE MWE\n                                                    if (0xbb6c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MWEG..HANGUL SYLLABLE MWEH\n                                                    if (0xbb6d <= code && code <= 0xbb87) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xbc15) {\n                                    if (code < 0xbbc1) {\n                                        if (code < 0xbba4) {\n                                            if (code < 0xbb89) {\n                                                // Lo       HANGUL SYLLABLE MWI\n                                                if (0xbb88 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE MWIG..HANGUL SYLLABLE MWIH\n                                                if (0xbb89 <= code && code <= 0xbba3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbba5) {\n                                                // Lo       HANGUL SYLLABLE MYU\n                                                if (0xbba4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbbc0) {\n                                                    // Lo  [27] HANGUL SYLLABLE MYUG..HANGUL SYLLABLE MYUH\n                                                    if (0xbba5 <= code && code <= 0xbbbf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE MEU\n                                                    if (0xbbc0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbbf8) {\n                                            if (code < 0xbbdc) {\n                                                // Lo  [27] HANGUL SYLLABLE MEUG..HANGUL SYLLABLE MEUH\n                                                if (0xbbc1 <= code && code <= 0xbbdb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbbdd) {\n                                                    // Lo       HANGUL SYLLABLE MYI\n                                                    if (0xbbdc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE MYIG..HANGUL SYLLABLE MYIH\n                                                    if (0xbbdd <= code && code <= 0xbbf7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbbf9) {\n                                                // Lo       HANGUL SYLLABLE MI\n                                                if (0xbbf8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc14) {\n                                                    // Lo  [27] HANGUL SYLLABLE MIG..HANGUL SYLLABLE MIH\n                                                    if (0xbbf9 <= code && code <= 0xbc13) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BA\n                                                    if (0xbc14 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbc68) {\n                                        if (code < 0xbc31) {\n                                            if (code < 0xbc30) {\n                                                // Lo  [27] HANGUL SYLLABLE BAG..HANGUL SYLLABLE BAH\n                                                if (0xbc15 <= code && code <= 0xbc2f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BAE\n                                                if (0xbc30 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbc4c) {\n                                                // Lo  [27] HANGUL SYLLABLE BAEG..HANGUL SYLLABLE BAEH\n                                                if (0xbc31 <= code && code <= 0xbc4b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc4d) {\n                                                    // Lo       HANGUL SYLLABLE BYA\n                                                    if (0xbc4c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BYAG..HANGUL SYLLABLE BYAH\n                                                    if (0xbc4d <= code && code <= 0xbc67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbc85) {\n                                            if (code < 0xbc69) {\n                                                // Lo       HANGUL SYLLABLE BYAE\n                                                if (0xbc68 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbc84) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYAEG..HANGUL SYLLABLE BYAEH\n                                                    if (0xbc69 <= code && code <= 0xbc83) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BEO\n                                                    if (0xbc84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbca0) {\n                                                // Lo  [27] HANGUL SYLLABLE BEOG..HANGUL SYLLABLE BEOH\n                                                if (0xbc85 <= code && code <= 0xbc9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbca1) {\n                                                    // Lo       HANGUL SYLLABLE BE\n                                                    if (0xbca0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BEG..HANGUL SYLLABLE BEH\n                                                    if (0xbca1 <= code && code <= 0xbcbb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xbdd5) {\n                                if (code < 0xbd48) {\n                                    if (code < 0xbcf5) {\n                                        if (code < 0xbcd8) {\n                                            if (code < 0xbcbd) {\n                                                // Lo       HANGUL SYLLABLE BYEO\n                                                if (0xbcbc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BYEOG..HANGUL SYLLABLE BYEOH\n                                                if (0xbcbd <= code && code <= 0xbcd7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbcd9) {\n                                                // Lo       HANGUL SYLLABLE BYE\n                                                if (0xbcd8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbcf4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYEG..HANGUL SYLLABLE BYEH\n                                                    if (0xbcd9 <= code && code <= 0xbcf3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BO\n                                                    if (0xbcf4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbd11) {\n                                            if (code < 0xbd10) {\n                                                // Lo  [27] HANGUL SYLLABLE BOG..HANGUL SYLLABLE BOH\n                                                if (0xbcf5 <= code && code <= 0xbd0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BWA\n                                                if (0xbd10 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbd2c) {\n                                                // Lo  [27] HANGUL SYLLABLE BWAG..HANGUL SYLLABLE BWAH\n                                                if (0xbd11 <= code && code <= 0xbd2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd2d) {\n                                                    // Lo       HANGUL SYLLABLE BWAE\n                                                    if (0xbd2c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BWAEG..HANGUL SYLLABLE BWAEH\n                                                    if (0xbd2d <= code && code <= 0xbd47) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbd81) {\n                                        if (code < 0xbd64) {\n                                            if (code < 0xbd49) {\n                                                // Lo       HANGUL SYLLABLE BOE\n                                                if (0xbd48 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BOEG..HANGUL SYLLABLE BOEH\n                                                if (0xbd49 <= code && code <= 0xbd63) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbd65) {\n                                                // Lo       HANGUL SYLLABLE BYO\n                                                if (0xbd64 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd80) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYOG..HANGUL SYLLABLE BYOH\n                                                    if (0xbd65 <= code && code <= 0xbd7f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BU\n                                                    if (0xbd80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbdb8) {\n                                            if (code < 0xbd9c) {\n                                                // Lo  [27] HANGUL SYLLABLE BUG..HANGUL SYLLABLE BUH\n                                                if (0xbd81 <= code && code <= 0xbd9b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbd9d) {\n                                                    // Lo       HANGUL SYLLABLE BWEO\n                                                    if (0xbd9c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BWEOG..HANGUL SYLLABLE BWEOH\n                                                    if (0xbd9d <= code && code <= 0xbdb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbdb9) {\n                                                // Lo       HANGUL SYLLABLE BWE\n                                                if (0xbdb8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbdd4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BWEG..HANGUL SYLLABLE BWEH\n                                                    if (0xbdb9 <= code && code <= 0xbdd3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BWI\n                                                    if (0xbdd4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xbe7c) {\n                                    if (code < 0xbe28) {\n                                        if (code < 0xbdf1) {\n                                            if (code < 0xbdf0) {\n                                                // Lo  [27] HANGUL SYLLABLE BWIG..HANGUL SYLLABLE BWIH\n                                                if (0xbdd5 <= code && code <= 0xbdef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BYU\n                                                if (0xbdf0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe0c) {\n                                                // Lo  [27] HANGUL SYLLABLE BYUG..HANGUL SYLLABLE BYUH\n                                                if (0xbdf1 <= code && code <= 0xbe0b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe0d) {\n                                                    // Lo       HANGUL SYLLABLE BEU\n                                                    if (0xbe0c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BEUG..HANGUL SYLLABLE BEUH\n                                                    if (0xbe0d <= code && code <= 0xbe27) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbe45) {\n                                            if (code < 0xbe29) {\n                                                // Lo       HANGUL SYLLABLE BYI\n                                                if (0xbe28 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe44) {\n                                                    // Lo  [27] HANGUL SYLLABLE BYIG..HANGUL SYLLABLE BYIH\n                                                    if (0xbe29 <= code && code <= 0xbe43) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BI\n                                                    if (0xbe44 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe60) {\n                                                // Lo  [27] HANGUL SYLLABLE BIG..HANGUL SYLLABLE BIH\n                                                if (0xbe45 <= code && code <= 0xbe5f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbe61) {\n                                                    // Lo       HANGUL SYLLABLE BBA\n                                                    if (0xbe60 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBAG..HANGUL SYLLABLE BBAH\n                                                    if (0xbe61 <= code && code <= 0xbe7b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbeb5) {\n                                        if (code < 0xbe98) {\n                                            if (code < 0xbe7d) {\n                                                // Lo       HANGUL SYLLABLE BBAE\n                                                if (0xbe7c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBAEG..HANGUL SYLLABLE BBAEH\n                                                if (0xbe7d <= code && code <= 0xbe97) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbe99) {\n                                                // Lo       HANGUL SYLLABLE BBYA\n                                                if (0xbe98 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbeb4) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBYAG..HANGUL SYLLABLE BBYAH\n                                                    if (0xbe99 <= code && code <= 0xbeb3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYAE\n                                                    if (0xbeb4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbeec) {\n                                            if (code < 0xbed0) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYAEG..HANGUL SYLLABLE BBYAEH\n                                                if (0xbeb5 <= code && code <= 0xbecf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbed1) {\n                                                    // Lo       HANGUL SYLLABLE BBEO\n                                                    if (0xbed0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEOG..HANGUL SYLLABLE BBEOH\n                                                    if (0xbed1 <= code && code <= 0xbeeb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbeed) {\n                                                // Lo       HANGUL SYLLABLE BBE\n                                                if (0xbeec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf08) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEG..HANGUL SYLLABLE BBEH\n                                                    if (0xbeed <= code && code <= 0xbf07) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYEO\n                                                    if (0xbf08 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (code < 0xd1d8) {\n                if (code < 0xc870) {\n                    if (code < 0xc3bc) {\n                        if (code < 0xc155) {\n                            if (code < 0xc03c) {\n                                if (code < 0xbf95) {\n                                    if (code < 0xbf5c) {\n                                        if (code < 0xbf25) {\n                                            if (code < 0xbf24) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYEOG..HANGUL SYLLABLE BBYEOH\n                                                if (0xbf09 <= code && code <= 0xbf23) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBYE\n                                                if (0xbf24 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbf40) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYEG..HANGUL SYLLABLE BBYEH\n                                                if (0xbf25 <= code && code <= 0xbf3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf41) {\n                                                    // Lo       HANGUL SYLLABLE BBO\n                                                    if (0xbf40 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBOG..HANGUL SYLLABLE BBOH\n                                                    if (0xbf41 <= code && code <= 0xbf5b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xbf78) {\n                                            if (code < 0xbf5d) {\n                                                // Lo       HANGUL SYLLABLE BBWA\n                                                if (0xbf5c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBWAG..HANGUL SYLLABLE BBWAH\n                                                if (0xbf5d <= code && code <= 0xbf77) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbf79) {\n                                                // Lo       HANGUL SYLLABLE BBWAE\n                                                if (0xbf78 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbf94) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWAEG..HANGUL SYLLABLE BBWAEH\n                                                    if (0xbf79 <= code && code <= 0xbf93) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBOE\n                                                    if (0xbf94 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xbfe8) {\n                                        if (code < 0xbfb1) {\n                                            if (code < 0xbfb0) {\n                                                // Lo  [27] HANGUL SYLLABLE BBOEG..HANGUL SYLLABLE BBOEH\n                                                if (0xbf95 <= code && code <= 0xbfaf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBYO\n                                                if (0xbfb0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xbfcc) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYOG..HANGUL SYLLABLE BBYOH\n                                                if (0xbfb1 <= code && code <= 0xbfcb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xbfcd) {\n                                                    // Lo       HANGUL SYLLABLE BBU\n                                                    if (0xbfcc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBUG..HANGUL SYLLABLE BBUH\n                                                    if (0xbfcd <= code && code <= 0xbfe7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc005) {\n                                            if (code < 0xbfe9) {\n                                                // Lo       HANGUL SYLLABLE BBWEO\n                                                if (0xbfe8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc004) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWEOG..HANGUL SYLLABLE BBWEOH\n                                                    if (0xbfe9 <= code && code <= 0xc003) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBWE\n                                                    if (0xc004 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc020) {\n                                                // Lo  [27] HANGUL SYLLABLE BBWEG..HANGUL SYLLABLE BBWEH\n                                                if (0xc005 <= code && code <= 0xc01f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc021) {\n                                                    // Lo       HANGUL SYLLABLE BBWI\n                                                    if (0xc020 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE BBWIG..HANGUL SYLLABLE BBWIH\n                                                    if (0xc021 <= code && code <= 0xc03b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc0c8) {\n                                    if (code < 0xc075) {\n                                        if (code < 0xc058) {\n                                            if (code < 0xc03d) {\n                                                // Lo       HANGUL SYLLABLE BBYU\n                                                if (0xc03c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE BBYUG..HANGUL SYLLABLE BBYUH\n                                                if (0xc03d <= code && code <= 0xc057) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc059) {\n                                                // Lo       HANGUL SYLLABLE BBEU\n                                                if (0xc058 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc074) {\n                                                    // Lo  [27] HANGUL SYLLABLE BBEUG..HANGUL SYLLABLE BBEUH\n                                                    if (0xc059 <= code && code <= 0xc073) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE BBYI\n                                                    if (0xc074 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc091) {\n                                            if (code < 0xc090) {\n                                                // Lo  [27] HANGUL SYLLABLE BBYIG..HANGUL SYLLABLE BBYIH\n                                                if (0xc075 <= code && code <= 0xc08f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE BBI\n                                                if (0xc090 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc0ac) {\n                                                // Lo  [27] HANGUL SYLLABLE BBIG..HANGUL SYLLABLE BBIH\n                                                if (0xc091 <= code && code <= 0xc0ab) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc0ad) {\n                                                    // Lo       HANGUL SYLLABLE SA\n                                                    if (0xc0ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SAG..HANGUL SYLLABLE SAH\n                                                    if (0xc0ad <= code && code <= 0xc0c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc101) {\n                                        if (code < 0xc0e4) {\n                                            if (code < 0xc0c9) {\n                                                // Lo       HANGUL SYLLABLE SAE\n                                                if (0xc0c8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SAEG..HANGUL SYLLABLE SAEH\n                                                if (0xc0c9 <= code && code <= 0xc0e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc0e5) {\n                                                // Lo       HANGUL SYLLABLE SYA\n                                                if (0xc0e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc100) {\n                                                    // Lo  [27] HANGUL SYLLABLE SYAG..HANGUL SYLLABLE SYAH\n                                                    if (0xc0e5 <= code && code <= 0xc0ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYAE\n                                                    if (0xc100 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc138) {\n                                            if (code < 0xc11c) {\n                                                // Lo  [27] HANGUL SYLLABLE SYAEG..HANGUL SYLLABLE SYAEH\n                                                if (0xc101 <= code && code <= 0xc11b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc11d) {\n                                                    // Lo       HANGUL SYLLABLE SEO\n                                                    if (0xc11c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SEOG..HANGUL SYLLABLE SEOH\n                                                    if (0xc11d <= code && code <= 0xc137) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc139) {\n                                                // Lo       HANGUL SYLLABLE SE\n                                                if (0xc138 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc154) {\n                                                    // Lo  [27] HANGUL SYLLABLE SEG..HANGUL SYLLABLE SEH\n                                                    if (0xc139 <= code && code <= 0xc153) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYEO\n                                                    if (0xc154 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xc288) {\n                                if (code < 0xc1e1) {\n                                    if (code < 0xc1a8) {\n                                        if (code < 0xc171) {\n                                            if (code < 0xc170) {\n                                                // Lo  [27] HANGUL SYLLABLE SYEOG..HANGUL SYLLABLE SYEOH\n                                                if (0xc155 <= code && code <= 0xc16f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SYE\n                                                if (0xc170 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc18c) {\n                                                // Lo  [27] HANGUL SYLLABLE SYEG..HANGUL SYLLABLE SYEH\n                                                if (0xc171 <= code && code <= 0xc18b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc18d) {\n                                                    // Lo       HANGUL SYLLABLE SO\n                                                    if (0xc18c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SOG..HANGUL SYLLABLE SOH\n                                                    if (0xc18d <= code && code <= 0xc1a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc1c4) {\n                                            if (code < 0xc1a9) {\n                                                // Lo       HANGUL SYLLABLE SWA\n                                                if (0xc1a8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SWAG..HANGUL SYLLABLE SWAH\n                                                if (0xc1a9 <= code && code <= 0xc1c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc1c5) {\n                                                // Lo       HANGUL SYLLABLE SWAE\n                                                if (0xc1c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc1e0) {\n                                                    // Lo  [27] HANGUL SYLLABLE SWAEG..HANGUL SYLLABLE SWAEH\n                                                    if (0xc1c5 <= code && code <= 0xc1df) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SOE\n                                                    if (0xc1e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc234) {\n                                        if (code < 0xc1fd) {\n                                            if (code < 0xc1fc) {\n                                                // Lo  [27] HANGUL SYLLABLE SOEG..HANGUL SYLLABLE SOEH\n                                                if (0xc1e1 <= code && code <= 0xc1fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SYO\n                                                if (0xc1fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc218) {\n                                                // Lo  [27] HANGUL SYLLABLE SYOG..HANGUL SYLLABLE SYOH\n                                                if (0xc1fd <= code && code <= 0xc217) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc219) {\n                                                    // Lo       HANGUL SYLLABLE SU\n                                                    if (0xc218 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SUG..HANGUL SYLLABLE SUH\n                                                    if (0xc219 <= code && code <= 0xc233) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc251) {\n                                            if (code < 0xc235) {\n                                                // Lo       HANGUL SYLLABLE SWEO\n                                                if (0xc234 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc250) {\n                                                    // Lo  [27] HANGUL SYLLABLE SWEOG..HANGUL SYLLABLE SWEOH\n                                                    if (0xc235 <= code && code <= 0xc24f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SWE\n                                                    if (0xc250 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc26c) {\n                                                // Lo  [27] HANGUL SYLLABLE SWEG..HANGUL SYLLABLE SWEH\n                                                if (0xc251 <= code && code <= 0xc26b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc26d) {\n                                                    // Lo       HANGUL SYLLABLE SWI\n                                                    if (0xc26c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SWIG..HANGUL SYLLABLE SWIH\n                                                    if (0xc26d <= code && code <= 0xc287) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc315) {\n                                    if (code < 0xc2c1) {\n                                        if (code < 0xc2a4) {\n                                            if (code < 0xc289) {\n                                                // Lo       HANGUL SYLLABLE SYU\n                                                if (0xc288 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SYUG..HANGUL SYLLABLE SYUH\n                                                if (0xc289 <= code && code <= 0xc2a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc2a5) {\n                                                // Lo       HANGUL SYLLABLE SEU\n                                                if (0xc2a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc2c0) {\n                                                    // Lo  [27] HANGUL SYLLABLE SEUG..HANGUL SYLLABLE SEUH\n                                                    if (0xc2a5 <= code && code <= 0xc2bf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SYI\n                                                    if (0xc2c0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc2f8) {\n                                            if (code < 0xc2dc) {\n                                                // Lo  [27] HANGUL SYLLABLE SYIG..HANGUL SYLLABLE SYIH\n                                                if (0xc2c1 <= code && code <= 0xc2db) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc2dd) {\n                                                    // Lo       HANGUL SYLLABLE SI\n                                                    if (0xc2dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SIG..HANGUL SYLLABLE SIH\n                                                    if (0xc2dd <= code && code <= 0xc2f7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc2f9) {\n                                                // Lo       HANGUL SYLLABLE SSA\n                                                if (0xc2f8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc314) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSAG..HANGUL SYLLABLE SSAH\n                                                    if (0xc2f9 <= code && code <= 0xc313) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSAE\n                                                    if (0xc314 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc368) {\n                                        if (code < 0xc331) {\n                                            if (code < 0xc330) {\n                                                // Lo  [27] HANGUL SYLLABLE SSAEG..HANGUL SYLLABLE SSAEH\n                                                if (0xc315 <= code && code <= 0xc32f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSYA\n                                                if (0xc330 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc34c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSYAG..HANGUL SYLLABLE SSYAH\n                                                if (0xc331 <= code && code <= 0xc34b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc34d) {\n                                                    // Lo       HANGUL SYLLABLE SSYAE\n                                                    if (0xc34c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYAEG..HANGUL SYLLABLE SSYAEH\n                                                    if (0xc34d <= code && code <= 0xc367) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc385) {\n                                            if (code < 0xc369) {\n                                                // Lo       HANGUL SYLLABLE SSEO\n                                                if (0xc368 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc384) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSEOG..HANGUL SYLLABLE SSEOH\n                                                    if (0xc369 <= code && code <= 0xc383) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSE\n                                                    if (0xc384 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc3a0) {\n                                                // Lo  [27] HANGUL SYLLABLE SSEG..HANGUL SYLLABLE SSEH\n                                                if (0xc385 <= code && code <= 0xc39f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc3a1) {\n                                                    // Lo       HANGUL SYLLABLE SSYEO\n                                                    if (0xc3a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYEOG..HANGUL SYLLABLE SSYEOH\n                                                    if (0xc3a1 <= code && code <= 0xc3bb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xc609) {\n                            if (code < 0xc4d5) {\n                                if (code < 0xc448) {\n                                    if (code < 0xc3f5) {\n                                        if (code < 0xc3d8) {\n                                            if (code < 0xc3bd) {\n                                                // Lo       HANGUL SYLLABLE SSYE\n                                                if (0xc3bc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SSYEG..HANGUL SYLLABLE SSYEH\n                                                if (0xc3bd <= code && code <= 0xc3d7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc3d9) {\n                                                // Lo       HANGUL SYLLABLE SSO\n                                                if (0xc3d8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc3f4) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSOG..HANGUL SYLLABLE SSOH\n                                                    if (0xc3d9 <= code && code <= 0xc3f3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSWA\n                                                    if (0xc3f4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc411) {\n                                            if (code < 0xc410) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWAG..HANGUL SYLLABLE SSWAH\n                                                if (0xc3f5 <= code && code <= 0xc40f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSWAE\n                                                if (0xc410 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc42c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWAEG..HANGUL SYLLABLE SSWAEH\n                                                if (0xc411 <= code && code <= 0xc42b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc42d) {\n                                                    // Lo       HANGUL SYLLABLE SSOE\n                                                    if (0xc42c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSOEG..HANGUL SYLLABLE SSOEH\n                                                    if (0xc42d <= code && code <= 0xc447) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc481) {\n                                        if (code < 0xc464) {\n                                            if (code < 0xc449) {\n                                                // Lo       HANGUL SYLLABLE SSYO\n                                                if (0xc448 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE SSYOG..HANGUL SYLLABLE SSYOH\n                                                if (0xc449 <= code && code <= 0xc463) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc465) {\n                                                // Lo       HANGUL SYLLABLE SSU\n                                                if (0xc464 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc480) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSUG..HANGUL SYLLABLE SSUH\n                                                    if (0xc465 <= code && code <= 0xc47f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSWEO\n                                                    if (0xc480 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc4b8) {\n                                            if (code < 0xc49c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSWEOG..HANGUL SYLLABLE SSWEOH\n                                                if (0xc481 <= code && code <= 0xc49b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc49d) {\n                                                    // Lo       HANGUL SYLLABLE SSWE\n                                                    if (0xc49c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSWEG..HANGUL SYLLABLE SSWEH\n                                                    if (0xc49d <= code && code <= 0xc4b7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc4b9) {\n                                                // Lo       HANGUL SYLLABLE SSWI\n                                                if (0xc4b8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc4d4) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSWIG..HANGUL SYLLABLE SSWIH\n                                                    if (0xc4b9 <= code && code <= 0xc4d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE SSYU\n                                                    if (0xc4d4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc57c) {\n                                    if (code < 0xc528) {\n                                        if (code < 0xc4f1) {\n                                            if (code < 0xc4f0) {\n                                                // Lo  [27] HANGUL SYLLABLE SSYUG..HANGUL SYLLABLE SSYUH\n                                                if (0xc4d5 <= code && code <= 0xc4ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE SSEU\n                                                if (0xc4f0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc50c) {\n                                                // Lo  [27] HANGUL SYLLABLE SSEUG..HANGUL SYLLABLE SSEUH\n                                                if (0xc4f1 <= code && code <= 0xc50b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc50d) {\n                                                    // Lo       HANGUL SYLLABLE SSYI\n                                                    if (0xc50c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE SSYIG..HANGUL SYLLABLE SSYIH\n                                                    if (0xc50d <= code && code <= 0xc527) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc545) {\n                                            if (code < 0xc529) {\n                                                // Lo       HANGUL SYLLABLE SSI\n                                                if (0xc528 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc544) {\n                                                    // Lo  [27] HANGUL SYLLABLE SSIG..HANGUL SYLLABLE SSIH\n                                                    if (0xc529 <= code && code <= 0xc543) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE A\n                                                    if (0xc544 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc560) {\n                                                // Lo  [27] HANGUL SYLLABLE AG..HANGUL SYLLABLE AH\n                                                if (0xc545 <= code && code <= 0xc55f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc561) {\n                                                    // Lo       HANGUL SYLLABLE AE\n                                                    if (0xc560 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE AEG..HANGUL SYLLABLE AEH\n                                                    if (0xc561 <= code && code <= 0xc57b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc5b5) {\n                                        if (code < 0xc598) {\n                                            if (code < 0xc57d) {\n                                                // Lo       HANGUL SYLLABLE YA\n                                                if (0xc57c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE YAG..HANGUL SYLLABLE YAH\n                                                if (0xc57d <= code && code <= 0xc597) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc599) {\n                                                // Lo       HANGUL SYLLABLE YAE\n                                                if (0xc598 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc5b4) {\n                                                    // Lo  [27] HANGUL SYLLABLE YAEG..HANGUL SYLLABLE YAEH\n                                                    if (0xc599 <= code && code <= 0xc5b3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE EO\n                                                    if (0xc5b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc5ec) {\n                                            if (code < 0xc5d0) {\n                                                // Lo  [27] HANGUL SYLLABLE EOG..HANGUL SYLLABLE EOH\n                                                if (0xc5b5 <= code && code <= 0xc5cf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc5d1) {\n                                                    // Lo       HANGUL SYLLABLE E\n                                                    if (0xc5d0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE EG..HANGUL SYLLABLE EH\n                                                    if (0xc5d1 <= code && code <= 0xc5eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc5ed) {\n                                                // Lo       HANGUL SYLLABLE YEO\n                                                if (0xc5ec === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc608) {\n                                                    // Lo  [27] HANGUL SYLLABLE YEOG..HANGUL SYLLABLE YEOH\n                                                    if (0xc5ed <= code && code <= 0xc607) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE YE\n                                                    if (0xc608 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xc73c) {\n                                if (code < 0xc695) {\n                                    if (code < 0xc65c) {\n                                        if (code < 0xc625) {\n                                            if (code < 0xc624) {\n                                                // Lo  [27] HANGUL SYLLABLE YEG..HANGUL SYLLABLE YEH\n                                                if (0xc609 <= code && code <= 0xc623) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE O\n                                                if (0xc624 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc640) {\n                                                // Lo  [27] HANGUL SYLLABLE OG..HANGUL SYLLABLE OH\n                                                if (0xc625 <= code && code <= 0xc63f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc641) {\n                                                    // Lo       HANGUL SYLLABLE WA\n                                                    if (0xc640 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE WAG..HANGUL SYLLABLE WAH\n                                                    if (0xc641 <= code && code <= 0xc65b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc678) {\n                                            if (code < 0xc65d) {\n                                                // Lo       HANGUL SYLLABLE WAE\n                                                if (0xc65c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE WAEG..HANGUL SYLLABLE WAEH\n                                                if (0xc65d <= code && code <= 0xc677) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc679) {\n                                                // Lo       HANGUL SYLLABLE OE\n                                                if (0xc678 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc694) {\n                                                    // Lo  [27] HANGUL SYLLABLE OEG..HANGUL SYLLABLE OEH\n                                                    if (0xc679 <= code && code <= 0xc693) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE YO\n                                                    if (0xc694 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc6e8) {\n                                        if (code < 0xc6b1) {\n                                            if (code < 0xc6b0) {\n                                                // Lo  [27] HANGUL SYLLABLE YOG..HANGUL SYLLABLE YOH\n                                                if (0xc695 <= code && code <= 0xc6af) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE U\n                                                if (0xc6b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc6cc) {\n                                                // Lo  [27] HANGUL SYLLABLE UG..HANGUL SYLLABLE UH\n                                                if (0xc6b1 <= code && code <= 0xc6cb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc6cd) {\n                                                    // Lo       HANGUL SYLLABLE WEO\n                                                    if (0xc6cc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE WEOG..HANGUL SYLLABLE WEOH\n                                                    if (0xc6cd <= code && code <= 0xc6e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc705) {\n                                            if (code < 0xc6e9) {\n                                                // Lo       HANGUL SYLLABLE WE\n                                                if (0xc6e8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc704) {\n                                                    // Lo  [27] HANGUL SYLLABLE WEG..HANGUL SYLLABLE WEH\n                                                    if (0xc6e9 <= code && code <= 0xc703) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE WI\n                                                    if (0xc704 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc720) {\n                                                // Lo  [27] HANGUL SYLLABLE WIG..HANGUL SYLLABLE WIH\n                                                if (0xc705 <= code && code <= 0xc71f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc721) {\n                                                    // Lo       HANGUL SYLLABLE YU\n                                                    if (0xc720 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE YUG..HANGUL SYLLABLE YUH\n                                                    if (0xc721 <= code && code <= 0xc73b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xc7c9) {\n                                    if (code < 0xc775) {\n                                        if (code < 0xc758) {\n                                            if (code < 0xc73d) {\n                                                // Lo       HANGUL SYLLABLE EU\n                                                if (0xc73c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE EUG..HANGUL SYLLABLE EUH\n                                                if (0xc73d <= code && code <= 0xc757) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc759) {\n                                                // Lo       HANGUL SYLLABLE YI\n                                                if (0xc758 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc774) {\n                                                    // Lo  [27] HANGUL SYLLABLE YIG..HANGUL SYLLABLE YIH\n                                                    if (0xc759 <= code && code <= 0xc773) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE I\n                                                    if (0xc774 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc7ac) {\n                                            if (code < 0xc790) {\n                                                // Lo  [27] HANGUL SYLLABLE IG..HANGUL SYLLABLE IH\n                                                if (0xc775 <= code && code <= 0xc78f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc791) {\n                                                    // Lo       HANGUL SYLLABLE JA\n                                                    if (0xc790 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JAG..HANGUL SYLLABLE JAH\n                                                    if (0xc791 <= code && code <= 0xc7ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc7ad) {\n                                                // Lo       HANGUL SYLLABLE JAE\n                                                if (0xc7ac === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc7c8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JAEG..HANGUL SYLLABLE JAEH\n                                                    if (0xc7ad <= code && code <= 0xc7c7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JYA\n                                                    if (0xc7c8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc81c) {\n                                        if (code < 0xc7e5) {\n                                            if (code < 0xc7e4) {\n                                                // Lo  [27] HANGUL SYLLABLE JYAG..HANGUL SYLLABLE JYAH\n                                                if (0xc7c9 <= code && code <= 0xc7e3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JYAE\n                                                if (0xc7e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc800) {\n                                                // Lo  [27] HANGUL SYLLABLE JYAEG..HANGUL SYLLABLE JYAEH\n                                                if (0xc7e5 <= code && code <= 0xc7ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc801) {\n                                                    // Lo       HANGUL SYLLABLE JEO\n                                                    if (0xc800 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JEOG..HANGUL SYLLABLE JEOH\n                                                    if (0xc801 <= code && code <= 0xc81b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc839) {\n                                            if (code < 0xc81d) {\n                                                // Lo       HANGUL SYLLABLE JE\n                                                if (0xc81c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc838) {\n                                                    // Lo  [27] HANGUL SYLLABLE JEG..HANGUL SYLLABLE JEH\n                                                    if (0xc81d <= code && code <= 0xc837) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JYEO\n                                                    if (0xc838 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc854) {\n                                                // Lo  [27] HANGUL SYLLABLE JYEOG..HANGUL SYLLABLE JYEOH\n                                                if (0xc839 <= code && code <= 0xc853) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc855) {\n                                                    // Lo       HANGUL SYLLABLE JYE\n                                                    if (0xc854 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JYEG..HANGUL SYLLABLE JYEH\n                                                    if (0xc855 <= code && code <= 0xc86f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0xcd24) {\n                        if (code < 0xcabd) {\n                            if (code < 0xc989) {\n                                if (code < 0xc8fc) {\n                                    if (code < 0xc8a9) {\n                                        if (code < 0xc88c) {\n                                            if (code < 0xc871) {\n                                                // Lo       HANGUL SYLLABLE JO\n                                                if (0xc870 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JOG..HANGUL SYLLABLE JOH\n                                                if (0xc871 <= code && code <= 0xc88b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc88d) {\n                                                // Lo       HANGUL SYLLABLE JWA\n                                                if (0xc88c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc8a8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JWAG..HANGUL SYLLABLE JWAH\n                                                    if (0xc88d <= code && code <= 0xc8a7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JWAE\n                                                    if (0xc8a8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc8c5) {\n                                            if (code < 0xc8c4) {\n                                                // Lo  [27] HANGUL SYLLABLE JWAEG..HANGUL SYLLABLE JWAEH\n                                                if (0xc8a9 <= code && code <= 0xc8c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JOE\n                                                if (0xc8c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc8e0) {\n                                                // Lo  [27] HANGUL SYLLABLE JOEG..HANGUL SYLLABLE JOEH\n                                                if (0xc8c5 <= code && code <= 0xc8df) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc8e1) {\n                                                    // Lo       HANGUL SYLLABLE JYO\n                                                    if (0xc8e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JYOG..HANGUL SYLLABLE JYOH\n                                                    if (0xc8e1 <= code && code <= 0xc8fb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xc935) {\n                                        if (code < 0xc918) {\n                                            if (code < 0xc8fd) {\n                                                // Lo       HANGUL SYLLABLE JU\n                                                if (0xc8fc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JUG..HANGUL SYLLABLE JUH\n                                                if (0xc8fd <= code && code <= 0xc917) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc919) {\n                                                // Lo       HANGUL SYLLABLE JWEO\n                                                if (0xc918 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc934) {\n                                                    // Lo  [27] HANGUL SYLLABLE JWEOG..HANGUL SYLLABLE JWEOH\n                                                    if (0xc919 <= code && code <= 0xc933) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JWE\n                                                    if (0xc934 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc96c) {\n                                            if (code < 0xc950) {\n                                                // Lo  [27] HANGUL SYLLABLE JWEG..HANGUL SYLLABLE JWEH\n                                                if (0xc935 <= code && code <= 0xc94f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc951) {\n                                                    // Lo       HANGUL SYLLABLE JWI\n                                                    if (0xc950 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JWIG..HANGUL SYLLABLE JWIH\n                                                    if (0xc951 <= code && code <= 0xc96b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc96d) {\n                                                // Lo       HANGUL SYLLABLE JYU\n                                                if (0xc96c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc988) {\n                                                    // Lo  [27] HANGUL SYLLABLE JYUG..HANGUL SYLLABLE JYUH\n                                                    if (0xc96d <= code && code <= 0xc987) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JEU\n                                                    if (0xc988 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xca30) {\n                                    if (code < 0xc9dc) {\n                                        if (code < 0xc9a5) {\n                                            if (code < 0xc9a4) {\n                                                // Lo  [27] HANGUL SYLLABLE JEUG..HANGUL SYLLABLE JEUH\n                                                if (0xc989 <= code && code <= 0xc9a3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JYI\n                                                if (0xc9a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xc9c0) {\n                                                // Lo  [27] HANGUL SYLLABLE JYIG..HANGUL SYLLABLE JYIH\n                                                if (0xc9a5 <= code && code <= 0xc9bf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc9c1) {\n                                                    // Lo       HANGUL SYLLABLE JI\n                                                    if (0xc9c0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JIG..HANGUL SYLLABLE JIH\n                                                    if (0xc9c1 <= code && code <= 0xc9db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xc9f9) {\n                                            if (code < 0xc9dd) {\n                                                // Lo       HANGUL SYLLABLE JJA\n                                                if (0xc9dc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xc9f8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJAG..HANGUL SYLLABLE JJAH\n                                                    if (0xc9dd <= code && code <= 0xc9f7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJAE\n                                                    if (0xc9f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xca14) {\n                                                // Lo  [27] HANGUL SYLLABLE JJAEG..HANGUL SYLLABLE JJAEH\n                                                if (0xc9f9 <= code && code <= 0xca13) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca15) {\n                                                    // Lo       HANGUL SYLLABLE JJYA\n                                                    if (0xca14 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYAG..HANGUL SYLLABLE JJYAH\n                                                    if (0xca15 <= code && code <= 0xca2f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xca69) {\n                                        if (code < 0xca4c) {\n                                            if (code < 0xca31) {\n                                                // Lo       HANGUL SYLLABLE JJYAE\n                                                if (0xca30 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJYAEG..HANGUL SYLLABLE JJYAEH\n                                                if (0xca31 <= code && code <= 0xca4b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xca4d) {\n                                                // Lo       HANGUL SYLLABLE JJEO\n                                                if (0xca4c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca68) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJEOG..HANGUL SYLLABLE JJEOH\n                                                    if (0xca4d <= code && code <= 0xca67) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJE\n                                                    if (0xca68 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcaa0) {\n                                            if (code < 0xca84) {\n                                                // Lo  [27] HANGUL SYLLABLE JJEG..HANGUL SYLLABLE JJEH\n                                                if (0xca69 <= code && code <= 0xca83) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xca85) {\n                                                    // Lo       HANGUL SYLLABLE JJYEO\n                                                    if (0xca84 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYEOG..HANGUL SYLLABLE JJYEOH\n                                                    if (0xca85 <= code && code <= 0xca9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcaa1) {\n                                                // Lo       HANGUL SYLLABLE JJYE\n                                                if (0xcaa0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcabc) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYEG..HANGUL SYLLABLE JJYEH\n                                                    if (0xcaa1 <= code && code <= 0xcabb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJO\n                                                    if (0xcabc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xcbf0) {\n                                if (code < 0xcb49) {\n                                    if (code < 0xcb10) {\n                                        if (code < 0xcad9) {\n                                            if (code < 0xcad8) {\n                                                // Lo  [27] HANGUL SYLLABLE JJOG..HANGUL SYLLABLE JJOH\n                                                if (0xcabd <= code && code <= 0xcad7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JJWA\n                                                if (0xcad8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcaf4) {\n                                                // Lo  [27] HANGUL SYLLABLE JJWAG..HANGUL SYLLABLE JJWAH\n                                                if (0xcad9 <= code && code <= 0xcaf3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcaf5) {\n                                                    // Lo       HANGUL SYLLABLE JJWAE\n                                                    if (0xcaf4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWAEG..HANGUL SYLLABLE JJWAEH\n                                                    if (0xcaf5 <= code && code <= 0xcb0f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcb2c) {\n                                            if (code < 0xcb11) {\n                                                // Lo       HANGUL SYLLABLE JJOE\n                                                if (0xcb10 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJOEG..HANGUL SYLLABLE JJOEH\n                                                if (0xcb11 <= code && code <= 0xcb2b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcb2d) {\n                                                // Lo       HANGUL SYLLABLE JJYO\n                                                if (0xcb2c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcb48) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJYOG..HANGUL SYLLABLE JJYOH\n                                                    if (0xcb2d <= code && code <= 0xcb47) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJU\n                                                    if (0xcb48 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcb9c) {\n                                        if (code < 0xcb65) {\n                                            if (code < 0xcb64) {\n                                                // Lo  [27] HANGUL SYLLABLE JJUG..HANGUL SYLLABLE JJUH\n                                                if (0xcb49 <= code && code <= 0xcb63) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE JJWEO\n                                                if (0xcb64 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcb80) {\n                                                // Lo  [27] HANGUL SYLLABLE JJWEOG..HANGUL SYLLABLE JJWEOH\n                                                if (0xcb65 <= code && code <= 0xcb7f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcb81) {\n                                                    // Lo       HANGUL SYLLABLE JJWE\n                                                    if (0xcb80 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWEG..HANGUL SYLLABLE JJWEH\n                                                    if (0xcb81 <= code && code <= 0xcb9b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcbb9) {\n                                            if (code < 0xcb9d) {\n                                                // Lo       HANGUL SYLLABLE JJWI\n                                                if (0xcb9c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbb8) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJWIG..HANGUL SYLLABLE JJWIH\n                                                    if (0xcb9d <= code && code <= 0xcbb7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE JJYU\n                                                    if (0xcbb8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcbd4) {\n                                                // Lo  [27] HANGUL SYLLABLE JJYUG..HANGUL SYLLABLE JJYUH\n                                                if (0xcbb9 <= code && code <= 0xcbd3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcbd5) {\n                                                    // Lo       HANGUL SYLLABLE JJEU\n                                                    if (0xcbd4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE JJEUG..HANGUL SYLLABLE JJEUH\n                                                    if (0xcbd5 <= code && code <= 0xcbef) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcc7d) {\n                                    if (code < 0xcc29) {\n                                        if (code < 0xcc0c) {\n                                            if (code < 0xcbf1) {\n                                                // Lo       HANGUL SYLLABLE JJYI\n                                                if (0xcbf0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE JJYIG..HANGUL SYLLABLE JJYIH\n                                                if (0xcbf1 <= code && code <= 0xcc0b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc0d) {\n                                                // Lo       HANGUL SYLLABLE JJI\n                                                if (0xcc0c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc28) {\n                                                    // Lo  [27] HANGUL SYLLABLE JJIG..HANGUL SYLLABLE JJIH\n                                                    if (0xcc0d <= code && code <= 0xcc27) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CA\n                                                    if (0xcc28 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcc60) {\n                                            if (code < 0xcc44) {\n                                                // Lo  [27] HANGUL SYLLABLE CAG..HANGUL SYLLABLE CAH\n                                                if (0xcc29 <= code && code <= 0xcc43) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc45) {\n                                                    // Lo       HANGUL SYLLABLE CAE\n                                                    if (0xcc44 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CAEG..HANGUL SYLLABLE CAEH\n                                                    if (0xcc45 <= code && code <= 0xcc5f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcc61) {\n                                                // Lo       HANGUL SYLLABLE CYA\n                                                if (0xcc60 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcc7c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CYAG..HANGUL SYLLABLE CYAH\n                                                    if (0xcc61 <= code && code <= 0xcc7b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYAE\n                                                    if (0xcc7c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xccd0) {\n                                        if (code < 0xcc99) {\n                                            if (code < 0xcc98) {\n                                                // Lo  [27] HANGUL SYLLABLE CYAEG..HANGUL SYLLABLE CYAEH\n                                                if (0xcc7d <= code && code <= 0xcc97) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CEO\n                                                if (0xcc98 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xccb4) {\n                                                // Lo  [27] HANGUL SYLLABLE CEOG..HANGUL SYLLABLE CEOH\n                                                if (0xcc99 <= code && code <= 0xccb3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xccb5) {\n                                                    // Lo       HANGUL SYLLABLE CE\n                                                    if (0xccb4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CEG..HANGUL SYLLABLE CEH\n                                                    if (0xccb5 <= code && code <= 0xcccf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcced) {\n                                            if (code < 0xccd1) {\n                                                // Lo       HANGUL SYLLABLE CYEO\n                                                if (0xccd0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xccec) {\n                                                    // Lo  [27] HANGUL SYLLABLE CYEOG..HANGUL SYLLABLE CYEOH\n                                                    if (0xccd1 <= code && code <= 0xcceb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYE\n                                                    if (0xccec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd08) {\n                                                // Lo  [27] HANGUL SYLLABLE CYEG..HANGUL SYLLABLE CYEH\n                                                if (0xcced <= code && code <= 0xcd07) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd09) {\n                                                    // Lo       HANGUL SYLLABLE CO\n                                                    if (0xcd08 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE COG..HANGUL SYLLABLE COH\n                                                    if (0xcd09 <= code && code <= 0xcd23) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0xcf71) {\n                            if (code < 0xce3d) {\n                                if (code < 0xcdb0) {\n                                    if (code < 0xcd5d) {\n                                        if (code < 0xcd40) {\n                                            if (code < 0xcd25) {\n                                                // Lo       HANGUL SYLLABLE CWA\n                                                if (0xcd24 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE CWAG..HANGUL SYLLABLE CWAH\n                                                if (0xcd25 <= code && code <= 0xcd3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd41) {\n                                                // Lo       HANGUL SYLLABLE CWAE\n                                                if (0xcd40 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd5c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CWAEG..HANGUL SYLLABLE CWAEH\n                                                    if (0xcd41 <= code && code <= 0xcd5b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE COE\n                                                    if (0xcd5c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcd79) {\n                                            if (code < 0xcd78) {\n                                                // Lo  [27] HANGUL SYLLABLE COEG..HANGUL SYLLABLE COEH\n                                                if (0xcd5d <= code && code <= 0xcd77) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CYO\n                                                if (0xcd78 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcd94) {\n                                                // Lo  [27] HANGUL SYLLABLE CYOG..HANGUL SYLLABLE CYOH\n                                                if (0xcd79 <= code && code <= 0xcd93) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcd95) {\n                                                    // Lo       HANGUL SYLLABLE CU\n                                                    if (0xcd94 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CUG..HANGUL SYLLABLE CUH\n                                                    if (0xcd95 <= code && code <= 0xcdaf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcde9) {\n                                        if (code < 0xcdcc) {\n                                            if (code < 0xcdb1) {\n                                                // Lo       HANGUL SYLLABLE CWEO\n                                                if (0xcdb0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE CWEOG..HANGUL SYLLABLE CWEOH\n                                                if (0xcdb1 <= code && code <= 0xcdcb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcdcd) {\n                                                // Lo       HANGUL SYLLABLE CWE\n                                                if (0xcdcc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcde8) {\n                                                    // Lo  [27] HANGUL SYLLABLE CWEG..HANGUL SYLLABLE CWEH\n                                                    if (0xcdcd <= code && code <= 0xcde7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CWI\n                                                    if (0xcde8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xce20) {\n                                            if (code < 0xce04) {\n                                                // Lo  [27] HANGUL SYLLABLE CWIG..HANGUL SYLLABLE CWIH\n                                                if (0xcde9 <= code && code <= 0xce03) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce05) {\n                                                    // Lo       HANGUL SYLLABLE CYU\n                                                    if (0xce04 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE CYUG..HANGUL SYLLABLE CYUH\n                                                    if (0xce05 <= code && code <= 0xce1f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xce21) {\n                                                // Lo       HANGUL SYLLABLE CEU\n                                                if (0xce20 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce3c) {\n                                                    // Lo  [27] HANGUL SYLLABLE CEUG..HANGUL SYLLABLE CEUH\n                                                    if (0xce21 <= code && code <= 0xce3b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE CYI\n                                                    if (0xce3c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xcee4) {\n                                    if (code < 0xce90) {\n                                        if (code < 0xce59) {\n                                            if (code < 0xce58) {\n                                                // Lo  [27] HANGUL SYLLABLE CYIG..HANGUL SYLLABLE CYIH\n                                                if (0xce3d <= code && code <= 0xce57) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE CI\n                                                if (0xce58 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xce74) {\n                                                // Lo  [27] HANGUL SYLLABLE CIG..HANGUL SYLLABLE CIH\n                                                if (0xce59 <= code && code <= 0xce73) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xce75) {\n                                                    // Lo       HANGUL SYLLABLE KA\n                                                    if (0xce74 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KAG..HANGUL SYLLABLE KAH\n                                                    if (0xce75 <= code && code <= 0xce8f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcead) {\n                                            if (code < 0xce91) {\n                                                // Lo       HANGUL SYLLABLE KAE\n                                                if (0xce90 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xceac) {\n                                                    // Lo  [27] HANGUL SYLLABLE KAEG..HANGUL SYLLABLE KAEH\n                                                    if (0xce91 <= code && code <= 0xceab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KYA\n                                                    if (0xceac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcec8) {\n                                                // Lo  [27] HANGUL SYLLABLE KYAG..HANGUL SYLLABLE KYAH\n                                                if (0xcead <= code && code <= 0xcec7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcec9) {\n                                                    // Lo       HANGUL SYLLABLE KYAE\n                                                    if (0xcec8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYAEG..HANGUL SYLLABLE KYAEH\n                                                    if (0xcec9 <= code && code <= 0xcee3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xcf1d) {\n                                        if (code < 0xcf00) {\n                                            if (code < 0xcee5) {\n                                                // Lo       HANGUL SYLLABLE KEO\n                                                if (0xcee4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KEOG..HANGUL SYLLABLE KEOH\n                                                if (0xcee5 <= code && code <= 0xceff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcf01) {\n                                                // Lo       HANGUL SYLLABLE KE\n                                                if (0xcf00 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf1c) {\n                                                    // Lo  [27] HANGUL SYLLABLE KEG..HANGUL SYLLABLE KEH\n                                                    if (0xcf01 <= code && code <= 0xcf1b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KYEO\n                                                    if (0xcf1c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcf54) {\n                                            if (code < 0xcf38) {\n                                                // Lo  [27] HANGUL SYLLABLE KYEOG..HANGUL SYLLABLE KYEOH\n                                                if (0xcf1d <= code && code <= 0xcf37) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf39) {\n                                                    // Lo       HANGUL SYLLABLE KYE\n                                                    if (0xcf38 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYEG..HANGUL SYLLABLE KYEH\n                                                    if (0xcf39 <= code && code <= 0xcf53) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcf55) {\n                                                // Lo       HANGUL SYLLABLE KO\n                                                if (0xcf54 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcf70) {\n                                                    // Lo  [27] HANGUL SYLLABLE KOG..HANGUL SYLLABLE KOH\n                                                    if (0xcf55 <= code && code <= 0xcf6f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KWA\n                                                    if (0xcf70 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xd0a4) {\n                                if (code < 0xcffd) {\n                                    if (code < 0xcfc4) {\n                                        if (code < 0xcf8d) {\n                                            if (code < 0xcf8c) {\n                                                // Lo  [27] HANGUL SYLLABLE KWAG..HANGUL SYLLABLE KWAH\n                                                if (0xcf71 <= code && code <= 0xcf8b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE KWAE\n                                                if (0xcf8c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcfa8) {\n                                                // Lo  [27] HANGUL SYLLABLE KWAEG..HANGUL SYLLABLE KWAEH\n                                                if (0xcf8d <= code && code <= 0xcfa7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcfa9) {\n                                                    // Lo       HANGUL SYLLABLE KOE\n                                                    if (0xcfa8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KOEG..HANGUL SYLLABLE KOEH\n                                                    if (0xcfa9 <= code && code <= 0xcfc3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xcfe0) {\n                                            if (code < 0xcfc5) {\n                                                // Lo       HANGUL SYLLABLE KYO\n                                                if (0xcfc4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KYOG..HANGUL SYLLABLE KYOH\n                                                if (0xcfc5 <= code && code <= 0xcfdf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xcfe1) {\n                                                // Lo       HANGUL SYLLABLE KU\n                                                if (0xcfe0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xcffc) {\n                                                    // Lo  [27] HANGUL SYLLABLE KUG..HANGUL SYLLABLE KUH\n                                                    if (0xcfe1 <= code && code <= 0xcffb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KWEO\n                                                    if (0xcffc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd050) {\n                                        if (code < 0xd019) {\n                                            if (code < 0xd018) {\n                                                // Lo  [27] HANGUL SYLLABLE KWEOG..HANGUL SYLLABLE KWEOH\n                                                if (0xcffd <= code && code <= 0xd017) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE KWE\n                                                if (0xd018 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd034) {\n                                                // Lo  [27] HANGUL SYLLABLE KWEG..HANGUL SYLLABLE KWEH\n                                                if (0xd019 <= code && code <= 0xd033) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd035) {\n                                                    // Lo       HANGUL SYLLABLE KWI\n                                                    if (0xd034 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KWIG..HANGUL SYLLABLE KWIH\n                                                    if (0xd035 <= code && code <= 0xd04f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd06d) {\n                                            if (code < 0xd051) {\n                                                // Lo       HANGUL SYLLABLE KYU\n                                                if (0xd050 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd06c) {\n                                                    // Lo  [27] HANGUL SYLLABLE KYUG..HANGUL SYLLABLE KYUH\n                                                    if (0xd051 <= code && code <= 0xd06b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE KEU\n                                                    if (0xd06c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd088) {\n                                                // Lo  [27] HANGUL SYLLABLE KEUG..HANGUL SYLLABLE KEUH\n                                                if (0xd06d <= code && code <= 0xd087) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd089) {\n                                                    // Lo       HANGUL SYLLABLE KYI\n                                                    if (0xd088 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE KYIG..HANGUL SYLLABLE KYIH\n                                                    if (0xd089 <= code && code <= 0xd0a3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd131) {\n                                    if (code < 0xd0dd) {\n                                        if (code < 0xd0c0) {\n                                            if (code < 0xd0a5) {\n                                                // Lo       HANGUL SYLLABLE KI\n                                                if (0xd0a4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE KIG..HANGUL SYLLABLE KIH\n                                                if (0xd0a5 <= code && code <= 0xd0bf) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd0c1) {\n                                                // Lo       HANGUL SYLLABLE TA\n                                                if (0xd0c0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd0dc) {\n                                                    // Lo  [27] HANGUL SYLLABLE TAG..HANGUL SYLLABLE TAH\n                                                    if (0xd0c1 <= code && code <= 0xd0db) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TAE\n                                                    if (0xd0dc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd114) {\n                                            if (code < 0xd0f8) {\n                                                // Lo  [27] HANGUL SYLLABLE TAEG..HANGUL SYLLABLE TAEH\n                                                if (0xd0dd <= code && code <= 0xd0f7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd0f9) {\n                                                    // Lo       HANGUL SYLLABLE TYA\n                                                    if (0xd0f8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TYAG..HANGUL SYLLABLE TYAH\n                                                    if (0xd0f9 <= code && code <= 0xd113) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd115) {\n                                                // Lo       HANGUL SYLLABLE TYAE\n                                                if (0xd114 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd130) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYAEG..HANGUL SYLLABLE TYAEH\n                                                    if (0xd115 <= code && code <= 0xd12f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TEO\n                                                    if (0xd130 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd184) {\n                                        if (code < 0xd14d) {\n                                            if (code < 0xd14c) {\n                                                // Lo  [27] HANGUL SYLLABLE TEOG..HANGUL SYLLABLE TEOH\n                                                if (0xd131 <= code && code <= 0xd14b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE TE\n                                                if (0xd14c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd168) {\n                                                // Lo  [27] HANGUL SYLLABLE TEG..HANGUL SYLLABLE TEH\n                                                if (0xd14d <= code && code <= 0xd167) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd169) {\n                                                    // Lo       HANGUL SYLLABLE TYEO\n                                                    if (0xd168 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TYEOG..HANGUL SYLLABLE TYEOH\n                                                    if (0xd169 <= code && code <= 0xd183) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd1a1) {\n                                            if (code < 0xd185) {\n                                                // Lo       HANGUL SYLLABLE TYE\n                                                if (0xd184 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd1a0) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYEG..HANGUL SYLLABLE TYEH\n                                                    if (0xd185 <= code && code <= 0xd19f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TO\n                                                    if (0xd1a0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd1bc) {\n                                                // Lo  [27] HANGUL SYLLABLE TOG..HANGUL SYLLABLE TOH\n                                                if (0xd1a1 <= code && code <= 0xd1bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd1bd) {\n                                                    // Lo       HANGUL SYLLABLE TWA\n                                                    if (0xd1bc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TWAG..HANGUL SYLLABLE TWAH\n                                                    if (0xd1bd <= code && code <= 0xd1d7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x1133b) {\n                    if (code < 0xd671) {\n                        if (code < 0xd424) {\n                            if (code < 0xd2f1) {\n                                if (code < 0xd264) {\n                                    if (code < 0xd211) {\n                                        if (code < 0xd1f4) {\n                                            if (code < 0xd1d9) {\n                                                // Lo       HANGUL SYLLABLE TWAE\n                                                if (0xd1d8 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE TWAEG..HANGUL SYLLABLE TWAEH\n                                                if (0xd1d9 <= code && code <= 0xd1f3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd1f5) {\n                                                // Lo       HANGUL SYLLABLE TOE\n                                                if (0xd1f4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd210) {\n                                                    // Lo  [27] HANGUL SYLLABLE TOEG..HANGUL SYLLABLE TOEH\n                                                    if (0xd1f5 <= code && code <= 0xd20f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TYO\n                                                    if (0xd210 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd22d) {\n                                            if (code < 0xd22c) {\n                                                // Lo  [27] HANGUL SYLLABLE TYOG..HANGUL SYLLABLE TYOH\n                                                if (0xd211 <= code && code <= 0xd22b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE TU\n                                                if (0xd22c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd248) {\n                                                // Lo  [27] HANGUL SYLLABLE TUG..HANGUL SYLLABLE TUH\n                                                if (0xd22d <= code && code <= 0xd247) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd249) {\n                                                    // Lo       HANGUL SYLLABLE TWEO\n                                                    if (0xd248 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TWEOG..HANGUL SYLLABLE TWEOH\n                                                    if (0xd249 <= code && code <= 0xd263) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd29d) {\n                                        if (code < 0xd280) {\n                                            if (code < 0xd265) {\n                                                // Lo       HANGUL SYLLABLE TWE\n                                                if (0xd264 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE TWEG..HANGUL SYLLABLE TWEH\n                                                if (0xd265 <= code && code <= 0xd27f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd281) {\n                                                // Lo       HANGUL SYLLABLE TWI\n                                                if (0xd280 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd29c) {\n                                                    // Lo  [27] HANGUL SYLLABLE TWIG..HANGUL SYLLABLE TWIH\n                                                    if (0xd281 <= code && code <= 0xd29b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TYU\n                                                    if (0xd29c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd2d4) {\n                                            if (code < 0xd2b8) {\n                                                // Lo  [27] HANGUL SYLLABLE TYUG..HANGUL SYLLABLE TYUH\n                                                if (0xd29d <= code && code <= 0xd2b7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd2b9) {\n                                                    // Lo       HANGUL SYLLABLE TEU\n                                                    if (0xd2b8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE TEUG..HANGUL SYLLABLE TEUH\n                                                    if (0xd2b9 <= code && code <= 0xd2d3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd2d5) {\n                                                // Lo       HANGUL SYLLABLE TYI\n                                                if (0xd2d4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd2f0) {\n                                                    // Lo  [27] HANGUL SYLLABLE TYIG..HANGUL SYLLABLE TYIH\n                                                    if (0xd2d5 <= code && code <= 0xd2ef) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE TI\n                                                    if (0xd2f0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd37d) {\n                                    if (code < 0xd344) {\n                                        if (code < 0xd30d) {\n                                            if (code < 0xd30c) {\n                                                // Lo  [27] HANGUL SYLLABLE TIG..HANGUL SYLLABLE TIH\n                                                if (0xd2f1 <= code && code <= 0xd30b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PA\n                                                if (0xd30c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd328) {\n                                                // Lo  [27] HANGUL SYLLABLE PAG..HANGUL SYLLABLE PAH\n                                                if (0xd30d <= code && code <= 0xd327) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd329) {\n                                                    // Lo       HANGUL SYLLABLE PAE\n                                                    if (0xd328 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PAEG..HANGUL SYLLABLE PAEH\n                                                    if (0xd329 <= code && code <= 0xd343) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd360) {\n                                            if (code < 0xd345) {\n                                                // Lo       HANGUL SYLLABLE PYA\n                                                if (0xd344 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PYAG..HANGUL SYLLABLE PYAH\n                                                if (0xd345 <= code && code <= 0xd35f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd361) {\n                                                // Lo       HANGUL SYLLABLE PYAE\n                                                if (0xd360 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd37c) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYAEG..HANGUL SYLLABLE PYAEH\n                                                    if (0xd361 <= code && code <= 0xd37b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PEO\n                                                    if (0xd37c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd3d0) {\n                                        if (code < 0xd399) {\n                                            if (code < 0xd398) {\n                                                // Lo  [27] HANGUL SYLLABLE PEOG..HANGUL SYLLABLE PEOH\n                                                if (0xd37d <= code && code <= 0xd397) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PE\n                                                if (0xd398 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd3b4) {\n                                                // Lo  [27] HANGUL SYLLABLE PEG..HANGUL SYLLABLE PEH\n                                                if (0xd399 <= code && code <= 0xd3b3) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3b5) {\n                                                    // Lo       HANGUL SYLLABLE PYEO\n                                                    if (0xd3b4 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PYEOG..HANGUL SYLLABLE PYEOH\n                                                    if (0xd3b5 <= code && code <= 0xd3cf) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd3ed) {\n                                            if (code < 0xd3d1) {\n                                                // Lo       HANGUL SYLLABLE PYE\n                                                if (0xd3d0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd3ec) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYEG..HANGUL SYLLABLE PYEH\n                                                    if (0xd3d1 <= code && code <= 0xd3eb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PO\n                                                    if (0xd3ec === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd408) {\n                                                // Lo  [27] HANGUL SYLLABLE POG..HANGUL SYLLABLE POH\n                                                if (0xd3ed <= code && code <= 0xd407) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd409) {\n                                                    // Lo       HANGUL SYLLABLE PWA\n                                                    if (0xd408 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PWAG..HANGUL SYLLABLE PWAH\n                                                    if (0xd409 <= code && code <= 0xd423) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0xd53d) {\n                                if (code < 0xd4b0) {\n                                    if (code < 0xd45d) {\n                                        if (code < 0xd440) {\n                                            if (code < 0xd425) {\n                                                // Lo       HANGUL SYLLABLE PWAE\n                                                if (0xd424 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PWAEG..HANGUL SYLLABLE PWAEH\n                                                if (0xd425 <= code && code <= 0xd43f) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd441) {\n                                                // Lo       HANGUL SYLLABLE POE\n                                                if (0xd440 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd45c) {\n                                                    // Lo  [27] HANGUL SYLLABLE POEG..HANGUL SYLLABLE POEH\n                                                    if (0xd441 <= code && code <= 0xd45b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PYO\n                                                    if (0xd45c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd479) {\n                                            if (code < 0xd478) {\n                                                // Lo  [27] HANGUL SYLLABLE PYOG..HANGUL SYLLABLE PYOH\n                                                if (0xd45d <= code && code <= 0xd477) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE PU\n                                                if (0xd478 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd494) {\n                                                // Lo  [27] HANGUL SYLLABLE PUG..HANGUL SYLLABLE PUH\n                                                if (0xd479 <= code && code <= 0xd493) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd495) {\n                                                    // Lo       HANGUL SYLLABLE PWEO\n                                                    if (0xd494 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PWEOG..HANGUL SYLLABLE PWEOH\n                                                    if (0xd495 <= code && code <= 0xd4af) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd4e9) {\n                                        if (code < 0xd4cc) {\n                                            if (code < 0xd4b1) {\n                                                // Lo       HANGUL SYLLABLE PWE\n                                                if (0xd4b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE PWEG..HANGUL SYLLABLE PWEH\n                                                if (0xd4b1 <= code && code <= 0xd4cb) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd4cd) {\n                                                // Lo       HANGUL SYLLABLE PWI\n                                                if (0xd4cc === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd4e8) {\n                                                    // Lo  [27] HANGUL SYLLABLE PWIG..HANGUL SYLLABLE PWIH\n                                                    if (0xd4cd <= code && code <= 0xd4e7) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PYU\n                                                    if (0xd4e8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd520) {\n                                            if (code < 0xd504) {\n                                                // Lo  [27] HANGUL SYLLABLE PYUG..HANGUL SYLLABLE PYUH\n                                                if (0xd4e9 <= code && code <= 0xd503) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd505) {\n                                                    // Lo       HANGUL SYLLABLE PEU\n                                                    if (0xd504 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE PEUG..HANGUL SYLLABLE PEUH\n                                                    if (0xd505 <= code && code <= 0xd51f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd521) {\n                                                // Lo       HANGUL SYLLABLE PYI\n                                                if (0xd520 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd53c) {\n                                                    // Lo  [27] HANGUL SYLLABLE PYIG..HANGUL SYLLABLE PYIH\n                                                    if (0xd521 <= code && code <= 0xd53b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE PI\n                                                    if (0xd53c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0xd5e4) {\n                                    if (code < 0xd590) {\n                                        if (code < 0xd559) {\n                                            if (code < 0xd558) {\n                                                // Lo  [27] HANGUL SYLLABLE PIG..HANGUL SYLLABLE PIH\n                                                if (0xd53d <= code && code <= 0xd557) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HA\n                                                if (0xd558 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd574) {\n                                                // Lo  [27] HANGUL SYLLABLE HAG..HANGUL SYLLABLE HAH\n                                                if (0xd559 <= code && code <= 0xd573) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd575) {\n                                                    // Lo       HANGUL SYLLABLE HAE\n                                                    if (0xd574 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HAEG..HANGUL SYLLABLE HAEH\n                                                    if (0xd575 <= code && code <= 0xd58f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd5ad) {\n                                            if (code < 0xd591) {\n                                                // Lo       HANGUL SYLLABLE HYA\n                                                if (0xd590 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd5ac) {\n                                                    // Lo  [27] HANGUL SYLLABLE HYAG..HANGUL SYLLABLE HYAH\n                                                    if (0xd591 <= code && code <= 0xd5ab) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYAE\n                                                    if (0xd5ac === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd5c8) {\n                                                // Lo  [27] HANGUL SYLLABLE HYAEG..HANGUL SYLLABLE HYAEH\n                                                if (0xd5ad <= code && code <= 0xd5c7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd5c9) {\n                                                    // Lo       HANGUL SYLLABLE HEO\n                                                    if (0xd5c8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HEOG..HANGUL SYLLABLE HEOH\n                                                    if (0xd5c9 <= code && code <= 0xd5e3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd61d) {\n                                        if (code < 0xd600) {\n                                            if (code < 0xd5e5) {\n                                                // Lo       HANGUL SYLLABLE HE\n                                                if (0xd5e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE HEG..HANGUL SYLLABLE HEH\n                                                if (0xd5e5 <= code && code <= 0xd5ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd601) {\n                                                // Lo       HANGUL SYLLABLE HYEO\n                                                if (0xd600 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd61c) {\n                                                    // Lo  [27] HANGUL SYLLABLE HYEOG..HANGUL SYLLABLE HYEOH\n                                                    if (0xd601 <= code && code <= 0xd61b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYE\n                                                    if (0xd61c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd654) {\n                                            if (code < 0xd638) {\n                                                // Lo  [27] HANGUL SYLLABLE HYEG..HANGUL SYLLABLE HYEH\n                                                if (0xd61d <= code && code <= 0xd637) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd639) {\n                                                    // Lo       HANGUL SYLLABLE HO\n                                                    if (0xd638 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HOG..HANGUL SYLLABLE HOH\n                                                    if (0xd639 <= code && code <= 0xd653) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd655) {\n                                                // Lo       HANGUL SYLLABLE HWA\n                                                if (0xd654 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd670) {\n                                                    // Lo  [27] HANGUL SYLLABLE HWAG..HANGUL SYLLABLE HWAH\n                                                    if (0xd655 <= code && code <= 0xd66f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HWAE\n                                                    if (0xd670 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x11000) {\n                            if (code < 0xd7b0) {\n                                if (code < 0xd6fd) {\n                                    if (code < 0xd6c4) {\n                                        if (code < 0xd68d) {\n                                            if (code < 0xd68c) {\n                                                // Lo  [27] HANGUL SYLLABLE HWAEG..HANGUL SYLLABLE HWAEH\n                                                if (0xd671 <= code && code <= 0xd68b) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HOE\n                                                if (0xd68c === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd6a8) {\n                                                // Lo  [27] HANGUL SYLLABLE HOEG..HANGUL SYLLABLE HOEH\n                                                if (0xd68d <= code && code <= 0xd6a7) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd6a9) {\n                                                    // Lo       HANGUL SYLLABLE HYO\n                                                    if (0xd6a8 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HYOG..HANGUL SYLLABLE HYOH\n                                                    if (0xd6a9 <= code && code <= 0xd6c3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd6e0) {\n                                            if (code < 0xd6c5) {\n                                                // Lo       HANGUL SYLLABLE HU\n                                                if (0xd6c4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [27] HANGUL SYLLABLE HUG..HANGUL SYLLABLE HUH\n                                                if (0xd6c5 <= code && code <= 0xd6df) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd6e1) {\n                                                // Lo       HANGUL SYLLABLE HWEO\n                                                if (0xd6e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd6fc) {\n                                                    // Lo  [27] HANGUL SYLLABLE HWEOG..HANGUL SYLLABLE HWEOH\n                                                    if (0xd6e1 <= code && code <= 0xd6fb) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HWE\n                                                    if (0xd6fc === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0xd750) {\n                                        if (code < 0xd719) {\n                                            if (code < 0xd718) {\n                                                // Lo  [27] HANGUL SYLLABLE HWEG..HANGUL SYLLABLE HWEH\n                                                if (0xd6fd <= code && code <= 0xd717) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                // Lo       HANGUL SYLLABLE HWI\n                                                if (0xd718 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd734) {\n                                                // Lo  [27] HANGUL SYLLABLE HWIG..HANGUL SYLLABLE HWIH\n                                                if (0xd719 <= code && code <= 0xd733) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd735) {\n                                                    // Lo       HANGUL SYLLABLE HYU\n                                                    if (0xd734 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HYUG..HANGUL SYLLABLE HYUH\n                                                    if (0xd735 <= code && code <= 0xd74f) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xd76d) {\n                                            if (code < 0xd751) {\n                                                // Lo       HANGUL SYLLABLE HEU\n                                                if (0xd750 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.LV;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd76c) {\n                                                    // Lo  [27] HANGUL SYLLABLE HEUG..HANGUL SYLLABLE HEUH\n                                                    if (0xd751 <= code && code <= 0xd76b) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo       HANGUL SYLLABLE HYI\n                                                    if (0xd76c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xd788) {\n                                                // Lo  [27] HANGUL SYLLABLE HYIG..HANGUL SYLLABLE HYIH\n                                                if (0xd76d <= code && code <= 0xd787) {\n                                                    return boundaries_1.CLUSTER_BREAK.LVT;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xd789) {\n                                                    // Lo       HANGUL SYLLABLE HI\n                                                    if (0xd788 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.LV;\n                                                    }\n                                                }\n                                                else {\n                                                    // Lo  [27] HANGUL SYLLABLE HIG..HANGUL SYLLABLE HIH\n                                                    if (0xd789 <= code && code <= 0xd7a3) {\n                                                        return boundaries_1.CLUSTER_BREAK.LVT;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x10a01) {\n                                    if (code < 0xfeff) {\n                                        if (code < 0xfb1e) {\n                                            if (code < 0xd7cb) {\n                                                // Lo  [23] HANGUL JUNGSEONG O-YEO..HANGUL JUNGSEONG ARAEA-E\n                                                if (0xd7b0 <= code && code <= 0xd7c6) {\n                                                    return boundaries_1.CLUSTER_BREAK.V;\n                                                }\n                                            }\n                                            else {\n                                                // Lo  [49] HANGUL JONGSEONG NIEUN-RIEUL..HANGUL JONGSEONG PHIEUPH-THIEUTH\n                                                if (0xd7cb <= code && code <= 0xd7fb) {\n                                                    return boundaries_1.CLUSTER_BREAK.T;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xfe00) {\n                                                // Mn       HEBREW POINT JUDEO-SPANISH VARIKA\n                                                if (0xfb1e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfe20) {\n                                                    // Mn  [16] VARIATION SELECTOR-1..VARIATION SELECTOR-16\n                                                    if (0xfe00 <= code && code <= 0xfe0f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [16] COMBINING LIGATURE LEFT HALF..COMBINING CYRILLIC TITLO RIGHT HALF\n                                                    if (0xfe20 <= code && code <= 0xfe2f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x101fd) {\n                                            if (code < 0xff9e) {\n                                                // Cf       ZERO WIDTH NO-BREAK SPACE\n                                                if (0xfeff === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xfff0) {\n                                                    // Lm   [2] HALFWIDTH KATAKANA VOICED SOUND MARK..HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK\n                                                    if (0xff9e <= code && code <= 0xff9f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cn   [9] <reserved-FFF0>..<reserved-FFF8>\n                                                    // Cf   [3] INTERLINEAR ANNOTATION ANCHOR..INTERLINEAR ANNOTATION TERMINATOR\n                                                    if (0xfff0 <= code && code <= 0xfffb) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x102e0) {\n                                                // Mn       PHAISTOS DISC SIGN COMBINING OBLIQUE STROKE\n                                                if (0x101fd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10376) {\n                                                    // Mn       COPTIC EPACT THOUSANDS MARK\n                                                    if (0x102e0 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [5] COMBINING OLD PERMIC LETTER AN..COMBINING OLD PERMIC LETTER SII\n                                                    if (0x10376 <= code && code <= 0x1037a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x10ae5) {\n                                        if (code < 0x10a0c) {\n                                            if (code < 0x10a05) {\n                                                // Mn   [3] KHAROSHTHI VOWEL SIGN I..KHAROSHTHI VOWEL SIGN VOCALIC R\n                                                if (0x10a01 <= code && code <= 0x10a03) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] KHAROSHTHI VOWEL SIGN E..KHAROSHTHI VOWEL SIGN O\n                                                if (0x10a05 <= code && code <= 0x10a06) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x10a38) {\n                                                // Mn   [4] KHAROSHTHI VOWEL LENGTH MARK..KHAROSHTHI SIGN VISARGA\n                                                if (0x10a0c <= code && code <= 0x10a0f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10a3f) {\n                                                    // Mn   [3] KHAROSHTHI SIGN BAR ABOVE..KHAROSHTHI SIGN DOT BELOW\n                                                    if (0x10a38 <= code && code <= 0x10a3a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KHAROSHTHI VIRAMA\n                                                    if (0x10a3f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x10efd) {\n                                            if (code < 0x10d24) {\n                                                // Mn   [2] MANICHAEAN ABBREVIATION MARK ABOVE..MANICHAEAN ABBREVIATION MARK BELOW\n                                                if (0x10ae5 <= code && code <= 0x10ae6) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10eab) {\n                                                    // Mn   [4] HANIFI ROHINGYA SIGN HARBAHAY..HANIFI ROHINGYA SIGN TASSI\n                                                    if (0x10d24 <= code && code <= 0x10d27) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] YEZIDI COMBINING HAMZA MARK..YEZIDI COMBINING MADDA MARK\n                                                    if (0x10eab <= code && code <= 0x10eac) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x10f46) {\n                                                // Mn   [3] ARABIC SMALL LOW WORD SAKTA..ARABIC SMALL LOW WORD MADDA\n                                                if (0x10efd <= code && code <= 0x10eff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x10f82) {\n                                                    // Mn  [11] SOGDIAN COMBINING DOT BELOW..SOGDIAN COMBINING STROKE BELOW\n                                                    if (0x10f46 <= code && code <= 0x10f50) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] OLD UYGHUR COMBINING DOT ABOVE..OLD UYGHUR COMBINING TWO DOTS BELOW\n                                                    if (0x10f82 <= code && code <= 0x10f85) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x11180) {\n                                if (code < 0x110b7) {\n                                    if (code < 0x11073) {\n                                        if (code < 0x11002) {\n                                            // Mc       BRAHMI SIGN CANDRABINDU\n                                            if (0x11000 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BRAHMI SIGN ANUSVARA\n                                            if (0x11001 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11038) {\n                                                // Mc       BRAHMI SIGN VISARGA\n                                                if (0x11002 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11070) {\n                                                    // Mn  [15] BRAHMI VOWEL SIGN AA..BRAHMI VIRAMA\n                                                    if (0x11038 <= code && code <= 0x11046) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       BRAHMI SIGN OLD TAMIL VIRAMA\n                                                    if (0x11070 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11082) {\n                                            if (code < 0x1107f) {\n                                                // Mn   [2] BRAHMI VOWEL SIGN OLD TAMIL SHORT E..BRAHMI VOWEL SIGN OLD TAMIL SHORT O\n                                                if (0x11073 <= code && code <= 0x11074) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [3] BRAHMI NUMBER JOINER..KAITHI SIGN ANUSVARA\n                                                if (0x1107f <= code && code <= 0x11081) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x110b0) {\n                                                // Mc       KAITHI SIGN VISARGA\n                                                if (0x11082 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x110b3) {\n                                                    // Mc   [3] KAITHI VOWEL SIGN AA..KAITHI VOWEL SIGN II\n                                                    if (0x110b0 <= code && code <= 0x110b2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] KAITHI VOWEL SIGN U..KAITHI VOWEL SIGN AI\n                                                    if (0x110b3 <= code && code <= 0x110b6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11100) {\n                                        if (code < 0x110bd) {\n                                            if (code < 0x110b9) {\n                                                // Mc   [2] KAITHI VOWEL SIGN O..KAITHI VOWEL SIGN AU\n                                                if (0x110b7 <= code && code <= 0x110b8) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] KAITHI SIGN VIRAMA..KAITHI SIGN NUKTA\n                                                if (0x110b9 <= code && code <= 0x110ba) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x110c2) {\n                                                // Cf       KAITHI NUMBER SIGN\n                                                if (0x110bd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KAITHI VOWEL SIGN VOCALIC R\n                                                if (0x110c2 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Cf       KAITHI NUMBER SIGN ABOVE\n                                                if (0x110cd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1112d) {\n                                            if (code < 0x11127) {\n                                                // Mn   [3] CHAKMA SIGN CANDRABINDU..CHAKMA SIGN VISARGA\n                                                if (0x11100 <= code && code <= 0x11102) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1112c) {\n                                                    // Mn   [5] CHAKMA VOWEL SIGN A..CHAKMA VOWEL SIGN UU\n                                                    if (0x11127 <= code && code <= 0x1112b) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       CHAKMA VOWEL SIGN E\n                                                    if (0x1112c === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11145) {\n                                                // Mn   [8] CHAKMA VOWEL SIGN AI..CHAKMA MAAYYAA\n                                                if (0x1112d <= code && code <= 0x11134) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11173) {\n                                                    // Mc   [2] CHAKMA VOWEL SIGN AA..CHAKMA VOWEL SIGN EI\n                                                    if (0x11145 <= code && code <= 0x11146) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MAHAJANI SIGN NUKTA\n                                                    if (0x11173 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11232) {\n                                    if (code < 0x111c2) {\n                                        if (code < 0x111b3) {\n                                            if (code < 0x11182) {\n                                                // Mn   [2] SHARADA SIGN CANDRABINDU..SHARADA SIGN ANUSVARA\n                                                if (0x11180 <= code && code <= 0x11181) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       SHARADA SIGN VISARGA\n                                                if (0x11182 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x111b6) {\n                                                // Mc   [3] SHARADA VOWEL SIGN AA..SHARADA VOWEL SIGN II\n                                                if (0x111b3 <= code && code <= 0x111b5) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x111bf) {\n                                                    // Mn   [9] SHARADA VOWEL SIGN U..SHARADA VOWEL SIGN O\n                                                    if (0x111b6 <= code && code <= 0x111be) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SHARADA VOWEL SIGN AU..SHARADA SIGN VIRAMA\n                                                    if (0x111bf <= code && code <= 0x111c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x111cf) {\n                                            if (code < 0x111c9) {\n                                                // Lo   [2] SHARADA SIGN JIHVAMULIYA..SHARADA SIGN UPADHMANIYA\n                                                if (0x111c2 <= code && code <= 0x111c3) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x111ce) {\n                                                    // Mn   [4] SHARADA SANDHI MARK..SHARADA EXTRA SHORT VOWEL MARK\n                                                    if (0x111c9 <= code && code <= 0x111cc) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       SHARADA VOWEL SIGN PRISHTHAMATRA E\n                                                    if (0x111ce === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1122c) {\n                                                // Mn       SHARADA SIGN INVERTED CANDRABINDU\n                                                if (0x111cf === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1122f) {\n                                                    // Mc   [3] KHOJKI VOWEL SIGN AA..KHOJKI VOWEL SIGN II\n                                                    if (0x1122c <= code && code <= 0x1122e) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] KHOJKI VOWEL SIGN U..KHOJKI VOWEL SIGN AI\n                                                    if (0x1122f <= code && code <= 0x11231) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11241) {\n                                        if (code < 0x11235) {\n                                            if (code < 0x11234) {\n                                                // Mc   [2] KHOJKI VOWEL SIGN O..KHOJKI VOWEL SIGN AU\n                                                if (0x11232 <= code && code <= 0x11233) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       KHOJKI SIGN ANUSVARA\n                                                if (0x11234 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11236) {\n                                                // Mc       KHOJKI SIGN VIRAMA\n                                                if (0x11235 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1123e) {\n                                                    // Mn   [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\n                                                    if (0x11236 <= code && code <= 0x11237) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       KHOJKI SIGN SUKUN\n                                                    if (0x1123e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x112e3) {\n                                            if (code < 0x112df) {\n                                                // Mn       KHOJKI VOWEL SIGN VOCALIC R\n                                                if (0x11241 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x112e0) {\n                                                    // Mn       KHUDAWADI SIGN ANUSVARA\n                                                    if (0x112df === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [3] KHUDAWADI VOWEL SIGN AA..KHUDAWADI VOWEL SIGN II\n                                                    if (0x112e0 <= code && code <= 0x112e2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11300) {\n                                                // Mn   [8] KHUDAWADI VOWEL SIGN U..KHUDAWADI SIGN VIRAMA\n                                                if (0x112e3 <= code && code <= 0x112ea) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11302) {\n                                                    // Mn   [2] GRANTHA SIGN COMBINING ANUSVARA ABOVE..GRANTHA SIGN CANDRABINDU\n                                                    if (0x11300 <= code && code <= 0x11301) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] GRANTHA SIGN ANUSVARA..GRANTHA SIGN VISARGA\n                                                    if (0x11302 <= code && code <= 0x11303) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x11a97) {\n                        if (code < 0x116ab) {\n                            if (code < 0x114b9) {\n                                if (code < 0x11370) {\n                                    if (code < 0x11347) {\n                                        if (code < 0x1133f) {\n                                            if (code < 0x1133e) {\n                                                // Mn   [2] COMBINING BINDU BELOW..GRANTHA SIGN NUKTA\n                                                if (0x1133b <= code && code <= 0x1133c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GRANTHA VOWEL SIGN AA\n                                                if (0x1133e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11340) {\n                                                // Mc       GRANTHA VOWEL SIGN I\n                                                if (0x1133f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11341) {\n                                                    // Mn       GRANTHA VOWEL SIGN II\n                                                    if (0x11340 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [4] GRANTHA VOWEL SIGN U..GRANTHA VOWEL SIGN VOCALIC RR\n                                                    if (0x11341 <= code && code <= 0x11344) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11357) {\n                                            if (code < 0x1134b) {\n                                                // Mc   [2] GRANTHA VOWEL SIGN EE..GRANTHA VOWEL SIGN AI\n                                                if (0x11347 <= code && code <= 0x11348) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] GRANTHA VOWEL SIGN OO..GRANTHA SIGN VIRAMA\n                                                if (0x1134b <= code && code <= 0x1134d) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11362) {\n                                                // Mc       GRANTHA AU LENGTH MARK\n                                                if (0x11357 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11366) {\n                                                    // Mc   [2] GRANTHA VOWEL SIGN VOCALIC L..GRANTHA VOWEL SIGN VOCALIC LL\n                                                    if (0x11362 <= code && code <= 0x11363) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] COMBINING GRANTHA DIGIT ZERO..COMBINING GRANTHA DIGIT SIX\n                                                    if (0x11366 <= code && code <= 0x1136c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11445) {\n                                        if (code < 0x11438) {\n                                            if (code < 0x11435) {\n                                                // Mn   [5] COMBINING GRANTHA LETTER A..COMBINING GRANTHA LETTER PA\n                                                if (0x11370 <= code && code <= 0x11374) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] NEWA VOWEL SIGN AA..NEWA VOWEL SIGN II\n                                                if (0x11435 <= code && code <= 0x11437) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11440) {\n                                                // Mn   [8] NEWA VOWEL SIGN U..NEWA VOWEL SIGN AI\n                                                if (0x11438 <= code && code <= 0x1143f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11442) {\n                                                    // Mc   [2] NEWA VOWEL SIGN O..NEWA VOWEL SIGN AU\n                                                    if (0x11440 <= code && code <= 0x11441) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] NEWA SIGN VIRAMA..NEWA SIGN ANUSVARA\n                                                    if (0x11442 <= code && code <= 0x11444) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x114b0) {\n                                            if (code < 0x11446) {\n                                                // Mc       NEWA SIGN VISARGA\n                                                if (0x11445 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       NEWA SIGN NUKTA\n                                                if (0x11446 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mn       NEWA SANDHI MARK\n                                                if (0x1145e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x114b1) {\n                                                // Mc       TIRHUTA VOWEL SIGN AA\n                                                if (0x114b0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x114b3) {\n                                                    // Mc   [2] TIRHUTA VOWEL SIGN I..TIRHUTA VOWEL SIGN II\n                                                    if (0x114b1 <= code && code <= 0x114b2) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] TIRHUTA VOWEL SIGN U..TIRHUTA VOWEL SIGN VOCALIC LL\n                                                    if (0x114b3 <= code && code <= 0x114b8) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x115b8) {\n                                    if (code < 0x114bf) {\n                                        if (code < 0x114bb) {\n                                            // Mc       TIRHUTA VOWEL SIGN E\n                                            if (0x114b9 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       TIRHUTA VOWEL SIGN SHORT E\n                                            if (0x114ba === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x114bd) {\n                                                // Mc   [2] TIRHUTA VOWEL SIGN AI..TIRHUTA VOWEL SIGN O\n                                                if (0x114bb <= code && code <= 0x114bc) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       TIRHUTA VOWEL SIGN SHORT O\n                                                if (0x114bd === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       TIRHUTA VOWEL SIGN AU\n                                                if (0x114be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x115af) {\n                                            if (code < 0x114c1) {\n                                                // Mn   [2] TIRHUTA SIGN CANDRABINDU..TIRHUTA SIGN ANUSVARA\n                                                if (0x114bf <= code && code <= 0x114c0) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x114c2) {\n                                                    // Mc       TIRHUTA SIGN VISARGA\n                                                    if (0x114c1 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] TIRHUTA SIGN VIRAMA..TIRHUTA SIGN NUKTA\n                                                    if (0x114c2 <= code && code <= 0x114c3) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x115b0) {\n                                                // Mc       SIDDHAM VOWEL SIGN AA\n                                                if (0x115af === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x115b2) {\n                                                    // Mc   [2] SIDDHAM VOWEL SIGN I..SIDDHAM VOWEL SIGN II\n                                                    if (0x115b0 <= code && code <= 0x115b1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] SIDDHAM VOWEL SIGN U..SIDDHAM VOWEL SIGN VOCALIC RR\n                                                    if (0x115b2 <= code && code <= 0x115b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11630) {\n                                        if (code < 0x115be) {\n                                            if (code < 0x115bc) {\n                                                // Mc   [4] SIDDHAM VOWEL SIGN E..SIDDHAM VOWEL SIGN AU\n                                                if (0x115b8 <= code && code <= 0x115bb) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SIDDHAM SIGN CANDRABINDU..SIDDHAM SIGN ANUSVARA\n                                                if (0x115bc <= code && code <= 0x115bd) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x115bf) {\n                                                // Mc       SIDDHAM SIGN VISARGA\n                                                if (0x115be === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x115dc) {\n                                                    // Mn   [2] SIDDHAM SIGN VIRAMA..SIDDHAM SIGN NUKTA\n                                                    if (0x115bf <= code && code <= 0x115c0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] SIDDHAM VOWEL SIGN ALTERNATE U..SIDDHAM VOWEL SIGN ALTERNATE UU\n                                                    if (0x115dc <= code && code <= 0x115dd) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1163d) {\n                                            if (code < 0x11633) {\n                                                // Mc   [3] MODI VOWEL SIGN AA..MODI VOWEL SIGN II\n                                                if (0x11630 <= code && code <= 0x11632) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1163b) {\n                                                    // Mn   [8] MODI VOWEL SIGN U..MODI VOWEL SIGN AI\n                                                    if (0x11633 <= code && code <= 0x1163a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] MODI VOWEL SIGN O..MODI VOWEL SIGN AU\n                                                    if (0x1163b <= code && code <= 0x1163c) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1163e) {\n                                                // Mn       MODI SIGN ANUSVARA\n                                                if (0x1163d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1163f) {\n                                                    // Mc       MODI SIGN VISARGA\n                                                    if (0x1163e === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] MODI SIGN VIRAMA..MODI SIGN ARDHACANDRA\n                                                    if (0x1163f <= code && code <= 0x11640) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1193f) {\n                                if (code < 0x11727) {\n                                    if (code < 0x116b6) {\n                                        if (code < 0x116ad) {\n                                            // Mn       TAKRI SIGN ANUSVARA\n                                            if (0x116ab === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                            // Mc       TAKRI SIGN VISARGA\n                                            if (0x116ac === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x116ae) {\n                                                // Mn       TAKRI VOWEL SIGN AA\n                                                if (0x116ad === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x116b0) {\n                                                    // Mc   [2] TAKRI VOWEL SIGN I..TAKRI VOWEL SIGN II\n                                                    if (0x116ae <= code && code <= 0x116af) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] TAKRI VOWEL SIGN U..TAKRI VOWEL SIGN AU\n                                                    if (0x116b0 <= code && code <= 0x116b5) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1171d) {\n                                            // Mc       TAKRI SIGN VIRAMA\n                                            if (0x116b6 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       TAKRI SIGN NUKTA\n                                            if (0x116b7 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11722) {\n                                                // Mn   [3] AHOM CONSONANT SIGN MEDIAL LA..AHOM CONSONANT SIGN MEDIAL LIGATING RA\n                                                if (0x1171d <= code && code <= 0x1171f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11726) {\n                                                    // Mn   [4] AHOM VOWEL SIGN I..AHOM VOWEL SIGN UU\n                                                    if (0x11722 <= code && code <= 0x11725) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc       AHOM VOWEL SIGN E\n                                                    if (0x11726 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11930) {\n                                        if (code < 0x1182f) {\n                                            if (code < 0x1182c) {\n                                                // Mn   [5] AHOM VOWEL SIGN AW..AHOM SIGN KILLER\n                                                if (0x11727 <= code && code <= 0x1172b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [3] DOGRA VOWEL SIGN AA..DOGRA VOWEL SIGN II\n                                                if (0x1182c <= code && code <= 0x1182e) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11838) {\n                                                // Mn   [9] DOGRA VOWEL SIGN U..DOGRA SIGN ANUSVARA\n                                                if (0x1182f <= code && code <= 0x11837) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11839) {\n                                                    // Mc       DOGRA SIGN VISARGA\n                                                    if (0x11838 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] DOGRA SIGN VIRAMA..DOGRA SIGN NUKTA\n                                                    if (0x11839 <= code && code <= 0x1183a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1193b) {\n                                            if (code < 0x11931) {\n                                                // Mc       DIVES AKURU VOWEL SIGN AA\n                                                if (0x11930 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11937) {\n                                                    // Mc   [5] DIVES AKURU VOWEL SIGN I..DIVES AKURU VOWEL SIGN E\n                                                    if (0x11931 <= code && code <= 0x11935) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] DIVES AKURU VOWEL SIGN AI..DIVES AKURU VOWEL SIGN O\n                                                    if (0x11937 <= code && code <= 0x11938) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1193d) {\n                                                // Mn   [2] DIVES AKURU SIGN ANUSVARA..DIVES AKURU SIGN CANDRABINDU\n                                                if (0x1193b <= code && code <= 0x1193c) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DIVES AKURU SIGN HALANTA\n                                                if (0x1193d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DIVES AKURU VIRAMA\n                                                if (0x1193e === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11a01) {\n                                    if (code < 0x119d1) {\n                                        if (code < 0x11941) {\n                                            // Lo       DIVES AKURU PREFIXED NASAL SIGN\n                                            if (0x1193f === code) {\n                                                return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                            }\n                                            // Mc       DIVES AKURU MEDIAL YA\n                                            if (0x11940 === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11942) {\n                                                // Lo       DIVES AKURU INITIAL RA\n                                                if (0x11941 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       DIVES AKURU MEDIAL RA\n                                                if (0x11942 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       DIVES AKURU SIGN NUKTA\n                                                if (0x11943 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x119dc) {\n                                            if (code < 0x119d4) {\n                                                // Mc   [3] NANDINAGARI VOWEL SIGN AA..NANDINAGARI VOWEL SIGN II\n                                                if (0x119d1 <= code && code <= 0x119d3) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x119da) {\n                                                    // Mn   [4] NANDINAGARI VOWEL SIGN U..NANDINAGARI VOWEL SIGN VOCALIC RR\n                                                    if (0x119d4 <= code && code <= 0x119d7) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] NANDINAGARI VOWEL SIGN E..NANDINAGARI VOWEL SIGN AI\n                                                    if (0x119da <= code && code <= 0x119db) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x119e0) {\n                                                // Mc   [4] NANDINAGARI VOWEL SIGN O..NANDINAGARI SIGN VISARGA\n                                                if (0x119dc <= code && code <= 0x119df) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn       NANDINAGARI SIGN VIRAMA\n                                                if (0x119e0 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       NANDINAGARI VOWEL SIGN PRISHTHAMATRA E\n                                                if (0x119e4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11a47) {\n                                        if (code < 0x11a39) {\n                                            if (code < 0x11a33) {\n                                                // Mn  [10] ZANABAZAR SQUARE VOWEL SIGN I..ZANABAZAR SQUARE VOWEL LENGTH MARK\n                                                if (0x11a01 <= code && code <= 0x11a0a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [6] ZANABAZAR SQUARE FINAL CONSONANT MARK..ZANABAZAR SQUARE SIGN ANUSVARA\n                                                if (0x11a33 <= code && code <= 0x11a38) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11a3a) {\n                                                // Mc       ZANABAZAR SQUARE SIGN VISARGA\n                                                if (0x11a39 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a3b) {\n                                                    // Lo       ZANABAZAR SQUARE CLUSTER-INITIAL LETTER RA\n                                                    if (0x11a3a === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [4] ZANABAZAR SQUARE CLUSTER-FINAL LETTER YA..ZANABAZAR SQUARE CLUSTER-FINAL LETTER VA\n                                                    if (0x11a3b <= code && code <= 0x11a3e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11a59) {\n                                            if (code < 0x11a51) {\n                                                // Mn       ZANABAZAR SQUARE SUBJOINER\n                                                if (0x11a47 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a57) {\n                                                    // Mn   [6] SOYOMBO VOWEL SIGN I..SOYOMBO VOWEL SIGN OE\n                                                    if (0x11a51 <= code && code <= 0x11a56) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] SOYOMBO VOWEL SIGN AI..SOYOMBO VOWEL SIGN AU\n                                                    if (0x11a57 <= code && code <= 0x11a58) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11a84) {\n                                                // Mn   [3] SOYOMBO VOWEL SIGN VOCALIC R..SOYOMBO VOWEL LENGTH MARK\n                                                if (0x11a59 <= code && code <= 0x11a5b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11a8a) {\n                                                    // Lo   [6] SOYOMBO SIGN JIHVAMULIYA..SOYOMBO CLUSTER-INITIAL LETTER SA\n                                                    if (0x11a84 <= code && code <= 0x11a89) {\n                                                        return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [13] SOYOMBO FINAL CONSONANT SIGN G..SOYOMBO SIGN ANUSVARA\n                                                    if (0x11a8a <= code && code <= 0x11a96) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x16f51) {\n                            if (code < 0x11d90) {\n                                if (code < 0x11cb1) {\n                                    if (code < 0x11c3e) {\n                                        if (code < 0x11c2f) {\n                                            if (code < 0x11a98) {\n                                                // Mc       SOYOMBO SIGN VISARGA\n                                                if (0x11a97 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] SOYOMBO GEMINATION MARK..SOYOMBO SUBJOINER\n                                                if (0x11a98 <= code && code <= 0x11a99) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11c30) {\n                                                // Mc       BHAIKSUKI VOWEL SIGN AA\n                                                if (0x11c2f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11c38) {\n                                                    // Mn   [7] BHAIKSUKI VOWEL SIGN I..BHAIKSUKI VOWEL SIGN VOCALIC L\n                                                    if (0x11c30 <= code && code <= 0x11c36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] BHAIKSUKI VOWEL SIGN E..BHAIKSUKI SIGN ANUSVARA\n                                                    if (0x11c38 <= code && code <= 0x11c3d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11c92) {\n                                            // Mc       BHAIKSUKI SIGN VISARGA\n                                            if (0x11c3e === code) {\n                                                return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                            }\n                                            // Mn       BHAIKSUKI SIGN VIRAMA\n                                            if (0x11c3f === code) {\n                                                return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11ca9) {\n                                                // Mn  [22] MARCHEN SUBJOINED LETTER KA..MARCHEN SUBJOINED LETTER ZA\n                                                if (0x11c92 <= code && code <= 0x11ca7) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11caa) {\n                                                    // Mc       MARCHEN SUBJOINED LETTER YA\n                                                    if (0x11ca9 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] MARCHEN SUBJOINED LETTER RA..MARCHEN VOWEL SIGN AA\n                                                    if (0x11caa <= code && code <= 0x11cb0) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x11d3a) {\n                                        if (code < 0x11cb4) {\n                                            if (code < 0x11cb2) {\n                                                // Mc       MARCHEN VOWEL SIGN I\n                                                if (0x11cb1 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [2] MARCHEN VOWEL SIGN U..MARCHEN VOWEL SIGN E\n                                                if (0x11cb2 <= code && code <= 0x11cb3) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11cb5) {\n                                                // Mc       MARCHEN VOWEL SIGN O\n                                                if (0x11cb4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d31) {\n                                                    // Mn   [2] MARCHEN SIGN ANUSVARA..MARCHEN SIGN CANDRABINDU\n                                                    if (0x11cb5 <= code && code <= 0x11cb6) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [6] MASARAM GONDI VOWEL SIGN AA..MASARAM GONDI VOWEL SIGN VOCALIC R\n                                                    if (0x11d31 <= code && code <= 0x11d36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11d46) {\n                                            if (code < 0x11d3c) {\n                                                // Mn       MASARAM GONDI VOWEL SIGN E\n                                                if (0x11d3a === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d3f) {\n                                                    // Mn   [2] MASARAM GONDI VOWEL SIGN AI..MASARAM GONDI VOWEL SIGN O\n                                                    if (0x11d3c <= code && code <= 0x11d3d) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [7] MASARAM GONDI VOWEL SIGN AU..MASARAM GONDI VIRAMA\n                                                    if (0x11d3f <= code && code <= 0x11d45) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11d47) {\n                                                // Lo       MASARAM GONDI REPHA\n                                                if (0x11d46 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11d8a) {\n                                                    // Mn       MASARAM GONDI RA-KARA\n                                                    if (0x11d47 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [5] GUNJALA GONDI VOWEL SIGN AA..GUNJALA GONDI VOWEL SIGN UU\n                                                    if (0x11d8a <= code && code <= 0x11d8e) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x11f36) {\n                                    if (code < 0x11ef3) {\n                                        if (code < 0x11d95) {\n                                            if (code < 0x11d93) {\n                                                // Mn   [2] GUNJALA GONDI VOWEL SIGN EE..GUNJALA GONDI VOWEL SIGN AI\n                                                if (0x11d90 <= code && code <= 0x11d91) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] GUNJALA GONDI VOWEL SIGN OO..GUNJALA GONDI VOWEL SIGN AU\n                                                if (0x11d93 <= code && code <= 0x11d94) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11d96) {\n                                                // Mn       GUNJALA GONDI SIGN ANUSVARA\n                                                if (0x11d95 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       GUNJALA GONDI SIGN VISARGA\n                                                if (0x11d96 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       GUNJALA GONDI VIRAMA\n                                                if (0x11d97 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x11f02) {\n                                            if (code < 0x11ef5) {\n                                                // Mn   [2] MAKASAR VOWEL SIGN I..MAKASAR VOWEL SIGN U\n                                                if (0x11ef3 <= code && code <= 0x11ef4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11f00) {\n                                                    // Mc   [2] MAKASAR VOWEL SIGN E..MAKASAR VOWEL SIGN O\n                                                    if (0x11ef5 <= code && code <= 0x11ef6) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] KAWI SIGN CANDRABINDU..KAWI SIGN ANUSVARA\n                                                    if (0x11f00 <= code && code <= 0x11f01) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11f03) {\n                                                // Lo       KAWI SIGN REPHA\n                                                if (0x11f02 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.PREPEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x11f34) {\n                                                    // Mc       KAWI SIGN VISARGA\n                                                    if (0x11f03 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mc   [2] KAWI VOWEL SIGN AA..KAWI VOWEL SIGN ALTERNATE AA\n                                                    if (0x11f34 <= code && code <= 0x11f35) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x13430) {\n                                        if (code < 0x11f40) {\n                                            if (code < 0x11f3e) {\n                                                // Mn   [5] KAWI VOWEL SIGN I..KAWI VOWEL SIGN VOCALIC R\n                                                if (0x11f36 <= code && code <= 0x11f3a) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc   [2] KAWI VOWEL SIGN E..KAWI VOWEL SIGN AI\n                                                if (0x11f3e <= code && code <= 0x11f3f) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x11f41) {\n                                                // Mn       KAWI VOWEL SIGN EU\n                                                if (0x11f40 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       KAWI SIGN KILLER\n                                                if (0x11f41 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                                // Mn       KAWI CONJOINER\n                                                if (0x11f42 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x16af0) {\n                                            if (code < 0x13440) {\n                                                // Cf  [16] EGYPTIAN HIEROGLYPH VERTICAL JOINER..EGYPTIAN HIEROGLYPH END WALLED ENCLOSURE\n                                                if (0x13430 <= code && code <= 0x1343f) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x13447) {\n                                                    // Mn       EGYPTIAN HIEROGLYPH MIRROR HORIZONTALLY\n                                                    if (0x13440 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [15] EGYPTIAN HIEROGLYPH MODIFIER DAMAGED AT TOP START..EGYPTIAN HIEROGLYPH MODIFIER DAMAGED\n                                                    if (0x13447 <= code && code <= 0x13455) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x16b30) {\n                                                // Mn   [5] BASSA VAH COMBINING HIGH TONE..BASSA VAH COMBINING HIGH-LOW TONE\n                                                if (0x16af0 <= code && code <= 0x16af4) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x16f4f) {\n                                                    // Mn   [7] PAHAWH HMONG MARK CIM TUB..PAHAWH HMONG MARK CIM TAUM\n                                                    if (0x16b30 <= code && code <= 0x16b36) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       MIAO SIGN CONSONANT MODIFIER BAR\n                                                    if (0x16f4f === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1da84) {\n                                if (code < 0x1d167) {\n                                    if (code < 0x1bca0) {\n                                        if (code < 0x16fe4) {\n                                            if (code < 0x16f8f) {\n                                                // Mc  [55] MIAO SIGN ASPIRATION..MIAO VOWEL SIGN UI\n                                                if (0x16f51 <= code && code <= 0x16f87) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] MIAO TONE RIGHT..MIAO TONE BELOW\n                                                if (0x16f8f <= code && code <= 0x16f92) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x16ff0) {\n                                                // Mn       KHITAN SMALL SCRIPT FILLER\n                                                if (0x16fe4 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1bc9d) {\n                                                    // Mc   [2] VIETNAMESE ALTERNATE READING MARK CA..VIETNAMESE ALTERNATE READING MARK NHAY\n                                                    if (0x16ff0 <= code && code <= 0x16ff1) {\n                                                        return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [2] DUPLOYAN THICK LETTER SELECTOR..DUPLOYAN DOUBLE MARK\n                                                    if (0x1bc9d <= code && code <= 0x1bc9e) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1cf30) {\n                                            if (code < 0x1cf00) {\n                                                // Cf   [4] SHORTHAND FORMAT LETTER OVERLAP..SHORTHAND FORMAT UP STEP\n                                                if (0x1bca0 <= code && code <= 0x1bca3) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                // Mn  [46] ZNAMENNY COMBINING MARK GORAZDO NIZKO S KRYZHEM ON LEFT..ZNAMENNY COMBINING MARK KRYZH ON LEFT\n                                                if (0x1cf00 <= code && code <= 0x1cf2d) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1d165) {\n                                                // Mn  [23] ZNAMENNY COMBINING TONAL RANGE MARK MRACHNO..ZNAMENNY PRIZNAK MODIFIER ROG\n                                                if (0x1cf30 <= code && code <= 0x1cf46) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MUSICAL SYMBOL COMBINING STEM\n                                                if (0x1d165 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                                // Mc       MUSICAL SYMBOL COMBINING SPRECHGESANG STEM\n                                                if (0x1d166 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1d185) {\n                                        if (code < 0x1d16e) {\n                                            if (code < 0x1d16d) {\n                                                // Mn   [3] MUSICAL SYMBOL COMBINING TREMOLO-1..MUSICAL SYMBOL COMBINING TREMOLO-3\n                                                if (0x1d167 <= code && code <= 0x1d169) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mc       MUSICAL SYMBOL COMBINING AUGMENTATION DOT\n                                                if (0x1d16d === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.SPACINGMARK;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1d173) {\n                                                // Mc   [5] MUSICAL SYMBOL COMBINING FLAG-1..MUSICAL SYMBOL COMBINING FLAG-5\n                                                if (0x1d16e <= code && code <= 0x1d172) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1d17b) {\n                                                    // Cf   [8] MUSICAL SYMBOL BEGIN BEAM..MUSICAL SYMBOL END PHRASE\n                                                    if (0x1d173 <= code && code <= 0x1d17a) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [8] MUSICAL SYMBOL COMBINING ACCENT..MUSICAL SYMBOL COMBINING LOURE\n                                                    if (0x1d17b <= code && code <= 0x1d182) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1da00) {\n                                            if (code < 0x1d1aa) {\n                                                // Mn   [7] MUSICAL SYMBOL COMBINING DOIT..MUSICAL SYMBOL COMBINING TRIPLE TONGUE\n                                                if (0x1d185 <= code && code <= 0x1d18b) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1d242) {\n                                                    // Mn   [4] MUSICAL SYMBOL COMBINING DOWN BOW..MUSICAL SYMBOL COMBINING SNAP PIZZICATO\n                                                    if (0x1d1aa <= code && code <= 0x1d1ad) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [3] COMBINING GREEK MUSICAL TRISEME..COMBINING GREEK MUSICAL PENTASEME\n                                                    if (0x1d242 <= code && code <= 0x1d244) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1da3b) {\n                                                // Mn  [55] SIGNWRITING HEAD RIM..SIGNWRITING AIR SUCKING IN\n                                                if (0x1da00 <= code && code <= 0x1da36) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1da75) {\n                                                    // Mn  [50] SIGNWRITING MOUTH CLOSED NEUTRAL..SIGNWRITING EXCITEMENT\n                                                    if (0x1da3b <= code && code <= 0x1da6c) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       SIGNWRITING UPPER BODY TILTING FROM HIP JOINTS\n                                                    if (0x1da75 === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            else {\n                                if (code < 0x1e2ec) {\n                                    if (code < 0x1e01b) {\n                                        if (code < 0x1daa1) {\n                                            if (code < 0x1da9b) {\n                                                // Mn       SIGNWRITING LOCATION HEAD NECK\n                                                if (0x1da84 === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [5] SIGNWRITING FILL MODIFIER-2..SIGNWRITING FILL MODIFIER-6\n                                                if (0x1da9b <= code && code <= 0x1da9f) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e000) {\n                                                // Mn  [15] SIGNWRITING ROTATION MODIFIER-2..SIGNWRITING ROTATION MODIFIER-16\n                                                if (0x1daa1 <= code && code <= 0x1daaf) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e008) {\n                                                    // Mn   [7] COMBINING GLAGOLITIC LETTER AZU..COMBINING GLAGOLITIC LETTER ZHIVETE\n                                                    if (0x1e000 <= code && code <= 0x1e006) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn  [17] COMBINING GLAGOLITIC LETTER ZEMLJA..COMBINING GLAGOLITIC LETTER HERU\n                                                    if (0x1e008 <= code && code <= 0x1e018) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0x1e08f) {\n                                            if (code < 0x1e023) {\n                                                // Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\n                                                if (0x1e01b <= code && code <= 0x1e021) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e026) {\n                                                    // Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\n                                                    if (0x1e023 <= code && code <= 0x1e024) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\n                                                    if (0x1e026 <= code && code <= 0x1e02a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e130) {\n                                                // Mn       COMBINING CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I\n                                                if (0x1e08f === code) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1e2ae) {\n                                                    // Mn   [7] NYIAKENG PUACHUE HMONG TONE-B..NYIAKENG PUACHUE HMONG TONE-D\n                                                    if (0x1e130 <= code && code <= 0x1e136) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Mn       TOTO SIGN RISING TONE\n                                                    if (0x1e2ae === code) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    if (code < 0x1f3fb) {\n                                        if (code < 0x1e8d0) {\n                                            if (code < 0x1e4ec) {\n                                                // Mn   [4] WANCHO TONE TUP..WANCHO TONE KOINI\n                                                if (0x1e2ec <= code && code <= 0x1e2ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                // Mn   [4] NAG MUNDARI SIGN MUHOR..NAG MUNDARI SIGN SUTUH\n                                                if (0x1e4ec <= code && code <= 0x1e4ef) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0x1e944) {\n                                                // Mn   [7] MENDE KIKAKUI COMBINING NUMBER TEENS..MENDE KIKAKUI COMBINING NUMBER MILLIONS\n                                                if (0x1e8d0 <= code && code <= 0x1e8d6) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0x1f1e6) {\n                                                    // Mn   [7] ADLAM ALIF LENGTHENER..ADLAM NUKTA\n                                                    if (0x1e944 <= code && code <= 0x1e94a) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // So  [26] REGIONAL INDICATOR SYMBOL LETTER A..REGIONAL INDICATOR SYMBOL LETTER Z\n                                                    if (0x1f1e6 <= code && code <= 0x1f1ff) {\n                                                        return boundaries_1.CLUSTER_BREAK.REGIONAL_INDICATOR;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (code < 0xe0080) {\n                                            if (code < 0xe0000) {\n                                                // Sk   [5] EMOJI MODIFIER FITZPATRICK TYPE-1-2..EMOJI MODIFIER FITZPATRICK TYPE-6\n                                                if (0x1f3fb <= code && code <= 0x1f3ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe0020) {\n                                                    // Cn       <reserved-E0000>\n                                                    // Cf       LANGUAGE TAG\n                                                    // Cn  [30] <reserved-E0002>..<reserved-E001F>\n                                                    if (0xe0000 <= code && code <= 0xe001f) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cf  [96] TAG SPACE..CANCEL TAG\n                                                    if (0xe0020 <= code && code <= 0xe007f) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            if (code < 0xe0100) {\n                                                // Cn [128] <reserved-E0080>..<reserved-E00FF>\n                                                if (0xe0080 <= code && code <= 0xe00ff) {\n                                                    return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                }\n                                            }\n                                            else {\n                                                if (code < 0xe01f0) {\n                                                    // Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\n                                                    if (0xe0100 <= code && code <= 0xe01ef) {\n                                                        return boundaries_1.CLUSTER_BREAK.EXTEND;\n                                                    }\n                                                }\n                                                else {\n                                                    // Cn [3600] <reserved-E01F0>..<reserved-E0FFF>\n                                                    if (0xe01f0 <= code && code <= 0xe0fff) {\n                                                        return boundaries_1.CLUSTER_BREAK.CONTROL;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // unlisted code points are treated as a break property of \"Other\"\n        return boundaries_1.CLUSTER_BREAK.OTHER;\n    }\n    /**\n     * Given a Unicode code point, returns if symbol is an extended pictographic or some other break\n     * @param code {number} Unicode code point\n     * @returns {number}\n     */\n    static getEmojiProperty(code) {\n        // emoji property taken from:\n        // https://www.unicode.org/Public/UCD/latest/ucd/emoji/emoji-data.txt\n        // and generated by\n        // node ./scripts/generate-emoji-extended-pictographic.js\n        if (code < 0x27b0) {\n            if (code < 0x2600) {\n                if (code < 0x2328) {\n                    if (code < 0x2122) {\n                        if (code < 0x203c) {\n                            // E0.6   [1] (\u00A9\uFE0F)       copyright\n                            if (0xa9 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u00AE\uFE0F)       registered\n                            if (0xae === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            // E0.6   [1] (\u203C\uFE0F)       double exclamation mark\n                            if (0x203c === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2049\uFE0F)       exclamation question mark\n                            if (0x2049 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2194) {\n                            // E0.6   [1] (\u2122\uFE0F)       trade mark\n                            if (0x2122 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2139\uFE0F)       information\n                            if (0x2139 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x21a9) {\n                                // E0.6   [6] (\u2194\uFE0F..\u2199\uFE0F)    left-right arrow..down-left arrow\n                                if (0x2194 <= code && code <= 0x2199) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x231a) {\n                                    // E0.6   [2] (\u21A9\uFE0F..\u21AA\uFE0F)    right arrow curving left..left arrow curving right\n                                    if (0x21a9 <= code && code <= 0x21aa) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [2] (\u231A..\u231B)    watch..hourglass done\n                                    if (0x231a <= code && code <= 0x231b) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x24c2) {\n                        if (code < 0x23cf) {\n                            // E1.0   [1] (\u2328\uFE0F)       keyboard\n                            if (0x2328 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.0   [1] (\u2388)       HELM SYMBOL\n                            if (0x2388 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x23e9) {\n                                // E1.0   [1] (\u23CF\uFE0F)       eject button\n                                if (0x23cf === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x23f8) {\n                                    // E0.6   [4] (\u23E9..\u23EC)    fast-forward button..fast down button\n                                    // E0.7   [2] (\u23ED\uFE0F..\u23EE\uFE0F)    next track button..last track button\n                                    // E1.0   [1] (\u23EF\uFE0F)       play or pause button\n                                    // E0.6   [1] (\u23F0)       alarm clock\n                                    // E1.0   [2] (\u23F1\uFE0F..\u23F2\uFE0F)    stopwatch..timer clock\n                                    // E0.6   [1] (\u23F3)       hourglass not done\n                                    if (0x23e9 <= code && code <= 0x23f3) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.7   [3] (\u23F8\uFE0F..\u23FA\uFE0F)    pause button..record button\n                                    if (0x23f8 <= code && code <= 0x23fa) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x25b6) {\n                            if (code < 0x25aa) {\n                                // E0.6   [1] (\u24C2\uFE0F)       circled M\n                                if (0x24c2 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [2] (\u25AA\uFE0F..\u25AB\uFE0F)    black small square..white small square\n                                if (0x25aa <= code && code <= 0x25ab) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x25c0) {\n                                // E0.6   [1] (\u25B6\uFE0F)       play button\n                                if (0x25b6 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x25fb) {\n                                    // E0.6   [1] (\u25C0\uFE0F)       reverse button\n                                    if (0x25c0 === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [4] (\u25FB\uFE0F..\u25FE)    white medium square..black medium-small square\n                                    if (0x25fb <= code && code <= 0x25fe) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x2733) {\n                    if (code < 0x2714) {\n                        if (code < 0x2614) {\n                            if (code < 0x2607) {\n                                // E0.6   [2] (\u2600\uFE0F..\u2601\uFE0F)    sun..cloud\n                                // E0.7   [2] (\u2602\uFE0F..\u2603\uFE0F)    umbrella..snowman\n                                // E1.0   [1] (\u2604\uFE0F)       comet\n                                // E0.0   [1] (\u2605)       BLACK STAR\n                                if (0x2600 <= code && code <= 0x2605) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.0   [7] (\u2607..\u260D)    LIGHTNING..OPPOSITION\n                                // E0.6   [1] (\u260E\uFE0F)       telephone\n                                // E0.0   [2] (\u260F..\u2610)    WHITE TELEPHONE..BALLOT BOX\n                                // E0.6   [1] (\u2611\uFE0F)       check box with check\n                                // E0.0   [1] (\u2612)       BALLOT BOX WITH X\n                                if (0x2607 <= code && code <= 0x2612) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x2690) {\n                                // E0.6   [2] (\u2614..\u2615)    umbrella with rain drops..hot beverage\n                                // E0.0   [2] (\u2616..\u2617)    WHITE SHOGI PIECE..BLACK SHOGI PIECE\n                                // E1.0   [1] (\u2618\uFE0F)       shamrock\n                                // E0.0   [4] (\u2619..\u261C)    REVERSED ROTATED FLORAL HEART BULLET..WHITE LEFT POINTING INDEX\n                                // E0.6   [1] (\u261D\uFE0F)       index pointing up\n                                // E0.0   [2] (\u261E..\u261F)    WHITE RIGHT POINTING INDEX..WHITE DOWN POINTING INDEX\n                                // E1.0   [1] (\u2620\uFE0F)       skull and crossbones\n                                // E0.0   [1] (\u2621)       CAUTION SIGN\n                                // E1.0   [2] (\u2622\uFE0F..\u2623\uFE0F)    radioactive..biohazard\n                                // E0.0   [2] (\u2624..\u2625)    CADUCEUS..ANKH\n                                // E1.0   [1] (\u2626\uFE0F)       orthodox cross\n                                // E0.0   [3] (\u2627..\u2629)    CHI RHO..CROSS OF JERUSALEM\n                                // E0.7   [1] (\u262A\uFE0F)       star and crescent\n                                // E0.0   [3] (\u262B..\u262D)    FARSI SYMBOL..HAMMER AND SICKLE\n                                // E1.0   [1] (\u262E\uFE0F)       peace symbol\n                                // E0.7   [1] (\u262F\uFE0F)       yin yang\n                                // E0.0   [8] (\u2630..\u2637)    TRIGRAM FOR HEAVEN..TRIGRAM FOR EARTH\n                                // E0.7   [2] (\u2638\uFE0F..\u2639\uFE0F)    wheel of dharma..frowning face\n                                // E0.6   [1] (\u263A\uFE0F)       smiling face\n                                // E0.0   [5] (\u263B..\u263F)    BLACK SMILING FACE..MERCURY\n                                // E4.0   [1] (\u2640\uFE0F)       female sign\n                                // E0.0   [1] (\u2641)       EARTH\n                                // E4.0   [1] (\u2642\uFE0F)       male sign\n                                // E0.0   [5] (\u2643..\u2647)    JUPITER..PLUTO\n                                // E0.6  [12] (\u2648..\u2653)    Aries..Pisces\n                                // E0.0  [11] (\u2654..\u265E)    WHITE CHESS KING..BLACK CHESS KNIGHT\n                                // E11.0  [1] (\u265F\uFE0F)       chess pawn\n                                // E0.6   [1] (\u2660\uFE0F)       spade suit\n                                // E0.0   [2] (\u2661..\u2662)    WHITE HEART SUIT..WHITE DIAMOND SUIT\n                                // E0.6   [1] (\u2663\uFE0F)       club suit\n                                // E0.0   [1] (\u2664)       WHITE SPADE SUIT\n                                // E0.6   [2] (\u2665\uFE0F..\u2666\uFE0F)    heart suit..diamond suit\n                                // E0.0   [1] (\u2667)       WHITE CLUB SUIT\n                                // E0.6   [1] (\u2668\uFE0F)       hot springs\n                                // E0.0  [18] (\u2669..\u267A)    QUARTER NOTE..RECYCLING SYMBOL FOR GENERIC MATERIALS\n                                // E0.6   [1] (\u267B\uFE0F)       recycling symbol\n                                // E0.0   [2] (\u267C..\u267D)    RECYCLED PAPER SYMBOL..PARTIALLY-RECYCLED PAPER SYMBOL\n                                // E11.0  [1] (\u267E\uFE0F)       infinity\n                                // E0.6   [1] (\u267F)       wheelchair symbol\n                                // E0.0   [6] (\u2680..\u2685)    DIE FACE-1..DIE FACE-6\n                                if (0x2614 <= code && code <= 0x2685) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x2708) {\n                                    // E0.0   [2] (\u2690..\u2691)    WHITE FLAG..BLACK FLAG\n                                    // E1.0   [1] (\u2692\uFE0F)       hammer and pick\n                                    // E0.6   [1] (\u2693)       anchor\n                                    // E1.0   [1] (\u2694\uFE0F)       crossed swords\n                                    // E4.0   [1] (\u2695\uFE0F)       medical symbol\n                                    // E1.0   [2] (\u2696\uFE0F..\u2697\uFE0F)    balance scale..alembic\n                                    // E0.0   [1] (\u2698)       FLOWER\n                                    // E1.0   [1] (\u2699\uFE0F)       gear\n                                    // E0.0   [1] (\u269A)       STAFF OF HERMES\n                                    // E1.0   [2] (\u269B\uFE0F..\u269C\uFE0F)    atom symbol..fleur-de-lis\n                                    // E0.0   [3] (\u269D..\u269F)    OUTLINED WHITE STAR..THREE LINES CONVERGING LEFT\n                                    // E0.6   [2] (\u26A0\uFE0F..\u26A1)    warning..high voltage\n                                    // E0.0   [5] (\u26A2..\u26A6)    DOUBLED FEMALE SIGN..MALE WITH STROKE SIGN\n                                    // E13.0  [1] (\u26A7\uFE0F)       transgender symbol\n                                    // E0.0   [2] (\u26A8..\u26A9)    VERTICAL MALE WITH STROKE SIGN..HORIZONTAL MALE WITH STROKE SIGN\n                                    // E0.6   [2] (\u26AA..\u26AB)    white circle..black circle\n                                    // E0.0   [4] (\u26AC..\u26AF)    MEDIUM SMALL WHITE CIRCLE..UNMARRIED PARTNERSHIP SYMBOL\n                                    // E1.0   [2] (\u26B0\uFE0F..\u26B1\uFE0F)    coffin..funeral urn\n                                    // E0.0  [11] (\u26B2..\u26BC)    NEUTER..SESQUIQUADRATE\n                                    // E0.6   [2] (\u26BD..\u26BE)    soccer ball..baseball\n                                    // E0.0   [5] (\u26BF..\u26C3)    SQUARED KEY..BLACK DRAUGHTS KING\n                                    // E0.6   [2] (\u26C4..\u26C5)    snowman without snow..sun behind cloud\n                                    // E0.0   [2] (\u26C6..\u26C7)    RAIN..BLACK SNOWMAN\n                                    // E0.7   [1] (\u26C8\uFE0F)       cloud with lightning and rain\n                                    // E0.0   [5] (\u26C9..\u26CD)    TURNED WHITE SHOGI PIECE..DISABLED CAR\n                                    // E0.6   [1] (\u26CE)       Ophiuchus\n                                    // E0.7   [1] (\u26CF\uFE0F)       pick\n                                    // E0.0   [1] (\u26D0)       CAR SLIDING\n                                    // E0.7   [1] (\u26D1\uFE0F)       rescue worker\u2019s helmet\n                                    // E0.0   [1] (\u26D2)       CIRCLED CROSSING LANES\n                                    // E0.7   [1] (\u26D3\uFE0F)       chains\n                                    // E0.6   [1] (\u26D4)       no entry\n                                    // E0.0  [20] (\u26D5..\u26E8)    ALTERNATE ONE-WAY LEFT WAY TRAFFIC..BLACK CROSS ON SHIELD\n                                    // E0.7   [1] (\u26E9\uFE0F)       shinto shrine\n                                    // E0.6   [1] (\u26EA)       church\n                                    // E0.0   [5] (\u26EB..\u26EF)    CASTLE..MAP SYMBOL FOR LIGHTHOUSE\n                                    // E0.7   [2] (\u26F0\uFE0F..\u26F1\uFE0F)    mountain..umbrella on ground\n                                    // E0.6   [2] (\u26F2..\u26F3)    fountain..flag in hole\n                                    // E0.7   [1] (\u26F4\uFE0F)       ferry\n                                    // E0.6   [1] (\u26F5)       sailboat\n                                    // E0.0   [1] (\u26F6)       SQUARE FOUR CORNERS\n                                    // E0.7   [3] (\u26F7\uFE0F..\u26F9\uFE0F)    skier..person bouncing ball\n                                    // E0.6   [1] (\u26FA)       tent\n                                    // E0.0   [2] (\u26FB..\u26FC)    JAPANESE BANK SYMBOL..HEADSTONE GRAVEYARD SYMBOL\n                                    // E0.6   [1] (\u26FD)       fuel pump\n                                    // E0.0   [4] (\u26FE..\u2701)    CUP ON BLACK SQUARE..UPPER BLADE SCISSORS\n                                    // E0.6   [1] (\u2702\uFE0F)       scissors\n                                    // E0.0   [2] (\u2703..\u2704)    LOWER BLADE SCISSORS..WHITE SCISSORS\n                                    // E0.6   [1] (\u2705)       check mark button\n                                    if (0x2690 <= code && code <= 0x2705) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [5] (\u2708\uFE0F..\u270C\uFE0F)    airplane..victory hand\n                                    // E0.7   [1] (\u270D\uFE0F)       writing hand\n                                    // E0.0   [1] (\u270E)       LOWER RIGHT PENCIL\n                                    // E0.6   [1] (\u270F\uFE0F)       pencil\n                                    // E0.0   [2] (\u2710..\u2711)    UPPER RIGHT PENCIL..WHITE NIB\n                                    // E0.6   [1] (\u2712\uFE0F)       black nib\n                                    if (0x2708 <= code && code <= 0x2712) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x271d) {\n                            // E0.6   [1] (\u2714\uFE0F)       check mark\n                            if (0x2714 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u2716\uFE0F)       multiply\n                            if (0x2716 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x2721) {\n                                // E0.7   [1] (\u271D\uFE0F)       latin cross\n                                if (0x271d === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.7   [1] (\u2721\uFE0F)       star of David\n                                if (0x2721 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u2728)       sparkles\n                                if (0x2728 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x2753) {\n                        if (code < 0x2747) {\n                            if (code < 0x2744) {\n                                // E0.6   [2] (\u2733\uFE0F..\u2734\uFE0F)    eight-spoked asterisk..eight-pointed star\n                                if (0x2733 <= code && code <= 0x2734) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2744\uFE0F)       snowflake\n                                if (0x2744 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x274c) {\n                                // E0.6   [1] (\u2747\uFE0F)       sparkle\n                                if (0x2747 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u274C)       cross mark\n                                if (0x274c === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u274E)       cross mark button\n                                if (0x274e === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2763) {\n                            if (code < 0x2757) {\n                                // E0.6   [3] (\u2753..\u2755)    red question mark..white exclamation mark\n                                if (0x2753 <= code && code <= 0x2755) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2757)       red exclamation mark\n                                if (0x2757 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x2795) {\n                                // E1.0   [1] (\u2763\uFE0F)       heart exclamation\n                                // E0.6   [1] (\u2764\uFE0F)       red heart\n                                // E0.0   [3] (\u2765..\u2767)    ROTATED HEAVY BLACK HEART BULLET..ROTATED FLORAL HEART BULLET\n                                if (0x2763 <= code && code <= 0x2767) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x27a1) {\n                                    // E0.6   [3] (\u2795..\u2797)    plus..divide\n                                    if (0x2795 <= code && code <= 0x2797) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.6   [1] (\u27A1\uFE0F)       right arrow\n                                    if (0x27a1 === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (code < 0x1f201) {\n                if (code < 0x3297) {\n                    if (code < 0x2b1b) {\n                        if (code < 0x2934) {\n                            // E0.6   [1] (\u27B0)       curly loop\n                            if (0x27b0 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E1.0   [1] (\u27BF)       double curly loop\n                            if (0x27bf === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x2b05) {\n                                // E0.6   [2] (\u2934\uFE0F..\u2935\uFE0F)    right arrow curving up..right arrow curving down\n                                if (0x2934 <= code && code <= 0x2935) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [3] (\u2B05\uFE0F..\u2B07\uFE0F)    left arrow..down arrow\n                                if (0x2b05 <= code && code <= 0x2b07) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x2b55) {\n                            if (code < 0x2b50) {\n                                // E0.6   [2] (\u2B1B..\u2B1C)    black large square..white large square\n                                if (0x2b1b <= code && code <= 0x2b1c) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u2B50)       star\n                                if (0x2b50 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x3030) {\n                                // E0.6   [1] (\u2B55)       hollow red circle\n                                if (0x2b55 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\u3030\uFE0F)       wavy dash\n                                if (0x3030 === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                                // E0.6   [1] (\u303D\uFE0F)       part alternation mark\n                                if (0x303d === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1f16c) {\n                        if (code < 0x1f000) {\n                            // E0.6   [1] (\u3297\uFE0F)       Japanese \u201Ccongratulations\u201D button\n                            if (0x3297 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                            // E0.6   [1] (\u3299\uFE0F)       Japanese \u201Csecret\u201D button\n                            if (0x3299 === code) {\n                                return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                            }\n                        }\n                        else {\n                            if (code < 0x1f10d) {\n                                // E0.0   [4] (\uD83C\uDC00..\uD83C\uDC03)    MAHJONG TILE EAST WIND..MAHJONG TILE NORTH WIND\n                                // E0.6   [1] (\uD83C\uDC04)       mahjong red dragon\n                                // E0.0 [202] (\uD83C\uDC05..\uD83C\uDCCE)    MAHJONG TILE GREEN DRAGON..PLAYING CARD KING OF DIAMONDS\n                                // E0.6   [1] (\uD83C\uDCCF)       joker\n                                // E0.0  [48] (\uD83C\uDCD0..\uD83C\uDCFF)    <reserved-1F0D0>..<reserved-1F0FF>\n                                if (0x1f000 <= code && code <= 0x1f0ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f12f) {\n                                    // E0.0   [3] (\uD83C\uDD0D..\uD83C\uDD0F)    CIRCLED ZERO WITH SLASH..CIRCLED DOLLAR SIGN WITH OVERLAID BACKSLASH\n                                    if (0x1f10d <= code && code <= 0x1f10f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [1] (\uD83C\uDD2F)       COPYLEFT SYMBOL\n                                    if (0x1f12f === code) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f18e) {\n                            if (code < 0x1f17e) {\n                                // E0.0   [4] (\uD83C\uDD6C..\uD83C\uDD6F)    RAISED MR SIGN..CIRCLED HUMAN FIGURE\n                                // E0.6   [2] (\uD83C\uDD70\uFE0F..\uD83C\uDD71\uFE0F)    A button (blood type)..B button (blood type)\n                                if (0x1f16c <= code && code <= 0x1f171) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [2] (\uD83C\uDD7E\uFE0F..\uD83C\uDD7F\uFE0F)    O button (blood type)..P button\n                                if (0x1f17e <= code && code <= 0x1f17f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f191) {\n                                // E0.6   [1] (\uD83C\uDD8E)       AB button (blood type)\n                                if (0x1f18e === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f1ad) {\n                                    // E0.6  [10] (\uD83C\uDD91..\uD83C\uDD9A)    CL button..VS button\n                                    if (0x1f191 <= code && code <= 0x1f19a) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0  [57] (\uD83C\uDDAD..\uD83C\uDDE5)    MASK WORK SYMBOL..<reserved-1F1E5>\n                                    if (0x1f1ad <= code && code <= 0x1f1e5) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (code < 0x1f7d5) {\n                    if (code < 0x1f249) {\n                        if (code < 0x1f22f) {\n                            if (code < 0x1f21a) {\n                                // E0.6   [2] (\uD83C\uDE01..\uD83C\uDE02\uFE0F)    Japanese \u201Chere\u201D button..Japanese \u201Cservice charge\u201D button\n                                // E0.0  [13] (\uD83C\uDE03..\uD83C\uDE0F)    <reserved-1F203>..<reserved-1F20F>\n                                if (0x1f201 <= code && code <= 0x1f20f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.6   [1] (\uD83C\uDE1A)       Japanese \u201Cfree of charge\u201D button\n                                if (0x1f21a === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f232) {\n                                // E0.6   [1] (\uD83C\uDE2F)       Japanese \u201Creserved\u201D button\n                                if (0x1f22f === code) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f23c) {\n                                    // E0.6   [9] (\uD83C\uDE32..\uD83C\uDE3A)    Japanese \u201Cprohibited\u201D button..Japanese \u201Copen for business\u201D button\n                                    if (0x1f232 <= code && code <= 0x1f23a) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [4] (\uD83C\uDE3C..\uD83C\uDE3F)    <reserved-1F23C>..<reserved-1F23F>\n                                    if (0x1f23c <= code && code <= 0x1f23f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f546) {\n                            if (code < 0x1f400) {\n                                // E0.0   [7] (\uD83C\uDE49..\uD83C\uDE4F)    <reserved-1F249>..<reserved-1F24F>\n                                // E0.6   [2] (\uD83C\uDE50..\uD83C\uDE51)    Japanese \u201Cbargain\u201D button..Japanese \u201Cacceptable\u201D button\n                                // E0.0 [174] (\uD83C\uDE52..\uD83C\uDEFF)    <reserved-1F252>..<reserved-1F2FF>\n                                // E0.6  [13] (\uD83C\uDF00..\uD83C\uDF0C)    cyclone..milky way\n                                // E0.7   [2] (\uD83C\uDF0D..\uD83C\uDF0E)    globe showing Europe-Africa..globe showing Americas\n                                // E0.6   [1] (\uD83C\uDF0F)       globe showing Asia-Australia\n                                // E1.0   [1] (\uD83C\uDF10)       globe with meridians\n                                // E0.6   [1] (\uD83C\uDF11)       new moon\n                                // E1.0   [1] (\uD83C\uDF12)       waxing crescent moon\n                                // E0.6   [3] (\uD83C\uDF13..\uD83C\uDF15)    first quarter moon..full moon\n                                // E1.0   [3] (\uD83C\uDF16..\uD83C\uDF18)    waning gibbous moon..waning crescent moon\n                                // E0.6   [1] (\uD83C\uDF19)       crescent moon\n                                // E1.0   [1] (\uD83C\uDF1A)       new moon face\n                                // E0.6   [1] (\uD83C\uDF1B)       first quarter moon face\n                                // E0.7   [1] (\uD83C\uDF1C)       last quarter moon face\n                                // E1.0   [2] (\uD83C\uDF1D..\uD83C\uDF1E)    full moon face..sun with face\n                                // E0.6   [2] (\uD83C\uDF1F..\uD83C\uDF20)    glowing star..shooting star\n                                // E0.7   [1] (\uD83C\uDF21\uFE0F)       thermometer\n                                // E0.0   [2] (\uD83C\uDF22..\uD83C\uDF23)    BLACK DROPLET..WHITE SUN\n                                // E0.7   [9] (\uD83C\uDF24\uFE0F..\uD83C\uDF2C\uFE0F)    sun behind small cloud..wind face\n                                // E1.0   [3] (\uD83C\uDF2D..\uD83C\uDF2F)    hot dog..burrito\n                                // E0.6   [2] (\uD83C\uDF30..\uD83C\uDF31)    chestnut..seedling\n                                // E1.0   [2] (\uD83C\uDF32..\uD83C\uDF33)    evergreen tree..deciduous tree\n                                // E0.6   [2] (\uD83C\uDF34..\uD83C\uDF35)    palm tree..cactus\n                                // E0.7   [1] (\uD83C\uDF36\uFE0F)       hot pepper\n                                // E0.6  [20] (\uD83C\uDF37..\uD83C\uDF4A)    tulip..tangerine\n                                // E1.0   [1] (\uD83C\uDF4B)       lemon\n                                // E0.6   [4] (\uD83C\uDF4C..\uD83C\uDF4F)    banana..green apple\n                                // E1.0   [1] (\uD83C\uDF50)       pear\n                                // E0.6  [43] (\uD83C\uDF51..\uD83C\uDF7B)    peach..clinking beer mugs\n                                // E1.0   [1] (\uD83C\uDF7C)       baby bottle\n                                // E0.7   [1] (\uD83C\uDF7D\uFE0F)       fork and knife with plate\n                                // E1.0   [2] (\uD83C\uDF7E..\uD83C\uDF7F)    bottle with popping cork..popcorn\n                                // E0.6  [20] (\uD83C\uDF80..\uD83C\uDF93)    ribbon..graduation cap\n                                // E0.0   [2] (\uD83C\uDF94..\uD83C\uDF95)    HEART WITH TIP ON THE LEFT..BOUQUET OF FLOWERS\n                                // E0.7   [2] (\uD83C\uDF96\uFE0F..\uD83C\uDF97\uFE0F)    military medal..reminder ribbon\n                                // E0.0   [1] (\uD83C\uDF98)       MUSICAL KEYBOARD WITH JACKS\n                                // E0.7   [3] (\uD83C\uDF99\uFE0F..\uD83C\uDF9B\uFE0F)    studio microphone..control knobs\n                                // E0.0   [2] (\uD83C\uDF9C..\uD83C\uDF9D)    BEAMED ASCENDING MUSICAL NOTES..BEAMED DESCENDING MUSICAL NOTES\n                                // E0.7   [2] (\uD83C\uDF9E\uFE0F..\uD83C\uDF9F\uFE0F)    film frames..admission tickets\n                                // E0.6  [37] (\uD83C\uDFA0..\uD83C\uDFC4)    carousel horse..person surfing\n                                // E1.0   [1] (\uD83C\uDFC5)       sports medal\n                                // E0.6   [1] (\uD83C\uDFC6)       trophy\n                                // E1.0   [1] (\uD83C\uDFC7)       horse racing\n                                // E0.6   [1] (\uD83C\uDFC8)       american football\n                                // E1.0   [1] (\uD83C\uDFC9)       rugby football\n                                // E0.6   [1] (\uD83C\uDFCA)       person swimming\n                                // E0.7   [4] (\uD83C\uDFCB\uFE0F..\uD83C\uDFCE\uFE0F)    person lifting weights..racing car\n                                // E1.0   [5] (\uD83C\uDFCF..\uD83C\uDFD3)    cricket game..ping pong\n                                // E0.7  [12] (\uD83C\uDFD4\uFE0F..\uD83C\uDFDF\uFE0F)    snow-capped mountain..stadium\n                                // E0.6   [4] (\uD83C\uDFE0..\uD83C\uDFE3)    house..Japanese post office\n                                // E1.0   [1] (\uD83C\uDFE4)       post office\n                                // E0.6  [12] (\uD83C\uDFE5..\uD83C\uDFF0)    hospital..castle\n                                // E0.0   [2] (\uD83C\uDFF1..\uD83C\uDFF2)    WHITE PENNANT..BLACK PENNANT\n                                // E0.7   [1] (\uD83C\uDFF3\uFE0F)       white flag\n                                // E1.0   [1] (\uD83C\uDFF4)       black flag\n                                // E0.7   [1] (\uD83C\uDFF5\uFE0F)       rosette\n                                // E0.0   [1] (\uD83C\uDFF6)       BLACK ROSETTE\n                                // E0.7   [1] (\uD83C\uDFF7\uFE0F)       label\n                                // E1.0   [3] (\uD83C\uDFF8..\uD83C\uDFFA)    badminton..amphora\n                                if (0x1f249 <= code && code <= 0x1f3fa) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E1.0   [8] (\uD83D\uDC00..\uD83D\uDC07)    rat..rabbit\n                                // E0.7   [1] (\uD83D\uDC08)       cat\n                                // E1.0   [3] (\uD83D\uDC09..\uD83D\uDC0B)    dragon..whale\n                                // E0.6   [3] (\uD83D\uDC0C..\uD83D\uDC0E)    snail..horse\n                                // E1.0   [2] (\uD83D\uDC0F..\uD83D\uDC10)    ram..goat\n                                // E0.6   [2] (\uD83D\uDC11..\uD83D\uDC12)    ewe..monkey\n                                // E1.0   [1] (\uD83D\uDC13)       rooster\n                                // E0.6   [1] (\uD83D\uDC14)       chicken\n                                // E0.7   [1] (\uD83D\uDC15)       dog\n                                // E1.0   [1] (\uD83D\uDC16)       pig\n                                // E0.6  [19] (\uD83D\uDC17..\uD83D\uDC29)    boar..poodle\n                                // E1.0   [1] (\uD83D\uDC2A)       camel\n                                // E0.6  [20] (\uD83D\uDC2B..\uD83D\uDC3E)    two-hump camel..paw prints\n                                // E0.7   [1] (\uD83D\uDC3F\uFE0F)       chipmunk\n                                // E0.6   [1] (\uD83D\uDC40)       eyes\n                                // E0.7   [1] (\uD83D\uDC41\uFE0F)       eye\n                                // E0.6  [35] (\uD83D\uDC42..\uD83D\uDC64)    ear..bust in silhouette\n                                // E1.0   [1] (\uD83D\uDC65)       busts in silhouette\n                                // E0.6   [6] (\uD83D\uDC66..\uD83D\uDC6B)    boy..woman and man holding hands\n                                // E1.0   [2] (\uD83D\uDC6C..\uD83D\uDC6D)    men holding hands..women holding hands\n                                // E0.6  [63] (\uD83D\uDC6E..\uD83D\uDCAC)    police officer..speech balloon\n                                // E1.0   [1] (\uD83D\uDCAD)       thought balloon\n                                // E0.6   [8] (\uD83D\uDCAE..\uD83D\uDCB5)    white flower..dollar banknote\n                                // E1.0   [2] (\uD83D\uDCB6..\uD83D\uDCB7)    euro banknote..pound banknote\n                                // E0.6  [52] (\uD83D\uDCB8..\uD83D\uDCEB)    money with wings..closed mailbox with raised flag\n                                // E0.7   [2] (\uD83D\uDCEC..\uD83D\uDCED)    open mailbox with raised flag..open mailbox with lowered flag\n                                // E0.6   [1] (\uD83D\uDCEE)       postbox\n                                // E1.0   [1] (\uD83D\uDCEF)       postal horn\n                                // E0.6   [5] (\uD83D\uDCF0..\uD83D\uDCF4)    newspaper..mobile phone off\n                                // E1.0   [1] (\uD83D\uDCF5)       no mobile phones\n                                // E0.6   [2] (\uD83D\uDCF6..\uD83D\uDCF7)    antenna bars..camera\n                                // E1.0   [1] (\uD83D\uDCF8)       camera with flash\n                                // E0.6   [4] (\uD83D\uDCF9..\uD83D\uDCFC)    video camera..videocassette\n                                // E0.7   [1] (\uD83D\uDCFD\uFE0F)       film projector\n                                // E0.0   [1] (\uD83D\uDCFE)       PORTABLE STEREO\n                                // E1.0   [4] (\uD83D\uDCFF..\uD83D\uDD02)    prayer beads..repeat single button\n                                // E0.6   [1] (\uD83D\uDD03)       clockwise vertical arrows\n                                // E1.0   [4] (\uD83D\uDD04..\uD83D\uDD07)    counterclockwise arrows button..muted speaker\n                                // E0.7   [1] (\uD83D\uDD08)       speaker low volume\n                                // E1.0   [1] (\uD83D\uDD09)       speaker medium volume\n                                // E0.6  [11] (\uD83D\uDD0A..\uD83D\uDD14)    speaker high volume..bell\n                                // E1.0   [1] (\uD83D\uDD15)       bell with slash\n                                // E0.6  [22] (\uD83D\uDD16..\uD83D\uDD2B)    bookmark..water pistol\n                                // E1.0   [2] (\uD83D\uDD2C..\uD83D\uDD2D)    microscope..telescope\n                                // E0.6  [16] (\uD83D\uDD2E..\uD83D\uDD3D)    crystal ball..downwards button\n                                if (0x1f400 <= code && code <= 0x1f53d) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f680) {\n                                // E0.0   [3] (\uD83D\uDD46..\uD83D\uDD48)    WHITE LATIN CROSS..CELTIC CROSS\n                                // E0.7   [2] (\uD83D\uDD49\uFE0F..\uD83D\uDD4A\uFE0F)    om..dove\n                                // E1.0   [4] (\uD83D\uDD4B..\uD83D\uDD4E)    kaaba..menorah\n                                // E0.0   [1] (\uD83D\uDD4F)       BOWL OF HYGIEIA\n                                // E0.6  [12] (\uD83D\uDD50..\uD83D\uDD5B)    one o\u2019clock..twelve o\u2019clock\n                                // E0.7  [12] (\uD83D\uDD5C..\uD83D\uDD67)    one-thirty..twelve-thirty\n                                // E0.0   [7] (\uD83D\uDD68..\uD83D\uDD6E)    RIGHT SPEAKER..BOOK\n                                // E0.7   [2] (\uD83D\uDD6F\uFE0F..\uD83D\uDD70\uFE0F)    candle..mantelpiece clock\n                                // E0.0   [2] (\uD83D\uDD71..\uD83D\uDD72)    BLACK SKULL AND CROSSBONES..NO PIRACY\n                                // E0.7   [7] (\uD83D\uDD73\uFE0F..\uD83D\uDD79\uFE0F)    hole..joystick\n                                // E3.0   [1] (\uD83D\uDD7A)       man dancing\n                                // E0.0  [12] (\uD83D\uDD7B..\uD83D\uDD86)    LEFT HAND TELEPHONE RECEIVER..PEN OVER STAMPED ENVELOPE\n                                // E0.7   [1] (\uD83D\uDD87\uFE0F)       linked paperclips\n                                // E0.0   [2] (\uD83D\uDD88..\uD83D\uDD89)    BLACK PUSHPIN..LOWER LEFT PENCIL\n                                // E0.7   [4] (\uD83D\uDD8A\uFE0F..\uD83D\uDD8D\uFE0F)    pen..crayon\n                                // E0.0   [2] (\uD83D\uDD8E..\uD83D\uDD8F)    LEFT WRITING HAND..TURNED OK HAND SIGN\n                                // E0.7   [1] (\uD83D\uDD90\uFE0F)       hand with fingers splayed\n                                // E0.0   [4] (\uD83D\uDD91..\uD83D\uDD94)    REVERSED RAISED HAND WITH FINGERS SPLAYED..REVERSED VICTORY HAND\n                                // E1.0   [2] (\uD83D\uDD95..\uD83D\uDD96)    middle finger..vulcan salute\n                                // E0.0  [13] (\uD83D\uDD97..\uD83D\uDDA3)    WHITE DOWN POINTING LEFT HAND INDEX..BLACK DOWN POINTING BACKHAND INDEX\n                                // E3.0   [1] (\uD83D\uDDA4)       black heart\n                                // E0.7   [1] (\uD83D\uDDA5\uFE0F)       desktop computer\n                                // E0.0   [2] (\uD83D\uDDA6..\uD83D\uDDA7)    KEYBOARD AND MOUSE..THREE NETWORKED COMPUTERS\n                                // E0.7   [1] (\uD83D\uDDA8\uFE0F)       printer\n                                // E0.0   [8] (\uD83D\uDDA9..\uD83D\uDDB0)    POCKET CALCULATOR..TWO BUTTON MOUSE\n                                // E0.7   [2] (\uD83D\uDDB1\uFE0F..\uD83D\uDDB2\uFE0F)    computer mouse..trackball\n                                // E0.0   [9] (\uD83D\uDDB3..\uD83D\uDDBB)    OLD PERSONAL COMPUTER..DOCUMENT WITH PICTURE\n                                // E0.7   [1] (\uD83D\uDDBC\uFE0F)       framed picture\n                                // E0.0   [5] (\uD83D\uDDBD..\uD83D\uDDC1)    FRAME WITH TILES..OPEN FOLDER\n                                // E0.7   [3] (\uD83D\uDDC2\uFE0F..\uD83D\uDDC4\uFE0F)    card index dividers..file cabinet\n                                // E0.0  [12] (\uD83D\uDDC5..\uD83D\uDDD0)    EMPTY NOTE..PAGES\n                                // E0.7   [3] (\uD83D\uDDD1\uFE0F..\uD83D\uDDD3\uFE0F)    wastebasket..spiral calendar\n                                // E0.0   [8] (\uD83D\uDDD4..\uD83D\uDDDB)    DESKTOP WINDOW..DECREASE FONT SIZE SYMBOL\n                                // E0.7   [3] (\uD83D\uDDDC\uFE0F..\uD83D\uDDDE\uFE0F)    clamp..rolled-up newspaper\n                                // E0.0   [2] (\uD83D\uDDDF..\uD83D\uDDE0)    PAGE WITH CIRCLED TEXT..STOCK CHART\n                                // E0.7   [1] (\uD83D\uDDE1\uFE0F)       dagger\n                                // E0.0   [1] (\uD83D\uDDE2)       LIPS\n                                // E0.7   [1] (\uD83D\uDDE3\uFE0F)       speaking head\n                                // E0.0   [4] (\uD83D\uDDE4..\uD83D\uDDE7)    THREE RAYS ABOVE..THREE RAYS RIGHT\n                                // E2.0   [1] (\uD83D\uDDE8\uFE0F)       left speech bubble\n                                // E0.0   [6] (\uD83D\uDDE9..\uD83D\uDDEE)    RIGHT SPEECH BUBBLE..LEFT ANGER BUBBLE\n                                // E0.7   [1] (\uD83D\uDDEF\uFE0F)       right anger bubble\n                                // E0.0   [3] (\uD83D\uDDF0..\uD83D\uDDF2)    MOOD BUBBLE..LIGHTNING MOOD\n                                // E0.7   [1] (\uD83D\uDDF3\uFE0F)       ballot box with ballot\n                                // E0.0   [6] (\uD83D\uDDF4..\uD83D\uDDF9)    BALLOT SCRIPT X..BALLOT BOX WITH BOLD CHECK\n                                // E0.7   [1] (\uD83D\uDDFA\uFE0F)       world map\n                                // E0.6   [5] (\uD83D\uDDFB..\uD83D\uDDFF)    mount fuji..moai\n                                // E1.0   [1] (\uD83D\uDE00)       grinning face\n                                // E0.6   [6] (\uD83D\uDE01..\uD83D\uDE06)    beaming face with smiling eyes..grinning squinting face\n                                // E1.0   [2] (\uD83D\uDE07..\uD83D\uDE08)    smiling face with halo..smiling face with horns\n                                // E0.6   [5] (\uD83D\uDE09..\uD83D\uDE0D)    winking face..smiling face with heart-eyes\n                                // E1.0   [1] (\uD83D\uDE0E)       smiling face with sunglasses\n                                // E0.6   [1] (\uD83D\uDE0F)       smirking face\n                                // E0.7   [1] (\uD83D\uDE10)       neutral face\n                                // E1.0   [1] (\uD83D\uDE11)       expressionless face\n                                // E0.6   [3] (\uD83D\uDE12..\uD83D\uDE14)    unamused face..pensive face\n                                // E1.0   [1] (\uD83D\uDE15)       confused face\n                                // E0.6   [1] (\uD83D\uDE16)       confounded face\n                                // E1.0   [1] (\uD83D\uDE17)       kissing face\n                                // E0.6   [1] (\uD83D\uDE18)       face blowing a kiss\n                                // E1.0   [1] (\uD83D\uDE19)       kissing face with smiling eyes\n                                // E0.6   [1] (\uD83D\uDE1A)       kissing face with closed eyes\n                                // E1.0   [1] (\uD83D\uDE1B)       face with tongue\n                                // E0.6   [3] (\uD83D\uDE1C..\uD83D\uDE1E)    winking face with tongue..disappointed face\n                                // E1.0   [1] (\uD83D\uDE1F)       worried face\n                                // E0.6   [6] (\uD83D\uDE20..\uD83D\uDE25)    angry face..sad but relieved face\n                                // E1.0   [2] (\uD83D\uDE26..\uD83D\uDE27)    frowning face with open mouth..anguished face\n                                // E0.6   [4] (\uD83D\uDE28..\uD83D\uDE2B)    fearful face..tired face\n                                // E1.0   [1] (\uD83D\uDE2C)       grimacing face\n                                // E0.6   [1] (\uD83D\uDE2D)       loudly crying face\n                                // E1.0   [2] (\uD83D\uDE2E..\uD83D\uDE2F)    face with open mouth..hushed face\n                                // E0.6   [4] (\uD83D\uDE30..\uD83D\uDE33)    anxious face with sweat..flushed face\n                                // E1.0   [1] (\uD83D\uDE34)       sleeping face\n                                // E0.6   [1] (\uD83D\uDE35)       face with crossed-out eyes\n                                // E1.0   [1] (\uD83D\uDE36)       face without mouth\n                                // E0.6  [10] (\uD83D\uDE37..\uD83D\uDE40)    face with medical mask..weary cat\n                                // E1.0   [4] (\uD83D\uDE41..\uD83D\uDE44)    slightly frowning face..face with rolling eyes\n                                // E0.6  [11] (\uD83D\uDE45..\uD83D\uDE4F)    person gesturing NO..folded hands\n                                if (0x1f546 <= code && code <= 0x1f64f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f774) {\n                                    // E0.6   [1] (\uD83D\uDE80)       rocket\n                                    // E1.0   [2] (\uD83D\uDE81..\uD83D\uDE82)    helicopter..locomotive\n                                    // E0.6   [3] (\uD83D\uDE83..\uD83D\uDE85)    railway car..bullet train\n                                    // E1.0   [1] (\uD83D\uDE86)       train\n                                    // E0.6   [1] (\uD83D\uDE87)       metro\n                                    // E1.0   [1] (\uD83D\uDE88)       light rail\n                                    // E0.6   [1] (\uD83D\uDE89)       station\n                                    // E1.0   [2] (\uD83D\uDE8A..\uD83D\uDE8B)    tram..tram car\n                                    // E0.6   [1] (\uD83D\uDE8C)       bus\n                                    // E0.7   [1] (\uD83D\uDE8D)       oncoming bus\n                                    // E1.0   [1] (\uD83D\uDE8E)       trolleybus\n                                    // E0.6   [1] (\uD83D\uDE8F)       bus stop\n                                    // E1.0   [1] (\uD83D\uDE90)       minibus\n                                    // E0.6   [3] (\uD83D\uDE91..\uD83D\uDE93)    ambulance..police car\n                                    // E0.7   [1] (\uD83D\uDE94)       oncoming police car\n                                    // E0.6   [1] (\uD83D\uDE95)       taxi\n                                    // E1.0   [1] (\uD83D\uDE96)       oncoming taxi\n                                    // E0.6   [1] (\uD83D\uDE97)       automobile\n                                    // E0.7   [1] (\uD83D\uDE98)       oncoming automobile\n                                    // E0.6   [2] (\uD83D\uDE99..\uD83D\uDE9A)    sport utility vehicle..delivery truck\n                                    // E1.0   [7] (\uD83D\uDE9B..\uD83D\uDEA1)    articulated lorry..aerial tramway\n                                    // E0.6   [1] (\uD83D\uDEA2)       ship\n                                    // E1.0   [1] (\uD83D\uDEA3)       person rowing boat\n                                    // E0.6   [2] (\uD83D\uDEA4..\uD83D\uDEA5)    speedboat..horizontal traffic light\n                                    // E1.0   [1] (\uD83D\uDEA6)       vertical traffic light\n                                    // E0.6   [7] (\uD83D\uDEA7..\uD83D\uDEAD)    construction..no smoking\n                                    // E1.0   [4] (\uD83D\uDEAE..\uD83D\uDEB1)    litter in bin sign..non-potable water\n                                    // E0.6   [1] (\uD83D\uDEB2)       bicycle\n                                    // E1.0   [3] (\uD83D\uDEB3..\uD83D\uDEB5)    no bicycles..person mountain biking\n                                    // E0.6   [1] (\uD83D\uDEB6)       person walking\n                                    // E1.0   [2] (\uD83D\uDEB7..\uD83D\uDEB8)    no pedestrians..children crossing\n                                    // E0.6   [6] (\uD83D\uDEB9..\uD83D\uDEBE)    men\u2019s room..water closet\n                                    // E1.0   [1] (\uD83D\uDEBF)       shower\n                                    // E0.6   [1] (\uD83D\uDEC0)       person taking bath\n                                    // E1.0   [5] (\uD83D\uDEC1..\uD83D\uDEC5)    bathtub..left luggage\n                                    // E0.0   [5] (\uD83D\uDEC6..\uD83D\uDECA)    TRIANGLE WITH ROUNDED CORNERS..GIRLS SYMBOL\n                                    // E0.7   [1] (\uD83D\uDECB\uFE0F)       couch and lamp\n                                    // E1.0   [1] (\uD83D\uDECC)       person in bed\n                                    // E0.7   [3] (\uD83D\uDECD\uFE0F..\uD83D\uDECF\uFE0F)    shopping bags..bed\n                                    // E1.0   [1] (\uD83D\uDED0)       place of worship\n                                    // E3.0   [2] (\uD83D\uDED1..\uD83D\uDED2)    stop sign..shopping cart\n                                    // E0.0   [2] (\uD83D\uDED3..\uD83D\uDED4)    STUPA..PAGODA\n                                    // E12.0  [1] (\uD83D\uDED5)       hindu temple\n                                    // E13.0  [2] (\uD83D\uDED6..\uD83D\uDED7)    hut..elevator\n                                    // E0.0   [4] (\uD83D\uDED8..\uD83D\uDEDB)    <reserved-1F6D8>..<reserved-1F6DB>\n                                    // E15.0  [1] (\uD83D\uDEDC)       wireless\n                                    // E14.0  [3] (\uD83D\uDEDD..\uD83D\uDEDF)    playground slide..ring buoy\n                                    // E0.7   [6] (\uD83D\uDEE0\uFE0F..\uD83D\uDEE5\uFE0F)    hammer and wrench..motor boat\n                                    // E0.0   [3] (\uD83D\uDEE6..\uD83D\uDEE8)    UP-POINTING MILITARY AIRPLANE..UP-POINTING SMALL AIRPLANE\n                                    // E0.7   [1] (\uD83D\uDEE9\uFE0F)       small airplane\n                                    // E0.0   [1] (\uD83D\uDEEA)       NORTHEAST-POINTING AIRPLANE\n                                    // E1.0   [2] (\uD83D\uDEEB..\uD83D\uDEEC)    airplane departure..airplane arrival\n                                    // E0.0   [3] (\uD83D\uDEED..\uD83D\uDEEF)    <reserved-1F6ED>..<reserved-1F6EF>\n                                    // E0.7   [1] (\uD83D\uDEF0\uFE0F)       satellite\n                                    // E0.0   [2] (\uD83D\uDEF1..\uD83D\uDEF2)    ONCOMING FIRE ENGINE..DIESEL LOCOMOTIVE\n                                    // E0.7   [1] (\uD83D\uDEF3\uFE0F)       passenger ship\n                                    // E3.0   [3] (\uD83D\uDEF4..\uD83D\uDEF6)    kick scooter..canoe\n                                    // E5.0   [2] (\uD83D\uDEF7..\uD83D\uDEF8)    sled..flying saucer\n                                    // E11.0  [1] (\uD83D\uDEF9)       skateboard\n                                    // E12.0  [1] (\uD83D\uDEFA)       auto rickshaw\n                                    // E13.0  [2] (\uD83D\uDEFB..\uD83D\uDEFC)    pickup truck..roller skate\n                                    // E0.0   [3] (\uD83D\uDEFD..\uD83D\uDEFF)    <reserved-1F6FD>..<reserved-1F6FF>\n                                    if (0x1f680 <= code && code <= 0x1f6ff) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0  [12] (\uD83D\uDF74..\uD83D\uDF7F)    LOT OF FORTUNE..ORCUS\n                                    if (0x1f774 <= code && code <= 0x1f77f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (code < 0x1f8ae) {\n                        if (code < 0x1f848) {\n                            if (code < 0x1f80c) {\n                                // E0.0  [11] (\uD83D\uDFD5..\uD83D\uDFDF)    CIRCLED TRIANGLE..<reserved-1F7DF>\n                                // E12.0 [12] (\uD83D\uDFE0..\uD83D\uDFEB)    orange circle..brown square\n                                // E0.0   [4] (\uD83D\uDFEC..\uD83D\uDFEF)    <reserved-1F7EC>..<reserved-1F7EF>\n                                // E14.0  [1] (\uD83D\uDFF0)       heavy equals sign\n                                // E0.0  [15] (\uD83D\uDFF1..\uD83D\uDFFF)    <reserved-1F7F1>..<reserved-1F7FF>\n                                if (0x1f7d5 <= code && code <= 0x1f7ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E0.0   [4] (\uD83E\uDC0C..\uD83E\uDC0F)    <reserved-1F80C>..<reserved-1F80F>\n                                if (0x1f80c <= code && code <= 0x1f80f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f85a) {\n                                // E0.0   [8] (\uD83E\uDC48..\uD83E\uDC4F)    <reserved-1F848>..<reserved-1F84F>\n                                if (0x1f848 <= code && code <= 0x1f84f) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1f888) {\n                                    // E0.0   [6] (\uD83E\uDC5A..\uD83E\uDC5F)    <reserved-1F85A>..<reserved-1F85F>\n                                    if (0x1f85a <= code && code <= 0x1f85f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0   [8] (\uD83E\uDC88..\uD83E\uDC8F)    <reserved-1F888>..<reserved-1F88F>\n                                    if (0x1f888 <= code && code <= 0x1f88f) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (code < 0x1f93c) {\n                            if (code < 0x1f90c) {\n                                // E0.0  [82] (\uD83E\uDCAE..\uD83E\uDCFF)    <reserved-1F8AE>..<reserved-1F8FF>\n                                if (0x1f8ae <= code && code <= 0x1f8ff) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                // E13.0  [1] (\uD83E\uDD0C)       pinched fingers\n                                // E12.0  [3] (\uD83E\uDD0D..\uD83E\uDD0F)    white heart..pinching hand\n                                // E1.0   [9] (\uD83E\uDD10..\uD83E\uDD18)    zipper-mouth face..sign of the horns\n                                // E3.0   [6] (\uD83E\uDD19..\uD83E\uDD1E)    call me hand..crossed fingers\n                                // E5.0   [1] (\uD83E\uDD1F)       love-you gesture\n                                // E3.0   [8] (\uD83E\uDD20..\uD83E\uDD27)    cowboy hat face..sneezing face\n                                // E5.0   [8] (\uD83E\uDD28..\uD83E\uDD2F)    face with raised eyebrow..exploding head\n                                // E3.0   [1] (\uD83E\uDD30)       pregnant woman\n                                // E5.0   [2] (\uD83E\uDD31..\uD83E\uDD32)    breast-feeding..palms up together\n                                // E3.0   [8] (\uD83E\uDD33..\uD83E\uDD3A)    selfie..person fencing\n                                if (0x1f90c <= code && code <= 0x1f93a) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                        }\n                        else {\n                            if (code < 0x1f947) {\n                                // E3.0   [3] (\uD83E\uDD3C..\uD83E\uDD3E)    people wrestling..person playing handball\n                                // E12.0  [1] (\uD83E\uDD3F)       diving mask\n                                // E3.0   [6] (\uD83E\uDD40..\uD83E\uDD45)    wilted flower..goal net\n                                if (0x1f93c <= code && code <= 0x1f945) {\n                                    return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                }\n                            }\n                            else {\n                                if (code < 0x1fc00) {\n                                    // E3.0   [5] (\uD83E\uDD47..\uD83E\uDD4B)    1st place medal..martial arts uniform\n                                    // E5.0   [1] (\uD83E\uDD4C)       curling stone\n                                    // E11.0  [3] (\uD83E\uDD4D..\uD83E\uDD4F)    lacrosse..flying disc\n                                    // E3.0  [15] (\uD83E\uDD50..\uD83E\uDD5E)    croissant..pancakes\n                                    // E5.0  [13] (\uD83E\uDD5F..\uD83E\uDD6B)    dumpling..canned food\n                                    // E11.0  [5] (\uD83E\uDD6C..\uD83E\uDD70)    leafy green..smiling face with hearts\n                                    // E12.0  [1] (\uD83E\uDD71)       yawning face\n                                    // E13.0  [1] (\uD83E\uDD72)       smiling face with tear\n                                    // E11.0  [4] (\uD83E\uDD73..\uD83E\uDD76)    partying face..cold face\n                                    // E13.0  [2] (\uD83E\uDD77..\uD83E\uDD78)    ninja..disguised face\n                                    // E14.0  [1] (\uD83E\uDD79)       face holding back tears\n                                    // E11.0  [1] (\uD83E\uDD7A)       pleading face\n                                    // E12.0  [1] (\uD83E\uDD7B)       sari\n                                    // E11.0  [4] (\uD83E\uDD7C..\uD83E\uDD7F)    lab coat..flat shoe\n                                    // E1.0   [5] (\uD83E\uDD80..\uD83E\uDD84)    crab..unicorn\n                                    // E3.0  [13] (\uD83E\uDD85..\uD83E\uDD91)    eagle..squid\n                                    // E5.0   [6] (\uD83E\uDD92..\uD83E\uDD97)    giraffe..cricket\n                                    // E11.0 [11] (\uD83E\uDD98..\uD83E\uDDA2)    kangaroo..swan\n                                    // E13.0  [2] (\uD83E\uDDA3..\uD83E\uDDA4)    mammoth..dodo\n                                    // E12.0  [6] (\uD83E\uDDA5..\uD83E\uDDAA)    sloth..oyster\n                                    // E13.0  [3] (\uD83E\uDDAB..\uD83E\uDDAD)    beaver..seal\n                                    // E12.0  [2] (\uD83E\uDDAE..\uD83E\uDDAF)    guide dog..white cane\n                                    // E11.0 [10] (\uD83E\uDDB0..\uD83E\uDDB9)    red hair..supervillain\n                                    // E12.0  [6] (\uD83E\uDDBA..\uD83E\uDDBF)    safety vest..mechanical leg\n                                    // E1.0   [1] (\uD83E\uDDC0)       cheese wedge\n                                    // E11.0  [2] (\uD83E\uDDC1..\uD83E\uDDC2)    cupcake..salt\n                                    // E12.0  [8] (\uD83E\uDDC3..\uD83E\uDDCA)    beverage box..ice\n                                    // E13.0  [1] (\uD83E\uDDCB)       bubble tea\n                                    // E14.0  [1] (\uD83E\uDDCC)       troll\n                                    // E12.0  [3] (\uD83E\uDDCD..\uD83E\uDDCF)    person standing..deaf person\n                                    // E5.0  [23] (\uD83E\uDDD0..\uD83E\uDDE6)    face with monocle..socks\n                                    // E11.0 [25] (\uD83E\uDDE7..\uD83E\uDDFF)    red envelope..nazar amulet\n                                    // E0.0 [112] (\uD83E\uDE00..\uD83E\uDE6F)    NEUTRAL CHESS KING..<reserved-1FA6F>\n                                    // E12.0  [4] (\uD83E\uDE70..\uD83E\uDE73)    ballet shoes..shorts\n                                    // E13.0  [1] (\uD83E\uDE74)       thong sandal\n                                    // E15.0  [3] (\uD83E\uDE75..\uD83E\uDE77)    light blue heart..pink heart\n                                    // E12.0  [3] (\uD83E\uDE78..\uD83E\uDE7A)    drop of blood..stethoscope\n                                    // E14.0  [2] (\uD83E\uDE7B..\uD83E\uDE7C)    x-ray..crutch\n                                    // E0.0   [3] (\uD83E\uDE7D..\uD83E\uDE7F)    <reserved-1FA7D>..<reserved-1FA7F>\n                                    // E12.0  [3] (\uD83E\uDE80..\uD83E\uDE82)    yo-yo..parachute\n                                    // E13.0  [4] (\uD83E\uDE83..\uD83E\uDE86)    boomerang..nesting dolls\n                                    // E15.0  [2] (\uD83E\uDE87..\uD83E\uDE88)    maracas..flute\n                                    // E0.0   [7] (\uD83E\uDE89..\uD83E\uDE8F)    <reserved-1FA89>..<reserved-1FA8F>\n                                    // E12.0  [6] (\uD83E\uDE90..\uD83E\uDE95)    ringed planet..banjo\n                                    // E13.0 [19] (\uD83E\uDE96..\uD83E\uDEA8)    military helmet..rock\n                                    // E14.0  [4] (\uD83E\uDEA9..\uD83E\uDEAC)    mirror ball..hamsa\n                                    // E15.0  [3] (\uD83E\uDEAD..\uD83E\uDEAF)    folding hand fan..khanda\n                                    // E13.0  [7] (\uD83E\uDEB0..\uD83E\uDEB6)    fly..feather\n                                    // E14.0  [4] (\uD83E\uDEB7..\uD83E\uDEBA)    lotus..nest with eggs\n                                    // E15.0  [3] (\uD83E\uDEBB..\uD83E\uDEBD)    hyacinth..wing\n                                    // E0.0   [1] (\uD83E\uDEBE)       <reserved-1FABE>\n                                    // E15.0  [1] (\uD83E\uDEBF)       goose\n                                    // E13.0  [3] (\uD83E\uDEC0..\uD83E\uDEC2)    anatomical heart..people hugging\n                                    // E14.0  [3] (\uD83E\uDEC3..\uD83E\uDEC5)    pregnant man..person with crown\n                                    // E0.0   [8] (\uD83E\uDEC6..\uD83E\uDECD)    <reserved-1FAC6>..<reserved-1FACD>\n                                    // E15.0  [2] (\uD83E\uDECE..\uD83E\uDECF)    moose..donkey\n                                    // E13.0  [7] (\uD83E\uDED0..\uD83E\uDED6)    blueberries..teapot\n                                    // E14.0  [3] (\uD83E\uDED7..\uD83E\uDED9)    pouring liquid..jar\n                                    // E15.0  [2] (\uD83E\uDEDA..\uD83E\uDEDB)    ginger root..pea pod\n                                    // E0.0   [4] (\uD83E\uDEDC..\uD83E\uDEDF)    <reserved-1FADC>..<reserved-1FADF>\n                                    // E14.0  [8] (\uD83E\uDEE0..\uD83E\uDEE7)    melting face..bubbles\n                                    // E15.0  [1] (\uD83E\uDEE8)       shaking face\n                                    // E0.0   [7] (\uD83E\uDEE9..\uD83E\uDEEF)    <reserved-1FAE9>..<reserved-1FAEF>\n                                    // E14.0  [7] (\uD83E\uDEF0..\uD83E\uDEF6)    hand with index finger and thumb crossed..heart hands\n                                    // E15.0  [2] (\uD83E\uDEF7..\uD83E\uDEF8)    leftwards pushing hand..rightwards pushing hand\n                                    // E0.0   [7] (\uD83E\uDEF9..\uD83E\uDEFF)    <reserved-1FAF9>..<reserved-1FAFF>\n                                    if (0x1f947 <= code && code <= 0x1faff) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                                else {\n                                    // E0.0[1022] (\uD83F\uDC00..\uD83F\uDFFD)    <reserved-1FC00>..<reserved-1FFFD>\n                                    if (0x1fc00 <= code && code <= 0x1fffd) {\n                                        return boundaries_1.EXTENDED_PICTOGRAPHIC;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // unlisted code points are treated as a break property of \"Other\"\n        return boundaries_1.CLUSTER_BREAK.OTHER;\n    }\n}\nexports.default = Graphemer;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Graphemer_1 = __importDefault(require(\"./Graphemer\"));\nexports.default = Graphemer_1.default;\n", "import Graphemer from 'graphemer'\nimport * as ui8 from 'uint8arrays'\n\n// counts the number of bytes in a utf8 string\nexport const utf8Len = (str: string): number => {\n  return new TextEncoder().encode(str).byteLength\n}\n\n// counts the number of graphemes (user-displayed characters) in a string\nexport const graphemeLen = (str: string): number => {\n  const splitter = new Graphemer()\n  return splitter.countGraphemes(str)\n}\n\nexport const utf8ToB64Url = (utf8: string): string => {\n  return ui8.toString(ui8.fromString(utf8, 'utf8'), 'base64url')\n}\n\nexport const b64UrlToUtf8 = (b64: string): string => {\n  return ui8.toString(ui8.fromString(b64, 'base64url'), 'utf8')\n}\n\nexport const parseLanguage = (langTag: string): LanguageTag | null => {\n  const parsed = langTag.match(bcp47Regexp)\n  if (!parsed?.groups) return null\n  const parts = parsed.groups\n  return {\n    grandfathered: parts.grandfathered,\n    language: parts.language,\n    extlang: parts.extlang,\n    script: parts.script,\n    region: parts.region,\n    variant: parts.variant,\n    extension: parts.extension,\n    privateUse: parts.privateUseA || parts.privateUseB,\n  }\n}\n\nexport const validateLanguage = (langTag: string): boolean => {\n  return bcp47Regexp.test(langTag)\n}\n\nexport type LanguageTag = {\n  grandfathered?: string\n  language?: string\n  extlang?: string\n  script?: string\n  region?: string\n  variant?: string\n  extension?: string\n  privateUse?: string\n}\n\n// Validates well-formed BCP 47 syntax: https://www.rfc-editor.org/rfc/rfc5646.html#section-2.1\nconst bcp47Regexp =\n  /^((?<grandfathered>(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?<language>([A-Za-z]{2,3}(-(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?<script>[A-Za-z]{4}))?(-(?<region>[A-Za-z]{2}|[0-9]{3}))?(-(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?<extension>[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?<privateUseA>x(-[A-Za-z0-9]{1,8})+))?)|(?<privateUseB>x(-[A-Za-z0-9]{1,8})+))$/\n", "import { z } from 'zod'\n\n// Parsing atproto data\n// --------\n\nexport const isValidDidDoc = (doc: unknown): doc is DidDocument => {\n  return didDocument.safeParse(doc).success\n}\n\nexport const getDid = (doc: DidDocument): string => {\n  const id = doc.id\n  if (typeof id !== 'string') {\n    throw new Error('No `id` on document')\n  }\n  return id\n}\n\nexport const getHandle = (doc: DidDocument): string | undefined => {\n  const aka = doc.alsoKnownAs\n  if (!aka) return undefined\n  const found = aka.find((name) => name.startsWith('at://'))\n  if (!found) return undefined\n  // strip off at:// prefix\n  return found.slice(5)\n}\n\n// @NOTE we parse to type/publicKeyMultibase to avoid the dependency on @atproto/crypto\nexport const getSigningKey = (\n  doc: DidDocument,\n): { type: string; publicKeyMultibase: string } | undefined => {\n  return getVerificationMaterial(doc, 'atproto')\n}\n\nexport const getVerificationMaterial = (\n  doc: DidDocument,\n  keyId: string,\n): { type: string; publicKeyMultibase: string } | undefined => {\n  const did = getDid(doc)\n  let keys = doc.verificationMethod\n  if (!keys) return undefined\n  if (typeof keys !== 'object') return undefined\n  if (!Array.isArray(keys)) {\n    keys = [keys]\n  }\n  const found = keys.find(\n    (key) => key.id === `#${keyId}` || key.id === `${did}#${keyId}`,\n  )\n  if (!found?.publicKeyMultibase) return undefined\n  return {\n    type: found.type,\n    publicKeyMultibase: found.publicKeyMultibase,\n  }\n}\n\nexport const getSigningDidKey = (doc: DidDocument): string | undefined => {\n  const parsed = getSigningKey(doc)\n  if (!parsed) return\n  return `did:key:${parsed.publicKeyMultibase}`\n}\n\nexport const getPdsEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#atproto_pds',\n    type: 'AtprotoPersonalDataServer',\n  })\n}\n\nexport const getFeedGenEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#bsky_fg',\n    type: 'BskyFeedGenerator',\n  })\n}\n\nexport const getNotifEndpoint = (doc: DidDocument): string | undefined => {\n  return getServiceEndpoint(doc, {\n    id: '#bsky_notif',\n    type: 'BskyNotificationService',\n  })\n}\n\nexport const getServiceEndpoint = (\n  doc: DidDocument,\n  opts: { id: string; type?: string },\n) => {\n  const did = getDid(doc)\n  let services = doc.service\n  if (!services) return undefined\n  if (typeof services !== 'object') return undefined\n  if (!Array.isArray(services)) {\n    services = [services]\n  }\n  const found = services.find(\n    (service) => service.id === opts.id || service.id === `${did}${opts.id}`,\n  )\n  if (!found) return undefined\n  if (opts.type && found.type !== opts.type) {\n    return undefined\n  }\n  if (typeof found.serviceEndpoint !== 'string') {\n    return undefined\n  }\n  return validateUrl(found.serviceEndpoint)\n}\n\n// Check protocol and hostname to prevent potential SSRF\nconst validateUrl = (urlStr: string): string | undefined => {\n  let url\n  try {\n    url = new URL(urlStr)\n  } catch {\n    return undefined\n  }\n  if (!['http:', 'https:'].includes(url.protocol)) {\n    return undefined\n  } else if (!url.hostname) {\n    return undefined\n  } else {\n    return urlStr\n  }\n}\n\n// Types\n// --------\n\nconst verificationMethod = z.object({\n  id: z.string(),\n  type: z.string(),\n  controller: z.string(),\n  publicKeyMultibase: z.string().optional(),\n})\n\nconst service = z.object({\n  id: z.string(),\n  type: z.string(),\n  serviceEndpoint: z.union([z.string(), z.record(z.unknown())]),\n})\n\nexport const didDocument = z.object({\n  id: z.string(),\n  alsoKnownAs: z.array(z.string()).optional(),\n  verificationMethod: z.array(verificationMethod).optional(),\n  service: z.array(service).optional(),\n})\n\nexport type DidDocument = z.infer<typeof didDocument>\n", "export * as check from './check'\nexport * as util from './util'\n\nexport * from './arrays'\nexport * from './async'\nexport * from './util'\nexport * from './tid'\nexport * from './ipld'\nexport * from './retry'\nexport * from './types'\nexport * from './times'\nexport * from './strings'\nexport * from './did-doc'\n", "var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;", "import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};", "const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};", "import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}", "function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;", "import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};", "import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});", "import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});", "import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;", "(()=>{\"use strict\";var e={d:(t,r)=>{for(var n in r)e.o(r,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:r[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},t={};function r(e,t){return void 0===t&&(t=\"-\"),new RegExp(\"^(?!0{4}\"+t+\"0{2}\"+t+\"0{2})((?=[0-9]{4}\"+t+\"(((0[^2])|1[0-2])|02(?=\"+t+\"(([0-1][0-9])|2[0-8])))\"+t+\"[0-9]{2})|(?=((([13579][26])|([2468][048])|(0[48]))0{2})|([0-9]{2}((((0|[2468])[48])|[2468][048])|([13579][26])))\"+t+\"02\"+t+\"29))([0-9]{4})\"+t+\"(?!((0[469])|11)\"+t+\"31)((0[1,3-9]|1[0-2])|(02(?!\"+t+\"3)))\"+t+\"(0[1-9]|[1-2][0-9]|3[0-1])$\").test(e)}function n(e){var t=/\\D/.exec(e);return t?t[0]:\"\"}function i(e,t,r){void 0===t&&(t=\":\"),void 0===r&&(r=!1);var i=new RegExp(\"^([0-1]|2(?=([0-3])|4\"+t+\"00))[0-9]\"+t+\"[0-5][0-9](\"+t+\"([0-5]|6(?=0))[0-9])?(.[0-9]{1,9})?$\");if(!r||!/[Z+\\-]/.test(e))return i.test(e);if(/Z$/.test(e))return i.test(e.replace(\"Z\",\"\"));var o=e.includes(\"+\"),a=e.split(/[+-]/),u=a[0],d=a[1];return i.test(u)&&function(e,t,r){return void 0===r&&(r=\":\"),new RegExp(t?\"^(0(?!(2\"+r+\"4)|0\"+r+\"3)|1(?=([0-1]|2(?=\"+r+\"[04])|[34](?=\"+r+\"0))))([03469](?=\"+r+\"[03])|[17](?=\"+r+\"0)|2(?=\"+r+\"[04])|5(?=\"+r+\"[034])|8(?=\"+r+\"[04]))\"+r+\"([03](?=0)|4(?=5))[05]$\":\"^(0(?=[^0])|1(?=[0-2]))([39](?=\"+r+\"[03])|[0-24-8](?=\"+r+\"00))\"+r+\"[03]0$\").test(e)}(d,o,n(d))}function o(e){var t=e.split(\"T\"),o=t[0],a=t[1],u=r(o,n(o));if(!a)return!1;var d,s=(d=a.match(/([^Z+\\-\\d])(?=\\d+\\1)/),Array.isArray(d)?d[0]:\"\");return u&&i(a,s,!0)}function a(e,t){return void 0===t&&(t=\"-\"),new RegExp(\"^[0-9]{4}\"+t+\"(0(?=[^0])|1(?=[0-2]))[0-9]$\").test(e)}e.r(t),e.d(t,{isValidDate:()=>r,isValidISODateString:()=>o,isValidTime:()=>i,isValidYearMonth:()=>a});var u=exports;for(var d in t)u[d]=t[d];t.__esModule&&Object.defineProperty(u,\"__esModule\",{value:!0})})();", "import { isValidISODateString } from 'iso-datestring-validator'\nimport { CID } from 'multiformats/cid'\nimport { ValidationResult, ValidationError } from '../types'\nimport {\n  ensureValidDid,\n  ensureValidHandle,\n  ensureValidNsid,\n  ensureValidAtUri,\n} from '@atproto/syntax'\nimport { validateLanguage } from '@atproto/common-web'\n\nexport function datetime(path: string, value: string): ValidationResult {\n  try {\n    if (!isValidISODateString(value)) {\n      throw new Error()\n    }\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(\n        `${path} must be an valid atproto datetime (both RFC-3339 and ISO-8601)`,\n      ),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function uri(path: string, value: string): ValidationResult {\n  const isUri = value.match(/^\\w+:(?:\\/\\/)?[^\\s/][^\\s]*$/) !== null\n  if (!isUri) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a uri`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function atUri(path: string, value: string): ValidationResult {\n  try {\n    ensureValidAtUri(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid at-uri`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function did(path: string, value: string): ValidationResult {\n  try {\n    ensureValidDid(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid did`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function handle(path: string, value: string): ValidationResult {\n  try {\n    ensureValidHandle(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid handle`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function atIdentifier(path: string, value: string): ValidationResult {\n  const isDid = did(path, value)\n  if (!isDid.success) {\n    const isHandle = handle(path, value)\n    if (!isHandle.success) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be a valid did or a handle`),\n      }\n    }\n  }\n  return { success: true, value }\n}\n\nexport function nsid(path: string, value: string): ValidationResult {\n  try {\n    ensureValidNsid(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a valid nsid`),\n    }\n  }\n  return { success: true, value }\n}\n\nexport function cid(path: string, value: string): ValidationResult {\n  try {\n    CID.parse(value)\n  } catch {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a cid string`),\n    }\n  }\n  return { success: true, value }\n}\n\n// The language format validates well-formed BCP 47 language tags: https://www.rfc-editor.org/info/bcp47\nexport function language(path: string, value: string): ValidationResult {\n  if (validateLanguage(value)) {\n    return { success: true, value }\n  }\n  return {\n    success: false,\n    error: new ValidationError(\n      `${path} must be a well-formed BCP 47 language tag`,\n    ),\n  }\n}\n", "import { utf8Len, graphemeLen } from '@atproto/common-web'\nimport { CID } from 'multiformats/cid'\nimport { Lexicons } from '../lexicons'\nimport * as formats from './formats'\nimport {\n  LexUserType,\n  LexBoolean,\n  LexInteger,\n  LexString,\n  ValidationResult,\n  ValidationError,\n  LexBytes,\n} from '../types'\n\nexport function validate(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  switch (def.type) {\n    case 'boolean':\n      return boolean(lexicons, path, def, value)\n    case 'integer':\n      return integer(lexicons, path, def, value)\n    case 'string':\n      return string(lexicons, path, def, value)\n    case 'bytes':\n      return bytes(lexicons, path, def, value)\n    case 'cid-link':\n      return cidLink(lexicons, path, def, value)\n    case 'unknown':\n      return unknown(lexicons, path, def, value)\n    default:\n      return {\n        success: false,\n        error: new ValidationError(`Unexpected lexicon type: ${def.type}`),\n      }\n  }\n}\n\nexport function boolean(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexBoolean\n\n  // type\n  const type = typeof value\n  if (type === 'undefined') {\n    if (typeof def.default === 'boolean') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a boolean`),\n    }\n  } else if (type !== 'boolean') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a boolean`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'boolean') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function integer(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexInteger\n\n  // type\n  const type = typeof value\n  if (type === 'undefined') {\n    if (typeof def.default === 'number') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an integer`),\n    }\n  } else if (!Number.isInteger(value)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an integer`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'number') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  // enum\n  if (Array.isArray(def.enum)) {\n    if (!def.enum.includes(value as number)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be one of (${def.enum.join('|')})`,\n        ),\n      }\n    }\n  }\n\n  // maximum\n  if (typeof def.maximum === 'number') {\n    if ((value as number) > def.maximum) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} can not be greater than ${def.maximum}`,\n        ),\n      }\n    }\n  }\n\n  // minimum\n  if (typeof def.minimum === 'number') {\n    if ((value as number) < def.minimum) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} can not be less than ${def.minimum}`,\n        ),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function string(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexString\n\n  // type\n  if (typeof value === 'undefined') {\n    if (typeof def.default === 'string') {\n      return { success: true, value: def.default }\n    }\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a string`),\n    }\n  } else if (typeof value !== 'string') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a string`),\n    }\n  }\n\n  // const\n  if (typeof def.const === 'string') {\n    if (value !== def.const) {\n      return {\n        success: false,\n        error: new ValidationError(`${path} must be ${def.const}`),\n      }\n    }\n  }\n\n  // enum\n  if (Array.isArray(def.enum)) {\n    if (!def.enum.includes(value as string)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be one of (${def.enum.join('|')})`,\n        ),\n      }\n    }\n  }\n\n  // maxLength\n  if (typeof def.maxLength === 'number') {\n    if (utf8Len(value) > def.maxLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be longer than ${def.maxLength} characters`,\n        ),\n      }\n    }\n  }\n\n  // minLength\n  if (typeof def.minLength === 'number') {\n    if (utf8Len(value) < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be shorter than ${def.minLength} characters`,\n        ),\n      }\n    }\n  }\n\n  // maxGraphemes\n  if (typeof def.maxGraphemes === 'number') {\n    if (graphemeLen(value) > def.maxGraphemes) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be longer than ${def.maxGraphemes} graphemes`,\n        ),\n      }\n    }\n  }\n\n  // minGraphemes\n  if (typeof def.minGraphemes === 'number') {\n    if (graphemeLen(value) < def.minGraphemes) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be shorter than ${def.minGraphemes} graphemes`,\n        ),\n      }\n    }\n  }\n\n  if (typeof def.format === 'string') {\n    switch (def.format) {\n      case 'datetime':\n        return formats.datetime(path, value)\n      case 'uri':\n        return formats.uri(path, value)\n      case 'at-uri':\n        return formats.atUri(path, value)\n      case 'did':\n        return formats.did(path, value)\n      case 'handle':\n        return formats.handle(path, value)\n      case 'at-identifier':\n        return formats.atIdentifier(path, value)\n      case 'nsid':\n        return formats.nsid(path, value)\n      case 'cid':\n        return formats.cid(path, value)\n      case 'language':\n        return formats.language(path, value)\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function bytes(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexBytes\n\n  if (!value || !(value instanceof Uint8Array)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a byte array`),\n    }\n  }\n\n  // maxLength\n  if (typeof def.maxLength === 'number') {\n    if (value.byteLength > def.maxLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be larger than ${def.maxLength} bytes`,\n        ),\n      }\n    }\n  }\n\n  // minLength\n  if (typeof def.minLength === 'number') {\n    if (value.byteLength < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not be smaller than ${def.minLength} bytes`,\n        ),\n      }\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function cidLink(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  if (CID.asCID(value) === null) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be a CID`),\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function unknown(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  // type\n  if (!value || typeof value !== 'object') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an object`),\n    }\n  }\n\n  return { success: true, value }\n}\n", "import { check, ipldToJson, schema } from '@atproto/common-web'\nimport { CID } from 'multiformats/cid'\nimport { z } from 'zod'\n\nexport const typedJsonBlobRef = z\n  .object({\n    $type: z.literal('blob'),\n    ref: schema.cid,\n    mimeType: z.string(),\n    size: z.number(),\n  })\n  .strict()\nexport type TypedJsonBlobRef = z.infer<typeof typedJsonBlobRef>\n\nexport const untypedJsonBlobRef = z\n  .object({\n    cid: z.string(),\n    mimeType: z.string(),\n  })\n  .strict()\nexport type UntypedJsonBlobRef = z.infer<typeof untypedJsonBlobRef>\n\nexport const jsonBlobRef = z.union([typedJsonBlobRef, untypedJsonBlobRef])\nexport type JsonBlobRef = z.infer<typeof jsonBlobRef>\n\nexport class BlobRef {\n  public original: JsonBlobRef\n\n  constructor(\n    public ref: CID,\n    public mimeType: string,\n    public size: number,\n    original?: JsonBlobRef,\n  ) {\n    this.original = original ?? {\n      $type: 'blob',\n      ref,\n      mimeType,\n      size,\n    }\n  }\n\n  static asBlobRef(obj: unknown): BlobRef | null {\n    if (check.is(obj, jsonBlobRef)) {\n      return BlobRef.fromJsonRef(obj)\n    }\n    return null\n  }\n\n  static fromJsonRef(json: JsonBlobRef): BlobRef {\n    if (check.is(json, typedJsonBlobRef)) {\n      return new BlobRef(json.ref, json.mimeType, json.size)\n    } else {\n      return new BlobRef(CID.parse(json.cid), json.mimeType, -1, json)\n    }\n  }\n\n  ipld(): TypedJsonBlobRef {\n    return {\n      $type: 'blob',\n      ref: this.ref,\n      mimeType: this.mimeType,\n      size: this.size,\n    }\n  }\n\n  toJSON() {\n    return ipldToJson(this.ipld())\n  }\n}\n", "import { BlobRef } from '../blob-refs'\nimport { Lexicons } from '../lexicons'\nimport { LexUserType, ValidationResult, ValidationError } from '../types'\n\nexport function blob(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  // check\n  if (!value || !(value instanceof BlobRef)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} should be a blob ref`),\n    }\n  }\n  return { success: true, value }\n}\n", "import { Lexicons } from '../lexicons'\nimport {\n  LexArray,\n  LexObject,\n  LexUserType,\n  ValidationResult,\n  ValidationError,\n} from '../types'\nimport { validateOneOf } from '../util'\n\nimport * as Primitives from './primitives'\nimport * as Blob from './blob'\n\nexport function validate(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  switch (def.type) {\n    case 'boolean':\n      return Primitives.boolean(lexicons, path, def, value)\n    case 'integer':\n      return Primitives.integer(lexicons, path, def, value)\n    case 'string':\n      return Primitives.string(lexicons, path, def, value)\n    case 'bytes':\n      return Primitives.bytes(lexicons, path, def, value)\n    case 'cid-link':\n      return Primitives.cidLink(lexicons, path, def, value)\n    case 'unknown':\n      return Primitives.unknown(lexicons, path, def, value)\n    case 'object':\n      return object(lexicons, path, def, value)\n    case 'array':\n      return array(lexicons, path, def, value)\n    case 'blob':\n      return Blob.blob(lexicons, path, def, value)\n    default:\n      return {\n        success: false,\n        error: new ValidationError(`Unexpected lexicon type: ${def.type}`),\n      }\n  }\n}\n\nexport function array(\n  lexicons: Lexicons,\n  path: string,\n  def: LexArray,\n  value: unknown,\n): ValidationResult {\n  // type\n  if (!Array.isArray(value)) {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an array`),\n    }\n  }\n\n  // maxLength\n  if (typeof def.maxLength === 'number') {\n    if ((value as Array<unknown>).length > def.maxLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not have more than ${def.maxLength} elements`,\n        ),\n      }\n    }\n  }\n\n  // minLength\n  if (typeof def.minLength === 'number') {\n    if ((value as Array<unknown>).length < def.minLength) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must not have fewer than ${def.minLength} elements`,\n        ),\n      }\n    }\n  }\n\n  // items\n  const itemsDef = def.items\n  for (let i = 0; i < (value as Array<unknown>).length; i++) {\n    const itemValue = value[i]\n    const itemPath = `${path}/${i}`\n    const res = validateOneOf(lexicons, itemPath, itemsDef, itemValue)\n    if (!res.success) {\n      return res\n    }\n  }\n\n  return { success: true, value }\n}\n\nexport function object(\n  lexicons: Lexicons,\n  path: string,\n  def: LexUserType,\n  value: unknown,\n): ValidationResult {\n  def = def as LexObject\n\n  // type\n  if (!value || typeof value !== 'object') {\n    return {\n      success: false,\n      error: new ValidationError(`${path} must be an object`),\n    }\n  }\n\n  const requiredProps = new Set(def.required)\n  const nullableProps = new Set(def.nullable)\n\n  // properties\n  let resultValue = value\n  if (typeof def.properties === 'object') {\n    for (const key in def.properties) {\n      if (value[key] === null && nullableProps.has(key)) {\n        continue\n      }\n      const propDef = def.properties[key]\n      const propPath = `${path}/${key}`\n      const validated = validateOneOf(lexicons, propPath, propDef, value[key])\n      const propValue = validated.success ? validated.value : value[key]\n      const propIsUndefined = typeof propValue === 'undefined'\n      // Return error for bad validation, giving required rule precedence\n      if (propIsUndefined && requiredProps.has(key)) {\n        return {\n          success: false,\n          error: new ValidationError(`${path} must have the property \"${key}\"`),\n        }\n      } else if (!propIsUndefined && !validated.success) {\n        return validated\n      }\n      // Adjust value based on e.g. applied defaults, cloning shallowly if there was a changed value\n      if (propValue !== value[key]) {\n        if (resultValue === value) {\n          // Lazy shallow clone\n          resultValue = { ...value }\n        }\n        resultValue[key] = propValue\n      }\n    }\n  }\n\n  return { success: true, value: resultValue }\n}\n", "import { Lexicons } from './lexicons'\nimport * as ComplexValidators from './validators/complex'\nimport {\n  LexUserType,\n  LexRefVariant,\n  ValidationError,\n  ValidationResult,\n  isDiscriminatedObject,\n} from './types'\nimport { z } from 'zod'\n\nexport function toLexUri(str: string, baseUri?: string): string {\n  if (str.split('#').length > 2) {\n    throw new Error('Uri can only have one hash segment')\n  }\n\n  if (str.startsWith('lex:')) {\n    return str\n  }\n  if (str.startsWith('#')) {\n    if (!baseUri) {\n      throw new Error(`Unable to resolve uri without anchor: ${str}`)\n    }\n    return `${baseUri}${str}`\n  }\n  return `lex:${str}`\n}\n\nexport function validateOneOf(\n  lexicons: Lexicons,\n  path: string,\n  def: LexRefVariant | LexUserType,\n  value: unknown,\n  mustBeObj = false, // this is the only type constraint we need currently (used by xrpc body schema validators)\n): ValidationResult {\n  let error\n\n  let concreteDefs\n  if (def.type === 'union') {\n    if (!isDiscriminatedObject(value)) {\n      return {\n        success: false,\n        error: new ValidationError(\n          `${path} must be an object which includes the \"$type\" property`,\n        ),\n      }\n    }\n    if (!refsContainType(def.refs, value.$type)) {\n      if (def.closed) {\n        return {\n          success: false,\n          error: new ValidationError(\n            `${path} $type must be one of ${def.refs.join(', ')}`,\n          ),\n        }\n      }\n      return { success: true, value }\n    } else {\n      concreteDefs = toConcreteTypes(lexicons, {\n        type: 'ref',\n        ref: value.$type,\n      })\n    }\n  } else {\n    concreteDefs = toConcreteTypes(lexicons, def)\n  }\n\n  for (const concreteDef of concreteDefs) {\n    const result = mustBeObj\n      ? ComplexValidators.object(lexicons, path, concreteDef, value)\n      : ComplexValidators.validate(lexicons, path, concreteDef, value)\n    if (result.success) {\n      return result\n    }\n    error ??= result.error\n  }\n  if (concreteDefs.length > 1) {\n    return {\n      success: false,\n      error: new ValidationError(\n        `${path} did not match any of the expected definitions`,\n      ),\n    }\n  }\n  return { success: false, error }\n}\n\nexport function assertValidOneOf(\n  lexicons: Lexicons,\n  path: string,\n  def: LexRefVariant | LexUserType,\n  value: unknown,\n  mustBeObj = false,\n) {\n  const res = validateOneOf(lexicons, path, def, value, mustBeObj)\n  if (!res.success) throw res.error\n  return res.value\n}\n\nexport function toConcreteTypes(\n  lexicons: Lexicons,\n  def: LexRefVariant | LexUserType,\n): LexUserType[] {\n  if (def.type === 'ref') {\n    return [lexicons.getDefOrThrow(def.ref)]\n  } else if (def.type === 'union') {\n    return def.refs.map((ref) => lexicons.getDefOrThrow(ref)).flat()\n  } else {\n    return [def]\n  }\n}\n\nexport function requiredPropertiesRefinement<\n  ObjectType extends {\n    required?: string[]\n    properties?: Record<string, unknown>\n  },\n>(object: ObjectType, ctx: z.RefinementCtx) {\n  // Required fields check\n  if (object.required === undefined) {\n    return\n  }\n\n  if (!Array.isArray(object.required)) {\n    ctx.addIssue({\n      code: z.ZodIssueCode.invalid_type,\n      received: typeof object.required,\n      expected: 'array',\n    })\n    return\n  }\n\n  if (object.properties === undefined) {\n    if (object.required.length > 0) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `Required fields defined but no properties defined`,\n      })\n    }\n    return\n  }\n\n  for (const field of object.required) {\n    if (object.properties[field] === undefined) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `Required field \"${field}\" not defined`,\n      })\n    }\n  }\n}\n\n// to avoid bugs like #0189 this needs to handle both\n// explicit and implicit #main\nconst refsContainType = (refs: string[], type: string) => {\n  const lexUri = toLexUri(type)\n  if (refs.includes(lexUri)) {\n    return true\n  }\n\n  if (lexUri.endsWith('#main')) {\n    return refs.includes(lexUri.replace('#main', ''))\n  } else {\n    return refs.includes(lexUri + '#main')\n  }\n}\n", "import { z } from 'zod'\nimport { NSID } from '@atproto/syntax'\nimport { requiredPropertiesRefinement } from './util'\n\n// primitives\n// =\n\nexport const lexBoolean = z\n  .object({\n    type: z.literal('boolean'),\n    description: z.string().optional(),\n    default: z.boolean().optional(),\n    const: z.boolean().optional(),\n  })\n  .strict()\nexport type LexBoolean = z.infer<typeof lexBoolean>\n\nexport const lexInteger = z\n  .object({\n    type: z.literal('integer'),\n    description: z.string().optional(),\n    default: z.number().int().optional(),\n    minimum: z.number().int().optional(),\n    maximum: z.number().int().optional(),\n    enum: z.number().int().array().optional(),\n    const: z.number().int().optional(),\n  })\n  .strict()\nexport type LexInteger = z.infer<typeof lexInteger>\n\nexport const lexStringFormat = z.enum([\n  'datetime',\n  'uri',\n  'at-uri',\n  'did',\n  'handle',\n  'at-identifier',\n  'nsid',\n  'cid',\n  'language',\n])\nexport type LexStringFormat = z.infer<typeof lexStringFormat>\n\nexport const lexString = z\n  .object({\n    type: z.literal('string'),\n    format: lexStringFormat.optional(),\n    description: z.string().optional(),\n    default: z.string().optional(),\n    minLength: z.number().int().optional(),\n    maxLength: z.number().int().optional(),\n    minGraphemes: z.number().int().optional(),\n    maxGraphemes: z.number().int().optional(),\n    enum: z.string().array().optional(),\n    const: z.string().optional(),\n    knownValues: z.string().array().optional(),\n  })\n  .strict()\nexport type LexString = z.infer<typeof lexString>\n\nexport const lexUnknown = z\n  .object({\n    type: z.literal('unknown'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexUnknown = z.infer<typeof lexUnknown>\n\nexport const lexPrimitive = z.discriminatedUnion('type', [\n  lexBoolean,\n  lexInteger,\n  lexString,\n  lexUnknown,\n])\nexport type LexPrimitive = z.infer<typeof lexPrimitive>\n\n// ipld types\n// =\n\nexport const lexBytes = z\n  .object({\n    type: z.literal('bytes'),\n    description: z.string().optional(),\n    maxLength: z.number().optional(),\n    minLength: z.number().optional(),\n  })\n  .strict()\nexport type LexBytes = z.infer<typeof lexBytes>\n\nexport const lexCidLink = z\n  .object({\n    type: z.literal('cid-link'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexCidLink = z.infer<typeof lexCidLink>\n\nexport const lexIpldType = z.discriminatedUnion('type', [lexBytes, lexCidLink])\nexport type LexIpldType = z.infer<typeof lexIpldType>\n\n// references\n// =\n\nexport const lexRef = z\n  .object({\n    type: z.literal('ref'),\n    description: z.string().optional(),\n    ref: z.string(),\n  })\n  .strict()\nexport type LexRef = z.infer<typeof lexRef>\n\nexport const lexRefUnion = z\n  .object({\n    type: z.literal('union'),\n    description: z.string().optional(),\n    refs: z.string().array(),\n    closed: z.boolean().optional(),\n  })\n  .strict()\nexport type LexRefUnion = z.infer<typeof lexRefUnion>\n\nexport const lexRefVariant = z.discriminatedUnion('type', [lexRef, lexRefUnion])\nexport type LexRefVariant = z.infer<typeof lexRefVariant>\n\n// blobs\n// =\n\nexport const lexBlob = z\n  .object({\n    type: z.literal('blob'),\n    description: z.string().optional(),\n    accept: z.string().array().optional(),\n    maxSize: z.number().optional(),\n  })\n  .strict()\nexport type LexBlob = z.infer<typeof lexBlob>\n\n// complex types\n// =\n\nexport const lexArray = z\n  .object({\n    type: z.literal('array'),\n    description: z.string().optional(),\n    items: z.union([lexPrimitive, lexIpldType, lexBlob, lexRefVariant]),\n    minLength: z.number().int().optional(),\n    maxLength: z.number().int().optional(),\n  })\n  .strict()\nexport type LexArray = z.infer<typeof lexArray>\n\nexport const lexPrimitiveArray = lexArray.merge(\n  z\n    .object({\n      items: lexPrimitive,\n    })\n    .strict(),\n)\nexport type LexPrimitiveArray = z.infer<typeof lexPrimitiveArray>\n\nexport const lexToken = z\n  .object({\n    type: z.literal('token'),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexToken = z.infer<typeof lexToken>\n\nexport const lexObject = z\n  .object({\n    type: z.literal('object'),\n    description: z.string().optional(),\n    required: z.string().array().optional(),\n    nullable: z.string().array().optional(),\n    properties: z.record(\n      z.union([lexRefVariant, lexIpldType, lexArray, lexBlob, lexPrimitive]),\n    ),\n  })\n  .strict()\n  .superRefine(requiredPropertiesRefinement)\nexport type LexObject = z.infer<typeof lexObject>\n\n// xrpc\n// =\n\nexport const lexXrpcParameters = z\n  .object({\n    type: z.literal('params'),\n    description: z.string().optional(),\n    required: z.string().array().optional(),\n    properties: z.record(z.union([lexPrimitive, lexPrimitiveArray])),\n  })\n  .strict()\n  .superRefine(requiredPropertiesRefinement)\nexport type LexXrpcParameters = z.infer<typeof lexXrpcParameters>\n\nexport const lexXrpcBody = z\n  .object({\n    description: z.string().optional(),\n    encoding: z.string(),\n    schema: z.union([lexRefVariant, lexObject]).optional(),\n  })\n  .strict()\nexport type LexXrpcBody = z.infer<typeof lexXrpcBody>\n\nexport const lexXrpcSubscriptionMessage = z\n  .object({\n    description: z.string().optional(),\n    schema: z.union([lexRefVariant, lexObject]).optional(),\n  })\n  .strict()\nexport type LexXrpcSubscriptionMessage = z.infer<\n  typeof lexXrpcSubscriptionMessage\n>\n\nexport const lexXrpcError = z\n  .object({\n    name: z.string(),\n    description: z.string().optional(),\n  })\n  .strict()\nexport type LexXrpcError = z.infer<typeof lexXrpcError>\n\nexport const lexXrpcQuery = z\n  .object({\n    type: z.literal('query'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    output: lexXrpcBody.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcQuery = z.infer<typeof lexXrpcQuery>\n\nexport const lexXrpcProcedure = z\n  .object({\n    type: z.literal('procedure'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    input: lexXrpcBody.optional(),\n    output: lexXrpcBody.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcProcedure = z.infer<typeof lexXrpcProcedure>\n\nexport const lexXrpcSubscription = z\n  .object({\n    type: z.literal('subscription'),\n    description: z.string().optional(),\n    parameters: lexXrpcParameters.optional(),\n    message: lexXrpcSubscriptionMessage.optional(),\n    errors: lexXrpcError.array().optional(),\n  })\n  .strict()\nexport type LexXrpcSubscription = z.infer<typeof lexXrpcSubscription>\n\n// database\n// =\n\nexport const lexRecord = z\n  .object({\n    type: z.literal('record'),\n    description: z.string().optional(),\n    key: z.string().optional(),\n    record: lexObject,\n  })\n  .strict()\nexport type LexRecord = z.infer<typeof lexRecord>\n\n// core\n// =\n\n// We need to use `z.custom` here because\n// lexXrpcProperty and lexObject are refined\n// `z.union` would work, but it's too slow\n// see #915 for details\nexport const lexUserType = z.custom<\n  | LexRecord\n  | LexXrpcQuery\n  | LexXrpcProcedure\n  | LexXrpcSubscription\n  | LexBlob\n  | LexArray\n  | LexToken\n  | LexObject\n  | LexBoolean\n  | LexInteger\n  | LexString\n  | LexBytes\n  | LexCidLink\n  | LexUnknown\n>(\n  (val) => {\n    if (!val || typeof val !== 'object') {\n      return\n    }\n\n    if (val['type'] === undefined) {\n      return\n    }\n\n    switch (val['type']) {\n      case 'record':\n        return lexRecord.parse(val)\n\n      case 'query':\n        return lexXrpcQuery.parse(val)\n      case 'procedure':\n        return lexXrpcProcedure.parse(val)\n      case 'subscription':\n        return lexXrpcSubscription.parse(val)\n\n      case 'blob':\n        return lexBlob.parse(val)\n\n      case 'array':\n        return lexArray.parse(val)\n      case 'token':\n        return lexToken.parse(val)\n      case 'object':\n        return lexObject.parse(val)\n\n      case 'boolean':\n        return lexBoolean.parse(val)\n      case 'integer':\n        return lexInteger.parse(val)\n      case 'string':\n        return lexString.parse(val)\n      case 'bytes':\n        return lexBytes.parse(val)\n      case 'cid-link':\n        return lexCidLink.parse(val)\n      case 'unknown':\n        return lexUnknown.parse(val)\n    }\n  },\n  (val) => {\n    if (!val || typeof val !== 'object') {\n      return {\n        message: 'Must be an object',\n        fatal: true,\n      }\n    }\n\n    if (val['type'] === undefined) {\n      return {\n        message: 'Must have a type',\n        fatal: true,\n      }\n    }\n\n    return {\n      message: `Invalid type: ${val['type']} must be one of: record, query, procedure, subscription, blob, array, token, object, boolean, integer, string, bytes, cid-link, unknown`,\n      fatal: true,\n    }\n  },\n)\nexport type LexUserType = z.infer<typeof lexUserType>\n\nexport const lexiconDoc = z\n  .object({\n    lexicon: z.literal(1),\n    id: z.string().refine((v: string) => NSID.isValid(v), {\n      message: 'Must be a valid NSID',\n    }),\n    revision: z.number().optional(),\n    description: z.string().optional(),\n    defs: z.record(lexUserType),\n  })\n  .strict()\n  .superRefine((doc, ctx) => {\n    for (const defId in doc.defs) {\n      const def = doc.defs[defId]\n      if (\n        defId !== 'main' &&\n        (def.type === 'record' ||\n          def.type === 'procedure' ||\n          def.type === 'query' ||\n          def.type === 'subscription')\n      ) {\n        ctx.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: `Records, procedures, queries, and subscriptions must be the main definition.`,\n        })\n      }\n    }\n  })\nexport type LexiconDoc = z.infer<typeof lexiconDoc>\n\n// helpers\n// =\n\nexport function isValidLexiconDoc(v: unknown): v is LexiconDoc {\n  return lexiconDoc.safeParse(v).success\n}\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj !== null && typeof obj === 'object'\n}\n\nexport function hasProp<K extends PropertyKey>(\n  data: object,\n  prop: K,\n): data is Record<K, unknown> {\n  return prop in data\n}\n\nexport const discriminatedObject = z.object({ $type: z.string() })\nexport type DiscriminatedObject = z.infer<typeof discriminatedObject>\nexport function isDiscriminatedObject(\n  value: unknown,\n): value is DiscriminatedObject {\n  return discriminatedObject.safeParse(value).success\n}\n\nexport function parseLexiconDoc(v: unknown): LexiconDoc {\n  lexiconDoc.parse(v)\n  return v as LexiconDoc\n}\n\nexport type ValidationResult =\n  | {\n      success: true\n      value: unknown\n    }\n  | {\n      success: false\n      error: ValidationError\n    }\n\nexport class ValidationError extends Error {}\nexport class InvalidLexiconError extends Error {}\nexport class LexiconDefNotFoundError extends Error {}\n", "import { Lexicons } from '../lexicons'\nimport { LexXrpcParameters, ValidationResult, ValidationError } from '../types'\n\nimport * as PrimitiveValidators from './primitives'\nimport { array } from './complex'\n\nexport function params(\n  lexicons: Lexicons,\n  path: string,\n  def: LexXrpcParameters,\n  val: unknown,\n): ValidationResult {\n  // type\n  const value = val && typeof val === 'object' ? val : {}\n\n  const requiredProps = new Set(def.required ?? [])\n\n  // properties\n  let resultValue = value\n  if (typeof def.properties === 'object') {\n    for (const key in def.properties) {\n      const propDef = def.properties[key]\n      const validated =\n        propDef.type === 'array'\n          ? array(lexicons, key, propDef, value[key])\n          : PrimitiveValidators.validate(lexicons, key, propDef, value[key])\n      const propValue = validated.success ? validated.value : value[key]\n      const propIsUndefined = typeof propValue === 'undefined'\n      // Return error for bad validation, giving required rule precedence\n      if (propIsUndefined && requiredProps.has(key)) {\n        return {\n          success: false,\n          error: new ValidationError(`${path} must have the property \"${key}\"`),\n        }\n      } else if (!propIsUndefined && !validated.success) {\n        return validated\n      }\n      // Adjust value based on e.g. applied defaults, cloning shallowly if there was a changed value\n      if (propValue !== value[key]) {\n        if (resultValue === value) {\n          // Lazy shallow clone\n          resultValue = { ...value }\n        }\n        resultValue[key] = propValue\n      }\n    }\n  }\n\n  return { success: true, value: resultValue }\n}\n", "import { Lexicons } from './lexicons'\nimport {\n  LexRecord,\n  LexXrpcProcedure,\n  LexXrpcQuery,\n  LexXrpcSubscription,\n} from './types'\nimport { assertValidOneOf } from './util'\n\nimport * as ComplexValidators from './validators/complex'\nimport * as XrpcValidators from './validators/xrpc'\n\nexport function assertValidRecord(\n  lexicons: Lexicons,\n  def: LexRecord,\n  value: unknown,\n) {\n  const res = ComplexValidators.object(lexicons, 'Record', def.record, value)\n  if (!res.success) throw res.error\n  return res.value\n}\n\nexport function assertValidXrpcParams(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure | LexXrpcQuery | LexXrpcSubscription,\n  value: unknown,\n) {\n  if (def.parameters) {\n    const res = XrpcValidators.params(lexicons, 'Params', def.parameters, value)\n    if (!res.success) throw res.error\n    return res.value\n  }\n}\n\nexport function assertValidXrpcInput(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure,\n  value: unknown,\n) {\n  if (def.input?.schema) {\n    // loop: all input schema definitions\n    return assertValidOneOf(lexicons, 'Input', def.input.schema, value, true)\n  }\n}\n\nexport function assertValidXrpcOutput(\n  lexicons: Lexicons,\n  def: LexXrpcProcedure | LexXrpcQuery,\n  value: unknown,\n) {\n  if (def.output?.schema) {\n    // loop: all output schema definitions\n    return assertValidOneOf(lexicons, 'Output', def.output.schema, value, true)\n  }\n}\n\nexport function assertValidXrpcMessage(\n  lexicons: Lexicons,\n  def: LexXrpcSubscription,\n  value: unknown,\n) {\n  if (def.message?.schema) {\n    // loop: all output schema definitions\n    return assertValidOneOf(\n      lexicons,\n      'Message',\n      def.message.schema,\n      value,\n      true,\n    )\n  }\n}\n", "import {\n  LexiconDoc,\n  LexRecord,\n  LexUserType,\n  LexiconDefNotFoundError,\n  InvalidLexiconError,\n  ValidationResult,\n  ValidationError,\n  isObj,\n  hasProp,\n} from './types'\nimport {\n  assertValidRecord,\n  assertValidXrpcParams,\n  assertValidXrpcInput,\n  assertValidXrpcOutput,\n  assertValidXrpcMessage,\n} from './validation'\nimport { toLexUri } from './util'\nimport * as ComplexValidators from './validators/complex'\n\n/**\n * A collection of compiled lexicons.\n */\nexport class Lexicons {\n  docs: Map<string, LexiconDoc> = new Map()\n  defs: Map<string, LexUserType> = new Map()\n\n  constructor(docs?: LexiconDoc[]) {\n    if (docs?.length) {\n      for (const doc of docs) {\n        this.add(doc)\n      }\n    }\n  }\n\n  /**\n   * Add a lexicon doc.\n   */\n  add(doc: LexiconDoc): void {\n    const uri = toLexUri(doc.id)\n    if (this.docs.has(uri)) {\n      throw new Error(`${uri} has already been registered`)\n    }\n\n    // WARNING\n    // mutates the object\n    // -prf\n    resolveRefUris(doc, uri)\n\n    this.docs.set(uri, doc)\n    for (const [defUri, def] of iterDefs(doc)) {\n      this.defs.set(defUri, def)\n    }\n  }\n\n  /**\n   * Remove a lexicon doc.\n   */\n  remove(uri: string) {\n    uri = toLexUri(uri)\n    const doc = this.docs.get(uri)\n    if (!doc) {\n      throw new Error(`Unable to remove \"${uri}\": does not exist`)\n    }\n    for (const [defUri, _def] of iterDefs(doc)) {\n      this.defs.delete(defUri)\n    }\n    this.docs.delete(uri)\n  }\n\n  /**\n   * Get a lexicon doc.\n   */\n  get(uri: string): LexiconDoc | undefined {\n    uri = toLexUri(uri)\n    return this.docs.get(uri)\n  }\n\n  /**\n   * Get a definition.\n   */\n  getDef(uri: string): LexUserType | undefined {\n    uri = toLexUri(uri)\n    return this.defs.get(uri)\n  }\n\n  /**\n   * Get a def, throw if not found. Throws on not found.\n   */\n  getDefOrThrow<T extends LexUserType['type'] = LexUserType['type']>(\n    uri: string,\n    types?: readonly T[],\n  ): Extract<LexUserType, { type: T }>\n  getDefOrThrow(\n    uri: string,\n    types?: readonly LexUserType['type'][],\n  ): LexUserType {\n    const def = this.getDef(uri)\n    if (!def) {\n      throw new LexiconDefNotFoundError(`Lexicon not found: ${uri}`)\n    }\n    if (types && !types.includes(def.type)) {\n      throw new InvalidLexiconError(\n        `Not a ${types.join(' or ')} lexicon: ${uri}`,\n      )\n    }\n    return def\n  }\n\n  /**\n   * Validate a record or object.\n   */\n  validate(lexUri: string, value: unknown): ValidationResult {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['record', 'object'])\n    if (!isObj(value)) {\n      throw new ValidationError(`Value must be an object`)\n    }\n    if (def.type === 'record') {\n      return ComplexValidators.object(this, 'Record', def.record, value)\n    } else if (def.type === 'object') {\n      return ComplexValidators.object(this, 'Object', def, value)\n    } else {\n      // shouldn't happen\n      throw new InvalidLexiconError('Definition must be a record or object')\n    }\n  }\n\n  /**\n   * Validate a record and throw on any error.\n   */\n  assertValidRecord(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['record'])\n    if (!isObj(value)) {\n      throw new ValidationError(`Record must be an object`)\n    }\n    if (!hasProp(value, '$type') || typeof value.$type !== 'string') {\n      throw new ValidationError(`Record/$type must be a string`)\n    }\n    const $type = (value as Record<string, string>).$type || ''\n    if (toLexUri($type) !== lexUri) {\n      throw new ValidationError(\n        `Invalid $type: must be ${lexUri}, got ${$type}`,\n      )\n    }\n    return assertValidRecord(this, def as LexRecord, value)\n  }\n\n  /**\n   * Validate xrpc query params and throw on any error.\n   */\n  assertValidXrpcParams(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, [\n      'query',\n      'procedure',\n      'subscription',\n    ])\n    return assertValidXrpcParams(this, def, value)\n  }\n\n  /**\n   * Validate xrpc input body and throw on any error.\n   */\n  assertValidXrpcInput(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['procedure'])\n    return assertValidXrpcInput(this, def, value)\n  }\n\n  /**\n   * Validate xrpc output body and throw on any error.\n   */\n  assertValidXrpcOutput(lexUri: string, value: unknown) {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['query', 'procedure'])\n    return assertValidXrpcOutput(this, def, value)\n  }\n\n  /**\n   * Validate xrpc subscription message and throw on any error.\n   */\n  assertValidXrpcMessage<T = unknown>(lexUri: string, value: unknown): T {\n    lexUri = toLexUri(lexUri)\n    const def = this.getDefOrThrow(lexUri, ['subscription'])\n    return assertValidXrpcMessage(this, def, value) as T\n  }\n\n  /**\n   * Resolve a lex uri given a ref\n   */\n  resolveLexUri(lexUri: string, ref: string) {\n    lexUri = toLexUri(lexUri)\n    return toLexUri(ref, lexUri)\n  }\n}\n\nfunction* iterDefs(doc: LexiconDoc): Generator<[string, LexUserType]> {\n  for (const defId in doc.defs) {\n    yield [`lex:${doc.id}#${defId}`, doc.defs[defId]]\n    if (defId === 'main') {\n      yield [`lex:${doc.id}`, doc.defs[defId]]\n    }\n  }\n}\n\n// WARNING\n// this method mutates objects\n// -prf\nfunction resolveRefUris(obj: any, baseUri: string): any {\n  for (const k in obj) {\n    if (obj.type === 'ref') {\n      obj.ref = toLexUri(obj.ref, baseUri)\n    } else if (obj.type === 'union') {\n      obj.refs = obj.refs.map((ref) => toLexUri(ref, baseUri))\n    } else if (Array.isArray(obj[k])) {\n      obj[k] = obj[k].map((item: any) => {\n        if (typeof item === 'string') {\n          return item.startsWith('#') ? toLexUri(item, baseUri) : item\n        } else if (item && typeof item === 'object') {\n          return resolveRefUris(item, baseUri)\n        }\n        return item\n      })\n    } else if (obj[k] && typeof obj[k] === 'object') {\n      obj[k] = resolveRefUris(obj[k], baseUri)\n    }\n  }\n  return obj\n}\n", "import {\n  check,\n  IpldValue,\n  ipldToJson,\n  jsonToIpld,\n  JsonValue,\n} from '@atproto/common-web'\nimport { CID } from 'multiformats/cid'\nimport { BlobRef, jsonBlobRef } from './blob-refs'\n\nexport type LexValue =\n  | IpldValue\n  | BlobRef\n  | Array<LexValue>\n  | { [key: string]: LexValue }\n\nexport type RepoRecord = Record<string, LexValue>\n\n// @NOTE avoiding use of check.is() here only because it makes\n// these implementations slow, and they often live in hot paths.\n\nexport const lexToIpld = (val: LexValue): IpldValue => {\n  // walk arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => lexToIpld(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert blobs, leaving the original encoding so that we don't change CIDs on re-encode\n    if (val instanceof BlobRef) {\n      return val.original\n    }\n    // retain cids & bytes\n    if (CID.asCID(val) || val instanceof Uint8Array) {\n      return val\n    }\n    // walk plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = lexToIpld(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const ipldToLex = (val: IpldValue): LexValue => {\n  // map arrays\n  if (Array.isArray(val)) {\n    return val.map((item) => ipldToLex(item))\n  }\n  // objects\n  if (val && typeof val === 'object') {\n    // convert blobs, using hints to avoid expensive is() check\n    if (\n      (val['$type'] === 'blob' ||\n        (typeof val['cid'] === 'string' &&\n          typeof val['mimeType'] === 'string')) &&\n      check.is(val, jsonBlobRef)\n    ) {\n      return BlobRef.fromJsonRef(val)\n    }\n    // retain cids, bytes\n    if (CID.asCID(val) || val instanceof Uint8Array) {\n      return val\n    }\n    // map plain objects\n    const toReturn = {}\n    for (const key of Object.keys(val)) {\n      toReturn[key] = ipldToLex(val[key])\n    }\n    return toReturn\n  }\n  // pass through\n  return val\n}\n\nexport const lexToJson = (val: LexValue): JsonValue => {\n  return ipldToJson(lexToIpld(val))\n}\n\nexport const stringifyLex = (val: LexValue): string => {\n  return JSON.stringify(lexToJson(val))\n}\n\nexport const jsonToLex = (val: JsonValue): LexValue => {\n  return ipldToLex(jsonToIpld(val))\n}\n\nexport const jsonStringToLex = (val: string): LexValue => {\n  return jsonToLex(JSON.parse(val))\n}\n", "export * from './types'\nexport * from './lexicons'\nexport * from './blob-refs'\nexport * from './serialize'\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "export const BSKY_LABELER_DID = 'did:plc:ar7c4by46qjdydhdevvrndac'\n", "export function sanitizeMutedWordValue(value: string) {\n  return value\n    .trim()\n    .replace(/^#(?!\\ufe0f)/, '')\n    .replace(/[\\r\\n\\u00AD\\u2060\\u200D\\u200C\\u200B]+/, '')\n}\n", "import { z } from 'zod'\nimport { ValidationError } from '@atproto/lexicon'\n\nexport type QueryParams = Record<string, any>\nexport type Headers = Record<string, string>\n\nexport interface CallOptions {\n  encoding?: string\n  headers?: Headers\n}\n\nexport interface FetchHandlerResponse {\n  status: number\n  headers: Headers\n  body: ArrayBuffer | undefined\n}\n\nexport type FetchHandler = (\n  httpUri: string,\n  httpMethod: string,\n  httpHeaders: Headers,\n  httpReqBody: any,\n) => Promise<FetchHandlerResponse>\n\nexport const errorResponseBody = z.object({\n  error: z.string().optional(),\n  message: z.string().optional(),\n})\nexport type ErrorResponseBody = z.infer<typeof errorResponseBody>\n\nexport enum ResponseType {\n  Unknown = 1,\n  InvalidResponse = 2,\n  Success = 200,\n  InvalidRequest = 400,\n  AuthRequired = 401,\n  Forbidden = 403,\n  XRPCNotSupported = 404,\n  PayloadTooLarge = 413,\n  RateLimitExceeded = 429,\n  InternalServerError = 500,\n  MethodNotImplemented = 501,\n  UpstreamFailure = 502,\n  NotEnoughResources = 503,\n  UpstreamTimeout = 504,\n}\n\nexport const ResponseTypeNames = {\n  [ResponseType.InvalidResponse]: 'InvalidResponse',\n  [ResponseType.Success]: 'Success',\n  [ResponseType.InvalidRequest]: 'InvalidRequest',\n  [ResponseType.AuthRequired]: 'AuthenticationRequired',\n  [ResponseType.Forbidden]: 'Forbidden',\n  [ResponseType.XRPCNotSupported]: 'XRPCNotSupported',\n  [ResponseType.PayloadTooLarge]: 'PayloadTooLarge',\n  [ResponseType.RateLimitExceeded]: 'RateLimitExceeded',\n  [ResponseType.InternalServerError]: 'InternalServerError',\n  [ResponseType.MethodNotImplemented]: 'MethodNotImplemented',\n  [ResponseType.UpstreamFailure]: 'UpstreamFailure',\n  [ResponseType.NotEnoughResources]: 'NotEnoughResources',\n  [ResponseType.UpstreamTimeout]: 'UpstreamTimeout',\n}\n\nexport const ResponseTypeStrings = {\n  [ResponseType.InvalidResponse]: 'Invalid Response',\n  [ResponseType.Success]: 'Success',\n  [ResponseType.InvalidRequest]: 'Invalid Request',\n  [ResponseType.AuthRequired]: 'Authentication Required',\n  [ResponseType.Forbidden]: 'Forbidden',\n  [ResponseType.XRPCNotSupported]: 'XRPC Not Supported',\n  [ResponseType.PayloadTooLarge]: 'Payload Too Large',\n  [ResponseType.RateLimitExceeded]: 'Rate Limit Exceeded',\n  [ResponseType.InternalServerError]: 'Internal Server Error',\n  [ResponseType.MethodNotImplemented]: 'Method Not Implemented',\n  [ResponseType.UpstreamFailure]: 'Upstream Failure',\n  [ResponseType.NotEnoughResources]: 'Not Enough Resources',\n  [ResponseType.UpstreamTimeout]: 'Upstream Timeout',\n}\n\nexport class XRPCResponse {\n  success = true\n\n  constructor(public data: any, public headers: Headers) {}\n}\n\nexport class XRPCError extends Error {\n  success = false\n  headers?: Headers\n\n  constructor(\n    public status: ResponseType,\n    public error?: string,\n    message?: string,\n    headers?: Headers,\n  ) {\n    super(message || error || ResponseTypeStrings[status])\n    if (!this.error) {\n      this.error = ResponseTypeNames[status]\n    }\n    this.headers = headers\n  }\n}\n\nexport class XRPCInvalidResponseError extends XRPCError {\n  constructor(\n    public lexiconNsid: string,\n    public validationError: ValidationError,\n    public responseBody: unknown,\n  ) {\n    super(\n      ResponseType.InvalidResponse,\n      ResponseTypeStrings[ResponseType.InvalidResponse],\n      `The server gave an invalid response and may be out of date.`,\n    )\n  }\n}\n", "import {\n  jsonStringToLex,\n  LexXrpcProcedure,\n  LexXrpcQuery,\n  stringifyLex,\n} from '@atproto/lexicon'\nimport {\n  CallOptions,\n  Headers,\n  QueryParams,\n  ResponseType,\n  XRPCError,\n} from './types'\n\nexport function getMethodSchemaHTTPMethod(\n  schema: LexXrpcProcedure | LexXrpcQuery,\n) {\n  if (schema.type === 'procedure') {\n    return 'post'\n  }\n  return 'get'\n}\n\nexport function constructMethodCallUri(\n  nsid: string,\n  schema: LexXrpcProcedure | LexXrpcQuery,\n  serviceUri: URL,\n  params?: QueryParams,\n): string {\n  const uri = new URL(serviceUri)\n  uri.pathname = `/xrpc/${nsid}`\n\n  // given parameters\n  if (params) {\n    for (const [key, value] of Object.entries(params)) {\n      const paramSchema = schema.parameters?.properties?.[key]\n      if (!paramSchema) {\n        throw new Error(`Invalid query parameter: ${key}`)\n      }\n      if (value !== undefined) {\n        if (paramSchema.type === 'array') {\n          const vals: typeof value[] = []\n          vals.concat(value).forEach((val) => {\n            uri.searchParams.append(\n              key,\n              encodeQueryParam(paramSchema.items.type, val),\n            )\n          })\n        } else {\n          uri.searchParams.set(key, encodeQueryParam(paramSchema.type, value))\n        }\n      }\n    }\n  }\n\n  return uri.toString()\n}\n\nexport function encodeQueryParam(\n  type:\n    | 'string'\n    | 'float'\n    | 'integer'\n    | 'boolean'\n    | 'datetime'\n    | 'array'\n    | 'unknown',\n  value: any,\n): string {\n  if (type === 'string' || type === 'unknown') {\n    return String(value)\n  }\n  if (type === 'float') {\n    return String(Number(value))\n  } else if (type === 'integer') {\n    return String(Number(value) | 0)\n  } else if (type === 'boolean') {\n    return value ? 'true' : 'false'\n  } else if (type === 'datetime') {\n    if (value instanceof Date) {\n      return value.toISOString()\n    }\n    return String(value)\n  }\n  throw new Error(`Unsupported query param type: ${type}`)\n}\n\nexport function normalizeHeaders(headers: Headers): Headers {\n  const normalized: Headers = {}\n  for (const [header, value] of Object.entries(headers)) {\n    normalized[header.toLowerCase()] = value\n  }\n\n  return normalized\n}\n\nexport function constructMethodCallHeaders(\n  schema: LexXrpcProcedure | LexXrpcQuery,\n  data?: any,\n  opts?: CallOptions,\n): Headers {\n  const headers: Headers = opts?.headers || {}\n  if (schema.type === 'procedure') {\n    if (opts?.encoding) {\n      headers['Content-Type'] = opts.encoding\n    }\n    if (data && typeof data === 'object') {\n      if (!headers['Content-Type']) {\n        headers['Content-Type'] = 'application/json'\n      }\n    }\n  }\n  return headers\n}\n\nexport function encodeMethodCallBody(\n  headers: Headers,\n  data?: any,\n): ArrayBuffer | undefined {\n  if (!headers['content-type'] || typeof data === 'undefined') {\n    return undefined\n  }\n  if (data instanceof ArrayBuffer) {\n    return data\n  }\n  if (headers['content-type'].startsWith('text/')) {\n    return new TextEncoder().encode(data.toString())\n  }\n  if (headers['content-type'].startsWith('application/json')) {\n    return new TextEncoder().encode(stringifyLex(data))\n  }\n  return data\n}\n\nexport function httpResponseCodeToEnum(status: number): ResponseType {\n  let resCode: ResponseType\n  if (status in ResponseType) {\n    resCode = status\n  } else if (status >= 100 && status < 200) {\n    resCode = ResponseType.XRPCNotSupported\n  } else if (status >= 200 && status < 300) {\n    resCode = ResponseType.Success\n  } else if (status >= 300 && status < 400) {\n    resCode = ResponseType.XRPCNotSupported\n  } else if (status >= 400 && status < 500) {\n    resCode = ResponseType.InvalidRequest\n  } else {\n    resCode = ResponseType.InternalServerError\n  }\n  return resCode\n}\n\nexport function httpResponseBodyParse(\n  mimeType: string | null,\n  data: ArrayBuffer | undefined,\n): any {\n  if (mimeType) {\n    if (mimeType.includes('application/json') && data?.byteLength) {\n      try {\n        const str = new TextDecoder().decode(data)\n        return jsonStringToLex(str)\n      } catch (e) {\n        throw new XRPCError(\n          ResponseType.InvalidResponse,\n          `Failed to parse response body: ${String(e)}`,\n        )\n      }\n    }\n    if (mimeType.startsWith('text/') && data?.byteLength) {\n      try {\n        return new TextDecoder().decode(data)\n      } catch (e) {\n        throw new XRPCError(\n          ResponseType.InvalidResponse,\n          `Failed to parse response body: ${String(e)}`,\n        )\n      }\n    }\n  }\n  if (data instanceof ArrayBuffer) {\n    return new Uint8Array(data)\n  }\n  return data\n}\n", "import { LexiconDoc, Lexicons, ValidationError } from '@atproto/lexicon'\nimport {\n  getMethodSchemaHTTPMethod,\n  constructMethodCallUri,\n  constructMethodCallHeaders,\n  encodeMethodCallBody,\n  httpResponseCodeToEnum,\n  httpResponseBodyParse,\n  normalizeHeaders,\n} from './util'\nimport {\n  FetchHandler,\n  FetchHandlerResponse,\n  Headers,\n  CallOptions,\n  QueryParams,\n  ResponseType,\n  errorResponseBody,\n  ErrorResponseBody,\n  XRPCResponse,\n  XRPCError,\n  XRPCInvalidResponseError,\n} from './types'\n\nexport class Client {\n  fetch: FetchHandler = defaultFetchHandler\n  lex = new Lexicons()\n\n  // method calls\n  //\n\n  async call(\n    serviceUri: string | URL,\n    methodNsid: string,\n    params?: QueryParams,\n    data?: unknown,\n    opts?: CallOptions,\n  ) {\n    return this.service(serviceUri).call(methodNsid, params, data, opts)\n  }\n\n  service(serviceUri: string | URL) {\n    return new ServiceClient(this, serviceUri)\n  }\n\n  // schemas\n  // =\n\n  addLexicon(doc: LexiconDoc) {\n    this.lex.add(doc)\n  }\n\n  addLexicons(docs: LexiconDoc[]) {\n    for (const doc of docs) {\n      this.addLexicon(doc)\n    }\n  }\n\n  removeLexicon(uri: string) {\n    this.lex.remove(uri)\n  }\n}\n\nexport class ServiceClient {\n  baseClient: Client\n  uri: URL\n  headers: Record<string, string> = {}\n\n  constructor(baseClient: Client, serviceUri: string | URL) {\n    this.baseClient = baseClient\n    this.uri = typeof serviceUri === 'string' ? new URL(serviceUri) : serviceUri\n  }\n\n  setHeader(key: string, value: string): void {\n    this.headers[key] = value\n  }\n\n  unsetHeader(key: string): void {\n    delete this.headers[key]\n  }\n\n  async call(\n    methodNsid: string,\n    params?: QueryParams,\n    data?: unknown,\n    opts?: CallOptions,\n  ) {\n    const def = this.baseClient.lex.getDefOrThrow(methodNsid)\n    if (!def || (def.type !== 'query' && def.type !== 'procedure')) {\n      throw new Error(\n        `Invalid lexicon: ${methodNsid}. Must be a query or procedure.`,\n      )\n    }\n\n    const httpMethod = getMethodSchemaHTTPMethod(def)\n    const httpUri = constructMethodCallUri(methodNsid, def, this.uri, params)\n    const httpHeaders = constructMethodCallHeaders(def, data, {\n      headers: {\n        ...this.headers,\n        ...opts?.headers,\n      },\n      encoding: opts?.encoding,\n    })\n\n    const res = await this.baseClient.fetch(\n      httpUri,\n      httpMethod,\n      httpHeaders,\n      data,\n    )\n\n    const resCode = httpResponseCodeToEnum(res.status)\n    if (resCode === ResponseType.Success) {\n      try {\n        this.baseClient.lex.assertValidXrpcOutput(methodNsid, res.body)\n      } catch (e: any) {\n        if (e instanceof ValidationError) {\n          throw new XRPCInvalidResponseError(methodNsid, e, res.body)\n        } else {\n          throw e\n        }\n      }\n      return new XRPCResponse(res.body, res.headers)\n    } else {\n      if (res.body && isErrorResponseBody(res.body)) {\n        throw new XRPCError(\n          resCode,\n          res.body.error,\n          res.body.message,\n          res.headers,\n        )\n      } else {\n        throw new XRPCError(resCode)\n      }\n    }\n  }\n}\n\nexport async function defaultFetchHandler(\n  httpUri: string,\n  httpMethod: string,\n  httpHeaders: Headers,\n  httpReqBody: unknown,\n): Promise<FetchHandlerResponse> {\n  try {\n    // The duplex field is now required for streaming bodies, but not yet reflected\n    // anywhere in docs or types. See whatwg/fetch#1438, nodejs/node#46221.\n    const headers = normalizeHeaders(httpHeaders)\n    const reqInit: RequestInit & { duplex: string } = {\n      method: httpMethod,\n      headers,\n      body: encodeMethodCallBody(headers, httpReqBody),\n      duplex: 'half',\n    }\n    const res = await fetch(httpUri, reqInit)\n    const resBody = await res.arrayBuffer()\n    return {\n      status: res.status,\n      headers: Object.fromEntries(res.headers.entries()),\n      body: httpResponseBodyParse(res.headers.get('content-type'), resBody),\n    }\n  } catch (e) {\n    throw new XRPCError(ResponseType.Unknown, String(e))\n  }\n}\n\nfunction isErrorResponseBody(v: unknown): v is ErrorResponseBody {\n  return errorResponseBody.safeParse(v).success\n}\n", "export * from './types'\nexport * from './client'\n\nimport { Client } from './client'\nconst defaultInst = new Client()\nexport default defaultInst\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { LexiconDoc, Lexicons } from '@atproto/lexicon'\n\nexport const schemaDict = {\n  ComAtprotoAdminDefs: {\n    lexicon: 1,\n    id: 'com.atproto.admin.defs',\n    defs: {\n      statusAttr: {\n        type: 'object',\n        required: ['applied'],\n        properties: {\n          applied: {\n            type: 'boolean',\n          },\n          ref: {\n            type: 'string',\n          },\n        },\n      },\n      accountView: {\n        type: 'object',\n        required: ['did', 'handle', 'indexedAt'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invites: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCode',\n            },\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          emailConfirmedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n        },\n      },\n      repoRef: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      repoBlobRef: {\n        type: 'object',\n        required: ['did', 'cid'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          recordUri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDeleteAccount: {\n    lexicon: 1,\n    id: 'com.atproto.admin.deleteAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete a user account as an administrator.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDisableAccountInvites: {\n    lexicon: 1,\n    id: 'com.atproto.admin.disableAccountInvites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Disable an account from receiving new invite codes, but does not invalidate existing codes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'did',\n              },\n              note: {\n                type: 'string',\n                description: 'Optional reason for disabled invites.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminDisableInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.admin.disableInviteCodes',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Disable some set of codes and/or all codes associated with a set of users.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              accounts: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminEnableAccountInvites: {\n    lexicon: 1,\n    id: 'com.atproto.admin.enableAccountInvites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Re-enable an account's ability to receive invite codes.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'did',\n              },\n              note: {\n                type: 'string',\n                description: 'Optional reason for enabled invites.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetAccountInfo: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getAccountInfo',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about an account.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.admin.defs#accountView',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetAccountInfos: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getAccountInfos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about some accounts.',\n        parameters: {\n          type: 'params',\n          required: ['dids'],\n          properties: {\n            dids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['infos'],\n            properties: {\n              infos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.admin.defs#accountView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getInviteCodes',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get an admin view of invite codes.',\n        parameters: {\n          type: 'params',\n          properties: {\n            sort: {\n              type: 'string',\n              knownValues: ['recent', 'usage'],\n              default: 'recent',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 500,\n              default: 100,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.defs#inviteCode',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminGetSubjectStatus: {\n    lexicon: 1,\n    id: 'com.atproto.admin.getSubjectStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get the service-specific admin status of a subject (account, record, or blob).',\n        parameters: {\n          type: 'params',\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            blob: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminSendEmail: {\n    lexicon: 1,\n    id: 'com.atproto.admin.sendEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Send email to a user's account email address.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['recipientDid', 'content', 'senderDid'],\n            properties: {\n              recipientDid: {\n                type: 'string',\n                format: 'did',\n              },\n              content: {\n                type: 'string',\n              },\n              subject: {\n                type: 'string',\n              },\n              senderDid: {\n                type: 'string',\n                format: 'did',\n              },\n              comment: {\n                type: 'string',\n                description:\n                  \"Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers\",\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['sent'],\n            properties: {\n              sent: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountEmail: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Administrative action to update an account's email.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['account', 'email'],\n            properties: {\n              account: {\n                type: 'string',\n                format: 'at-identifier',\n                description: 'The handle or DID of the repo.',\n              },\n              email: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountHandle: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Administrative action to update an account's handle.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'handle'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateAccountPassword: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateAccountPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Update the password for a user account as an administrator.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'password'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              password: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoAdminUpdateSubjectStatus: {\n    lexicon: 1,\n    id: 'com.atproto.admin.updateSubjectStatus',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Update the service-specific admin status of a subject (account, record, or blob).',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject'],\n            properties: {\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                  'lex:com.atproto.admin.defs#repoBlobRef',\n                ],\n              },\n              takedown: {\n                type: 'ref',\n                ref: 'lex:com.atproto.admin.defs#statusAttr',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityGetRecommendedDidCredentials: {\n    lexicon: 1,\n    id: 'com.atproto.identity.getRecommendedDidCredentials',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Describe the credentials that should be included in the DID doc of an account that is migrating to this service.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              rotationKeys: {\n                description:\n                  'Recommended rotation keys for PLC dids. Should be undefined (or ignored) for did:webs.',\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              alsoKnownAs: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              verificationMethods: {\n                type: 'unknown',\n              },\n              services: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityRequestPlcOperationSignature: {\n    lexicon: 1,\n    id: 'com.atproto.identity.requestPlcOperationSignature',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request an email with a code to in order to request a signed PLC operation. Requires Auth.',\n      },\n    },\n  },\n  ComAtprotoIdentityResolveHandle: {\n    lexicon: 1,\n    id: 'com.atproto.identity.resolveHandle',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Resolves a handle (domain name) to a DID.',\n        parameters: {\n          type: 'params',\n          required: ['handle'],\n          properties: {\n            handle: {\n              type: 'string',\n              format: 'handle',\n              description: 'The handle to resolve.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentitySignPlcOperation: {\n    lexicon: 1,\n    id: 'com.atproto.identity.signPlcOperation',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Signs a PLC operation to update some value(s) in the requesting DID's document.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              token: {\n                description:\n                  'A token received through com.atproto.identity.requestPlcOperationSignature',\n                type: 'string',\n              },\n              rotationKeys: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              alsoKnownAs: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                },\n              },\n              verificationMethods: {\n                type: 'unknown',\n              },\n              services: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['operation'],\n            properties: {\n              operation: {\n                type: 'unknown',\n                description: 'A signed DID PLC operation.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentitySubmitPlcOperation: {\n    lexicon: 1,\n    id: 'com.atproto.identity.submitPlcOperation',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Validates a PLC operation to ensure that it doesn't violate a service's constraints or get the identity into a bad state, then submits it to the PLC registry\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['operation'],\n            properties: {\n              operation: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoIdentityUpdateHandle: {\n    lexicon: 1,\n    id: 'com.atproto.identity.updateHandle',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Updates the current account's handle. Verifies handle validity, and updates did:plc document if necessary. Implemented by PDS, and requires auth.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n                description: 'The new handle.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelDefs: {\n    lexicon: 1,\n    id: 'com.atproto.label.defs',\n    defs: {\n      label: {\n        type: 'object',\n        description:\n          'Metadata tag on an atproto resource (eg, repo or record).',\n        required: ['src', 'uri', 'val', 'cts'],\n        properties: {\n          ver: {\n            type: 'integer',\n            description: 'The AT Protocol version of the label object.',\n          },\n          src: {\n            type: 'string',\n            format: 'did',\n            description: 'DID of the actor who created this label.',\n          },\n          uri: {\n            type: 'string',\n            format: 'uri',\n            description:\n              'AT URI of the record, repository (account), or other resource that this label applies to.',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n            description:\n              \"Optionally, CID specifying the specific version of 'uri' resource this label applies to.\",\n          },\n          val: {\n            type: 'string',\n            maxLength: 128,\n            description:\n              'The short string name of the value or type of this label.',\n          },\n          neg: {\n            type: 'boolean',\n            description:\n              'If true, this is a negation label, overwriting a previous label.',\n          },\n          cts: {\n            type: 'string',\n            format: 'datetime',\n            description: 'Timestamp when this label was created.',\n          },\n          exp: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp at which this label expires (no longer applies).',\n          },\n          sig: {\n            type: 'bytes',\n            description: 'Signature of dag-cbor encoded label.',\n          },\n        },\n      },\n      selfLabels: {\n        type: 'object',\n        description:\n          'Metadata tags on an atproto record, published by the author within the record.',\n        required: ['values'],\n        properties: {\n          values: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#selfLabel',\n            },\n            maxLength: 10,\n          },\n        },\n      },\n      selfLabel: {\n        type: 'object',\n        description:\n          'Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel.',\n        required: ['val'],\n        properties: {\n          val: {\n            type: 'string',\n            maxLength: 128,\n            description:\n              'The short string name of the value or type of this label.',\n          },\n        },\n      },\n      labelValueDefinition: {\n        type: 'object',\n        description:\n          'Declares a label value and its expected interpertations and behaviors.',\n        required: ['identifier', 'severity', 'blurs', 'locales'],\n        properties: {\n          identifier: {\n            type: 'string',\n            description:\n              \"The value of the label being defined. Must only include lowercase ascii and the '-' character ([a-z-]+).\",\n            maxLength: 100,\n            maxGraphemes: 100,\n          },\n          severity: {\n            type: 'string',\n            description:\n              \"How should a client visually convey this label? 'inform' means neutral and informational; 'alert' means negative and warning; 'none' means show nothing.\",\n            knownValues: ['inform', 'alert', 'none'],\n          },\n          blurs: {\n            type: 'string',\n            description:\n              \"What should this label hide in the UI, if applied? 'content' hides all of the target; 'media' hides the images/video/audio; 'none' hides nothing.\",\n            knownValues: ['content', 'media', 'none'],\n          },\n          defaultSetting: {\n            type: 'string',\n            description: 'The default setting for this label.',\n            knownValues: ['ignore', 'warn', 'hide'],\n            default: 'warn',\n          },\n          adultOnly: {\n            type: 'boolean',\n            description:\n              'Does the user need to have adult content enabled in order to configure this label?',\n          },\n          locales: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#labelValueDefinitionStrings',\n            },\n          },\n        },\n      },\n      labelValueDefinitionStrings: {\n        type: 'object',\n        description:\n          'Strings which describe the label in the UI, localized into a specific language.',\n        required: ['lang', 'name', 'description'],\n        properties: {\n          lang: {\n            type: 'string',\n            description:\n              'The code of the language these strings are written in.',\n            format: 'language',\n          },\n          name: {\n            type: 'string',\n            description: 'A short human-readable name for the label.',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            description:\n              'A longer description of what the label means and why it might be applied.',\n            maxGraphemes: 10000,\n            maxLength: 100000,\n          },\n        },\n      },\n      labelValue: {\n        type: 'string',\n        knownValues: [\n          '!hide',\n          '!no-promote',\n          '!warn',\n          '!no-unauthenticated',\n          'dmca-violation',\n          'doxxing',\n          'porn',\n          'sexual',\n          'nudity',\n          'nsfl',\n          'gore',\n        ],\n      },\n    },\n  },\n  ComAtprotoLabelQueryLabels: {\n    lexicon: 1,\n    id: 'com.atproto.label.queryLabels',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find labels relevant to the provided AT-URI patterns. Public endpoint for moderation services, though may return different or additional results with auth.',\n        parameters: {\n          type: 'params',\n          required: ['uriPatterns'],\n          properties: {\n            uriPatterns: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                \"List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI.\",\n            },\n            sources: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n              description:\n                'Optional list of label sources (DIDs) to filter on.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 250,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['labels'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              labels: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.label.defs#label',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoLabelSubscribeLabels: {\n    lexicon: 1,\n    id: 'com.atproto.label.subscribeLabels',\n    defs: {\n      main: {\n        type: 'subscription',\n        description:\n          'Subscribe to stream of labels (and negations). Public endpoint implemented by mod services. Uses same sequencing scheme as repo event stream.',\n        parameters: {\n          type: 'params',\n          properties: {\n            cursor: {\n              type: 'integer',\n              description: 'The last known event seq number to backfill from.',\n            },\n          },\n        },\n        message: {\n          schema: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.label.subscribeLabels#labels',\n              'lex:com.atproto.label.subscribeLabels#info',\n            ],\n          },\n        },\n        errors: [\n          {\n            name: 'FutureCursor',\n          },\n        ],\n      },\n      labels: {\n        type: 'object',\n        required: ['seq', 'labels'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      info: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            knownValues: ['OutdatedCursor'],\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoModerationCreateReport: {\n    lexicon: 1,\n    id: 'com.atproto.moderation.createReport',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Submit a moderation report regarding an atproto account or record. Implemented by moderation services (with PDS proxying), and requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['reasonType', 'subject'],\n            properties: {\n              reasonType: {\n                type: 'ref',\n                description:\n                  'Indicates the broad category of violation the report is for.',\n                ref: 'lex:com.atproto.moderation.defs#reasonType',\n              },\n              reason: {\n                type: 'string',\n                description:\n                  'Additional context about the content and violation.',\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'id',\n              'reasonType',\n              'subject',\n              'reportedBy',\n              'createdAt',\n            ],\n            properties: {\n              id: {\n                type: 'integer',\n              },\n              reasonType: {\n                type: 'ref',\n                ref: 'lex:com.atproto.moderation.defs#reasonType',\n              },\n              reason: {\n                type: 'string',\n                maxGraphemes: 2000,\n                maxLength: 20000,\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n              reportedBy: {\n                type: 'string',\n                format: 'did',\n              },\n              createdAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoModerationDefs: {\n    lexicon: 1,\n    id: 'com.atproto.moderation.defs',\n    defs: {\n      reasonType: {\n        type: 'string',\n        knownValues: [\n          'com.atproto.moderation.defs#reasonSpam',\n          'com.atproto.moderation.defs#reasonViolation',\n          'com.atproto.moderation.defs#reasonMisleading',\n          'com.atproto.moderation.defs#reasonSexual',\n          'com.atproto.moderation.defs#reasonRude',\n          'com.atproto.moderation.defs#reasonOther',\n          'com.atproto.moderation.defs#reasonAppeal',\n        ],\n      },\n      reasonSpam: {\n        type: 'token',\n        description: 'Spam: frequent unwanted promotion, replies, mentions',\n      },\n      reasonViolation: {\n        type: 'token',\n        description: 'Direct violation of server rules, laws, terms of service',\n      },\n      reasonMisleading: {\n        type: 'token',\n        description: 'Misleading identity, affiliation, or content',\n      },\n      reasonSexual: {\n        type: 'token',\n        description: 'Unwanted or mislabeled sexual content',\n      },\n      reasonRude: {\n        type: 'token',\n        description:\n          'Rude, harassing, explicit, or otherwise unwelcoming behavior',\n      },\n      reasonOther: {\n        type: 'token',\n        description: 'Other: reports not falling under another report category',\n      },\n      reasonAppeal: {\n        type: 'token',\n        description: 'Appeal: appeal a previously taken moderation action',\n      },\n    },\n  },\n  ComAtprotoRepoApplyWrites: {\n    lexicon: 1,\n    id: 'com.atproto.repo.applyWrites',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Apply a batch transaction of repository creates, updates, and deletes. Requires auth, implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'writes'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              validate: {\n                type: 'boolean',\n                default: true,\n                description:\n                  \"Can be set to 'false' to skip Lexicon schema validation of record data, for all operations.\",\n              },\n              writes: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:com.atproto.repo.applyWrites#create',\n                    'lex:com.atproto.repo.applyWrites#update',\n                    'lex:com.atproto.repo.applyWrites#delete',\n                  ],\n                  closed: true,\n                },\n              },\n              swapCommit: {\n                type: 'string',\n                description:\n                  'If provided, the entire operation will fail if the current repo commit CID does not match this value. Used to prevent conflicting repo mutations.',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n            description:\n              \"Indicates that the 'swapCommit' parameter did not match current commit.\",\n          },\n        ],\n      },\n      create: {\n        type: 'object',\n        description: 'Operation which creates a new record.',\n        required: ['collection', 'value'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n            maxLength: 15,\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n      update: {\n        type: 'object',\n        description: 'Operation which updates an existing record.',\n        required: ['collection', 'rkey', 'value'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n      delete: {\n        type: 'object',\n        description: 'Operation which deletes an existing record.',\n        required: ['collection', 'rkey'],\n        properties: {\n          collection: {\n            type: 'string',\n            format: 'nsid',\n          },\n          rkey: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoCreateRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.createRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Create a single new repository record. Requires auth, implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'record'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The Record Key.',\n                maxLength: 15,\n              },\n              validate: {\n                type: 'boolean',\n                default: true,\n                description:\n                  \"Can be set to 'false' to skip Lexicon schema validation of record data.\",\n              },\n              record: {\n                type: 'unknown',\n                description: 'The record itself. Must contain a $type field.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'cid'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n            description:\n              \"Indicates that 'swapCommit' didn't match current repo commit.\",\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoDeleteRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.deleteRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Delete a repository record, or ensure it doesn't exist. Requires auth, implemented by PDS.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'rkey'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The Record Key.',\n              },\n              swapRecord: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous record by CID.',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoDescribeRepo: {\n    lexicon: 1,\n    id: 'com.atproto.repo.describeRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about an account and repository, including the list of collections. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['repo'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'handle',\n              'did',\n              'didDoc',\n              'collections',\n              'handleIsCorrect',\n            ],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n                description: 'The complete DID document for this account.',\n              },\n              collections: {\n                type: 'array',\n                description:\n                  'List of all the collections (NSIDs) for which this repo contains at least one record.',\n                items: {\n                  type: 'string',\n                  format: 'nsid',\n                },\n              },\n              handleIsCorrect: {\n                type: 'boolean',\n                description:\n                  'Indicates if handle is currently valid (resolves bi-directionally)',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a single record from a repository. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['repo', 'collection', 'rkey'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n              description: 'The NSID of the record collection.',\n            },\n            rkey: {\n              type: 'string',\n              description: 'The Record Key.',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'The CID of the version of the record. If not specified, then return the most recent version.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'value'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              value: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoImportRepo: {\n    lexicon: 1,\n    id: 'com.atproto.repo.importRepo',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Import a repo in the form of a CAR file. Requires Content-Length HTTP header to be set.',\n        input: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoRepoListMissingBlobs: {\n    lexicon: 1,\n    id: 'com.atproto.repo.listMissingBlobs',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Returns a list of missing blobs for the requesting account. Intended to be used in the account migration flow.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blobs'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              blobs: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.repo.listMissingBlobs#recordBlob',\n                },\n              },\n            },\n          },\n        },\n      },\n      recordBlob: {\n        type: 'object',\n        required: ['cid', 'recordUri'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          recordUri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoListRecords: {\n    lexicon: 1,\n    id: 'com.atproto.repo.listRecords',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'List a range of records in a repository, matching a specific collection. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['repo', 'collection'],\n          properties: {\n            repo: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The handle or DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n              description: 'The NSID of the record type.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n              description: 'The number of records to return.',\n            },\n            cursor: {\n              type: 'string',\n            },\n            rkeyStart: {\n              type: 'string',\n              description:\n                'DEPRECATED: The lowest sort-ordered rkey to start from (exclusive)',\n            },\n            rkeyEnd: {\n              type: 'string',\n              description:\n                'DEPRECATED: The highest sort-ordered rkey to stop at (exclusive)',\n            },\n            reverse: {\n              type: 'boolean',\n              description: 'Flag to reverse the order of the returned records.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['records'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              records: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.repo.listRecords#record',\n                },\n              },\n            },\n          },\n        },\n      },\n      record: {\n        type: 'object',\n        required: ['uri', 'cid', 'value'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoPutRecord: {\n    lexicon: 1,\n    id: 'com.atproto.repo.putRecord',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Write a repository record, creating or updating it as needed. Requires auth, implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repo', 'collection', 'rkey', 'record'],\n            nullable: ['swapRecord'],\n            properties: {\n              repo: {\n                type: 'string',\n                format: 'at-identifier',\n                description:\n                  'The handle or DID of the repo (aka, current account).',\n              },\n              collection: {\n                type: 'string',\n                format: 'nsid',\n                description: 'The NSID of the record collection.',\n              },\n              rkey: {\n                type: 'string',\n                description: 'The Record Key.',\n                maxLength: 15,\n              },\n              validate: {\n                type: 'boolean',\n                default: true,\n                description:\n                  \"Can be set to 'false' to skip Lexicon schema validation of record data.\",\n              },\n              record: {\n                type: 'unknown',\n                description: 'The record to write.',\n              },\n              swapRecord: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous record by CID. WARNING: nullable and optional field; may cause problems with golang implementation',\n              },\n              swapCommit: {\n                type: 'string',\n                format: 'cid',\n                description:\n                  'Compare and swap with the previous commit by CID.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'cid'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidSwap',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoRepoStrongRef: {\n    lexicon: 1,\n    id: 'com.atproto.repo.strongRef',\n    description: 'A URI with a content-hash fingerprint.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['uri', 'cid'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoRepoUploadBlob: {\n    lexicon: 1,\n    id: 'com.atproto.repo.uploadBlob',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Upload a new blob, to be referenced from a repository record. The blob will be deleted if it is not referenced within a time window (eg, minutes). Blob restrictions (mimetype, size, etc) are enforced when the reference is created. Requires auth, implemented by PDS.',\n        input: {\n          encoding: '*/*',\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blob'],\n            properties: {\n              blob: {\n                type: 'blob',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerActivateAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.activateAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Activates a currently deactivated account. Used to finalize account migration after the account's repo is imported and identity is setup.\",\n      },\n    },\n  },\n  ComAtprotoServerCheckAccountStatus: {\n    lexicon: 1,\n    id: 'com.atproto.server.checkAccountStatus',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Returns the status of an account, especially as pertaining to import or recovery. Can be called many times over the course of an account migration. Requires auth and can only be called pertaining to oneself.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: [\n              'activated',\n              'validDid',\n              'repoCommit',\n              'repoRev',\n              'repoBlocks',\n              'indexedRecords',\n              'privateStateValues',\n              'expectedBlobs',\n              'importedBlobs',\n            ],\n            properties: {\n              activated: {\n                type: 'boolean',\n              },\n              validDid: {\n                type: 'boolean',\n              },\n              repoCommit: {\n                type: 'string',\n                format: 'cid',\n              },\n              repoRev: {\n                type: 'string',\n              },\n              repoBlocks: {\n                type: 'integer',\n              },\n              indexedRecords: {\n                type: 'integer',\n              },\n              privateStateValues: {\n                type: 'integer',\n              },\n              expectedBlobs: {\n                type: 'integer',\n              },\n              importedBlobs: {\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerConfirmEmail: {\n    lexicon: 1,\n    id: 'com.atproto.server.confirmEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Confirm an email using a token from com.atproto.server.requestEmailConfirmation.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email', 'token'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountNotFound',\n          },\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n          {\n            name: 'InvalidEmail',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerCreateAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.createAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an account. Implemented by PDS.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n                description: 'Requested handle for the account.',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n                description:\n                  'Pre-existing atproto DID, being imported to a new account.',\n              },\n              inviteCode: {\n                type: 'string',\n              },\n              verificationCode: {\n                type: 'string',\n              },\n              verificationPhone: {\n                type: 'string',\n              },\n              password: {\n                type: 'string',\n                description:\n                  'Initial account password. May need to meet instance-specific password strength requirements.',\n              },\n              recoveryKey: {\n                type: 'string',\n                description:\n                  'DID PLC rotation key (aka, recovery key) to be included in PLC creation operation.',\n              },\n              plcOp: {\n                type: 'unknown',\n                description:\n                  'A signed DID PLC operation to be submitted as part of importing an existing account to this instance. NOTE: this optional field may be updated when full account migration is implemented.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            description:\n              'Account login session returned on successful account creation.',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n                description: 'The DID of the new account.',\n              },\n              didDoc: {\n                type: 'unknown',\n                description: 'Complete DID document.',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'InvalidHandle',\n          },\n          {\n            name: 'InvalidPassword',\n          },\n          {\n            name: 'InvalidInviteCode',\n          },\n          {\n            name: 'HandleNotAvailable',\n          },\n          {\n            name: 'UnsupportedDomain',\n          },\n          {\n            name: 'UnresolvableDid',\n          },\n          {\n            name: 'IncompatibleDidDoc',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerCreateAppPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.createAppPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an App Password.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n                description:\n                  'A short name for the App Password, to help distinguish them.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.createAppPassword#appPassword',\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n      appPassword: {\n        type: 'object',\n        required: ['name', 'password', 'createdAt'],\n        properties: {\n          name: {\n            type: 'string',\n          },\n          password: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateInviteCode: {\n    lexicon: 1,\n    id: 'com.atproto.server.createInviteCode',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an invite code.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['useCount'],\n            properties: {\n              useCount: {\n                type: 'integer',\n              },\n              forAccount: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['code'],\n            properties: {\n              code: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.server.createInviteCodes',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create invite codes.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codeCount', 'useCount'],\n            properties: {\n              codeCount: {\n                type: 'integer',\n                default: 1,\n              },\n              useCount: {\n                type: 'integer',\n              },\n              forAccounts: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'did',\n                },\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.createInviteCodes#accountCodes',\n                },\n              },\n            },\n          },\n        },\n      },\n      accountCodes: {\n        type: 'object',\n        required: ['account', 'codes'],\n        properties: {\n          account: {\n            type: 'string',\n          },\n          codes: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerCreateSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.createSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Create an authentication session.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['identifier', 'password'],\n            properties: {\n              identifier: {\n                type: 'string',\n                description:\n                  'Handle or other identifier supported by the server for the authenticating user.',\n              },\n              password: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n              email: {\n                type: 'string',\n              },\n              emailConfirmed: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerDeactivateAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.deactivateAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Deactivates a currently active account. Stops serving of repo, and future writes to repo until reactivated. Used to finalize account migration with the old host after the account has been activated on the new host.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              deleteAfter: {\n                type: 'string',\n                format: 'datetime',\n                description:\n                  'A recommendation to server as to how long they should hold onto the deactivated account before deleting.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerDefs: {\n    lexicon: 1,\n    id: 'com.atproto.server.defs',\n    defs: {\n      inviteCode: {\n        type: 'object',\n        required: [\n          'code',\n          'available',\n          'disabled',\n          'forAccount',\n          'createdBy',\n          'createdAt',\n          'uses',\n        ],\n        properties: {\n          code: {\n            type: 'string',\n          },\n          available: {\n            type: 'integer',\n          },\n          disabled: {\n            type: 'boolean',\n          },\n          forAccount: {\n            type: 'string',\n          },\n          createdBy: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          uses: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCodeUse',\n            },\n          },\n        },\n      },\n      inviteCodeUse: {\n        type: 'object',\n        required: ['usedBy', 'usedAt'],\n        properties: {\n          usedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          usedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerDeleteAccount: {\n    lexicon: 1,\n    id: 'com.atproto.server.deleteAccount',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Delete an actor's account with a token and password. Can only be called after requesting a deletion token. Requires auth.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'password', 'token'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              password: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerDeleteSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.deleteSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete the current session. Requires auth.',\n      },\n    },\n  },\n  ComAtprotoServerDescribeServer: {\n    lexicon: 1,\n    id: 'com.atproto.server.describeServer',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Describes the server's account creation requirements and capabilities. Implemented by PDS.\",\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'availableUserDomains'],\n            properties: {\n              inviteCodeRequired: {\n                type: 'boolean',\n                description:\n                  'If true, an invite code must be supplied to create an account on this instance.',\n              },\n              phoneVerificationRequired: {\n                type: 'boolean',\n                description:\n                  'If true, a phone verification token must be supplied to create an account on this instance.',\n              },\n              availableUserDomains: {\n                type: 'array',\n                description:\n                  'List of domain suffixes that can be used in account handles.',\n                items: {\n                  type: 'string',\n                },\n              },\n              links: {\n                type: 'ref',\n                description: 'URLs of service policy documents.',\n                ref: 'lex:com.atproto.server.describeServer#links',\n              },\n              contact: {\n                type: 'ref',\n                description: 'Contact information',\n                ref: 'lex:com.atproto.server.describeServer#contact',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n      },\n      links: {\n        type: 'object',\n        properties: {\n          privacyPolicy: {\n            type: 'string',\n          },\n          termsOfService: {\n            type: 'string',\n          },\n        },\n      },\n      contact: {\n        type: 'object',\n        properties: {\n          email: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerGetAccountInviteCodes: {\n    lexicon: 1,\n    id: 'com.atproto.server.getAccountInviteCodes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get all invite codes for the current account. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            includeUsed: {\n              type: 'boolean',\n              default: true,\n            },\n            createAvailable: {\n              type: 'boolean',\n              default: true,\n              description:\n                \"Controls whether any new 'earned' but not 'created' invites should be created.\",\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['codes'],\n            properties: {\n              codes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.defs#inviteCode',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'DuplicateCreate',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerGetServiceAuth: {\n    lexicon: 1,\n    id: 'com.atproto.server.getServiceAuth',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a signed token on behalf of the requesting DID for the requested service.',\n        parameters: {\n          type: 'params',\n          required: ['aud'],\n          properties: {\n            aud: {\n              type: 'string',\n              format: 'did',\n              description:\n                'The DID of the service that the token will be used to authenticate with',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['token'],\n            properties: {\n              token: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerGetSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.getSession',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about the current auth session. Requires auth.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['handle', 'did'],\n            properties: {\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              email: {\n                type: 'string',\n              },\n              emailConfirmed: {\n                type: 'boolean',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerListAppPasswords: {\n    lexicon: 1,\n    id: 'com.atproto.server.listAppPasswords',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List all App Passwords.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['passwords'],\n            properties: {\n              passwords: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.server.listAppPasswords#appPassword',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n      appPassword: {\n        type: 'object',\n        required: ['name', 'createdAt'],\n        properties: {\n          name: {\n            type: 'string',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerRefreshSession: {\n    lexicon: 1,\n    id: 'com.atproto.server.refreshSession',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          \"Refresh an authentication session. Requires auth using the 'refreshJwt' (not the 'accessJwt').\",\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['accessJwt', 'refreshJwt', 'handle', 'did'],\n            properties: {\n              accessJwt: {\n                type: 'string',\n              },\n              refreshJwt: {\n                type: 'string',\n              },\n              handle: {\n                type: 'string',\n                format: 'handle',\n              },\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              didDoc: {\n                type: 'unknown',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'AccountTakedown',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerRequestAccountDelete: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestAccountDelete',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Initiate a user account deletion via email.',\n      },\n    },\n  },\n  ComAtprotoServerRequestEmailConfirmation: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestEmailConfirmation',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request an email with a code to confirm ownership of email.',\n      },\n    },\n  },\n  ComAtprotoServerRequestEmailUpdate: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestEmailUpdate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Request a token in order to update email.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['tokenRequired'],\n            properties: {\n              tokenRequired: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerRequestPasswordReset: {\n    lexicon: 1,\n    id: 'com.atproto.server.requestPasswordReset',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Initiate a user account password reset via email.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerReserveSigningKey: {\n    lexicon: 1,\n    id: 'com.atproto.server.reserveSigningKey',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Reserve a repo signing key, for use with account creation. Necessary so that a DID PLC update operation can be constructed during an account migraiton. Public and does not require auth; implemented by PDS. NOTE: this endpoint may change when full account migration is implemented.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n                description: 'The DID to reserve a key for.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['signingKey'],\n            properties: {\n              signingKey: {\n                type: 'string',\n                description:\n                  'The public key for the reserved signing key, in did:key serialization.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerResetPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.resetPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Reset a user account password using a token.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['token', 'password'],\n            properties: {\n              token: {\n                type: 'string',\n              },\n              password: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoServerRevokeAppPassword: {\n    lexicon: 1,\n    id: 'com.atproto.server.revokeAppPassword',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Revoke an App Password by name.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['name'],\n            properties: {\n              name: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoServerUpdateEmail: {\n    lexicon: 1,\n    id: 'com.atproto.server.updateEmail',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: \"Update an account's email.\",\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['email'],\n            properties: {\n              email: {\n                type: 'string',\n              },\n              token: {\n                type: 'string',\n                description:\n                  \"Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed.\",\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ExpiredToken',\n          },\n          {\n            name: 'InvalidToken',\n          },\n          {\n            name: 'TokenRequired',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetBlob: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getBlob',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a blob associated with a given account. Returns the full blob as originally uploaded. Does not require auth; implemented by PDS.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'cid'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the account.',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description: 'The CID of the blob to fetch',\n            },\n          },\n        },\n        output: {\n          encoding: '*/*',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetBlocks: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get data blocks from a given repo, by CID. For example, intermediate MST nodes, or records. Does not require auth; implemented by PDS.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'cids'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            cids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetCheckout: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getCheckout',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'DEPRECATED - please use com.atproto.sync.getRepo instead',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetHead: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getHead',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED - please use com.atproto.sync.getLatestCommit instead',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['root'],\n            properties: {\n              root: {\n                type: 'string',\n                format: 'cid',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'HeadNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetLatestCommit: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getLatestCommit',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get the current commit CID & revision of the specified repo. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['cid', 'rev'],\n            properties: {\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              rev: {\n                type: 'string',\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ComAtprotoSyncGetRecord: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get data blocks needed to prove the existence or non-existence of record in the current version of repo. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['did', 'collection', 'rkey'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            collection: {\n              type: 'string',\n              format: 'nsid',\n            },\n            rkey: {\n              type: 'string',\n              description: 'Record Key',\n            },\n            commit: {\n              type: 'string',\n              format: 'cid',\n              description: 'An optional past commit CID.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncGetRepo: {\n    lexicon: 1,\n    id: 'com.atproto.sync.getRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Download a repository export as CAR file. Optionally only a 'diff' since a previous revision. Does not require auth; implemented by PDS.\",\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            since: {\n              type: 'string',\n              description:\n                \"The revision ('rev') of the repo to create a diff from.\",\n            },\n          },\n        },\n        output: {\n          encoding: 'application/vnd.ipld.car',\n        },\n      },\n    },\n  },\n  ComAtprotoSyncListBlobs: {\n    lexicon: 1,\n    id: 'com.atproto.sync.listBlobs',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'List blob CIDso for an account, since some repo revision. Does not require auth; implemented by PDS.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n              description: 'The DID of the repo.',\n            },\n            since: {\n              type: 'string',\n              description: 'Optional revision of the repo to list blobs since.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['cids'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              cids: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'cid',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncListRepos: {\n    lexicon: 1,\n    id: 'com.atproto.sync.listRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates all the DID, rev, and commit CID for all repos hosted by this service. Does not require auth; implemented by PDS and Relay.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 1000,\n              default: 500,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.sync.listRepos#repo',\n                },\n              },\n            },\n          },\n        },\n      },\n      repo: {\n        type: 'object',\n        required: ['did', 'head', 'rev'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          head: {\n            type: 'string',\n            format: 'cid',\n            description: 'Current repo commit CID',\n          },\n          rev: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncNotifyOfUpdate: {\n    lexicon: 1,\n    id: 'com.atproto.sync.notifyOfUpdate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Notify a crawling service of a recent update, and that crawling should resume. Intended use is after a gap between repo stream events caused the crawling service to disconnect. Does not require auth; implemented by Relay.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['hostname'],\n            properties: {\n              hostname: {\n                type: 'string',\n                description:\n                  'Hostname of the current service (usually a PDS) that is notifying of update.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncRequestCrawl: {\n    lexicon: 1,\n    id: 'com.atproto.sync.requestCrawl',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request a service to persistently crawl hosted repos. Expected use is new PDS instances declaring their existence to Relays. Does not require auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['hostname'],\n            properties: {\n              hostname: {\n                type: 'string',\n                description:\n                  'Hostname of the current service (eg, PDS) that is requesting to be crawled.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoSyncSubscribeRepos: {\n    lexicon: 1,\n    id: 'com.atproto.sync.subscribeRepos',\n    defs: {\n      main: {\n        type: 'subscription',\n        description:\n          'Repository event stream, aka Firehose endpoint. Outputs repo commits with diff data, and identity update events, for all repositories on the current server. See the atproto specifications for details around stream sequencing, repo versioning, CAR diff format, and more. Public and does not require auth; implemented by PDS and Relay.',\n        parameters: {\n          type: 'params',\n          properties: {\n            cursor: {\n              type: 'integer',\n              description: 'The last known event seq number to backfill from.',\n            },\n          },\n        },\n        message: {\n          schema: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.sync.subscribeRepos#commit',\n              'lex:com.atproto.sync.subscribeRepos#identity',\n              'lex:com.atproto.sync.subscribeRepos#handle',\n              'lex:com.atproto.sync.subscribeRepos#migrate',\n              'lex:com.atproto.sync.subscribeRepos#tombstone',\n              'lex:com.atproto.sync.subscribeRepos#info',\n            ],\n          },\n        },\n        errors: [\n          {\n            name: 'FutureCursor',\n          },\n          {\n            name: 'ConsumerTooSlow',\n            description:\n              'If the consumer of the stream can not keep up with events, and a backlog gets too large, the server will drop the connection.',\n          },\n        ],\n      },\n      commit: {\n        type: 'object',\n        description:\n          'Represents an update of repository state. Note that empty commits are allowed, which include no repo data changes, but an update to rev and signature.',\n        required: [\n          'seq',\n          'rebase',\n          'tooBig',\n          'repo',\n          'commit',\n          'rev',\n          'since',\n          'blocks',\n          'ops',\n          'blobs',\n          'time',\n        ],\n        nullable: ['prev', 'since'],\n        properties: {\n          seq: {\n            type: 'integer',\n            description: 'The stream sequence number of this message.',\n          },\n          rebase: {\n            type: 'boolean',\n            description: 'DEPRECATED -- unused',\n          },\n          tooBig: {\n            type: 'boolean',\n            description:\n              'Indicates that this commit contained too many ops, or data size was too large. Consumers will need to make a separate request to get missing data.',\n          },\n          repo: {\n            type: 'string',\n            format: 'did',\n            description: 'The repo this event comes from.',\n          },\n          commit: {\n            type: 'cid-link',\n            description: 'Repo commit object CID.',\n          },\n          prev: {\n            type: 'cid-link',\n            description:\n              'DEPRECATED -- unused. WARNING -- nullable and optional; stick with optional to ensure golang interoperability.',\n          },\n          rev: {\n            type: 'string',\n            description:\n              'The rev of the emitted commit. Note that this information is also in the commit object included in blocks, unless this is a tooBig event.',\n          },\n          since: {\n            type: 'string',\n            description:\n              'The rev of the last emitted commit from this repo (if any).',\n          },\n          blocks: {\n            type: 'bytes',\n            description:\n              'CAR file containing relevant blocks, as a diff since the previous repo state.',\n            maxLength: 1000000,\n          },\n          ops: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.sync.subscribeRepos#repoOp',\n              description:\n                'List of repo mutation operations in this commit (eg, records created, updated, or deleted).',\n            },\n            maxLength: 200,\n          },\n          blobs: {\n            type: 'array',\n            items: {\n              type: 'cid-link',\n              description:\n                'List of new blobs (by CID) referenced by records in this commit.',\n            },\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp of when this message was originally broadcast.',\n          },\n        },\n      },\n      identity: {\n        type: 'object',\n        description:\n          \"Represents a change to an account's identity. Could be an updated handle, signing key, or pds hosting endpoint. Serves as a prod to all downstream services to refresh their identity cache.\",\n        required: ['seq', 'did', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      handle: {\n        type: 'object',\n        description:\n          \"Represents an update of the account's handle, or transition to/from invalid state. NOTE: Will be deprecated in favor of #identity.\",\n        required: ['seq', 'did', 'handle', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      migrate: {\n        type: 'object',\n        description:\n          'Represents an account moving from one PDS instance to another. NOTE: not implemented; account migration uses #identity instead',\n        required: ['seq', 'did', 'migrateTo', 'time'],\n        nullable: ['migrateTo'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          migrateTo: {\n            type: 'string',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      tombstone: {\n        type: 'object',\n        description:\n          'Indicates that an account has been deleted. NOTE: may be deprecated in favor of #identity or a future #account event',\n        required: ['seq', 'did', 'time'],\n        properties: {\n          seq: {\n            type: 'integer',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          time: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      info: {\n        type: 'object',\n        required: ['name'],\n        properties: {\n          name: {\n            type: 'string',\n            knownValues: ['OutdatedCursor'],\n          },\n          message: {\n            type: 'string',\n          },\n        },\n      },\n      repoOp: {\n        type: 'object',\n        description: 'A repo operation, ie a mutation of a single record.',\n        required: ['action', 'path', 'cid'],\n        nullable: ['cid'],\n        properties: {\n          action: {\n            type: 'string',\n            knownValues: ['create', 'update', 'delete'],\n          },\n          path: {\n            type: 'string',\n          },\n          cid: {\n            type: 'cid-link',\n            description:\n              'For creates and updates, the new record CID. For deletions, null.',\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempCheckSignupQueue: {\n    lexicon: 1,\n    id: 'com.atproto.temp.checkSignupQueue',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Check accounts location in signup queue.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['activated'],\n            properties: {\n              activated: {\n                type: 'boolean',\n              },\n              placeInQueue: {\n                type: 'integer',\n              },\n              estimatedTimeMs: {\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempFetchLabels: {\n    lexicon: 1,\n    id: 'com.atproto.temp.fetchLabels',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'DEPRECATED: use queryLabels or subscribeLabels instead -- Fetch all labels from a labeler created after a certain date.',\n        parameters: {\n          type: 'params',\n          properties: {\n            since: {\n              type: 'integer',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 250,\n              default: 50,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['labels'],\n            properties: {\n              labels: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:com.atproto.label.defs#label',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ComAtprotoTempRequestPhoneVerification: {\n    lexicon: 1,\n    id: 'com.atproto.temp.requestPhoneVerification',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Request a verification code to be sent to the supplied phone number',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['phoneNumber'],\n            properties: {\n              phoneNumber: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorDefs: {\n    lexicon: 1,\n    id: 'app.bsky.actor.defs',\n    defs: {\n      profileViewBasic: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          avatar: {\n            type: 'string',\n          },\n          associated: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociated',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      profileView: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 256,\n            maxLength: 2560,\n          },\n          avatar: {\n            type: 'string',\n          },\n          associated: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociated',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      profileViewDetailed: {\n        type: 'object',\n        required: ['did', 'handle'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          displayName: {\n            type: 'string',\n            maxGraphemes: 64,\n            maxLength: 640,\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 256,\n            maxLength: 2560,\n          },\n          avatar: {\n            type: 'string',\n          },\n          banner: {\n            type: 'string',\n          },\n          followersCount: {\n            type: 'integer',\n          },\n          followsCount: {\n            type: 'integer',\n          },\n          postsCount: {\n            type: 'integer',\n          },\n          associated: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileAssociated',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      profileAssociated: {\n        type: 'object',\n        properties: {\n          lists: {\n            type: 'integer',\n          },\n          feedgens: {\n            type: 'integer',\n          },\n          labeler: {\n            type: 'boolean',\n          },\n        },\n      },\n      viewerState: {\n        type: 'object',\n        description:\n          \"Metadata about the requesting account's relationship with the subject account. Only has meaningful content for authed requests.\",\n        properties: {\n          muted: {\n            type: 'boolean',\n          },\n          mutedByList: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          blockedBy: {\n            type: 'boolean',\n          },\n          blocking: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blockingByList: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewBasic',\n          },\n          following: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          followedBy: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      preferences: {\n        type: 'array',\n        items: {\n          type: 'union',\n          refs: [\n            'lex:app.bsky.actor.defs#adultContentPref',\n            'lex:app.bsky.actor.defs#contentLabelPref',\n            'lex:app.bsky.actor.defs#savedFeedsPref',\n            'lex:app.bsky.actor.defs#personalDetailsPref',\n            'lex:app.bsky.actor.defs#feedViewPref',\n            'lex:app.bsky.actor.defs#threadViewPref',\n            'lex:app.bsky.actor.defs#interestsPref',\n            'lex:app.bsky.actor.defs#mutedWordsPref',\n            'lex:app.bsky.actor.defs#hiddenPostsPref',\n          ],\n        },\n      },\n      adultContentPref: {\n        type: 'object',\n        required: ['enabled'],\n        properties: {\n          enabled: {\n            type: 'boolean',\n            default: false,\n          },\n        },\n      },\n      contentLabelPref: {\n        type: 'object',\n        required: ['label', 'visibility'],\n        properties: {\n          labelerDid: {\n            type: 'string',\n            description:\n              'Which labeler does this preference apply to? If undefined, applies globally.',\n            format: 'did',\n          },\n          label: {\n            type: 'string',\n          },\n          visibility: {\n            type: 'string',\n            knownValues: ['ignore', 'show', 'warn', 'hide'],\n          },\n        },\n      },\n      savedFeedsPref: {\n        type: 'object',\n        required: ['pinned', 'saved'],\n        properties: {\n          pinned: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n          saved: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n          },\n          timelineIndex: {\n            type: 'integer',\n          },\n        },\n      },\n      personalDetailsPref: {\n        type: 'object',\n        properties: {\n          birthDate: {\n            type: 'string',\n            format: 'datetime',\n            description: 'The birth date of account owner.',\n          },\n        },\n      },\n      feedViewPref: {\n        type: 'object',\n        required: ['feed'],\n        properties: {\n          feed: {\n            type: 'string',\n            description:\n              'The URI of the feed, or an identifier which describes the feed.',\n          },\n          hideReplies: {\n            type: 'boolean',\n            description: 'Hide replies in the feed.',\n          },\n          hideRepliesByUnfollowed: {\n            type: 'boolean',\n            description:\n              'Hide replies in the feed if they are not by followed users.',\n            default: true,\n          },\n          hideRepliesByLikeCount: {\n            type: 'integer',\n            description:\n              'Hide replies in the feed if they do not have this number of likes.',\n          },\n          hideReposts: {\n            type: 'boolean',\n            description: 'Hide reposts in the feed.',\n          },\n          hideQuotePosts: {\n            type: 'boolean',\n            description: 'Hide quote posts in the feed.',\n          },\n        },\n      },\n      threadViewPref: {\n        type: 'object',\n        properties: {\n          sort: {\n            type: 'string',\n            description: 'Sorting mode for threads.',\n            knownValues: ['oldest', 'newest', 'most-likes', 'random'],\n          },\n          prioritizeFollowedUsers: {\n            type: 'boolean',\n            description: 'Show followed users at the top of all replies.',\n          },\n        },\n      },\n      interestsPref: {\n        type: 'object',\n        required: ['tags'],\n        properties: {\n          tags: {\n            type: 'array',\n            maxLength: 100,\n            items: {\n              type: 'string',\n              maxLength: 640,\n              maxGraphemes: 64,\n            },\n            description:\n              \"A list of tags which describe the account owner's interests gathered during onboarding.\",\n          },\n        },\n      },\n      mutedWordTarget: {\n        type: 'string',\n        knownValues: ['content', 'tag'],\n        maxLength: 640,\n        maxGraphemes: 64,\n      },\n      mutedWord: {\n        type: 'object',\n        description: 'A word that the account owner has muted.',\n        required: ['value', 'targets'],\n        properties: {\n          value: {\n            type: 'string',\n            description: 'The muted word itself.',\n            maxLength: 10000,\n            maxGraphemes: 1000,\n          },\n          targets: {\n            type: 'array',\n            description: 'The intended targets of the muted word.',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#mutedWordTarget',\n            },\n          },\n        },\n      },\n      mutedWordsPref: {\n        type: 'object',\n        required: ['items'],\n        properties: {\n          items: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#mutedWord',\n            },\n            description: 'A list of words the account owner has muted.',\n          },\n        },\n      },\n      hiddenPostsPref: {\n        type: 'object',\n        required: ['items'],\n        properties: {\n          items: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            description:\n              'A list of URIs of posts the account owner has hidden.',\n          },\n        },\n      },\n      labelersPref: {\n        type: 'object',\n        required: ['labelers'],\n        properties: {\n          labelers: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.actor.defs#labelerPrefItem',\n            },\n          },\n        },\n      },\n      labelerPrefItem: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getPreferences',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get private preferences attached to the current account. Expected use is synchronization between multiple devices, and import/export during account migration. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {},\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['preferences'],\n            properties: {\n              preferences: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#preferences',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetProfile: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getProfile',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get detailed profile view of an actor. Does not require auth, but contains relevant metadata with auth.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'Handle or DID of account to fetch profile of.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetProfiles: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getProfiles',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get detailed profile views of multiple actors.',\n        parameters: {\n          type: 'params',\n          required: ['actors'],\n          properties: {\n            actors: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['profiles'],\n            properties: {\n              profiles: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileViewDetailed',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorGetSuggestions: {\n    lexicon: 1,\n    id: 'app.bsky.actor.getSuggestions',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of suggested actors. Expected use is discovery of accounts to follow during new account onboarding.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorProfile: {\n    lexicon: 1,\n    id: 'app.bsky.actor.profile',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of a Bluesky account profile.',\n        key: 'literal:self',\n        record: {\n          type: 'object',\n          properties: {\n            displayName: {\n              type: 'string',\n              maxGraphemes: 64,\n              maxLength: 640,\n            },\n            description: {\n              type: 'string',\n              description: 'Free-form profile description text.',\n              maxGraphemes: 256,\n              maxLength: 2560,\n            },\n            avatar: {\n              type: 'blob',\n              description:\n                \"Small image to be displayed next to posts from account. AKA, 'profile picture'\",\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            banner: {\n              type: 'blob',\n              description:\n                'Larger horizontal image to display behind profile view.',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              description:\n                'Self-label values, specific to the Bluesky application, on the overall account.',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorPutPreferences: {\n    lexicon: 1,\n    id: 'app.bsky.actor.putPreferences',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Set the private preferences attached to the account.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['preferences'],\n            properties: {\n              preferences: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#preferences',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorSearchActors: {\n    lexicon: 1,\n    id: 'app.bsky.actor.searchActors',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find actors (profiles) matching search criteria. Does not require auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead.\",\n            },\n            q: {\n              type: 'string',\n              description:\n                'Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyActorSearchActorsTypeahead: {\n    lexicon: 1,\n    id: 'app.bsky.actor.searchActorsTypeahead',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find actor suggestions for a prefix search term. Expected use is for auto-completion during text field entry. Does not require auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead.\",\n            },\n            q: {\n              type: 'string',\n              description: 'Search query prefix; not a full query string.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 10,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedExternal: {\n    lexicon: 1,\n    id: 'app.bsky.embed.external',\n    defs: {\n      main: {\n        type: 'object',\n        description:\n          \"A representation of some externally linked content (eg, a URL and 'card'), embedded in a Bluesky record (eg, a post).\",\n        required: ['external'],\n        properties: {\n          external: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.external#external',\n          },\n        },\n      },\n      external: {\n        type: 'object',\n        required: ['uri', 'title', 'description'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n          title: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          thumb: {\n            type: 'blob',\n            accept: ['image/*'],\n            maxSize: 1000000,\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['external'],\n        properties: {\n          external: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.external#viewExternal',\n          },\n        },\n      },\n      viewExternal: {\n        type: 'object',\n        required: ['uri', 'title', 'description'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n          title: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n          },\n          thumb: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedImages: {\n    lexicon: 1,\n    id: 'app.bsky.embed.images',\n    description: 'A set of images embedded in a Bluesky record (eg, a post).',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['images'],\n        properties: {\n          images: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.images#image',\n            },\n            maxLength: 4,\n          },\n        },\n      },\n      image: {\n        type: 'object',\n        required: ['image', 'alt'],\n        properties: {\n          image: {\n            type: 'blob',\n            accept: ['image/*'],\n            maxSize: 1000000,\n          },\n          alt: {\n            type: 'string',\n            description:\n              'Alt text description of the image, for accessibility.',\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.images#aspectRatio',\n          },\n        },\n      },\n      aspectRatio: {\n        type: 'object',\n        description:\n          'width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit.',\n        required: ['width', 'height'],\n        properties: {\n          width: {\n            type: 'integer',\n            minimum: 1,\n          },\n          height: {\n            type: 'integer',\n            minimum: 1,\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['images'],\n        properties: {\n          images: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.embed.images#viewImage',\n            },\n            maxLength: 4,\n          },\n        },\n      },\n      viewImage: {\n        type: 'object',\n        required: ['thumb', 'fullsize', 'alt'],\n        properties: {\n          thumb: {\n            type: 'string',\n            description:\n              'Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View.',\n          },\n          fullsize: {\n            type: 'string',\n            description:\n              'Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View.',\n          },\n          alt: {\n            type: 'string',\n            description:\n              'Alt text description of the image, for accessibility.',\n          },\n          aspectRatio: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.images#aspectRatio',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedRecord: {\n    lexicon: 1,\n    id: 'app.bsky.embed.record',\n    description:\n      'A representation of a record embedded in a Bluesky record (eg, a post). For example, a quote-post, or sharing a feed generator record.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['record'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['record'],\n        properties: {\n          record: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.record#viewRecord',\n              'lex:app.bsky.embed.record#viewNotFound',\n              'lex:app.bsky.embed.record#viewBlocked',\n              'lex:app.bsky.feed.defs#generatorView',\n              'lex:app.bsky.graph.defs#listView',\n              'lex:app.bsky.labeler.defs#labelerView',\n            ],\n          },\n        },\n      },\n      viewRecord: {\n        type: 'object',\n        required: ['uri', 'cid', 'author', 'value', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          value: {\n            type: 'unknown',\n            description: 'The record data itself.',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          embeds: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.embed.images#view',\n                'lex:app.bsky.embed.external#view',\n                'lex:app.bsky.embed.record#view',\n                'lex:app.bsky.embed.recordWithMedia#view',\n              ],\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      viewNotFound: {\n        type: 'object',\n        required: ['uri', 'notFound'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      viewBlocked: {\n        type: 'object',\n        required: ['uri', 'blocked', 'author'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blocked: {\n            type: 'boolean',\n            const: true,\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n          },\n        },\n      },\n    },\n  },\n  AppBskyEmbedRecordWithMedia: {\n    lexicon: 1,\n    id: 'app.bsky.embed.recordWithMedia',\n    description:\n      'A representation of a record embedded in a Bluesky record (eg, a post), alongside other compatible embeds. For example, a quote post and image, or a quote post and external URL card.',\n    defs: {\n      main: {\n        type: 'object',\n        required: ['record', 'media'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.record',\n          },\n          media: {\n            type: 'union',\n            refs: ['lex:app.bsky.embed.images', 'lex:app.bsky.embed.external'],\n          },\n        },\n      },\n      view: {\n        type: 'object',\n        required: ['record', 'media'],\n        properties: {\n          record: {\n            type: 'ref',\n            ref: 'lex:app.bsky.embed.record#view',\n          },\n          media: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images#view',\n              'lex:app.bsky.embed.external#view',\n            ],\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.feed.defs',\n    defs: {\n      postView: {\n        type: 'object',\n        required: ['uri', 'cid', 'author', 'record', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          record: {\n            type: 'unknown',\n          },\n          embed: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.embed.images#view',\n              'lex:app.bsky.embed.external#view',\n              'lex:app.bsky.embed.record#view',\n              'lex:app.bsky.embed.recordWithMedia#view',\n            ],\n          },\n          replyCount: {\n            type: 'integer',\n          },\n          repostCount: {\n            type: 'integer',\n          },\n          likeCount: {\n            type: 'integer',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#viewerState',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          threadgate: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#threadgateView',\n          },\n        },\n      },\n      viewerState: {\n        type: 'object',\n        description:\n          \"Metadata about the requesting account's relationship with the subject content. Only has meaningful content for authed requests.\",\n        properties: {\n          repost: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          replyDisabled: {\n            type: 'boolean',\n          },\n        },\n      },\n      feedViewPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#postView',\n          },\n          reply: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#replyRef',\n          },\n          reason: {\n            type: 'union',\n            refs: ['lex:app.bsky.feed.defs#reasonRepost'],\n          },\n        },\n      },\n      replyRef: {\n        type: 'object',\n        required: ['root', 'parent'],\n        properties: {\n          root: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#postView',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          parent: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#postView',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n        },\n      },\n      reasonRepost: {\n        type: 'object',\n        required: ['by', 'indexedAt'],\n        properties: {\n          by: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileViewBasic',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      threadViewPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#postView',\n          },\n          parent: {\n            type: 'union',\n            refs: [\n              'lex:app.bsky.feed.defs#threadViewPost',\n              'lex:app.bsky.feed.defs#notFoundPost',\n              'lex:app.bsky.feed.defs#blockedPost',\n            ],\n          },\n          replies: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.feed.defs#threadViewPost',\n                'lex:app.bsky.feed.defs#notFoundPost',\n                'lex:app.bsky.feed.defs#blockedPost',\n              ],\n            },\n          },\n        },\n      },\n      notFoundPost: {\n        type: 'object',\n        required: ['uri', 'notFound'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      blockedPost: {\n        type: 'object',\n        required: ['uri', 'blocked', 'author'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          blocked: {\n            type: 'boolean',\n            const: true,\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#blockedAuthor',\n          },\n        },\n      },\n      blockedAuthor: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#viewerState',\n          },\n        },\n      },\n      generatorView: {\n        type: 'object',\n        required: ['uri', 'cid', 'did', 'creator', 'displayName', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          displayName: {\n            type: 'string',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 300,\n            maxLength: 3000,\n          },\n          descriptionFacets: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          avatar: {\n            type: 'string',\n          },\n          likeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.defs#generatorViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      generatorViewerState: {\n        type: 'object',\n        properties: {\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonFeedPost: {\n        type: 'object',\n        required: ['post'],\n        properties: {\n          post: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          reason: {\n            type: 'union',\n            refs: ['lex:app.bsky.feed.defs#skeletonReasonRepost'],\n          },\n        },\n      },\n      skeletonReasonRepost: {\n        type: 'object',\n        required: ['repost'],\n        properties: {\n          repost: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      threadgateView: {\n        type: 'object',\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          record: {\n            type: 'unknown',\n          },\n          lists: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.graph.defs#listViewBasic',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedDescribeFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.describeFeedGenerator',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about a feed generator, including policies and offered feed URIs. Does not require auth; implemented by Feed Generator services (not App View).',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['did', 'feeds'],\n            properties: {\n              did: {\n                type: 'string',\n                format: 'did',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.describeFeedGenerator#feed',\n                },\n              },\n              links: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.describeFeedGenerator#links',\n              },\n            },\n          },\n        },\n      },\n      feed: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      links: {\n        type: 'object',\n        properties: {\n          privacyPolicy: {\n            type: 'string',\n          },\n          termsOfService: {\n            type: 'string',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.generator',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          'Record declaring of the existence of a feed generator, and containing metadata about it. The record can exist in any repository.',\n        key: 'any',\n        record: {\n          type: 'object',\n          required: ['did', 'displayName', 'createdAt'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n            displayName: {\n              type: 'string',\n              maxGraphemes: 24,\n              maxLength: 240,\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              description: 'Self-label values',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetActorFeeds: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getActorFeeds',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a list of feeds (feed generator records) created by the actor (in the actor's repo).\",\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetActorLikes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getActorLikes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of posts liked by an actor. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BlockedActor',\n          },\n          {\n            name: 'BlockedByActor',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetAuthorFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getAuthorFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a view of an actor's 'author feed' (post and reposts by the author). Does not require auth.\",\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            filter: {\n              type: 'string',\n              description:\n                'Combinations of post/repost types to include in response.',\n              knownValues: [\n                'posts_with_replies',\n                'posts_no_replies',\n                'posts_with_media',\n                'posts_and_author_threads',\n              ],\n              default: 'posts_with_replies',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BlockedActor',\n          },\n          {\n            name: 'BlockedByActor',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a hydrated feed from an actor's selected feed generator. Implemented by App View.\",\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetFeedGenerator: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedGenerator',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get information about a feed generator. Implemented by AppView.',\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'AT-URI of the feed generator record.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['view', 'isOnline', 'isValid'],\n            properties: {\n              view: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.defs#generatorView',\n              },\n              isOnline: {\n                type: 'boolean',\n                description:\n                  'Indicates whether the feed generator service has been online recently, or else seems to be inactive.',\n              },\n              isValid: {\n                type: 'boolean',\n                description:\n                  'Indicates whether the feed generator service is compatible with the record declaration.',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetFeedGenerators: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedGenerators',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about a list of feed generators.',\n        parameters: {\n          type: 'params',\n          required: ['feeds'],\n          properties: {\n            feeds: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetFeedSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getFeedSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a skeleton of a feed provided by a feed generator. Auth is optional, depending on provider requirements, and provides the DID of the requester. Implemented by Feed Generator Service.',\n        parameters: {\n          type: 'params',\n          required: ['feed'],\n          properties: {\n            feed: {\n              type: 'string',\n              format: 'at-uri',\n              description:\n                'Reference to feed generator record describing the specific feed being requested.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#skeletonFeedPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownFeed',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetLikes: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getLikes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get like records which reference a subject (by AT-URI and CID).',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'AT-URI of the subject (eg, a post record).',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'CID of the subject record (aka, specific version of record), to filter likes.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'likes'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              likes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.getLikes#like',\n                },\n              },\n            },\n          },\n        },\n      },\n      like: {\n        type: 'object',\n        required: ['indexedAt', 'createdAt', 'actor'],\n        properties: {\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          actor: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetListFeed: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getListFeed',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a feed of recent posts from a list (posts and reposts from any actors on the list). Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['list'],\n          properties: {\n            list: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the list record.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'UnknownList',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetPostThread: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getPostThread',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get posts in a thread. Does not require auth, but additional metadata and filtering will be applied for authed requests.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to post record.',\n            },\n            depth: {\n              type: 'integer',\n              description:\n                'How many levels of reply depth should be included in response.',\n              default: 6,\n              minimum: 0,\n              maximum: 1000,\n            },\n            parentHeight: {\n              type: 'integer',\n              description:\n                'How many levels of parent (and grandparent, etc) post to include.',\n              default: 80,\n              minimum: 0,\n              maximum: 1000,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['thread'],\n            properties: {\n              thread: {\n                type: 'union',\n                refs: [\n                  'lex:app.bsky.feed.defs#threadViewPost',\n                  'lex:app.bsky.feed.defs#notFoundPost',\n                  'lex:app.bsky.feed.defs#blockedPost',\n                ],\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'NotFound',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedGetPosts: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getPosts',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Gets post views for a specified list of posts (by AT-URI). This is sometimes referred to as 'hydrating' a 'feed skeleton'.\",\n        parameters: {\n          type: 'params',\n          required: ['uris'],\n          properties: {\n            uris: {\n              type: 'array',\n              description: 'List of post AT-URIs to return hydrated views for.',\n              items: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              maxLength: 25,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetRepostedBy: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getRepostedBy',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get a list of reposts for a given post.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) of post record',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n              description:\n                'If supplied, filters to reposts of specific version (by CID) of the post record.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['uri', 'repostedBy'],\n            properties: {\n              uri: {\n                type: 'string',\n                format: 'at-uri',\n              },\n              cid: {\n                type: 'string',\n                format: 'cid',\n              },\n              cursor: {\n                type: 'string',\n              },\n              repostedBy: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetSuggestedFeeds: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getSuggestedFeeds',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of suggested feeds (feed generators) for the requesting account.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedGetTimeline: {\n    lexicon: 1,\n    id: 'app.bsky.feed.getTimeline',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Get a view of the requesting account's home timeline. This is expected to be some form of reverse-chronological feed.\",\n        parameters: {\n          type: 'params',\n          properties: {\n            algorithm: {\n              type: 'string',\n              description:\n                \"Variant 'algorithm' for timeline. Implementation-specific. NOTE: most feed flexibility has been moved to feed generator mechanism.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feed'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feed: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#feedViewPost',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedLike: {\n    lexicon: 1,\n    id: 'app.bsky.feed.like',\n    defs: {\n      main: {\n        type: 'record',\n        description: \"Record declaring a 'like' of a piece of subject content.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedPost: {\n    lexicon: 1,\n    id: 'app.bsky.feed.post',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'Record containing a Bluesky post.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['text', 'createdAt'],\n          properties: {\n            text: {\n              type: 'string',\n              maxLength: 3000,\n              maxGraphemes: 300,\n              description:\n                'The primary post content. May be an empty string, if there are embeds.',\n            },\n            entities: {\n              type: 'array',\n              description: 'DEPRECATED: replaced by app.bsky.richtext.facet.',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.feed.post#entity',\n              },\n            },\n            facets: {\n              type: 'array',\n              description:\n                'Annotations of text (mentions, URLs, hashtags, etc)',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            reply: {\n              type: 'ref',\n              ref: 'lex:app.bsky.feed.post#replyRef',\n            },\n            embed: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.embed.images',\n                'lex:app.bsky.embed.external',\n                'lex:app.bsky.embed.record',\n                'lex:app.bsky.embed.recordWithMedia',\n              ],\n            },\n            langs: {\n              type: 'array',\n              description:\n                'Indicates human language of post primary text content.',\n              maxLength: 3,\n              items: {\n                type: 'string',\n                format: 'language',\n              },\n            },\n            labels: {\n              type: 'union',\n              description:\n                'Self-label values for this post. Effectively content warnings.',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            tags: {\n              type: 'array',\n              description:\n                'Additional hashtags, in addition to any included in post text and facets.',\n              maxLength: 8,\n              items: {\n                type: 'string',\n                maxLength: 640,\n                maxGraphemes: 64,\n              },\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n              description:\n                'Client-declared timestamp when this post was originally created.',\n            },\n          },\n        },\n      },\n      replyRef: {\n        type: 'object',\n        required: ['root', 'parent'],\n        properties: {\n          root: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n          parent: {\n            type: 'ref',\n            ref: 'lex:com.atproto.repo.strongRef',\n          },\n        },\n      },\n      entity: {\n        type: 'object',\n        description: 'Deprecated: use facets instead.',\n        required: ['index', 'type', 'value'],\n        properties: {\n          index: {\n            type: 'ref',\n            ref: 'lex:app.bsky.feed.post#textSlice',\n          },\n          type: {\n            type: 'string',\n            description: \"Expected values are 'mention' and 'link'.\",\n          },\n          value: {\n            type: 'string',\n          },\n        },\n      },\n      textSlice: {\n        type: 'object',\n        description:\n          'Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.',\n        required: ['start', 'end'],\n        properties: {\n          start: {\n            type: 'integer',\n            minimum: 0,\n          },\n          end: {\n            type: 'integer',\n            minimum: 0,\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedRepost: {\n    lexicon: 1,\n    id: 'app.bsky.feed.repost',\n    defs: {\n      main: {\n        description:\n          \"Record representing a 'repost' of an existing Bluesky post.\",\n        type: 'record',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'ref',\n              ref: 'lex:com.atproto.repo.strongRef',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyFeedSearchPosts: {\n    lexicon: 1,\n    id: 'app.bsky.feed.searchPosts',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Find posts matching search criteria, returning views of those posts.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#postView',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyFeedThreadgate: {\n    lexicon: 1,\n    id: 'app.bsky.feed.threadgate',\n    defs: {\n      main: {\n        type: 'record',\n        key: 'tid',\n        description:\n          \"Record defining interaction gating rules for a thread (aka, reply controls). The record key (rkey) of the threadgate record must match the record key of the thread's root post, and that record must be in the same repository..\",\n        record: {\n          type: 'object',\n          required: ['post', 'createdAt'],\n          properties: {\n            post: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the post record.',\n            },\n            allow: {\n              type: 'array',\n              maxLength: 5,\n              items: {\n                type: 'union',\n                refs: [\n                  'lex:app.bsky.feed.threadgate#mentionRule',\n                  'lex:app.bsky.feed.threadgate#followingRule',\n                  'lex:app.bsky.feed.threadgate#listRule',\n                ],\n              },\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n      mentionRule: {\n        type: 'object',\n        description: 'Allow replies from actors mentioned in your post.',\n        properties: {},\n      },\n      followingRule: {\n        type: 'object',\n        description: 'Allow replies from actors you follow.',\n        properties: {},\n      },\n      listRule: {\n        type: 'object',\n        description: 'Allow replies from actors on a list.',\n        required: ['list'],\n        properties: {\n          list: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphBlock: {\n    lexicon: 1,\n    id: 'app.bsky.graph.block',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          \"Record declaring a 'block' relationship against another account. NOTE: blocks are public in Bluesky; see blog posts for details.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n              description: 'DID of the account to be blocked.',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphDefs: {\n    lexicon: 1,\n    id: 'app.bsky.graph.defs',\n    defs: {\n      listViewBasic: {\n        type: 'object',\n        required: ['uri', 'cid', 'name', 'purpose'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          name: {\n            type: 'string',\n            maxLength: 64,\n            minLength: 1,\n          },\n          purpose: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listPurpose',\n          },\n          avatar: {\n            type: 'string',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listView: {\n        type: 'object',\n        required: ['uri', 'cid', 'creator', 'name', 'purpose', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          name: {\n            type: 'string',\n            maxLength: 64,\n            minLength: 1,\n          },\n          purpose: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listPurpose',\n          },\n          description: {\n            type: 'string',\n            maxGraphemes: 300,\n            maxLength: 3000,\n          },\n          descriptionFacets: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:app.bsky.richtext.facet',\n            },\n          },\n          avatar: {\n            type: 'string',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.graph.defs#listViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      listItemView: {\n        type: 'object',\n        required: ['uri', 'subject'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          subject: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n        },\n      },\n      listPurpose: {\n        type: 'string',\n        knownValues: [\n          'app.bsky.graph.defs#modlist',\n          'app.bsky.graph.defs#curatelist',\n        ],\n      },\n      modlist: {\n        type: 'token',\n        description:\n          'A list of actors to apply an aggregate moderation action (mute/block) on.',\n      },\n      curatelist: {\n        type: 'token',\n        description:\n          'A list of actors used for curation purposes such as list feeds or interaction gating.',\n      },\n      listViewerState: {\n        type: 'object',\n        properties: {\n          muted: {\n            type: 'boolean',\n          },\n          blocked: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      notFoundActor: {\n        type: 'object',\n        description: 'indicates that a handle or DID could not be resolved',\n        required: ['actor', 'notFound'],\n        properties: {\n          actor: {\n            type: 'string',\n            format: 'at-identifier',\n          },\n          notFound: {\n            type: 'boolean',\n            const: true,\n          },\n        },\n      },\n      relationship: {\n        type: 'object',\n        description:\n          'lists the bi-directional graph relationships between one actor (not indicated in the object), and the target actors (the DID included in the object)',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          following: {\n            type: 'string',\n            format: 'at-uri',\n            description:\n              'if the actor follows this DID, this is the AT-URI of the follow record',\n          },\n          followedBy: {\n            type: 'string',\n            format: 'at-uri',\n            description:\n              'if the actor is followed by this DID, contains the AT-URI of the follow record',\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphFollow: {\n    lexicon: 1,\n    id: 'app.bsky.graph.follow',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          \"Record declaring a social 'follow' relationship of another account. Duplicate follows will be ignored by the AppView.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetBlocks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates which accounts the requesting account is currently blocking. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['blocks'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              blocks: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetFollowers: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getFollowers',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates accounts which follow a specified account (actor).',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'followers'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              followers: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetFollows: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getFollows',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates accounts which a specified account (actor) follows.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'follows'],\n            properties: {\n              subject: {\n                type: 'ref',\n                ref: 'lex:app.bsky.actor.defs#profileView',\n              },\n              cursor: {\n                type: 'string',\n              },\n              follows: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getList',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          \"Gets a 'view' (with additional context) of a specified list.\",\n        parameters: {\n          type: 'params',\n          required: ['list'],\n          properties: {\n            list: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) of the list record to hydrate.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list', 'items'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              list: {\n                type: 'ref',\n                ref: 'lex:app.bsky.graph.defs#listView',\n              },\n              items: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listItemView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetListBlocks: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getListBlocks',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get mod lists that the requesting account (actor) is blocking. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetListMutes: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getListMutes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates mod lists that the requesting account (actor) currently has muted. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetLists: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getLists',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates the lists created by a specified account (actor).',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'The account (actor) to enumerate lists from.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['lists'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              lists: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.graph.defs#listView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetMutes: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getMutes',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates accounts that the requesting account (actor) currently has muted. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['mutes'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              mutes: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphGetRelationships: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getRelationships',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates public relationships between one account, and a list of other accounts. Does not require auth.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n              description: 'Primary account requesting relationships for.',\n            },\n            others: {\n              type: 'array',\n              description:\n                \"List of 'other' accounts to be related back to the primary.\",\n              maxLength: 30,\n              items: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['relationships'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'did',\n              },\n              relationships: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:app.bsky.graph.defs#relationship',\n                    'lex:app.bsky.graph.defs#notFoundActor',\n                  ],\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'ActorNotFound',\n            description:\n              'the primary actor at-identifier could not be resolved',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyGraphGetSuggestedFollowsByActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.getSuggestedFollowsByActor',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerates follows similar to a given account (actor). Expected use is to recommend additional accounts immediately after following one account.',\n        parameters: {\n          type: 'params',\n          required: ['actor'],\n          properties: {\n            actor: {\n              type: 'string',\n              format: 'at-identifier',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['suggestions'],\n            properties: {\n              suggestions: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.actor.defs#profileView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.list',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          'Record representing a list of accounts (actors). Scope includes both moderation-oriented lists and curration-oriented lists.',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['name', 'purpose', 'createdAt'],\n          properties: {\n            purpose: {\n              type: 'ref',\n              description:\n                'Defines the purpose of the list (aka, moderation-oriented or curration-oriented)',\n              ref: 'lex:app.bsky.graph.defs#listPurpose',\n            },\n            name: {\n              type: 'string',\n              maxLength: 64,\n              minLength: 1,\n              description: 'Display name for list; can not be empty.',\n            },\n            description: {\n              type: 'string',\n              maxGraphemes: 300,\n              maxLength: 3000,\n            },\n            descriptionFacets: {\n              type: 'array',\n              items: {\n                type: 'ref',\n                ref: 'lex:app.bsky.richtext.facet',\n              },\n            },\n            avatar: {\n              type: 'blob',\n              accept: ['image/png', 'image/jpeg'],\n              maxSize: 1000000,\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphListblock: {\n    lexicon: 1,\n    id: 'app.bsky.graph.listblock',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          'Record representing a block relationship against an entire an entire list of accounts (actors).',\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'at-uri',\n              description: 'Reference (AT-URI) to the mod list record.',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphListitem: {\n    lexicon: 1,\n    id: 'app.bsky.graph.listitem',\n    defs: {\n      main: {\n        type: 'record',\n        description:\n          \"Record representing an account's inclusion on a specific list. The AppView will ignore duplicate listitem records.\",\n        key: 'tid',\n        record: {\n          type: 'object',\n          required: ['subject', 'list', 'createdAt'],\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'did',\n              description: 'The account which is included on the list.',\n            },\n            list: {\n              type: 'string',\n              format: 'at-uri',\n              description:\n                'Reference (AT-URI) to the list record (app.bsky.graph.list).',\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteActor',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Creates a mute relationship for the specified account. Mutes are private in Bluesky. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphMuteActorList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.muteActorList',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Creates a mute relationship for the specified list of accounts. Mutes are private in Bluesky. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list'],\n            properties: {\n              list: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteActor: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteActor',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmutes the specified account. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actor'],\n            properties: {\n              actor: {\n                type: 'string',\n                format: 'at-identifier',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyGraphUnmuteActorList: {\n    lexicon: 1,\n    id: 'app.bsky.graph.unmuteActorList',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Unmutes the specified list of accounts. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['list'],\n            properties: {\n              list: {\n                type: 'string',\n                format: 'at-uri',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyLabelerDefs: {\n    lexicon: 1,\n    id: 'app.bsky.labeler.defs',\n    defs: {\n      labelerView: {\n        type: 'object',\n        required: ['uri', 'cid', 'creator', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          likeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.labeler.defs#labelerViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      labelerViewDetailed: {\n        type: 'object',\n        required: ['uri', 'cid', 'creator', 'policies', 'indexedAt'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          creator: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          policies: {\n            type: 'ref',\n            ref: 'lex:app.bsky.labeler.defs#labelerPolicies',\n          },\n          likeCount: {\n            type: 'integer',\n            minimum: 0,\n          },\n          viewer: {\n            type: 'ref',\n            ref: 'lex:app.bsky.labeler.defs#labelerViewerState',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n      labelerViewerState: {\n        type: 'object',\n        properties: {\n          like: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      labelerPolicies: {\n        type: 'object',\n        required: ['labelValues'],\n        properties: {\n          labelValues: {\n            type: 'array',\n            description:\n              'The label values which this labeler publishes. May include global or custom labels.',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#labelValue',\n            },\n          },\n          labelValueDefinitions: {\n            type: 'array',\n            description:\n              'Label values created by this labeler and scoped exclusively to it. Labels defined here will override global label definitions for this labeler.',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#labelValueDefinition',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyLabelerGetServices: {\n    lexicon: 1,\n    id: 'app.bsky.labeler.getServices',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get information about a list of labeler services.',\n        parameters: {\n          type: 'params',\n          required: ['dids'],\n          properties: {\n            dids: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n            detailed: {\n              type: 'boolean',\n              default: false,\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['views'],\n            properties: {\n              views: {\n                type: 'array',\n                items: {\n                  type: 'union',\n                  refs: [\n                    'lex:app.bsky.labeler.defs#labelerView',\n                    'lex:app.bsky.labeler.defs#labelerViewDetailed',\n                  ],\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyLabelerService: {\n    lexicon: 1,\n    id: 'app.bsky.labeler.service',\n    defs: {\n      main: {\n        type: 'record',\n        description: 'A declaration of the existence of labeler service.',\n        key: 'literal:self',\n        record: {\n          type: 'object',\n          required: ['policies', 'createdAt'],\n          properties: {\n            policies: {\n              type: 'ref',\n              ref: 'lex:app.bsky.labeler.defs#labelerPolicies',\n            },\n            labels: {\n              type: 'union',\n              refs: ['lex:com.atproto.label.defs#selfLabels'],\n            },\n            createdAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationGetUnreadCount: {\n    lexicon: 1,\n    id: 'app.bsky.notification.getUnreadCount',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Count the number of unread notifications for the requesting account. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            seenAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['count'],\n            properties: {\n              count: {\n                type: 'integer',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationListNotifications: {\n    lexicon: 1,\n    id: 'app.bsky.notification.listNotifications',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Enumerate notifications for the requesting account. Requires auth.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            seenAt: {\n              type: 'string',\n              format: 'datetime',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['notifications'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              notifications: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.notification.listNotifications#notification',\n                },\n              },\n              seenAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n      notification: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'author',\n          'reason',\n          'record',\n          'isRead',\n          'indexedAt',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          author: {\n            type: 'ref',\n            ref: 'lex:app.bsky.actor.defs#profileView',\n          },\n          reason: {\n            type: 'string',\n            description:\n              \"Expected values are 'like', 'repost', 'follow', 'mention', 'reply', and 'quote'.\",\n            knownValues: [\n              'like',\n              'repost',\n              'follow',\n              'mention',\n              'reply',\n              'quote',\n            ],\n          },\n          reasonSubject: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          record: {\n            type: 'unknown',\n          },\n          isRead: {\n            type: 'boolean',\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationRegisterPush: {\n    lexicon: 1,\n    id: 'app.bsky.notification.registerPush',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Register to receive push notifications, via a specified service, for the requesting account. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['serviceDid', 'token', 'platform', 'appId'],\n            properties: {\n              serviceDid: {\n                type: 'string',\n                format: 'did',\n              },\n              token: {\n                type: 'string',\n              },\n              platform: {\n                type: 'string',\n                knownValues: ['ios', 'android', 'web'],\n              },\n              appId: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyNotificationUpdateSeen: {\n    lexicon: 1,\n    id: 'app.bsky.notification.updateSeen',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Notify server that the requesting account has seen notifications. Requires auth.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['seenAt'],\n            properties: {\n              seenAt: {\n                type: 'string',\n                format: 'datetime',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyRichtextFacet: {\n    lexicon: 1,\n    id: 'app.bsky.richtext.facet',\n    defs: {\n      main: {\n        type: 'object',\n        description: 'Annotation of a sub-string within rich text.',\n        required: ['index', 'features'],\n        properties: {\n          index: {\n            type: 'ref',\n            ref: 'lex:app.bsky.richtext.facet#byteSlice',\n          },\n          features: {\n            type: 'array',\n            items: {\n              type: 'union',\n              refs: [\n                'lex:app.bsky.richtext.facet#mention',\n                'lex:app.bsky.richtext.facet#link',\n                'lex:app.bsky.richtext.facet#tag',\n              ],\n            },\n          },\n        },\n      },\n      mention: {\n        type: 'object',\n        description:\n          \"Facet feature for mention of another account. The text is usually a handle, including a '@' prefix, but the facet reference is a DID.\",\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      link: {\n        type: 'object',\n        description:\n          'Facet feature for a URL. The text URL may have been simplified or truncated, but the facet reference should be a complete URL.',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n      tag: {\n        type: 'object',\n        description:\n          \"Facet feature for a hashtag. The text usually includes a '#' prefix, but the facet reference should not (except in the case of 'double hash tags').\",\n        required: ['tag'],\n        properties: {\n          tag: {\n            type: 'string',\n            maxLength: 640,\n            maxGraphemes: 64,\n          },\n        },\n      },\n      byteSlice: {\n        type: 'object',\n        description:\n          'Specifies the sub-string range a facet feature applies to. Start index is inclusive, end index is exclusive. Indices are zero-indexed, counting bytes of the UTF-8 encoded text. NOTE: some languages, like Javascript, use UTF-16 or Unicode codepoints for string slice indexing; in these languages, convert to byte arrays before working with facets.',\n        required: ['byteStart', 'byteEnd'],\n        properties: {\n          byteStart: {\n            type: 'integer',\n            minimum: 0,\n          },\n          byteEnd: {\n            type: 'integer',\n            minimum: 0,\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedDefs: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.defs',\n    defs: {\n      skeletonSearchPost: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      skeletonSearchActor: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetPopularFeedGenerators: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getPopularFeedGenerators',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'An unspecced view of globally popular feed generators.',\n        parameters: {\n          type: 'params',\n          properties: {\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n            query: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['feeds'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              feeds: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.feed.defs#generatorView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedGetTaggedSuggestions: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.getTaggedSuggestions',\n    defs: {\n      main: {\n        type: 'query',\n        description:\n          'Get a list of suggestions (feeds and users) tagged with categories',\n        parameters: {\n          type: 'params',\n          properties: {},\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['suggestions'],\n            properties: {\n              suggestions: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.getTaggedSuggestions#suggestion',\n                },\n              },\n            },\n          },\n        },\n      },\n      suggestion: {\n        type: 'object',\n        required: ['tag', 'subjectType', 'subject'],\n        properties: {\n          tag: {\n            type: 'string',\n          },\n          subjectType: {\n            type: 'string',\n            knownValues: ['actor', 'feed'],\n          },\n          subject: {\n            type: 'string',\n            format: 'uri',\n          },\n        },\n      },\n    },\n  },\n  AppBskyUnspeccedSearchActorsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchActorsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Actors (profile) search, returns only skeleton.',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax.',\n            },\n            typeahead: {\n              type: 'boolean',\n              description: \"If true, acts as fast/simple 'typeahead' query.\",\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['actors'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              actors: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchActor',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  AppBskyUnspeccedSearchPostsSkeleton: {\n    lexicon: 1,\n    id: 'app.bsky.unspecced.searchPostsSkeleton',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Backend Posts search, returns only skeleton',\n        parameters: {\n          type: 'params',\n          required: ['q'],\n          properties: {\n            q: {\n              type: 'string',\n              description:\n                'Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended.',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 25,\n            },\n            cursor: {\n              type: 'string',\n              description:\n                'Optional pagination mechanism; may not necessarily allow scrolling through entire result set.',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['posts'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              hitsTotal: {\n                type: 'integer',\n                description:\n                  'Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits.',\n              },\n              posts: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:app.bsky.unspecced.defs#skeletonSearchPost',\n                },\n              },\n            },\n          },\n        },\n        errors: [\n          {\n            name: 'BadQueryString',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneCommunicationCreateTemplate: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.createTemplate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Administrative action to create a new, re-usable communication (email for now) template.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subject', 'contentMarkdown', 'name'],\n            properties: {\n              name: {\n                type: 'string',\n                description: 'Name of the template.',\n              },\n              contentMarkdown: {\n                type: 'string',\n                description:\n                  'Content of the template, markdown supported, can contain variable placeholders.',\n              },\n              subject: {\n                type: 'string',\n                description: 'Subject of the message, used in emails.',\n              },\n              createdBy: {\n                type: 'string',\n                format: 'did',\n                description: 'DID of the user who is creating the template.',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.communication.defs#templateView',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.defs',\n    defs: {\n      templateView: {\n        type: 'object',\n        required: [\n          'id',\n          'name',\n          'contentMarkdown',\n          'disabled',\n          'lastUpdatedBy',\n          'createdAt',\n          'updatedAt',\n        ],\n        properties: {\n          id: {\n            type: 'string',\n          },\n          name: {\n            type: 'string',\n            description: 'Name of the template.',\n          },\n          subject: {\n            type: 'string',\n            description:\n              'Content of the template, can contain markdown and variable placeholders.',\n          },\n          contentMarkdown: {\n            type: 'string',\n            description: 'Subject of the message, used in emails.',\n          },\n          disabled: {\n            type: 'boolean',\n          },\n          lastUpdatedBy: {\n            type: 'string',\n            format: 'did',\n            description: 'DID of the user who last updated the template.',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationDeleteTemplate: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.deleteTemplate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Delete a communication template.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['id'],\n            properties: {\n              id: {\n                type: 'string',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationListTemplates: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.listTemplates',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get list of all communication templates.',\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['communicationTemplates'],\n            properties: {\n              communicationTemplates: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.communication.defs#templateView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneCommunicationUpdateTemplate: {\n    lexicon: 1,\n    id: 'tools.ozone.communication.updateTemplate',\n    defs: {\n      main: {\n        type: 'procedure',\n        description:\n          'Administrative action to update an existing communication template. Allows passing partial fields to patch specific fields only.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['id'],\n            properties: {\n              id: {\n                type: 'string',\n                description: 'ID of the template to be updated.',\n              },\n              name: {\n                type: 'string',\n                description: 'Name of the template.',\n              },\n              contentMarkdown: {\n                type: 'string',\n                description:\n                  'Content of the template, markdown supported, can contain variable placeholders.',\n              },\n              subject: {\n                type: 'string',\n                description: 'Subject of the message, used in emails.',\n              },\n              updatedBy: {\n                type: 'string',\n                format: 'did',\n                description: 'DID of the user who is updating the template.',\n              },\n              disabled: {\n                type: 'boolean',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.communication.defs#templateView',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationDefs: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.defs',\n    defs: {\n      modEventView: {\n        type: 'object',\n        required: [\n          'id',\n          'event',\n          'subject',\n          'subjectBlobCids',\n          'createdBy',\n          'createdAt',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          event: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#modEventTakedown',\n              'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n              'lex:tools.ozone.moderation.defs#modEventComment',\n              'lex:tools.ozone.moderation.defs#modEventReport',\n              'lex:tools.ozone.moderation.defs#modEventLabel',\n              'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n              'lex:tools.ozone.moderation.defs#modEventEscalate',\n              'lex:tools.ozone.moderation.defs#modEventMute',\n              'lex:tools.ozone.moderation.defs#modEventEmail',\n              'lex:tools.ozone.moderation.defs#modEventResolveAppeal',\n              'lex:tools.ozone.moderation.defs#modEventDivert',\n            ],\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n            ],\n          },\n          subjectBlobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          creatorHandle: {\n            type: 'string',\n          },\n          subjectHandle: {\n            type: 'string',\n          },\n        },\n      },\n      modEventViewDetail: {\n        type: 'object',\n        required: [\n          'id',\n          'event',\n          'subject',\n          'subjectBlobs',\n          'createdBy',\n          'createdAt',\n        ],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          event: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#modEventTakedown',\n              'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n              'lex:tools.ozone.moderation.defs#modEventComment',\n              'lex:tools.ozone.moderation.defs#modEventReport',\n              'lex:tools.ozone.moderation.defs#modEventLabel',\n              'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n              'lex:tools.ozone.moderation.defs#modEventEscalate',\n              'lex:tools.ozone.moderation.defs#modEventMute',\n              'lex:tools.ozone.moderation.defs#modEventEmail',\n              'lex:tools.ozone.moderation.defs#modEventResolveAppeal',\n              'lex:tools.ozone.moderation.defs#modEventDivert',\n            ],\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#repoView',\n              'lex:tools.ozone.moderation.defs#repoViewNotFound',\n              'lex:tools.ozone.moderation.defs#recordView',\n              'lex:tools.ozone.moderation.defs#recordViewNotFound',\n            ],\n          },\n          subjectBlobs: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:tools.ozone.moderation.defs#blobView',\n            },\n          },\n          createdBy: {\n            type: 'string',\n            format: 'did',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      subjectStatusView: {\n        type: 'object',\n        required: ['id', 'subject', 'createdAt', 'updatedAt', 'reviewState'],\n        properties: {\n          id: {\n            type: 'integer',\n          },\n          subject: {\n            type: 'union',\n            refs: [\n              'lex:com.atproto.admin.defs#repoRef',\n              'lex:com.atproto.repo.strongRef',\n            ],\n          },\n          subjectBlobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n          subjectRepoHandle: {\n            type: 'string',\n          },\n          updatedAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing when the last update was made to the moderation status of the subject',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing the first moderation status impacting event was emitted on the subject',\n          },\n          reviewState: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#subjectReviewState',\n          },\n          comment: {\n            type: 'string',\n            description: 'Sticky comment on the subject.',\n          },\n          muteUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastReviewedBy: {\n            type: 'string',\n            format: 'did',\n          },\n          lastReviewedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastReportedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          lastAppealedAt: {\n            type: 'string',\n            format: 'datetime',\n            description:\n              'Timestamp referencing when the author of the subject appealed a moderation action',\n          },\n          takendown: {\n            type: 'boolean',\n          },\n          appealed: {\n            type: 'boolean',\n            description:\n              'True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators.',\n          },\n          suspendUntil: {\n            type: 'string',\n            format: 'datetime',\n          },\n          tags: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n      subjectReviewState: {\n        type: 'string',\n        knownValues: [\n          'lex:tools.ozone.moderation.defs#reviewOpen',\n          'lex:tools.ozone.moderation.defs#reviewEscalated',\n          'lex:tools.ozone.moderation.defs#reviewClosed',\n          'lex:tools.ozone.moderation.defs#reviewNone',\n        ],\n      },\n      reviewOpen: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator',\n      },\n      reviewEscalated: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator',\n      },\n      reviewClosed: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator',\n      },\n      reviewNone: {\n        type: 'token',\n        description:\n          'Moderator review status of a subject: Unnecessary. Indicates that the subject does not need a review at the moment but there is probably some moderation related metadata available for it',\n      },\n      modEventTakedown: {\n        type: 'object',\n        description: 'Take down a subject permanently or temporarily',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description:\n              'Indicates how long the takedown should be in effect before automatically expiring.',\n          },\n        },\n      },\n      modEventReverseTakedown: {\n        type: 'object',\n        description: 'Revert take down action on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventResolveAppeal: {\n        type: 'object',\n        description: 'Resolve appeal on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe resolution.',\n          },\n        },\n      },\n      modEventComment: {\n        type: 'object',\n        description: 'Add a comment to a subject',\n        required: ['comment'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          sticky: {\n            type: 'boolean',\n            description: 'Make the comment persistent on the subject',\n          },\n        },\n      },\n      modEventReport: {\n        type: 'object',\n        description: 'Report a subject',\n        required: ['reportType'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          reportType: {\n            type: 'ref',\n            ref: 'lex:com.atproto.moderation.defs#reasonType',\n          },\n        },\n      },\n      modEventLabel: {\n        type: 'object',\n        description: 'Apply/Negate labels on a subject',\n        required: ['createLabelVals', 'negateLabelVals'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          createLabelVals: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n          negateLabelVals: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n          },\n        },\n      },\n      modEventAcknowledge: {\n        type: 'object',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n        },\n      },\n      modEventEscalate: {\n        type: 'object',\n        properties: {\n          comment: {\n            type: 'string',\n          },\n        },\n      },\n      modEventMute: {\n        type: 'object',\n        description: 'Mute incoming reports on a subject',\n        required: ['durationInHours'],\n        properties: {\n          comment: {\n            type: 'string',\n          },\n          durationInHours: {\n            type: 'integer',\n            description: 'Indicates how long the subject should remain muted.',\n          },\n        },\n      },\n      modEventUnmute: {\n        type: 'object',\n        description: 'Unmute action on a subject',\n        properties: {\n          comment: {\n            type: 'string',\n            description: 'Describe reasoning behind the reversal.',\n          },\n        },\n      },\n      modEventEmail: {\n        type: 'object',\n        description: 'Keep a log of outgoing email to a user',\n        required: ['subjectLine'],\n        properties: {\n          subjectLine: {\n            type: 'string',\n            description: 'The subject line of the email sent to the user.',\n          },\n          content: {\n            type: 'string',\n            description: 'The content of the email sent to the user.',\n          },\n          comment: {\n            type: 'string',\n            description: 'Additional comment about the outgoing comm.',\n          },\n        },\n      },\n      modEventDivert: {\n        type: 'object',\n        description:\n          \"Divert a record's blobs to a 3rd party service for further scanning/tagging\",\n        properties: {\n          comment: {\n            type: 'string',\n          },\n        },\n      },\n      modEventTag: {\n        type: 'object',\n        description: 'Add/Remove a tag on a subject',\n        required: ['add', 'remove'],\n        properties: {\n          add: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n            description:\n              \"Tags to be added to the subject. If already exists, won't be duplicated.\",\n          },\n          remove: {\n            type: 'array',\n            items: {\n              type: 'string',\n            },\n            description:\n              \"Tags to be removed to the subject. Ignores a tag If it doesn't exist, won't be duplicated.\",\n          },\n          comment: {\n            type: 'string',\n            description: 'Additional comment about added/removed tags.',\n          },\n        },\n      },\n      repoView: {\n        type: 'object',\n        required: [\n          'did',\n          'handle',\n          'relatedRecords',\n          'indexedAt',\n          'moderation',\n        ],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderation',\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n        },\n      },\n      repoViewDetail: {\n        type: 'object',\n        required: [\n          'did',\n          'handle',\n          'relatedRecords',\n          'indexedAt',\n          'moderation',\n        ],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n          handle: {\n            type: 'string',\n            format: 'handle',\n          },\n          email: {\n            type: 'string',\n          },\n          relatedRecords: {\n            type: 'array',\n            items: {\n              type: 'unknown',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderationDetail',\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          invitedBy: {\n            type: 'ref',\n            ref: 'lex:com.atproto.server.defs#inviteCode',\n          },\n          invites: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.server.defs#inviteCode',\n            },\n          },\n          invitesDisabled: {\n            type: 'boolean',\n          },\n          inviteNote: {\n            type: 'string',\n          },\n          emailConfirmedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n        },\n      },\n      repoViewNotFound: {\n        type: 'object',\n        required: ['did'],\n        properties: {\n          did: {\n            type: 'string',\n            format: 'did',\n          },\n        },\n      },\n      recordView: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'value',\n          'blobCids',\n          'indexedAt',\n          'moderation',\n          'repo',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n          blobCids: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderation',\n          },\n          repo: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#repoView',\n          },\n        },\n      },\n      recordViewDetail: {\n        type: 'object',\n        required: [\n          'uri',\n          'cid',\n          'value',\n          'blobs',\n          'indexedAt',\n          'moderation',\n          'repo',\n        ],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          value: {\n            type: 'unknown',\n          },\n          blobs: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:tools.ozone.moderation.defs#blobView',\n            },\n          },\n          labels: {\n            type: 'array',\n            items: {\n              type: 'ref',\n              ref: 'lex:com.atproto.label.defs#label',\n            },\n          },\n          indexedAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderationDetail',\n          },\n          repo: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#repoView',\n          },\n        },\n      },\n      recordViewNotFound: {\n        type: 'object',\n        required: ['uri'],\n        properties: {\n          uri: {\n            type: 'string',\n            format: 'at-uri',\n          },\n        },\n      },\n      moderation: {\n        type: 'object',\n        properties: {\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n          },\n        },\n      },\n      moderationDetail: {\n        type: 'object',\n        properties: {\n          subjectStatus: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n          },\n        },\n      },\n      blobView: {\n        type: 'object',\n        required: ['cid', 'mimeType', 'size', 'createdAt'],\n        properties: {\n          cid: {\n            type: 'string',\n            format: 'cid',\n          },\n          mimeType: {\n            type: 'string',\n          },\n          size: {\n            type: 'integer',\n          },\n          createdAt: {\n            type: 'string',\n            format: 'datetime',\n          },\n          details: {\n            type: 'union',\n            refs: [\n              'lex:tools.ozone.moderation.defs#imageDetails',\n              'lex:tools.ozone.moderation.defs#videoDetails',\n            ],\n          },\n          moderation: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#moderation',\n          },\n        },\n      },\n      imageDetails: {\n        type: 'object',\n        required: ['width', 'height'],\n        properties: {\n          width: {\n            type: 'integer',\n          },\n          height: {\n            type: 'integer',\n          },\n        },\n      },\n      videoDetails: {\n        type: 'object',\n        required: ['width', 'height', 'length'],\n        properties: {\n          width: {\n            type: 'integer',\n          },\n          height: {\n            type: 'integer',\n          },\n          length: {\n            type: 'integer',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationEmitEvent: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.emitEvent',\n    defs: {\n      main: {\n        type: 'procedure',\n        description: 'Take a moderation action on an actor.',\n        input: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['event', 'subject', 'createdBy'],\n            properties: {\n              event: {\n                type: 'union',\n                refs: [\n                  'lex:tools.ozone.moderation.defs#modEventTakedown',\n                  'lex:tools.ozone.moderation.defs#modEventAcknowledge',\n                  'lex:tools.ozone.moderation.defs#modEventEscalate',\n                  'lex:tools.ozone.moderation.defs#modEventComment',\n                  'lex:tools.ozone.moderation.defs#modEventLabel',\n                  'lex:tools.ozone.moderation.defs#modEventReport',\n                  'lex:tools.ozone.moderation.defs#modEventMute',\n                  'lex:tools.ozone.moderation.defs#modEventReverseTakedown',\n                  'lex:tools.ozone.moderation.defs#modEventUnmute',\n                  'lex:tools.ozone.moderation.defs#modEventEmail',\n                  'lex:tools.ozone.moderation.defs#modEventTag',\n                ],\n              },\n              subject: {\n                type: 'union',\n                refs: [\n                  'lex:com.atproto.admin.defs#repoRef',\n                  'lex:com.atproto.repo.strongRef',\n                ],\n              },\n              subjectBlobCids: {\n                type: 'array',\n                items: {\n                  type: 'string',\n                  format: 'cid',\n                },\n              },\n              createdBy: {\n                type: 'string',\n                format: 'did',\n              },\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#modEventView',\n          },\n        },\n        errors: [\n          {\n            name: 'SubjectHasAction',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneModerationGetEvent: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getEvent',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a moderation event.',\n        parameters: {\n          type: 'params',\n          required: ['id'],\n          properties: {\n            id: {\n              type: 'integer',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#modEventViewDetail',\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationGetRecord: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getRecord',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a record.',\n        parameters: {\n          type: 'params',\n          required: ['uri'],\n          properties: {\n            uri: {\n              type: 'string',\n              format: 'at-uri',\n            },\n            cid: {\n              type: 'string',\n              format: 'cid',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#recordViewDetail',\n          },\n        },\n        errors: [\n          {\n            name: 'RecordNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneModerationGetRepo: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.getRepo',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Get details about a repository.',\n        parameters: {\n          type: 'params',\n          required: ['did'],\n          properties: {\n            did: {\n              type: 'string',\n              format: 'did',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'ref',\n            ref: 'lex:tools.ozone.moderation.defs#repoViewDetail',\n          },\n        },\n        errors: [\n          {\n            name: 'RepoNotFound',\n          },\n        ],\n      },\n    },\n  },\n  ToolsOzoneModerationQueryEvents: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.queryEvents',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'List moderation events related to a subject.',\n        parameters: {\n          type: 'params',\n          properties: {\n            types: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'The types of events (fully qualified string in the format of tools.ozone.moderation.defs#modEvent<name>) to filter by. If not specified, all events are returned.',\n            },\n            createdBy: {\n              type: 'string',\n              format: 'did',\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'desc',\n              enum: ['asc', 'desc'],\n              description:\n                'Sort direction for the events. Defaults to descending order of created at timestamp.',\n            },\n            createdAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Retrieve events created after a given timestamp',\n            },\n            createdBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Retrieve events created before a given timestamp',\n            },\n            subject: {\n              type: 'string',\n              format: 'uri',\n            },\n            includeAllUserRecords: {\n              type: 'boolean',\n              default: false,\n              description:\n                'If true, events on all record types (posts, lists, profile etc.) owned by the did are returned',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            hasComment: {\n              type: 'boolean',\n              description: 'If true, only events with comments are returned',\n            },\n            comment: {\n              type: 'string',\n              description:\n                'If specified, only events with comments containing the keyword are returned',\n            },\n            addedLabels: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these labels were added are returned',\n            },\n            removedLabels: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these labels were removed are returned',\n            },\n            addedTags: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these tags were added are returned',\n            },\n            removedTags: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n              description:\n                'If specified, only events where all of these tags were removed are returned',\n            },\n            reportTypes: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['events'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              events: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.moderation.defs#modEventView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationQueryStatuses: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.queryStatuses',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'View moderation statuses of subjects (record or repo).',\n        parameters: {\n          type: 'params',\n          properties: {\n            subject: {\n              type: 'string',\n              format: 'uri',\n            },\n            comment: {\n              type: 'string',\n              description: 'Search subjects by keyword from comments',\n            },\n            reportedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reported after a given timestamp',\n            },\n            reportedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reported before a given timestamp',\n            },\n            reviewedAfter: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reviewed after a given timestamp',\n            },\n            reviewedBefore: {\n              type: 'string',\n              format: 'datetime',\n              description: 'Search subjects reviewed before a given timestamp',\n            },\n            includeMuted: {\n              type: 'boolean',\n              description:\n                \"By default, we don't include muted subjects in the results. Set this to true to include them.\",\n            },\n            reviewState: {\n              type: 'string',\n              description: 'Specify when fetching subjects in a certain state',\n            },\n            ignoreSubjects: {\n              type: 'array',\n              items: {\n                type: 'string',\n                format: 'uri',\n              },\n            },\n            lastReviewedBy: {\n              type: 'string',\n              format: 'did',\n              description:\n                'Get all subject statuses that were reviewed by a specific moderator',\n            },\n            sortField: {\n              type: 'string',\n              default: 'lastReportedAt',\n              enum: ['lastReviewedAt', 'lastReportedAt'],\n            },\n            sortDirection: {\n              type: 'string',\n              default: 'desc',\n              enum: ['asc', 'desc'],\n            },\n            takendown: {\n              type: 'boolean',\n              description: 'Get subjects that were taken down',\n            },\n            appealed: {\n              type: 'boolean',\n              description: 'Get subjects in unresolved appealed status',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            tags: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            excludeTags: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['subjectStatuses'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              subjectStatuses: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.moderation.defs#subjectStatusView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  ToolsOzoneModerationSearchRepos: {\n    lexicon: 1,\n    id: 'tools.ozone.moderation.searchRepos',\n    defs: {\n      main: {\n        type: 'query',\n        description: 'Find repositories based on a search term.',\n        parameters: {\n          type: 'params',\n          properties: {\n            term: {\n              type: 'string',\n              description: \"DEPRECATED: use 'q' instead\",\n            },\n            q: {\n              type: 'string',\n            },\n            limit: {\n              type: 'integer',\n              minimum: 1,\n              maximum: 100,\n              default: 50,\n            },\n            cursor: {\n              type: 'string',\n            },\n          },\n        },\n        output: {\n          encoding: 'application/json',\n          schema: {\n            type: 'object',\n            required: ['repos'],\n            properties: {\n              cursor: {\n                type: 'string',\n              },\n              repos: {\n                type: 'array',\n                items: {\n                  type: 'ref',\n                  ref: 'lex:tools.ozone.moderation.defs#repoView',\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n}\nexport const schemas: LexiconDoc[] = Object.values(schemaDict) as LexiconDoc[]\nexport const lexicons: Lexicons = new Lexicons(schemas)\nexport const ids = {\n  ComAtprotoAdminDefs: 'com.atproto.admin.defs',\n  ComAtprotoAdminDeleteAccount: 'com.atproto.admin.deleteAccount',\n  ComAtprotoAdminDisableAccountInvites:\n    'com.atproto.admin.disableAccountInvites',\n  ComAtprotoAdminDisableInviteCodes: 'com.atproto.admin.disableInviteCodes',\n  ComAtprotoAdminEnableAccountInvites: 'com.atproto.admin.enableAccountInvites',\n  ComAtprotoAdminGetAccountInfo: 'com.atproto.admin.getAccountInfo',\n  ComAtprotoAdminGetAccountInfos: 'com.atproto.admin.getAccountInfos',\n  ComAtprotoAdminGetInviteCodes: 'com.atproto.admin.getInviteCodes',\n  ComAtprotoAdminGetSubjectStatus: 'com.atproto.admin.getSubjectStatus',\n  ComAtprotoAdminSendEmail: 'com.atproto.admin.sendEmail',\n  ComAtprotoAdminUpdateAccountEmail: 'com.atproto.admin.updateAccountEmail',\n  ComAtprotoAdminUpdateAccountHandle: 'com.atproto.admin.updateAccountHandle',\n  ComAtprotoAdminUpdateAccountPassword:\n    'com.atproto.admin.updateAccountPassword',\n  ComAtprotoAdminUpdateSubjectStatus: 'com.atproto.admin.updateSubjectStatus',\n  ComAtprotoIdentityGetRecommendedDidCredentials:\n    'com.atproto.identity.getRecommendedDidCredentials',\n  ComAtprotoIdentityRequestPlcOperationSignature:\n    'com.atproto.identity.requestPlcOperationSignature',\n  ComAtprotoIdentityResolveHandle: 'com.atproto.identity.resolveHandle',\n  ComAtprotoIdentitySignPlcOperation: 'com.atproto.identity.signPlcOperation',\n  ComAtprotoIdentitySubmitPlcOperation:\n    'com.atproto.identity.submitPlcOperation',\n  ComAtprotoIdentityUpdateHandle: 'com.atproto.identity.updateHandle',\n  ComAtprotoLabelDefs: 'com.atproto.label.defs',\n  ComAtprotoLabelQueryLabels: 'com.atproto.label.queryLabels',\n  ComAtprotoLabelSubscribeLabels: 'com.atproto.label.subscribeLabels',\n  ComAtprotoModerationCreateReport: 'com.atproto.moderation.createReport',\n  ComAtprotoModerationDefs: 'com.atproto.moderation.defs',\n  ComAtprotoRepoApplyWrites: 'com.atproto.repo.applyWrites',\n  ComAtprotoRepoCreateRecord: 'com.atproto.repo.createRecord',\n  ComAtprotoRepoDeleteRecord: 'com.atproto.repo.deleteRecord',\n  ComAtprotoRepoDescribeRepo: 'com.atproto.repo.describeRepo',\n  ComAtprotoRepoGetRecord: 'com.atproto.repo.getRecord',\n  ComAtprotoRepoImportRepo: 'com.atproto.repo.importRepo',\n  ComAtprotoRepoListMissingBlobs: 'com.atproto.repo.listMissingBlobs',\n  ComAtprotoRepoListRecords: 'com.atproto.repo.listRecords',\n  ComAtprotoRepoPutRecord: 'com.atproto.repo.putRecord',\n  ComAtprotoRepoStrongRef: 'com.atproto.repo.strongRef',\n  ComAtprotoRepoUploadBlob: 'com.atproto.repo.uploadBlob',\n  ComAtprotoServerActivateAccount: 'com.atproto.server.activateAccount',\n  ComAtprotoServerCheckAccountStatus: 'com.atproto.server.checkAccountStatus',\n  ComAtprotoServerConfirmEmail: 'com.atproto.server.confirmEmail',\n  ComAtprotoServerCreateAccount: 'com.atproto.server.createAccount',\n  ComAtprotoServerCreateAppPassword: 'com.atproto.server.createAppPassword',\n  ComAtprotoServerCreateInviteCode: 'com.atproto.server.createInviteCode',\n  ComAtprotoServerCreateInviteCodes: 'com.atproto.server.createInviteCodes',\n  ComAtprotoServerCreateSession: 'com.atproto.server.createSession',\n  ComAtprotoServerDeactivateAccount: 'com.atproto.server.deactivateAccount',\n  ComAtprotoServerDefs: 'com.atproto.server.defs',\n  ComAtprotoServerDeleteAccount: 'com.atproto.server.deleteAccount',\n  ComAtprotoServerDeleteSession: 'com.atproto.server.deleteSession',\n  ComAtprotoServerDescribeServer: 'com.atproto.server.describeServer',\n  ComAtprotoServerGetAccountInviteCodes:\n    'com.atproto.server.getAccountInviteCodes',\n  ComAtprotoServerGetServiceAuth: 'com.atproto.server.getServiceAuth',\n  ComAtprotoServerGetSession: 'com.atproto.server.getSession',\n  ComAtprotoServerListAppPasswords: 'com.atproto.server.listAppPasswords',\n  ComAtprotoServerRefreshSession: 'com.atproto.server.refreshSession',\n  ComAtprotoServerRequestAccountDelete:\n    'com.atproto.server.requestAccountDelete',\n  ComAtprotoServerRequestEmailConfirmation:\n    'com.atproto.server.requestEmailConfirmation',\n  ComAtprotoServerRequestEmailUpdate: 'com.atproto.server.requestEmailUpdate',\n  ComAtprotoServerRequestPasswordReset:\n    'com.atproto.server.requestPasswordReset',\n  ComAtprotoServerReserveSigningKey: 'com.atproto.server.reserveSigningKey',\n  ComAtprotoServerResetPassword: 'com.atproto.server.resetPassword',\n  ComAtprotoServerRevokeAppPassword: 'com.atproto.server.revokeAppPassword',\n  ComAtprotoServerUpdateEmail: 'com.atproto.server.updateEmail',\n  ComAtprotoSyncGetBlob: 'com.atproto.sync.getBlob',\n  ComAtprotoSyncGetBlocks: 'com.atproto.sync.getBlocks',\n  ComAtprotoSyncGetCheckout: 'com.atproto.sync.getCheckout',\n  ComAtprotoSyncGetHead: 'com.atproto.sync.getHead',\n  ComAtprotoSyncGetLatestCommit: 'com.atproto.sync.getLatestCommit',\n  ComAtprotoSyncGetRecord: 'com.atproto.sync.getRecord',\n  ComAtprotoSyncGetRepo: 'com.atproto.sync.getRepo',\n  ComAtprotoSyncListBlobs: 'com.atproto.sync.listBlobs',\n  ComAtprotoSyncListRepos: 'com.atproto.sync.listRepos',\n  ComAtprotoSyncNotifyOfUpdate: 'com.atproto.sync.notifyOfUpdate',\n  ComAtprotoSyncRequestCrawl: 'com.atproto.sync.requestCrawl',\n  ComAtprotoSyncSubscribeRepos: 'com.atproto.sync.subscribeRepos',\n  ComAtprotoTempCheckSignupQueue: 'com.atproto.temp.checkSignupQueue',\n  ComAtprotoTempFetchLabels: 'com.atproto.temp.fetchLabels',\n  ComAtprotoTempRequestPhoneVerification:\n    'com.atproto.temp.requestPhoneVerification',\n  AppBskyActorDefs: 'app.bsky.actor.defs',\n  AppBskyActorGetPreferences: 'app.bsky.actor.getPreferences',\n  AppBskyActorGetProfile: 'app.bsky.actor.getProfile',\n  AppBskyActorGetProfiles: 'app.bsky.actor.getProfiles',\n  AppBskyActorGetSuggestions: 'app.bsky.actor.getSuggestions',\n  AppBskyActorProfile: 'app.bsky.actor.profile',\n  AppBskyActorPutPreferences: 'app.bsky.actor.putPreferences',\n  AppBskyActorSearchActors: 'app.bsky.actor.searchActors',\n  AppBskyActorSearchActorsTypeahead: 'app.bsky.actor.searchActorsTypeahead',\n  AppBskyEmbedExternal: 'app.bsky.embed.external',\n  AppBskyEmbedImages: 'app.bsky.embed.images',\n  AppBskyEmbedRecord: 'app.bsky.embed.record',\n  AppBskyEmbedRecordWithMedia: 'app.bsky.embed.recordWithMedia',\n  AppBskyFeedDefs: 'app.bsky.feed.defs',\n  AppBskyFeedDescribeFeedGenerator: 'app.bsky.feed.describeFeedGenerator',\n  AppBskyFeedGenerator: 'app.bsky.feed.generator',\n  AppBskyFeedGetActorFeeds: 'app.bsky.feed.getActorFeeds',\n  AppBskyFeedGetActorLikes: 'app.bsky.feed.getActorLikes',\n  AppBskyFeedGetAuthorFeed: 'app.bsky.feed.getAuthorFeed',\n  AppBskyFeedGetFeed: 'app.bsky.feed.getFeed',\n  AppBskyFeedGetFeedGenerator: 'app.bsky.feed.getFeedGenerator',\n  AppBskyFeedGetFeedGenerators: 'app.bsky.feed.getFeedGenerators',\n  AppBskyFeedGetFeedSkeleton: 'app.bsky.feed.getFeedSkeleton',\n  AppBskyFeedGetLikes: 'app.bsky.feed.getLikes',\n  AppBskyFeedGetListFeed: 'app.bsky.feed.getListFeed',\n  AppBskyFeedGetPostThread: 'app.bsky.feed.getPostThread',\n  AppBskyFeedGetPosts: 'app.bsky.feed.getPosts',\n  AppBskyFeedGetRepostedBy: 'app.bsky.feed.getRepostedBy',\n  AppBskyFeedGetSuggestedFeeds: 'app.bsky.feed.getSuggestedFeeds',\n  AppBskyFeedGetTimeline: 'app.bsky.feed.getTimeline',\n  AppBskyFeedLike: 'app.bsky.feed.like',\n  AppBskyFeedPost: 'app.bsky.feed.post',\n  AppBskyFeedRepost: 'app.bsky.feed.repost',\n  AppBskyFeedSearchPosts: 'app.bsky.feed.searchPosts',\n  AppBskyFeedThreadgate: 'app.bsky.feed.threadgate',\n  AppBskyGraphBlock: 'app.bsky.graph.block',\n  AppBskyGraphDefs: 'app.bsky.graph.defs',\n  AppBskyGraphFollow: 'app.bsky.graph.follow',\n  AppBskyGraphGetBlocks: 'app.bsky.graph.getBlocks',\n  AppBskyGraphGetFollowers: 'app.bsky.graph.getFollowers',\n  AppBskyGraphGetFollows: 'app.bsky.graph.getFollows',\n  AppBskyGraphGetList: 'app.bsky.graph.getList',\n  AppBskyGraphGetListBlocks: 'app.bsky.graph.getListBlocks',\n  AppBskyGraphGetListMutes: 'app.bsky.graph.getListMutes',\n  AppBskyGraphGetLists: 'app.bsky.graph.getLists',\n  AppBskyGraphGetMutes: 'app.bsky.graph.getMutes',\n  AppBskyGraphGetRelationships: 'app.bsky.graph.getRelationships',\n  AppBskyGraphGetSuggestedFollowsByActor:\n    'app.bsky.graph.getSuggestedFollowsByActor',\n  AppBskyGraphList: 'app.bsky.graph.list',\n  AppBskyGraphListblock: 'app.bsky.graph.listblock',\n  AppBskyGraphListitem: 'app.bsky.graph.listitem',\n  AppBskyGraphMuteActor: 'app.bsky.graph.muteActor',\n  AppBskyGraphMuteActorList: 'app.bsky.graph.muteActorList',\n  AppBskyGraphUnmuteActor: 'app.bsky.graph.unmuteActor',\n  AppBskyGraphUnmuteActorList: 'app.bsky.graph.unmuteActorList',\n  AppBskyLabelerDefs: 'app.bsky.labeler.defs',\n  AppBskyLabelerGetServices: 'app.bsky.labeler.getServices',\n  AppBskyLabelerService: 'app.bsky.labeler.service',\n  AppBskyNotificationGetUnreadCount: 'app.bsky.notification.getUnreadCount',\n  AppBskyNotificationListNotifications:\n    'app.bsky.notification.listNotifications',\n  AppBskyNotificationRegisterPush: 'app.bsky.notification.registerPush',\n  AppBskyNotificationUpdateSeen: 'app.bsky.notification.updateSeen',\n  AppBskyRichtextFacet: 'app.bsky.richtext.facet',\n  AppBskyUnspeccedDefs: 'app.bsky.unspecced.defs',\n  AppBskyUnspeccedGetPopularFeedGenerators:\n    'app.bsky.unspecced.getPopularFeedGenerators',\n  AppBskyUnspeccedGetTaggedSuggestions:\n    'app.bsky.unspecced.getTaggedSuggestions',\n  AppBskyUnspeccedSearchActorsSkeleton:\n    'app.bsky.unspecced.searchActorsSkeleton',\n  AppBskyUnspeccedSearchPostsSkeleton: 'app.bsky.unspecced.searchPostsSkeleton',\n  ToolsOzoneCommunicationCreateTemplate:\n    'tools.ozone.communication.createTemplate',\n  ToolsOzoneCommunicationDefs: 'tools.ozone.communication.defs',\n  ToolsOzoneCommunicationDeleteTemplate:\n    'tools.ozone.communication.deleteTemplate',\n  ToolsOzoneCommunicationListTemplates:\n    'tools.ozone.communication.listTemplates',\n  ToolsOzoneCommunicationUpdateTemplate:\n    'tools.ozone.communication.updateTemplate',\n  ToolsOzoneModerationDefs: 'tools.ozone.moderation.defs',\n  ToolsOzoneModerationEmitEvent: 'tools.ozone.moderation.emitEvent',\n  ToolsOzoneModerationGetEvent: 'tools.ozone.moderation.getEvent',\n  ToolsOzoneModerationGetRecord: 'tools.ozone.moderation.getRecord',\n  ToolsOzoneModerationGetRepo: 'tools.ozone.moderation.getRepo',\n  ToolsOzoneModerationQueryEvents: 'tools.ozone.moderation.queryEvents',\n  ToolsOzoneModerationQueryStatuses: 'tools.ozone.moderation.queryStatuses',\n  ToolsOzoneModerationSearchRepos: 'tools.ozone.moderation.searchRepos',\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  account: string\n  /** Optional reason for disabled invites. */\n  note?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  codes?: string[]\n  accounts?: string[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  account: string\n  /** Optional reason for enabled invites. */\n  note?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  did: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ComAtprotoAdminDefs.AccountView\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\n\nexport interface QueryParams {\n  dids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  infos: ComAtprotoAdminDefs.AccountView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoServerDefs from '../server/defs'\n\nexport interface QueryParams {\n  sort?: 'recent' | 'usage' | (string & {})\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  codes: ComAtprotoServerDefs.InviteCode[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {\n  did?: string\n  uri?: string\n  blob?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  recipientDid: string\n  content: string\n  subject?: string\n  senderDid: string\n  /** Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  sent: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo. */\n  account: string\n  email: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  handle: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  password: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | ComAtprotoAdminDefs.RepoBlobRef\n    | { $type: string; [k: string]: unknown }\n  takedown?: ComAtprotoAdminDefs.StatusAttr\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  /** Recommended rotation keys for PLC dids. Should be undefined (or ignored) for did:webs. */\n  rotationKeys?: string[]\n  alsoKnownAs?: string[]\n  verificationMethods?: {}\n  services?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle to resolve. */\n  handle: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** A token received through com.atproto.identity.requestPlcOperationSignature */\n  token?: string\n  rotationKeys?: string[]\n  alsoKnownAs?: string[]\n  verificationMethods?: {}\n  services?: {}\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  /** A signed DID PLC operation. */\n  operation: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  operation: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The new handle. */\n  handle: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from './defs'\n\nexport interface QueryParams {\n  /** List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI. */\n  uriPatterns: string[]\n  /** Optional list of label sources (DIDs) to filter on. */\n  sources?: string[]\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoModerationDefs from './defs'\nimport * as ComAtprotoAdminDefs from '../admin/defs'\nimport * as ComAtprotoRepoStrongRef from '../repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  /** Additional context about the content and violation. */\n  reason?: string\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  id: number\n  reasonType: ComAtprotoModerationDefs.ReasonType\n  reason?: string\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  reportedBy: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nexport function isObj(v: unknown): v is Record<string, unknown> {\n  return typeof v === 'object' && v !== null\n}\n\nexport function hasProp<K extends PropertyKey>(\n  data: object,\n  prop: K,\n): data is Record<K, unknown> {\n  return prop in data\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** Can be set to 'false' to skip Lexicon schema validation of record data, for all operations. */\n  validate?: boolean\n  writes: (Create | Update | Delete)[]\n  /** If provided, the entire operation will fail if the current repo commit CID does not match this value. Used to prevent conflicting repo mutations. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n\n/** Operation which creates a new record. */\nexport interface Create {\n  collection: string\n  rkey?: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isCreate(v: unknown): v is Create {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#create'\n  )\n}\n\nexport function validateCreate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#create', v)\n}\n\n/** Operation which updates an existing record. */\nexport interface Update {\n  collection: string\n  rkey: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isUpdate(v: unknown): v is Update {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#update'\n  )\n}\n\nexport function validateUpdate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#update', v)\n}\n\n/** Operation which deletes an existing record. */\nexport interface Delete {\n  collection: string\n  rkey: string\n  [k: string]: unknown\n}\n\nexport function isDelete(v: unknown): v is Delete {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.applyWrites#delete'\n  )\n}\n\nexport function validateDelete(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.applyWrites#delete', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey?: string\n  /** Can be set to 'false' to skip Lexicon schema validation of record data. */\n  validate?: boolean\n  /** The record itself. Must contain a $type field. */\n  record: {}\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  uri: string\n  cid: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey: string\n  /** Compare and swap with the previous record by CID. */\n  swapRecord?: string\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  handle: string\n  did: string\n  /** The complete DID document for this account. */\n  didDoc: {}\n  /** List of all the collections (NSIDs) for which this repo contains at least one record. */\n  collections: string[]\n  /** Indicates if handle is currently valid (resolves bi-directionally) */\n  handleIsCorrect: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey: string\n  /** The CID of the version of the record. If not specified, then return the most recent version. */\n  cid?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = string | Uint8Array\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/vnd.ipld.car'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  blobs: RecordBlob[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface RecordBlob {\n  cid: string\n  recordUri: string\n  [k: string]: unknown\n}\n\nexport function isRecordBlob(v: unknown): v is RecordBlob {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.listMissingBlobs#recordBlob'\n  )\n}\n\nexport function validateRecordBlob(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.listMissingBlobs#recordBlob', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The handle or DID of the repo. */\n  repo: string\n  /** The NSID of the record type. */\n  collection: string\n  /** The number of records to return. */\n  limit?: number\n  cursor?: string\n  /** DEPRECATED: The lowest sort-ordered rkey to start from (exclusive) */\n  rkeyStart?: string\n  /** DEPRECATED: The highest sort-ordered rkey to stop at (exclusive) */\n  rkeyEnd?: string\n  /** Flag to reverse the order of the returned records. */\n  reverse?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  records: Record[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Record {\n  uri: string\n  cid: string\n  value: {}\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.repo.listRecords#record'\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.listRecords#record', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The handle or DID of the repo (aka, current account). */\n  repo: string\n  /** The NSID of the record collection. */\n  collection: string\n  /** The Record Key. */\n  rkey: string\n  /** Can be set to 'false' to skip Lexicon schema validation of record data. */\n  validate?: boolean\n  /** The record to write. */\n  record: {}\n  /** Compare and swap with the previous record by CID. WARNING: nullable and optional field; may cause problems with golang implementation */\n  swapRecord?: string | null\n  /** Compare and swap with the previous commit by CID. */\n  swapCommit?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  uri: string\n  cid: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class InvalidSwapError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidSwap') return new InvalidSwapError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = string | Uint8Array\n\nexport interface OutputSchema {\n  blob: BlobRef\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: string\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  activated: boolean\n  validDid: boolean\n  repoCommit: string\n  repoRev: string\n  repoBlocks: number\n  indexedRecords: number\n  privateStateValues: number\n  expectedBlobs: number\n  importedBlobs: number\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  token: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class AccountNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidEmailError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountNotFound') return new AccountNotFoundError(e)\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n    if (e.error === 'InvalidEmail') return new InvalidEmailError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email?: string\n  /** Requested handle for the account. */\n  handle: string\n  /** Pre-existing atproto DID, being imported to a new account. */\n  did?: string\n  inviteCode?: string\n  verificationCode?: string\n  verificationPhone?: string\n  /** Initial account password. May need to meet instance-specific password strength requirements. */\n  password?: string\n  /** DID PLC rotation key (aka, recovery key) to be included in PLC creation operation. */\n  recoveryKey?: string\n  /** A signed DID PLC operation to be submitted as part of importing an existing account to this instance. NOTE: this optional field may be updated when full account migration is implemented. */\n  plcOp?: {}\n  [k: string]: unknown\n}\n\n/** Account login session returned on successful account creation. */\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  /** The DID of the new account. */\n  did: string\n  /** Complete DID document. */\n  didDoc?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class InvalidHandleError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidPasswordError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidInviteCodeError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class HandleNotAvailableError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class UnsupportedDomainError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class UnresolvableDidError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class IncompatibleDidDocError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'InvalidHandle') return new InvalidHandleError(e)\n    if (e.error === 'InvalidPassword') return new InvalidPasswordError(e)\n    if (e.error === 'InvalidInviteCode') return new InvalidInviteCodeError(e)\n    if (e.error === 'HandleNotAvailable') return new HandleNotAvailableError(e)\n    if (e.error === 'UnsupportedDomain') return new UnsupportedDomainError(e)\n    if (e.error === 'UnresolvableDid') return new UnresolvableDidError(e)\n    if (e.error === 'IncompatibleDidDoc') return new IncompatibleDidDocError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** A short name for the App Password, to help distinguish them. */\n  name: string\n  [k: string]: unknown\n}\n\nexport type OutputSchema = AppPassword\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n\nexport interface AppPassword {\n  name: string\n  password: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isAppPassword(v: unknown): v is AppPassword {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.createAppPassword#appPassword'\n  )\n}\n\nexport function validateAppPassword(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'com.atproto.server.createAppPassword#appPassword',\n    v,\n  )\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  useCount: number\n  forAccount?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  code: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  codeCount: number\n  useCount: number\n  forAccounts?: string[]\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  codes: AccountCodes[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface AccountCodes {\n  account: string\n  codes: string[]\n  [k: string]: unknown\n}\n\nexport function isAccountCodes(v: unknown): v is AccountCodes {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.createInviteCodes#accountCodes'\n  )\n}\n\nexport function validateAccountCodes(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'com.atproto.server.createInviteCodes#accountCodes',\n    v,\n  )\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Handle or other identifier supported by the server for the authenticating user. */\n  identifier: string\n  password: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: {}\n  email?: string\n  emailConfirmed?: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** A recommendation to server as to how long they should hold onto the deactivated account before deleting. */\n  deleteAfter?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  did: string\n  password: string\n  token: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  /** If true, an invite code must be supplied to create an account on this instance. */\n  inviteCodeRequired?: boolean\n  /** If true, a phone verification token must be supplied to create an account on this instance. */\n  phoneVerificationRequired?: boolean\n  /** List of domain suffixes that can be used in account handles. */\n  availableUserDomains: string[]\n  links?: Links\n  contact?: Contact\n  did: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Links {\n  privacyPolicy?: string\n  termsOfService?: string\n  [k: string]: unknown\n}\n\nexport function isLinks(v: unknown): v is Links {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.describeServer#links'\n  )\n}\n\nexport function validateLinks(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.describeServer#links', v)\n}\n\nexport interface Contact {\n  email?: string\n  [k: string]: unknown\n}\n\nexport function isContact(v: unknown): v is Contact {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.describeServer#contact'\n  )\n}\n\nexport function validateContact(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.describeServer#contact', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoServerDefs from './defs'\n\nexport interface QueryParams {\n  includeUsed?: boolean\n  /** Controls whether any new 'earned' but not 'created' invites should be created. */\n  createAvailable?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  codes: ComAtprotoServerDefs.InviteCode[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class DuplicateCreateError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'DuplicateCreate') return new DuplicateCreateError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the service that the token will be used to authenticate with */\n  aud: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  token: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  handle: string\n  did: string\n  email?: string\n  emailConfirmed?: boolean\n  didDoc?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  passwords: AppPassword[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n\nexport interface AppPassword {\n  name: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isAppPassword(v: unknown): v is AppPassword {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.listAppPasswords#appPassword'\n  )\n}\n\nexport function validateAppPassword(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.listAppPasswords#appPassword', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  accessJwt: string\n  refreshJwt: string\n  handle: string\n  did: string\n  didDoc?: {}\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class AccountTakedownError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'AccountTakedown') return new AccountTakedownError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  tokenRequired: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** The DID to reserve a key for. */\n  did?: string\n  [k: string]: unknown\n}\n\nexport interface OutputSchema {\n  /** The public key for the reserved signing key, in did:key serialization. */\n  signingKey: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  token: string\n  password: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  name: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  email: string\n  /** Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed. */\n  token?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport class ExpiredTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class InvalidTokenError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class TokenRequiredError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ExpiredToken') return new ExpiredTokenError(e)\n    if (e.error === 'InvalidToken') return new InvalidTokenError(e)\n    if (e.error === 'TokenRequired') return new TokenRequiredError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the account. */\n  did: string\n  /** The CID of the blob to fetch */\n  cid: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  cids: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  root: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class HeadNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'HeadNotFound') return new HeadNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cid: string\n  rev: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  collection: string\n  /** Record Key */\n  rkey: string\n  /** An optional past commit CID. */\n  commit?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** The revision ('rev') of the repo to create a diff from. */\n  since?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: Uint8Array\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  /** The DID of the repo. */\n  did: string\n  /** Optional revision of the repo to list blobs since. */\n  since?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  cids: string[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: Repo[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Repo {\n  did: string\n  /** Current repo commit CID */\n  head: string\n  rev: string\n  [k: string]: unknown\n}\n\nexport function isRepo(v: unknown): v is Repo {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.listRepos#repo'\n  )\n}\n\nexport function validateRepo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.listRepos#repo', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Hostname of the current service (usually a PDS) that is notifying of update. */\n  hostname: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Hostname of the current service (eg, PDS) that is requesting to be crawled. */\n  hostname: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  activated: boolean\n  placeInQueue?: number\n  estimatedTimeMs?: number\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../label/defs'\n\nexport interface QueryParams {\n  since?: number\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  phoneNumber: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  preferences: AppBskyActorDefs.Preferences\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  /** Handle or DID of account to fetch profile of. */\n  actor: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = AppBskyActorDefs.ProfileViewDetailed\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  actors: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  profiles: AppBskyActorDefs.ProfileViewDetailed[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  preferences: AppBskyActorDefs.Preferences\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead. */\n  term?: string\n  /** Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  actors: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead. */\n  term?: string\n  /** Search query prefix; not a full query string. */\n  q?: string\n  limit?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  actors: AppBskyActorDefs.ProfileViewBasic[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  did: string\n  feeds: Feed[]\n  links?: Links\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Feed {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isFeed(v: unknown): v is Feed {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.describeFeedGenerator#feed'\n  )\n}\n\nexport function validateFeed(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.describeFeedGenerator#feed', v)\n}\n\nexport interface Links {\n  privacyPolicy?: string\n  termsOfService?: string\n  [k: string]: unknown\n}\n\nexport function isLinks(v: unknown): v is Links {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.describeFeedGenerator#links'\n  )\n}\n\nexport function validateLinks(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.describeFeedGenerator#links', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BlockedActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class BlockedByActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockedActor') return new BlockedActorError(e)\n    if (e.error === 'BlockedByActor') return new BlockedByActorError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n  /** Combinations of post/repost types to include in response. */\n  filter?:\n    | 'posts_with_replies'\n    | 'posts_no_replies'\n    | 'posts_with_media'\n    | 'posts_and_author_threads'\n    | (string & {})\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BlockedActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport class BlockedByActorError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BlockedActor') return new BlockedActorError(e)\n    if (e.error === 'BlockedByActor') return new BlockedByActorError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feed: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** AT-URI of the feed generator record. */\n  feed: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  view: AppBskyFeedDefs.GeneratorView\n  /** Indicates whether the feed generator service has been online recently, or else seems to be inactive. */\n  isOnline: boolean\n  /** Indicates whether the feed generator service is compatible with the record declaration. */\n  isValid: boolean\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  feeds: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Reference to feed generator record describing the specific feed being requested. */\n  feed: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.SkeletonFeedPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class UnknownFeedError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownFeed') return new UnknownFeedError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  /** AT-URI of the subject (eg, a post record). */\n  uri: string\n  /** CID of the subject record (aka, specific version of record), to filter likes. */\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  likes: Like[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Like {\n  indexedAt: string\n  createdAt: string\n  actor: AppBskyActorDefs.ProfileView\n  [k: string]: unknown\n}\n\nexport function isLike(v: unknown): v is Like {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.getLikes#like'\n  )\n}\n\nexport function validateLike(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.getLikes#like', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) to the list record. */\n  list: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class UnknownListError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'UnknownList') return new UnknownListError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) to post record. */\n  uri: string\n  /** How many levels of reply depth should be included in response. */\n  depth?: number\n  /** How many levels of parent (and grandparent, etc) post to include. */\n  parentHeight?: number\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  thread:\n    | AppBskyFeedDefs.ThreadViewPost\n    | AppBskyFeedDefs.NotFoundPost\n    | AppBskyFeedDefs.BlockedPost\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class NotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'NotFound') return new NotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** List of post AT-URIs to return hydrated views for. */\n  uris: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  posts: AppBskyFeedDefs.PostView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) of post record */\n  uri: string\n  /** If supplied, filters to reposts of specific version (by CID) of the post record. */\n  cid?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  uri: string\n  cid?: string\n  cursor?: string\n  repostedBy: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Variant 'algorithm' for timeline. Implementation-specific. NOTE: most feed flexibility has been moved to feed generator mechanism. */\n  algorithm?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feed: AppBskyFeedDefs.FeedViewPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  posts: AppBskyFeedDefs.PostView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  blocks: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  followers: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  subject: AppBskyActorDefs.ProfileView\n  cursor?: string\n  follows: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  /** Reference (AT-URI) of the list record to hydrate. */\n  list: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  list: AppBskyGraphDefs.ListView\n  items: AppBskyGraphDefs.ListItemView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  /** The account (actor) to enumerate lists from. */\n  actor: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  lists: AppBskyGraphDefs.ListView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  mutes: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\n\nexport interface QueryParams {\n  /** Primary account requesting relationships for. */\n  actor: string\n  /** List of 'other' accounts to be related back to the primary. */\n  others?: string[]\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  actor?: string\n  relationships: (\n    | AppBskyGraphDefs.Relationship\n    | AppBskyGraphDefs.NotFoundActor\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class ActorNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'ActorNotFound') return new ActorNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\n\nexport interface QueryParams {\n  actor: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  suggestions: AppBskyActorDefs.ProfileView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  list: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  actor: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  list: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyLabelerDefs from './defs'\n\nexport interface QueryParams {\n  dids: string[]\n  detailed?: boolean\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  views: (\n    | AppBskyLabelerDefs.LabelerView\n    | AppBskyLabelerDefs.LabelerViewDetailed\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {\n  seenAt?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  count: number\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  seenAt?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  notifications: Notification[]\n  seenAt?: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Notification {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileView\n  /** Expected values are 'like', 'repost', 'follow', 'mention', 'reply', and 'quote'. */\n  reason:\n    | 'like'\n    | 'repost'\n    | 'follow'\n    | 'mention'\n    | 'reply'\n    | 'quote'\n    | (string & {})\n  reasonSubject?: string\n  record: {}\n  isRead: boolean\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isNotification(v: unknown): v is Notification {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.notification.listNotifications#notification'\n  )\n}\n\nexport function validateNotification(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'app.bsky.notification.listNotifications#notification',\n    v,\n  )\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  serviceDid: string\n  token: string\n  platform: 'ios' | 'android' | 'web' | (string & {})\n  appId: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  seenAt: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyFeedDefs from '../feed/defs'\n\nexport interface QueryParams {\n  limit?: number\n  cursor?: string\n  query?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  feeds: AppBskyFeedDefs.GeneratorView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  suggestions: Suggestion[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n\nexport interface Suggestion {\n  tag: string\n  subjectType: 'actor' | 'feed' | (string & {})\n  subject: string\n  [k: string]: unknown\n}\n\nexport function isSuggestion(v: unknown): v is Suggestion {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.getTaggedSuggestions#suggestion'\n  )\n}\n\nexport function validateSuggestion(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'app.bsky.unspecced.getTaggedSuggestions#suggestion',\n    v,\n  )\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyUnspeccedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax. */\n  q: string\n  /** If true, acts as fast/simple 'typeahead' query. */\n  typeahead?: boolean\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  actors: AppBskyUnspeccedDefs.SkeletonSearchActor[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyUnspeccedDefs from './defs'\n\nexport interface QueryParams {\n  /** Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. */\n  q: string\n  limit?: number\n  /** Optional pagination mechanism; may not necessarily allow scrolling through entire result set. */\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  /** Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits. */\n  hitsTotal?: number\n  posts: AppBskyUnspeccedDefs.SkeletonSearchPost[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class BadQueryStringError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'BadQueryString') return new BadQueryStringError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneCommunicationDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** Name of the template. */\n  name: string\n  /** Content of the template, markdown supported, can contain variable placeholders. */\n  contentMarkdown: string\n  /** Subject of the message, used in emails. */\n  subject: string\n  /** DID of the user who is creating the template. */\n  createdBy?: string\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ToolsOzoneCommunicationDefs.TemplateView\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  id: string\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneCommunicationDefs from './defs'\n\nexport interface QueryParams {}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  communicationTemplates: ToolsOzoneCommunicationDefs.TemplateView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneCommunicationDefs from './defs'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  /** ID of the template to be updated. */\n  id: string\n  /** Name of the template. */\n  name?: string\n  /** Content of the template, markdown supported, can contain variable placeholders. */\n  contentMarkdown?: string\n  /** Subject of the message, used in emails. */\n  subject?: string\n  /** DID of the user who is updating the template. */\n  updatedBy?: string\n  disabled?: boolean\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ToolsOzoneCommunicationDefs.TemplateView\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\nimport * as ComAtprotoAdminDefs from '../../../com/atproto/admin/defs'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface QueryParams {}\n\nexport interface InputSchema {\n  event:\n    | ToolsOzoneModerationDefs.ModEventTakedown\n    | ToolsOzoneModerationDefs.ModEventAcknowledge\n    | ToolsOzoneModerationDefs.ModEventEscalate\n    | ToolsOzoneModerationDefs.ModEventComment\n    | ToolsOzoneModerationDefs.ModEventLabel\n    | ToolsOzoneModerationDefs.ModEventReport\n    | ToolsOzoneModerationDefs.ModEventMute\n    | ToolsOzoneModerationDefs.ModEventReverseTakedown\n    | ToolsOzoneModerationDefs.ModEventUnmute\n    | ToolsOzoneModerationDefs.ModEventEmail\n    | ToolsOzoneModerationDefs.ModEventTag\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids?: string[]\n  createdBy: string\n  [k: string]: unknown\n}\n\nexport type OutputSchema = ToolsOzoneModerationDefs.ModEventView\n\nexport interface CallOptions {\n  headers?: Headers\n  qp?: QueryParams\n  encoding: 'application/json'\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class SubjectHasActionError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'SubjectHasAction') return new SubjectHasActionError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  id: number\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ToolsOzoneModerationDefs.ModEventViewDetail\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  uri: string\n  cid?: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ToolsOzoneModerationDefs.RecordViewDetail\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class RecordNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RecordNotFound') return new RecordNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  did: string\n}\n\nexport type InputSchema = undefined\nexport type OutputSchema = ToolsOzoneModerationDefs.RepoViewDetail\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport class RepoNotFoundError extends XRPCError {\n  constructor(src: XRPCError) {\n    super(src.status, src.error, src.message, src.headers)\n  }\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n    if (e.error === 'RepoNotFound') return new RepoNotFoundError(e)\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  /** The types of events (fully qualified string in the format of tools.ozone.moderation.defs#modEvent<name>) to filter by. If not specified, all events are returned. */\n  types?: string[]\n  createdBy?: string\n  /** Sort direction for the events. Defaults to descending order of created at timestamp. */\n  sortDirection?: 'asc' | 'desc'\n  /** Retrieve events created after a given timestamp */\n  createdAfter?: string\n  /** Retrieve events created before a given timestamp */\n  createdBefore?: string\n  subject?: string\n  /** If true, events on all record types (posts, lists, profile etc.) owned by the did are returned */\n  includeAllUserRecords?: boolean\n  limit?: number\n  /** If true, only events with comments are returned */\n  hasComment?: boolean\n  /** If specified, only events with comments containing the keyword are returned */\n  comment?: string\n  /** If specified, only events where all of these labels were added are returned */\n  addedLabels?: string[]\n  /** If specified, only events where all of these labels were removed are returned */\n  removedLabels?: string[]\n  /** If specified, only events where all of these tags were added are returned */\n  addedTags?: string[]\n  /** If specified, only events where all of these tags were removed are returned */\n  removedTags?: string[]\n  reportTypes?: string[]\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  events: ToolsOzoneModerationDefs.ModEventView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  subject?: string\n  /** Search subjects by keyword from comments */\n  comment?: string\n  /** Search subjects reported after a given timestamp */\n  reportedAfter?: string\n  /** Search subjects reported before a given timestamp */\n  reportedBefore?: string\n  /** Search subjects reviewed after a given timestamp */\n  reviewedAfter?: string\n  /** Search subjects reviewed before a given timestamp */\n  reviewedBefore?: string\n  /** By default, we don't include muted subjects in the results. Set this to true to include them. */\n  includeMuted?: boolean\n  /** Specify when fetching subjects in a certain state */\n  reviewState?: string\n  ignoreSubjects?: string[]\n  /** Get all subject statuses that were reviewed by a specific moderator */\n  lastReviewedBy?: string\n  sortField?: 'lastReviewedAt' | 'lastReportedAt'\n  sortDirection?: 'asc' | 'desc'\n  /** Get subjects that were taken down */\n  takendown?: boolean\n  /** Get subjects in unresolved appealed status */\n  appealed?: boolean\n  limit?: number\n  tags?: string[]\n  excludeTags?: string[]\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  subjectStatuses: ToolsOzoneModerationDefs.SubjectStatusView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ToolsOzoneModerationDefs from './defs'\n\nexport interface QueryParams {\n  /** DEPRECATED: use 'q' instead */\n  term?: string\n  q?: string\n  limit?: number\n  cursor?: string\n}\n\nexport type InputSchema = undefined\n\nexport interface OutputSchema {\n  cursor?: string\n  repos: ToolsOzoneModerationDefs.RepoView[]\n  [k: string]: unknown\n}\n\nexport interface CallOptions {\n  headers?: Headers\n}\n\nexport interface Response {\n  success: boolean\n  headers: Headers\n  data: OutputSchema\n}\n\nexport function toKnownErr(e: any) {\n  if (e instanceof XRPCError) {\n  }\n  return e\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoServerDefs from '../server/defs'\n\nexport interface StatusAttr {\n  applied: boolean\n  ref?: string\n  [k: string]: unknown\n}\n\nexport function isStatusAttr(v: unknown): v is StatusAttr {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#statusAttr'\n  )\n}\n\nexport function validateStatusAttr(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#statusAttr', v)\n}\n\nexport interface AccountView {\n  did: string\n  handle: string\n  email?: string\n  relatedRecords?: {}[]\n  indexedAt: string\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invites?: ComAtprotoServerDefs.InviteCode[]\n  invitesDisabled?: boolean\n  emailConfirmedAt?: string\n  inviteNote?: string\n  [k: string]: unknown\n}\n\nexport function isAccountView(v: unknown): v is AccountView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#accountView'\n  )\n}\n\nexport function validateAccountView(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#accountView', v)\n}\n\nexport interface RepoRef {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isRepoRef(v: unknown): v is RepoRef {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoRef'\n  )\n}\n\nexport function validateRepoRef(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoRef', v)\n}\n\nexport interface RepoBlobRef {\n  did: string\n  cid: string\n  recordUri?: string\n  [k: string]: unknown\n}\n\nexport function isRepoBlobRef(v: unknown): v is RepoBlobRef {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.admin.defs#repoBlobRef'\n  )\n}\n\nexport function validateRepoBlobRef(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.admin.defs#repoBlobRef', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\n/** Metadata tag on an atproto resource (eg, repo or record). */\nexport interface Label {\n  /** The AT Protocol version of the label object. */\n  ver?: number\n  /** DID of the actor who created this label. */\n  src: string\n  /** AT URI of the record, repository (account), or other resource that this label applies to. */\n  uri: string\n  /** Optionally, CID specifying the specific version of 'uri' resource this label applies to. */\n  cid?: string\n  /** The short string name of the value or type of this label. */\n  val: string\n  /** If true, this is a negation label, overwriting a previous label. */\n  neg?: boolean\n  /** Timestamp when this label was created. */\n  cts: string\n  /** Timestamp at which this label expires (no longer applies). */\n  exp?: string\n  /** Signature of dag-cbor encoded label. */\n  sig?: Uint8Array\n  [k: string]: unknown\n}\n\nexport function isLabel(v: unknown): v is Label {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#label'\n  )\n}\n\nexport function validateLabel(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#label', v)\n}\n\n/** Metadata tags on an atproto record, published by the author within the record. */\nexport interface SelfLabels {\n  values: SelfLabel[]\n  [k: string]: unknown\n}\n\nexport function isSelfLabels(v: unknown): v is SelfLabels {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#selfLabels'\n  )\n}\n\nexport function validateSelfLabels(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#selfLabels', v)\n}\n\n/** Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel. */\nexport interface SelfLabel {\n  /** The short string name of the value or type of this label. */\n  val: string\n  [k: string]: unknown\n}\n\nexport function isSelfLabel(v: unknown): v is SelfLabel {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#selfLabel'\n  )\n}\n\nexport function validateSelfLabel(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#selfLabel', v)\n}\n\n/** Declares a label value and its expected interpertations and behaviors. */\nexport interface LabelValueDefinition {\n  /** The value of the label being defined. Must only include lowercase ascii and the '-' character ([a-z-]+). */\n  identifier: string\n  /** How should a client visually convey this label? 'inform' means neutral and informational; 'alert' means negative and warning; 'none' means show nothing. */\n  severity: 'inform' | 'alert' | 'none' | (string & {})\n  /** What should this label hide in the UI, if applied? 'content' hides all of the target; 'media' hides the images/video/audio; 'none' hides nothing. */\n  blurs: 'content' | 'media' | 'none' | (string & {})\n  /** The default setting for this label. */\n  defaultSetting: 'ignore' | 'warn' | 'hide' | (string & {})\n  /** Does the user need to have adult content enabled in order to configure this label? */\n  adultOnly?: boolean\n  locales: LabelValueDefinitionStrings[]\n  [k: string]: unknown\n}\n\nexport function isLabelValueDefinition(v: unknown): v is LabelValueDefinition {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#labelValueDefinition'\n  )\n}\n\nexport function validateLabelValueDefinition(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.defs#labelValueDefinition', v)\n}\n\n/** Strings which describe the label in the UI, localized into a specific language. */\nexport interface LabelValueDefinitionStrings {\n  /** The code of the language these strings are written in. */\n  lang: string\n  /** A short human-readable name for the label. */\n  name: string\n  /** A longer description of what the label means and why it might be applied. */\n  description: string\n  [k: string]: unknown\n}\n\nexport function isLabelValueDefinitionStrings(\n  v: unknown,\n): v is LabelValueDefinitionStrings {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.defs#labelValueDefinitionStrings'\n  )\n}\n\nexport function validateLabelValueDefinitionStrings(\n  v: unknown,\n): ValidationResult {\n  return lexicons.validate(\n    'com.atproto.label.defs#labelValueDefinitionStrings',\n    v,\n  )\n}\n\nexport type LabelValue =\n  | '!hide'\n  | '!no-promote'\n  | '!warn'\n  | '!no-unauthenticated'\n  | 'dmca-violation'\n  | 'doxxing'\n  | 'porn'\n  | 'sexual'\n  | 'nudity'\n  | 'nsfl'\n  | 'gore'\n  | (string & {})\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from './defs'\n\nexport interface Labels {\n  seq: number\n  labels: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isLabels(v: unknown): v is Labels {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.subscribeLabels#labels'\n  )\n}\n\nexport function validateLabels(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.subscribeLabels#labels', v)\n}\n\nexport interface Info {\n  name: 'OutdatedCursor' | (string & {})\n  message?: string\n  [k: string]: unknown\n}\n\nexport function isInfo(v: unknown): v is Info {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.label.subscribeLabels#info'\n  )\n}\n\nexport function validateInfo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.label.subscribeLabels#info', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport type ReasonType =\n  | 'com.atproto.moderation.defs#reasonSpam'\n  | 'com.atproto.moderation.defs#reasonViolation'\n  | 'com.atproto.moderation.defs#reasonMisleading'\n  | 'com.atproto.moderation.defs#reasonSexual'\n  | 'com.atproto.moderation.defs#reasonRude'\n  | 'com.atproto.moderation.defs#reasonOther'\n  | 'com.atproto.moderation.defs#reasonAppeal'\n  | (string & {})\n\n/** Spam: frequent unwanted promotion, replies, mentions */\nexport const REASONSPAM = 'com.atproto.moderation.defs#reasonSpam'\n/** Direct violation of server rules, laws, terms of service */\nexport const REASONVIOLATION = 'com.atproto.moderation.defs#reasonViolation'\n/** Misleading identity, affiliation, or content */\nexport const REASONMISLEADING = 'com.atproto.moderation.defs#reasonMisleading'\n/** Unwanted or mislabeled sexual content */\nexport const REASONSEXUAL = 'com.atproto.moderation.defs#reasonSexual'\n/** Rude, harassing, explicit, or otherwise unwelcoming behavior */\nexport const REASONRUDE = 'com.atproto.moderation.defs#reasonRude'\n/** Other: reports not falling under another report category */\nexport const REASONOTHER = 'com.atproto.moderation.defs#reasonOther'\n/** Appeal: appeal a previously taken moderation action */\nexport const REASONAPPEAL = 'com.atproto.moderation.defs#reasonAppeal'\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Main {\n  uri: string\n  cid: string\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'com.atproto.repo.strongRef#main' ||\n      v.$type === 'com.atproto.repo.strongRef')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.repo.strongRef#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface InviteCode {\n  code: string\n  available: number\n  disabled: boolean\n  forAccount: string\n  createdBy: string\n  createdAt: string\n  uses: InviteCodeUse[]\n  [k: string]: unknown\n}\n\nexport function isInviteCode(v: unknown): v is InviteCode {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.defs#inviteCode'\n  )\n}\n\nexport function validateInviteCode(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.defs#inviteCode', v)\n}\n\nexport interface InviteCodeUse {\n  usedBy: string\n  usedAt: string\n  [k: string]: unknown\n}\n\nexport function isInviteCodeUse(v: unknown): v is InviteCodeUse {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.server.defs#inviteCodeUse'\n  )\n}\n\nexport function validateInviteCodeUse(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.server.defs#inviteCodeUse', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { Headers, XRPCError } from '@atproto/xrpc'\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\n/** Represents an update of repository state. Note that empty commits are allowed, which include no repo data changes, but an update to rev and signature. */\nexport interface Commit {\n  /** The stream sequence number of this message. */\n  seq: number\n  /** DEPRECATED -- unused */\n  rebase: boolean\n  /** Indicates that this commit contained too many ops, or data size was too large. Consumers will need to make a separate request to get missing data. */\n  tooBig: boolean\n  /** The repo this event comes from. */\n  repo: string\n  /** Repo commit object CID. */\n  commit: CID\n  /** DEPRECATED -- unused. WARNING -- nullable and optional; stick with optional to ensure golang interoperability. */\n  prev?: CID | null\n  /** The rev of the emitted commit. Note that this information is also in the commit object included in blocks, unless this is a tooBig event. */\n  rev: string\n  /** The rev of the last emitted commit from this repo (if any). */\n  since: string | null\n  /** CAR file containing relevant blocks, as a diff since the previous repo state. */\n  blocks: Uint8Array\n  ops: RepoOp[]\n  blobs: CID[]\n  /** Timestamp of when this message was originally broadcast. */\n  time: string\n  [k: string]: unknown\n}\n\nexport function isCommit(v: unknown): v is Commit {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#commit'\n  )\n}\n\nexport function validateCommit(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#commit', v)\n}\n\n/** Represents a change to an account's identity. Could be an updated handle, signing key, or pds hosting endpoint. Serves as a prod to all downstream services to refresh their identity cache. */\nexport interface Identity {\n  seq: number\n  did: string\n  time: string\n  [k: string]: unknown\n}\n\nexport function isIdentity(v: unknown): v is Identity {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#identity'\n  )\n}\n\nexport function validateIdentity(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#identity', v)\n}\n\n/** Represents an update of the account's handle, or transition to/from invalid state. NOTE: Will be deprecated in favor of #identity. */\nexport interface Handle {\n  seq: number\n  did: string\n  handle: string\n  time: string\n  [k: string]: unknown\n}\n\nexport function isHandle(v: unknown): v is Handle {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#handle'\n  )\n}\n\nexport function validateHandle(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#handle', v)\n}\n\n/** Represents an account moving from one PDS instance to another. NOTE: not implemented; account migration uses #identity instead */\nexport interface Migrate {\n  seq: number\n  did: string\n  migrateTo: string | null\n  time: string\n  [k: string]: unknown\n}\n\nexport function isMigrate(v: unknown): v is Migrate {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#migrate'\n  )\n}\n\nexport function validateMigrate(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#migrate', v)\n}\n\n/** Indicates that an account has been deleted. NOTE: may be deprecated in favor of #identity or a future #account event */\nexport interface Tombstone {\n  seq: number\n  did: string\n  time: string\n  [k: string]: unknown\n}\n\nexport function isTombstone(v: unknown): v is Tombstone {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#tombstone'\n  )\n}\n\nexport function validateTombstone(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#tombstone', v)\n}\n\nexport interface Info {\n  name: 'OutdatedCursor' | (string & {})\n  message?: string\n  [k: string]: unknown\n}\n\nexport function isInfo(v: unknown): v is Info {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#info'\n  )\n}\n\nexport function validateInfo(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#info', v)\n}\n\n/** A repo operation, ie a mutation of a single record. */\nexport interface RepoOp {\n  action: 'create' | 'update' | 'delete' | (string & {})\n  path: string\n  /** For creates and updates, the new record CID. For deletions, null. */\n  cid: CID | null\n  [k: string]: unknown\n}\n\nexport function isRepoOp(v: unknown): v is RepoOp {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'com.atproto.sync.subscribeRepos#repoOp'\n  )\n}\n\nexport function validateRepoOp(v: unknown): ValidationResult {\n  return lexicons.validate('com.atproto.sync.subscribeRepos#repoOp', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyGraphDefs from '../graph/defs'\n\nexport interface ProfileViewBasic {\n  did: string\n  handle: string\n  displayName?: string\n  avatar?: string\n  associated?: ProfileAssociated\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isProfileViewBasic(v: unknown): v is ProfileViewBasic {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileViewBasic'\n  )\n}\n\nexport function validateProfileViewBasic(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileViewBasic', v)\n}\n\nexport interface ProfileView {\n  did: string\n  handle: string\n  displayName?: string\n  description?: string\n  avatar?: string\n  associated?: ProfileAssociated\n  indexedAt?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isProfileView(v: unknown): v is ProfileView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileView'\n  )\n}\n\nexport function validateProfileView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileView', v)\n}\n\nexport interface ProfileViewDetailed {\n  did: string\n  handle: string\n  displayName?: string\n  description?: string\n  avatar?: string\n  banner?: string\n  followersCount?: number\n  followsCount?: number\n  postsCount?: number\n  associated?: ProfileAssociated\n  indexedAt?: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isProfileViewDetailed(v: unknown): v is ProfileViewDetailed {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileViewDetailed'\n  )\n}\n\nexport function validateProfileViewDetailed(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileViewDetailed', v)\n}\n\nexport interface ProfileAssociated {\n  lists?: number\n  feedgens?: number\n  labeler?: boolean\n  [k: string]: unknown\n}\n\nexport function isProfileAssociated(v: unknown): v is ProfileAssociated {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#profileAssociated'\n  )\n}\n\nexport function validateProfileAssociated(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#profileAssociated', v)\n}\n\n/** Metadata about the requesting account's relationship with the subject account. Only has meaningful content for authed requests. */\nexport interface ViewerState {\n  muted?: boolean\n  mutedByList?: AppBskyGraphDefs.ListViewBasic\n  blockedBy?: boolean\n  blocking?: string\n  blockingByList?: AppBskyGraphDefs.ListViewBasic\n  following?: string\n  followedBy?: string\n  [k: string]: unknown\n}\n\nexport function isViewerState(v: unknown): v is ViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#viewerState'\n  )\n}\n\nexport function validateViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#viewerState', v)\n}\n\nexport type Preferences = (\n  | AdultContentPref\n  | ContentLabelPref\n  | SavedFeedsPref\n  | PersonalDetailsPref\n  | FeedViewPref\n  | ThreadViewPref\n  | InterestsPref\n  | MutedWordsPref\n  | HiddenPostsPref\n  | { $type: string; [k: string]: unknown }\n)[]\n\nexport interface AdultContentPref {\n  enabled: boolean\n  [k: string]: unknown\n}\n\nexport function isAdultContentPref(v: unknown): v is AdultContentPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#adultContentPref'\n  )\n}\n\nexport function validateAdultContentPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#adultContentPref', v)\n}\n\nexport interface ContentLabelPref {\n  /** Which labeler does this preference apply to? If undefined, applies globally. */\n  labelerDid?: string\n  label: string\n  visibility: 'ignore' | 'show' | 'warn' | 'hide' | (string & {})\n  [k: string]: unknown\n}\n\nexport function isContentLabelPref(v: unknown): v is ContentLabelPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#contentLabelPref'\n  )\n}\n\nexport function validateContentLabelPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#contentLabelPref', v)\n}\n\nexport interface SavedFeedsPref {\n  pinned: string[]\n  saved: string[]\n  timelineIndex?: number\n  [k: string]: unknown\n}\n\nexport function isSavedFeedsPref(v: unknown): v is SavedFeedsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#savedFeedsPref'\n  )\n}\n\nexport function validateSavedFeedsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#savedFeedsPref', v)\n}\n\nexport interface PersonalDetailsPref {\n  /** The birth date of account owner. */\n  birthDate?: string\n  [k: string]: unknown\n}\n\nexport function isPersonalDetailsPref(v: unknown): v is PersonalDetailsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#personalDetailsPref'\n  )\n}\n\nexport function validatePersonalDetailsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#personalDetailsPref', v)\n}\n\nexport interface FeedViewPref {\n  /** The URI of the feed, or an identifier which describes the feed. */\n  feed: string\n  /** Hide replies in the feed. */\n  hideReplies?: boolean\n  /** Hide replies in the feed if they are not by followed users. */\n  hideRepliesByUnfollowed: boolean\n  /** Hide replies in the feed if they do not have this number of likes. */\n  hideRepliesByLikeCount?: number\n  /** Hide reposts in the feed. */\n  hideReposts?: boolean\n  /** Hide quote posts in the feed. */\n  hideQuotePosts?: boolean\n  [k: string]: unknown\n}\n\nexport function isFeedViewPref(v: unknown): v is FeedViewPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#feedViewPref'\n  )\n}\n\nexport function validateFeedViewPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#feedViewPref', v)\n}\n\nexport interface ThreadViewPref {\n  /** Sorting mode for threads. */\n  sort?: 'oldest' | 'newest' | 'most-likes' | 'random' | (string & {})\n  /** Show followed users at the top of all replies. */\n  prioritizeFollowedUsers?: boolean\n  [k: string]: unknown\n}\n\nexport function isThreadViewPref(v: unknown): v is ThreadViewPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#threadViewPref'\n  )\n}\n\nexport function validateThreadViewPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#threadViewPref', v)\n}\n\nexport interface InterestsPref {\n  /** A list of tags which describe the account owner's interests gathered during onboarding. */\n  tags: string[]\n  [k: string]: unknown\n}\n\nexport function isInterestsPref(v: unknown): v is InterestsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#interestsPref'\n  )\n}\n\nexport function validateInterestsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#interestsPref', v)\n}\n\nexport type MutedWordTarget = 'content' | 'tag' | (string & {})\n\n/** A word that the account owner has muted. */\nexport interface MutedWord {\n  /** The muted word itself. */\n  value: string\n  /** The intended targets of the muted word. */\n  targets: MutedWordTarget[]\n  [k: string]: unknown\n}\n\nexport function isMutedWord(v: unknown): v is MutedWord {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#mutedWord'\n  )\n}\n\nexport function validateMutedWord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#mutedWord', v)\n}\n\nexport interface MutedWordsPref {\n  /** A list of words the account owner has muted. */\n  items: MutedWord[]\n  [k: string]: unknown\n}\n\nexport function isMutedWordsPref(v: unknown): v is MutedWordsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#mutedWordsPref'\n  )\n}\n\nexport function validateMutedWordsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#mutedWordsPref', v)\n}\n\nexport interface HiddenPostsPref {\n  /** A list of URIs of posts the account owner has hidden. */\n  items: string[]\n  [k: string]: unknown\n}\n\nexport function isHiddenPostsPref(v: unknown): v is HiddenPostsPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#hiddenPostsPref'\n  )\n}\n\nexport function validateHiddenPostsPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#hiddenPostsPref', v)\n}\n\nexport interface LabelersPref {\n  labelers: LabelerPrefItem[]\n  [k: string]: unknown\n}\n\nexport function isLabelersPref(v: unknown): v is LabelersPref {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#labelersPref'\n  )\n}\n\nexport function validateLabelersPref(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#labelersPref', v)\n}\n\nexport interface LabelerPrefItem {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isLabelerPrefItem(v: unknown): v is LabelerPrefItem {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.actor.defs#labelerPrefItem'\n  )\n}\n\nexport function validateLabelerPrefItem(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.defs#labelerPrefItem', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  displayName?: string\n  /** Free-form profile description text. */\n  description?: string\n  /** Small image to be displayed next to posts from account. AKA, 'profile picture' */\n  avatar?: BlobRef\n  /** Larger horizontal image to display behind profile view. */\n  banner?: BlobRef\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.actor.profile#main' ||\n      v.$type === 'app.bsky.actor.profile')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.actor.profile#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\n/** A representation of some externally linked content (eg, a URL and 'card'), embedded in a Bluesky record (eg, a post). */\nexport interface Main {\n  external: External\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.external#main' ||\n      v.$type === 'app.bsky.embed.external')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#main', v)\n}\n\nexport interface External {\n  uri: string\n  title: string\n  description: string\n  thumb?: BlobRef\n  [k: string]: unknown\n}\n\nexport function isExternal(v: unknown): v is External {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#external'\n  )\n}\n\nexport function validateExternal(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#external', v)\n}\n\nexport interface View {\n  external: ViewExternal\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#view', v)\n}\n\nexport interface ViewExternal {\n  uri: string\n  title: string\n  description: string\n  thumb?: string\n  [k: string]: unknown\n}\n\nexport function isViewExternal(v: unknown): v is ViewExternal {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.external#viewExternal'\n  )\n}\n\nexport function validateViewExternal(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.external#viewExternal', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Main {\n  images: Image[]\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.images#main' ||\n      v.$type === 'app.bsky.embed.images')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#main', v)\n}\n\nexport interface Image {\n  image: BlobRef\n  /** Alt text description of the image, for accessibility. */\n  alt: string\n  aspectRatio?: AspectRatio\n  [k: string]: unknown\n}\n\nexport function isImage(v: unknown): v is Image {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.images#image'\n  )\n}\n\nexport function validateImage(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#image', v)\n}\n\n/** width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit. */\nexport interface AspectRatio {\n  width: number\n  height: number\n  [k: string]: unknown\n}\n\nexport function isAspectRatio(v: unknown): v is AspectRatio {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.images#aspectRatio'\n  )\n}\n\nexport function validateAspectRatio(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#aspectRatio', v)\n}\n\nexport interface View {\n  images: ViewImage[]\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.images#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#view', v)\n}\n\nexport interface ViewImage {\n  /** Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View. */\n  thumb: string\n  /** Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View. */\n  fullsize: string\n  /** Alt text description of the image, for accessibility. */\n  alt: string\n  aspectRatio?: AspectRatio\n  [k: string]: unknown\n}\n\nexport function isViewImage(v: unknown): v is ViewImage {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.images#viewImage'\n  )\n}\n\nexport function validateViewImage(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.images#viewImage', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\nimport * as AppBskyFeedDefs from '../feed/defs'\nimport * as AppBskyGraphDefs from '../graph/defs'\nimport * as AppBskyLabelerDefs from '../labeler/defs'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyEmbedImages from './images'\nimport * as AppBskyEmbedExternal from './external'\nimport * as AppBskyEmbedRecordWithMedia from './recordWithMedia'\n\nexport interface Main {\n  record: ComAtprotoRepoStrongRef.Main\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.record#main' ||\n      v.$type === 'app.bsky.embed.record')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#main', v)\n}\n\nexport interface View {\n  record:\n    | ViewRecord\n    | ViewNotFound\n    | ViewBlocked\n    | AppBskyFeedDefs.GeneratorView\n    | AppBskyGraphDefs.ListView\n    | AppBskyLabelerDefs.LabelerView\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.embed.record#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#view', v)\n}\n\nexport interface ViewRecord {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileViewBasic\n  /** The record data itself. */\n  value: {}\n  labels?: ComAtprotoLabelDefs.Label[]\n  embeds?: (\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedExternal.View\n    | View\n    | AppBskyEmbedRecordWithMedia.View\n    | { $type: string; [k: string]: unknown }\n  )[]\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isViewRecord(v: unknown): v is ViewRecord {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewRecord'\n  )\n}\n\nexport function validateViewRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewRecord', v)\n}\n\nexport interface ViewNotFound {\n  uri: string\n  notFound: true\n  [k: string]: unknown\n}\n\nexport function isViewNotFound(v: unknown): v is ViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewNotFound'\n  )\n}\n\nexport function validateViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewNotFound', v)\n}\n\nexport interface ViewBlocked {\n  uri: string\n  blocked: true\n  author: AppBskyFeedDefs.BlockedAuthor\n  [k: string]: unknown\n}\n\nexport function isViewBlocked(v: unknown): v is ViewBlocked {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.record#viewBlocked'\n  )\n}\n\nexport function validateViewBlocked(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.record#viewBlocked', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyEmbedRecord from './record'\nimport * as AppBskyEmbedImages from './images'\nimport * as AppBskyEmbedExternal from './external'\n\nexport interface Main {\n  record: AppBskyEmbedRecord.Main\n  media:\n    | AppBskyEmbedImages.Main\n    | AppBskyEmbedExternal.Main\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.embed.recordWithMedia#main' ||\n      v.$type === 'app.bsky.embed.recordWithMedia')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.recordWithMedia#main', v)\n}\n\nexport interface View {\n  record: AppBskyEmbedRecord.View\n  media:\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedExternal.View\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isView(v: unknown): v is View {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.embed.recordWithMedia#view'\n  )\n}\n\nexport function validateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.embed.recordWithMedia#view', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as AppBskyEmbedImages from '../embed/images'\nimport * as AppBskyEmbedExternal from '../embed/external'\nimport * as AppBskyEmbedRecord from '../embed/record'\nimport * as AppBskyEmbedRecordWithMedia from '../embed/recordWithMedia'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as AppBskyGraphDefs from '../graph/defs'\n\nexport interface PostView {\n  uri: string\n  cid: string\n  author: AppBskyActorDefs.ProfileViewBasic\n  record: {}\n  embed?:\n    | AppBskyEmbedImages.View\n    | AppBskyEmbedExternal.View\n    | AppBskyEmbedRecord.View\n    | AppBskyEmbedRecordWithMedia.View\n    | { $type: string; [k: string]: unknown }\n  replyCount?: number\n  repostCount?: number\n  likeCount?: number\n  indexedAt: string\n  viewer?: ViewerState\n  labels?: ComAtprotoLabelDefs.Label[]\n  threadgate?: ThreadgateView\n  [k: string]: unknown\n}\n\nexport function isPostView(v: unknown): v is PostView {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.defs#postView'\n  )\n}\n\nexport function validatePostView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#postView', v)\n}\n\n/** Metadata about the requesting account's relationship with the subject content. Only has meaningful content for authed requests. */\nexport interface ViewerState {\n  repost?: string\n  like?: string\n  replyDisabled?: boolean\n  [k: string]: unknown\n}\n\nexport function isViewerState(v: unknown): v is ViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#viewerState'\n  )\n}\n\nexport function validateViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#viewerState', v)\n}\n\nexport interface FeedViewPost {\n  post: PostView\n  reply?: ReplyRef\n  reason?: ReasonRepost | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isFeedViewPost(v: unknown): v is FeedViewPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#feedViewPost'\n  )\n}\n\nexport function validateFeedViewPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#feedViewPost', v)\n}\n\nexport interface ReplyRef {\n  root:\n    | PostView\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  parent:\n    | PostView\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isReplyRef(v: unknown): v is ReplyRef {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.defs#replyRef'\n  )\n}\n\nexport function validateReplyRef(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#replyRef', v)\n}\n\nexport interface ReasonRepost {\n  by: AppBskyActorDefs.ProfileViewBasic\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isReasonRepost(v: unknown): v is ReasonRepost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#reasonRepost'\n  )\n}\n\nexport function validateReasonRepost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#reasonRepost', v)\n}\n\nexport interface ThreadViewPost {\n  post: PostView\n  parent?:\n    | ThreadViewPost\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  replies?: (\n    | ThreadViewPost\n    | NotFoundPost\n    | BlockedPost\n    | { $type: string; [k: string]: unknown }\n  )[]\n  [k: string]: unknown\n}\n\nexport function isThreadViewPost(v: unknown): v is ThreadViewPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#threadViewPost'\n  )\n}\n\nexport function validateThreadViewPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#threadViewPost', v)\n}\n\nexport interface NotFoundPost {\n  uri: string\n  notFound: true\n  [k: string]: unknown\n}\n\nexport function isNotFoundPost(v: unknown): v is NotFoundPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#notFoundPost'\n  )\n}\n\nexport function validateNotFoundPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#notFoundPost', v)\n}\n\nexport interface BlockedPost {\n  uri: string\n  blocked: true\n  author: BlockedAuthor\n  [k: string]: unknown\n}\n\nexport function isBlockedPost(v: unknown): v is BlockedPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#blockedPost'\n  )\n}\n\nexport function validateBlockedPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#blockedPost', v)\n}\n\nexport interface BlockedAuthor {\n  did: string\n  viewer?: AppBskyActorDefs.ViewerState\n  [k: string]: unknown\n}\n\nexport function isBlockedAuthor(v: unknown): v is BlockedAuthor {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#blockedAuthor'\n  )\n}\n\nexport function validateBlockedAuthor(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#blockedAuthor', v)\n}\n\nexport interface GeneratorView {\n  uri: string\n  cid: string\n  did: string\n  creator: AppBskyActorDefs.ProfileView\n  displayName: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: string\n  likeCount?: number\n  labels?: ComAtprotoLabelDefs.Label[]\n  viewer?: GeneratorViewerState\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isGeneratorView(v: unknown): v is GeneratorView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#generatorView'\n  )\n}\n\nexport function validateGeneratorView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#generatorView', v)\n}\n\nexport interface GeneratorViewerState {\n  like?: string\n  [k: string]: unknown\n}\n\nexport function isGeneratorViewerState(v: unknown): v is GeneratorViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#generatorViewerState'\n  )\n}\n\nexport function validateGeneratorViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#generatorViewerState', v)\n}\n\nexport interface SkeletonFeedPost {\n  post: string\n  reason?: SkeletonReasonRepost | { $type: string; [k: string]: unknown }\n  [k: string]: unknown\n}\n\nexport function isSkeletonFeedPost(v: unknown): v is SkeletonFeedPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#skeletonFeedPost'\n  )\n}\n\nexport function validateSkeletonFeedPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#skeletonFeedPost', v)\n}\n\nexport interface SkeletonReasonRepost {\n  repost: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonReasonRepost(v: unknown): v is SkeletonReasonRepost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#skeletonReasonRepost'\n  )\n}\n\nexport function validateSkeletonReasonRepost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#skeletonReasonRepost', v)\n}\n\nexport interface ThreadgateView {\n  uri?: string\n  cid?: string\n  record?: {}\n  lists?: AppBskyGraphDefs.ListViewBasic[]\n  [k: string]: unknown\n}\n\nexport function isThreadgateView(v: unknown): v is ThreadgateView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.defs#threadgateView'\n  )\n}\n\nexport function validateThreadgateView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.defs#threadgateView', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  did: string\n  displayName: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: BlobRef\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.generator#main' ||\n      v.$type === 'app.bsky.feed.generator')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.generator#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  subject: ComAtprotoRepoStrongRef.Main\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.like#main' || v.$type === 'app.bsky.feed.like')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.like#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as AppBskyEmbedImages from '../embed/images'\nimport * as AppBskyEmbedExternal from '../embed/external'\nimport * as AppBskyEmbedRecord from '../embed/record'\nimport * as AppBskyEmbedRecordWithMedia from '../embed/recordWithMedia'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  /** The primary post content. May be an empty string, if there are embeds. */\n  text: string\n  /** DEPRECATED: replaced by app.bsky.richtext.facet. */\n  entities?: Entity[]\n  /** Annotations of text (mentions, URLs, hashtags, etc) */\n  facets?: AppBskyRichtextFacet.Main[]\n  reply?: ReplyRef\n  embed?:\n    | AppBskyEmbedImages.Main\n    | AppBskyEmbedExternal.Main\n    | AppBskyEmbedRecord.Main\n    | AppBskyEmbedRecordWithMedia.Main\n    | { $type: string; [k: string]: unknown }\n  /** Indicates human language of post primary text content. */\n  langs?: string[]\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  /** Additional hashtags, in addition to any included in post text and facets. */\n  tags?: string[]\n  /** Client-declared timestamp when this post was originally created. */\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.post#main' || v.$type === 'app.bsky.feed.post')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#main', v)\n}\n\nexport interface ReplyRef {\n  root: ComAtprotoRepoStrongRef.Main\n  parent: ComAtprotoRepoStrongRef.Main\n  [k: string]: unknown\n}\n\nexport function isReplyRef(v: unknown): v is ReplyRef {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.post#replyRef'\n  )\n}\n\nexport function validateReplyRef(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#replyRef', v)\n}\n\n/** Deprecated: use facets instead. */\nexport interface Entity {\n  index: TextSlice\n  /** Expected values are 'mention' and 'link'. */\n  type: string\n  value: string\n  [k: string]: unknown\n}\n\nexport function isEntity(v: unknown): v is Entity {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.feed.post#entity'\n  )\n}\n\nexport function validateEntity(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#entity', v)\n}\n\n/** Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings. */\nexport interface TextSlice {\n  start: number\n  end: number\n  [k: string]: unknown\n}\n\nexport function isTextSlice(v: unknown): v is TextSlice {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.post#textSlice'\n  )\n}\n\nexport function validateTextSlice(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.post#textSlice', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\n\nexport interface Record {\n  subject: ComAtprotoRepoStrongRef.Main\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.repost#main' ||\n      v.$type === 'app.bsky.feed.repost')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.repost#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  /** Reference (AT-URI) to the post record. */\n  post: string\n  allow?: (\n    | MentionRule\n    | FollowingRule\n    | ListRule\n    | { $type: string; [k: string]: unknown }\n  )[]\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.feed.threadgate#main' ||\n      v.$type === 'app.bsky.feed.threadgate')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#main', v)\n}\n\n/** Allow replies from actors mentioned in your post. */\nexport interface MentionRule {\n  [k: string]: unknown\n}\n\nexport function isMentionRule(v: unknown): v is MentionRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#mentionRule'\n  )\n}\n\nexport function validateMentionRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#mentionRule', v)\n}\n\n/** Allow replies from actors you follow. */\nexport interface FollowingRule {\n  [k: string]: unknown\n}\n\nexport function isFollowingRule(v: unknown): v is FollowingRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#followingRule'\n  )\n}\n\nexport function validateFollowingRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#followingRule', v)\n}\n\n/** Allow replies from actors on a list. */\nexport interface ListRule {\n  list: string\n  [k: string]: unknown\n}\n\nexport function isListRule(v: unknown): v is ListRule {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.feed.threadgate#listRule'\n  )\n}\n\nexport function validateListRule(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.feed.threadgate#listRule', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  /** DID of the account to be blocked. */\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.block#main' ||\n      v.$type === 'app.bsky.graph.block')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.block#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\n\nexport interface ListViewBasic {\n  uri: string\n  cid: string\n  name: string\n  purpose: ListPurpose\n  avatar?: string\n  labels?: ComAtprotoLabelDefs.Label[]\n  viewer?: ListViewerState\n  indexedAt?: string\n  [k: string]: unknown\n}\n\nexport function isListViewBasic(v: unknown): v is ListViewBasic {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listViewBasic'\n  )\n}\n\nexport function validateListViewBasic(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listViewBasic', v)\n}\n\nexport interface ListView {\n  uri: string\n  cid: string\n  creator: AppBskyActorDefs.ProfileView\n  name: string\n  purpose: ListPurpose\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: string\n  labels?: ComAtprotoLabelDefs.Label[]\n  viewer?: ListViewerState\n  indexedAt: string\n  [k: string]: unknown\n}\n\nexport function isListView(v: unknown): v is ListView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listView'\n  )\n}\n\nexport function validateListView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listView', v)\n}\n\nexport interface ListItemView {\n  uri: string\n  subject: AppBskyActorDefs.ProfileView\n  [k: string]: unknown\n}\n\nexport function isListItemView(v: unknown): v is ListItemView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listItemView'\n  )\n}\n\nexport function validateListItemView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listItemView', v)\n}\n\nexport type ListPurpose =\n  | 'app.bsky.graph.defs#modlist'\n  | 'app.bsky.graph.defs#curatelist'\n  | (string & {})\n\n/** A list of actors to apply an aggregate moderation action (mute/block) on. */\nexport const MODLIST = 'app.bsky.graph.defs#modlist'\n/** A list of actors used for curation purposes such as list feeds or interaction gating. */\nexport const CURATELIST = 'app.bsky.graph.defs#curatelist'\n\nexport interface ListViewerState {\n  muted?: boolean\n  blocked?: string\n  [k: string]: unknown\n}\n\nexport function isListViewerState(v: unknown): v is ListViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#listViewerState'\n  )\n}\n\nexport function validateListViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#listViewerState', v)\n}\n\n/** indicates that a handle or DID could not be resolved */\nexport interface NotFoundActor {\n  actor: string\n  notFound: true\n  [k: string]: unknown\n}\n\nexport function isNotFoundActor(v: unknown): v is NotFoundActor {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#notFoundActor'\n  )\n}\n\nexport function validateNotFoundActor(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#notFoundActor', v)\n}\n\n/** lists the bi-directional graph relationships between one actor (not indicated in the object), and the target actors (the DID included in the object) */\nexport interface Relationship {\n  did: string\n  /** if the actor follows this DID, this is the AT-URI of the follow record */\n  following?: string\n  /** if the actor is followed by this DID, contains the AT-URI of the follow record */\n  followedBy?: string\n  [k: string]: unknown\n}\n\nexport function isRelationship(v: unknown): v is Relationship {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.graph.defs#relationship'\n  )\n}\n\nexport function validateRelationship(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.defs#relationship', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.follow#main' ||\n      v.$type === 'app.bsky.graph.follow')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.follow#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyGraphDefs from './defs'\nimport * as AppBskyRichtextFacet from '../richtext/facet'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  purpose: AppBskyGraphDefs.ListPurpose\n  /** Display name for list; can not be empty. */\n  name: string\n  description?: string\n  descriptionFacets?: AppBskyRichtextFacet.Main[]\n  avatar?: BlobRef\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.list#main' ||\n      v.$type === 'app.bsky.graph.list')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.list#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  /** Reference (AT-URI) to the mod list record. */\n  subject: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.listblock#main' ||\n      v.$type === 'app.bsky.graph.listblock')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.listblock#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface Record {\n  /** The account which is included on the list. */\n  subject: string\n  /** Reference (AT-URI) to the list record (app.bsky.graph.list). */\n  list: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.graph.listitem#main' ||\n      v.$type === 'app.bsky.graph.listitem')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.graph.listitem#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyActorDefs from '../actor/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface LabelerView {\n  uri: string\n  cid: string\n  creator: AppBskyActorDefs.ProfileView\n  likeCount?: number\n  viewer?: LabelerViewerState\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isLabelerView(v: unknown): v is LabelerView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.labeler.defs#labelerView'\n  )\n}\n\nexport function validateLabelerView(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.labeler.defs#labelerView', v)\n}\n\nexport interface LabelerViewDetailed {\n  uri: string\n  cid: string\n  creator: AppBskyActorDefs.ProfileView\n  policies: LabelerPolicies\n  likeCount?: number\n  viewer?: LabelerViewerState\n  indexedAt: string\n  labels?: ComAtprotoLabelDefs.Label[]\n  [k: string]: unknown\n}\n\nexport function isLabelerViewDetailed(v: unknown): v is LabelerViewDetailed {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.labeler.defs#labelerViewDetailed'\n  )\n}\n\nexport function validateLabelerViewDetailed(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.labeler.defs#labelerViewDetailed', v)\n}\n\nexport interface LabelerViewerState {\n  like?: string\n  [k: string]: unknown\n}\n\nexport function isLabelerViewerState(v: unknown): v is LabelerViewerState {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.labeler.defs#labelerViewerState'\n  )\n}\n\nexport function validateLabelerViewerState(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.labeler.defs#labelerViewerState', v)\n}\n\nexport interface LabelerPolicies {\n  /** The label values which this labeler publishes. May include global or custom labels. */\n  labelValues: ComAtprotoLabelDefs.LabelValue[]\n  /** Label values created by this labeler and scoped exclusively to it. Labels defined here will override global label definitions for this labeler. */\n  labelValueDefinitions?: ComAtprotoLabelDefs.LabelValueDefinition[]\n  [k: string]: unknown\n}\n\nexport function isLabelerPolicies(v: unknown): v is LabelerPolicies {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.labeler.defs#labelerPolicies'\n  )\n}\n\nexport function validateLabelerPolicies(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.labeler.defs#labelerPolicies', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as AppBskyLabelerDefs from './defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface Record {\n  policies: AppBskyLabelerDefs.LabelerPolicies\n  labels?:\n    | ComAtprotoLabelDefs.SelfLabels\n    | { $type: string; [k: string]: unknown }\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isRecord(v: unknown): v is Record {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.labeler.service#main' ||\n      v.$type === 'app.bsky.labeler.service')\n  )\n}\n\nexport function validateRecord(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.labeler.service#main', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\n/** Annotation of a sub-string within rich text. */\nexport interface Main {\n  index: ByteSlice\n  features: (Mention | Link | Tag | { $type: string; [k: string]: unknown })[]\n  [k: string]: unknown\n}\n\nexport function isMain(v: unknown): v is Main {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    (v.$type === 'app.bsky.richtext.facet#main' ||\n      v.$type === 'app.bsky.richtext.facet')\n  )\n}\n\nexport function validateMain(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#main', v)\n}\n\n/** Facet feature for mention of another account. The text is usually a handle, including a '@' prefix, but the facet reference is a DID. */\nexport interface Mention {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isMention(v: unknown): v is Mention {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#mention'\n  )\n}\n\nexport function validateMention(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#mention', v)\n}\n\n/** Facet feature for a URL. The text URL may have been simplified or truncated, but the facet reference should be a complete URL. */\nexport interface Link {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isLink(v: unknown): v is Link {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#link'\n  )\n}\n\nexport function validateLink(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#link', v)\n}\n\n/** Facet feature for a hashtag. The text usually includes a '#' prefix, but the facet reference should not (except in the case of 'double hash tags'). */\nexport interface Tag {\n  tag: string\n  [k: string]: unknown\n}\n\nexport function isTag(v: unknown): v is Tag {\n  return (\n    isObj(v) && hasProp(v, '$type') && v.$type === 'app.bsky.richtext.facet#tag'\n  )\n}\n\nexport function validateTag(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#tag', v)\n}\n\n/** Specifies the sub-string range a facet feature applies to. Start index is inclusive, end index is exclusive. Indices are zero-indexed, counting bytes of the UTF-8 encoded text. NOTE: some languages, like Javascript, use UTF-16 or Unicode codepoints for string slice indexing; in these languages, convert to byte arrays before working with facets. */\nexport interface ByteSlice {\n  byteStart: number\n  byteEnd: number\n  [k: string]: unknown\n}\n\nexport function isByteSlice(v: unknown): v is ByteSlice {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.richtext.facet#byteSlice'\n  )\n}\n\nexport function validateByteSlice(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.richtext.facet#byteSlice', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface SkeletonSearchPost {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonSearchPost(v: unknown): v is SkeletonSearchPost {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.defs#skeletonSearchPost'\n  )\n}\n\nexport function validateSkeletonSearchPost(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.unspecced.defs#skeletonSearchPost', v)\n}\n\nexport interface SkeletonSearchActor {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isSkeletonSearchActor(v: unknown): v is SkeletonSearchActor {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'app.bsky.unspecced.defs#skeletonSearchActor'\n  )\n}\n\nexport function validateSkeletonSearchActor(v: unknown): ValidationResult {\n  return lexicons.validate('app.bsky.unspecced.defs#skeletonSearchActor', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\n\nexport interface TemplateView {\n  id: string\n  /** Name of the template. */\n  name: string\n  /** Content of the template, can contain markdown and variable placeholders. */\n  subject?: string\n  /** Subject of the message, used in emails. */\n  contentMarkdown: string\n  disabled: boolean\n  /** DID of the user who last updated the template. */\n  lastUpdatedBy: string\n  createdAt: string\n  updatedAt: string\n  [k: string]: unknown\n}\n\nexport function isTemplateView(v: unknown): v is TemplateView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.communication.defs#templateView'\n  )\n}\n\nexport function validateTemplateView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.communication.defs#templateView', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport { ValidationResult, BlobRef } from '@atproto/lexicon'\nimport { isObj, hasProp } from '../../../../util'\nimport { lexicons } from '../../../../lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from '../../../com/atproto/admin/defs'\nimport * as ComAtprotoRepoStrongRef from '../../../com/atproto/repo/strongRef'\nimport * as ComAtprotoModerationDefs from '../../../com/atproto/moderation/defs'\nimport * as ComAtprotoServerDefs from '../../../com/atproto/server/defs'\nimport * as ComAtprotoLabelDefs from '../../../com/atproto/label/defs'\n\nexport interface ModEventView {\n  id: number\n  event:\n    | ModEventTakedown\n    | ModEventReverseTakedown\n    | ModEventComment\n    | ModEventReport\n    | ModEventLabel\n    | ModEventAcknowledge\n    | ModEventEscalate\n    | ModEventMute\n    | ModEventEmail\n    | ModEventResolveAppeal\n    | ModEventDivert\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids: string[]\n  createdBy: string\n  createdAt: string\n  creatorHandle?: string\n  subjectHandle?: string\n  [k: string]: unknown\n}\n\nexport function isModEventView(v: unknown): v is ModEventView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventView'\n  )\n}\n\nexport function validateModEventView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventView', v)\n}\n\nexport interface ModEventViewDetail {\n  id: number\n  event:\n    | ModEventTakedown\n    | ModEventReverseTakedown\n    | ModEventComment\n    | ModEventReport\n    | ModEventLabel\n    | ModEventAcknowledge\n    | ModEventEscalate\n    | ModEventMute\n    | ModEventEmail\n    | ModEventResolveAppeal\n    | ModEventDivert\n    | { $type: string; [k: string]: unknown }\n  subject:\n    | RepoView\n    | RepoViewNotFound\n    | RecordView\n    | RecordViewNotFound\n    | { $type: string; [k: string]: unknown }\n  subjectBlobs: BlobView[]\n  createdBy: string\n  createdAt: string\n  [k: string]: unknown\n}\n\nexport function isModEventViewDetail(v: unknown): v is ModEventViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventViewDetail'\n  )\n}\n\nexport function validateModEventViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventViewDetail', v)\n}\n\nexport interface SubjectStatusView {\n  id: number\n  subject:\n    | ComAtprotoAdminDefs.RepoRef\n    | ComAtprotoRepoStrongRef.Main\n    | { $type: string; [k: string]: unknown }\n  subjectBlobCids?: string[]\n  subjectRepoHandle?: string\n  /** Timestamp referencing when the last update was made to the moderation status of the subject */\n  updatedAt: string\n  /** Timestamp referencing the first moderation status impacting event was emitted on the subject */\n  createdAt: string\n  reviewState: SubjectReviewState\n  /** Sticky comment on the subject. */\n  comment?: string\n  muteUntil?: string\n  lastReviewedBy?: string\n  lastReviewedAt?: string\n  lastReportedAt?: string\n  /** Timestamp referencing when the author of the subject appealed a moderation action */\n  lastAppealedAt?: string\n  takendown?: boolean\n  /** True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators. */\n  appealed?: boolean\n  suspendUntil?: string\n  tags?: string[]\n  [k: string]: unknown\n}\n\nexport function isSubjectStatusView(v: unknown): v is SubjectStatusView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#subjectStatusView'\n  )\n}\n\nexport function validateSubjectStatusView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#subjectStatusView', v)\n}\n\nexport type SubjectReviewState =\n  | 'lex:tools.ozone.moderation.defs#reviewOpen'\n  | 'lex:tools.ozone.moderation.defs#reviewEscalated'\n  | 'lex:tools.ozone.moderation.defs#reviewClosed'\n  | 'lex:tools.ozone.moderation.defs#reviewNone'\n  | (string & {})\n\n/** Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator */\nexport const REVIEWOPEN = 'tools.ozone.moderation.defs#reviewOpen'\n/** Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator */\nexport const REVIEWESCALATED = 'tools.ozone.moderation.defs#reviewEscalated'\n/** Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator */\nexport const REVIEWCLOSED = 'tools.ozone.moderation.defs#reviewClosed'\n/** Moderator review status of a subject: Unnecessary. Indicates that the subject does not need a review at the moment but there is probably some moderation related metadata available for it */\nexport const REVIEWNONE = 'tools.ozone.moderation.defs#reviewNone'\n\n/** Take down a subject permanently or temporarily */\nexport interface ModEventTakedown {\n  comment?: string\n  /** Indicates how long the takedown should be in effect before automatically expiring. */\n  durationInHours?: number\n  [k: string]: unknown\n}\n\nexport function isModEventTakedown(v: unknown): v is ModEventTakedown {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventTakedown'\n  )\n}\n\nexport function validateModEventTakedown(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventTakedown', v)\n}\n\n/** Revert take down action on a subject */\nexport interface ModEventReverseTakedown {\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventReverseTakedown(\n  v: unknown,\n): v is ModEventReverseTakedown {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventReverseTakedown'\n  )\n}\n\nexport function validateModEventReverseTakedown(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'tools.ozone.moderation.defs#modEventReverseTakedown',\n    v,\n  )\n}\n\n/** Resolve appeal on a subject */\nexport interface ModEventResolveAppeal {\n  /** Describe resolution. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventResolveAppeal(\n  v: unknown,\n): v is ModEventResolveAppeal {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventResolveAppeal'\n  )\n}\n\nexport function validateModEventResolveAppeal(v: unknown): ValidationResult {\n  return lexicons.validate(\n    'tools.ozone.moderation.defs#modEventResolveAppeal',\n    v,\n  )\n}\n\n/** Add a comment to a subject */\nexport interface ModEventComment {\n  comment: string\n  /** Make the comment persistent on the subject */\n  sticky?: boolean\n  [k: string]: unknown\n}\n\nexport function isModEventComment(v: unknown): v is ModEventComment {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventComment'\n  )\n}\n\nexport function validateModEventComment(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventComment', v)\n}\n\n/** Report a subject */\nexport interface ModEventReport {\n  comment?: string\n  reportType: ComAtprotoModerationDefs.ReasonType\n  [k: string]: unknown\n}\n\nexport function isModEventReport(v: unknown): v is ModEventReport {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventReport'\n  )\n}\n\nexport function validateModEventReport(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventReport', v)\n}\n\n/** Apply/Negate labels on a subject */\nexport interface ModEventLabel {\n  comment?: string\n  createLabelVals: string[]\n  negateLabelVals: string[]\n  [k: string]: unknown\n}\n\nexport function isModEventLabel(v: unknown): v is ModEventLabel {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventLabel'\n  )\n}\n\nexport function validateModEventLabel(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventLabel', v)\n}\n\nexport interface ModEventAcknowledge {\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventAcknowledge(v: unknown): v is ModEventAcknowledge {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventAcknowledge'\n  )\n}\n\nexport function validateModEventAcknowledge(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventAcknowledge', v)\n}\n\nexport interface ModEventEscalate {\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventEscalate(v: unknown): v is ModEventEscalate {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventEscalate'\n  )\n}\n\nexport function validateModEventEscalate(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventEscalate', v)\n}\n\n/** Mute incoming reports on a subject */\nexport interface ModEventMute {\n  comment?: string\n  /** Indicates how long the subject should remain muted. */\n  durationInHours: number\n  [k: string]: unknown\n}\n\nexport function isModEventMute(v: unknown): v is ModEventMute {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventMute'\n  )\n}\n\nexport function validateModEventMute(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventMute', v)\n}\n\n/** Unmute action on a subject */\nexport interface ModEventUnmute {\n  /** Describe reasoning behind the reversal. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventUnmute(v: unknown): v is ModEventUnmute {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventUnmute'\n  )\n}\n\nexport function validateModEventUnmute(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventUnmute', v)\n}\n\n/** Keep a log of outgoing email to a user */\nexport interface ModEventEmail {\n  /** The subject line of the email sent to the user. */\n  subjectLine: string\n  /** The content of the email sent to the user. */\n  content?: string\n  /** Additional comment about the outgoing comm. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventEmail(v: unknown): v is ModEventEmail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventEmail'\n  )\n}\n\nexport function validateModEventEmail(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventEmail', v)\n}\n\n/** Divert a record's blobs to a 3rd party service for further scanning/tagging */\nexport interface ModEventDivert {\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventDivert(v: unknown): v is ModEventDivert {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventDivert'\n  )\n}\n\nexport function validateModEventDivert(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventDivert', v)\n}\n\n/** Add/Remove a tag on a subject */\nexport interface ModEventTag {\n  /** Tags to be added to the subject. If already exists, won't be duplicated. */\n  add: string[]\n  /** Tags to be removed to the subject. Ignores a tag If it doesn't exist, won't be duplicated. */\n  remove: string[]\n  /** Additional comment about added/removed tags. */\n  comment?: string\n  [k: string]: unknown\n}\n\nexport function isModEventTag(v: unknown): v is ModEventTag {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#modEventTag'\n  )\n}\n\nexport function validateModEventTag(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#modEventTag', v)\n}\n\nexport interface RepoView {\n  did: string\n  handle: string\n  email?: string\n  relatedRecords: {}[]\n  indexedAt: string\n  moderation: Moderation\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invitesDisabled?: boolean\n  inviteNote?: string\n  [k: string]: unknown\n}\n\nexport function isRepoView(v: unknown): v is RepoView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#repoView'\n  )\n}\n\nexport function validateRepoView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#repoView', v)\n}\n\nexport interface RepoViewDetail {\n  did: string\n  handle: string\n  email?: string\n  relatedRecords: {}[]\n  indexedAt: string\n  moderation: ModerationDetail\n  labels?: ComAtprotoLabelDefs.Label[]\n  invitedBy?: ComAtprotoServerDefs.InviteCode\n  invites?: ComAtprotoServerDefs.InviteCode[]\n  invitesDisabled?: boolean\n  inviteNote?: string\n  emailConfirmedAt?: string\n  [k: string]: unknown\n}\n\nexport function isRepoViewDetail(v: unknown): v is RepoViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#repoViewDetail'\n  )\n}\n\nexport function validateRepoViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#repoViewDetail', v)\n}\n\nexport interface RepoViewNotFound {\n  did: string\n  [k: string]: unknown\n}\n\nexport function isRepoViewNotFound(v: unknown): v is RepoViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#repoViewNotFound'\n  )\n}\n\nexport function validateRepoViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#repoViewNotFound', v)\n}\n\nexport interface RecordView {\n  uri: string\n  cid: string\n  value: {}\n  blobCids: string[]\n  indexedAt: string\n  moderation: Moderation\n  repo: RepoView\n  [k: string]: unknown\n}\n\nexport function isRecordView(v: unknown): v is RecordView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#recordView'\n  )\n}\n\nexport function validateRecordView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#recordView', v)\n}\n\nexport interface RecordViewDetail {\n  uri: string\n  cid: string\n  value: {}\n  blobs: BlobView[]\n  labels?: ComAtprotoLabelDefs.Label[]\n  indexedAt: string\n  moderation: ModerationDetail\n  repo: RepoView\n  [k: string]: unknown\n}\n\nexport function isRecordViewDetail(v: unknown): v is RecordViewDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#recordViewDetail'\n  )\n}\n\nexport function validateRecordViewDetail(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#recordViewDetail', v)\n}\n\nexport interface RecordViewNotFound {\n  uri: string\n  [k: string]: unknown\n}\n\nexport function isRecordViewNotFound(v: unknown): v is RecordViewNotFound {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#recordViewNotFound'\n  )\n}\n\nexport function validateRecordViewNotFound(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#recordViewNotFound', v)\n}\n\nexport interface Moderation {\n  subjectStatus?: SubjectStatusView\n  [k: string]: unknown\n}\n\nexport function isModeration(v: unknown): v is Moderation {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#moderation'\n  )\n}\n\nexport function validateModeration(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#moderation', v)\n}\n\nexport interface ModerationDetail {\n  subjectStatus?: SubjectStatusView\n  [k: string]: unknown\n}\n\nexport function isModerationDetail(v: unknown): v is ModerationDetail {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#moderationDetail'\n  )\n}\n\nexport function validateModerationDetail(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#moderationDetail', v)\n}\n\nexport interface BlobView {\n  cid: string\n  mimeType: string\n  size: number\n  createdAt: string\n  details?:\n    | ImageDetails\n    | VideoDetails\n    | { $type: string; [k: string]: unknown }\n  moderation?: Moderation\n  [k: string]: unknown\n}\n\nexport function isBlobView(v: unknown): v is BlobView {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#blobView'\n  )\n}\n\nexport function validateBlobView(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#blobView', v)\n}\n\nexport interface ImageDetails {\n  width: number\n  height: number\n  [k: string]: unknown\n}\n\nexport function isImageDetails(v: unknown): v is ImageDetails {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#imageDetails'\n  )\n}\n\nexport function validateImageDetails(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#imageDetails', v)\n}\n\nexport interface VideoDetails {\n  width: number\n  height: number\n  length: number\n  [k: string]: unknown\n}\n\nexport function isVideoDetails(v: unknown): v is VideoDetails {\n  return (\n    isObj(v) &&\n    hasProp(v, '$type') &&\n    v.$type === 'tools.ozone.moderation.defs#videoDetails'\n  )\n}\n\nexport function validateVideoDetails(v: unknown): ValidationResult {\n  return lexicons.validate('tools.ozone.moderation.defs#videoDetails', v)\n}\n", "/**\n * GENERATED CODE - DO NOT MODIFY\n */\nimport {\n  Client as XrpcClient,\n  ServiceClient as XrpcServiceClient,\n} from '@atproto/xrpc'\nimport { schemas } from './lexicons'\nimport { CID } from 'multiformats/cid'\nimport * as ComAtprotoAdminDefs from './types/com/atproto/admin/defs'\nimport * as ComAtprotoAdminDeleteAccount from './types/com/atproto/admin/deleteAccount'\nimport * as ComAtprotoAdminDisableAccountInvites from './types/com/atproto/admin/disableAccountInvites'\nimport * as ComAtprotoAdminDisableInviteCodes from './types/com/atproto/admin/disableInviteCodes'\nimport * as ComAtprotoAdminEnableAccountInvites from './types/com/atproto/admin/enableAccountInvites'\nimport * as ComAtprotoAdminGetAccountInfo from './types/com/atproto/admin/getAccountInfo'\nimport * as ComAtprotoAdminGetAccountInfos from './types/com/atproto/admin/getAccountInfos'\nimport * as ComAtprotoAdminGetInviteCodes from './types/com/atproto/admin/getInviteCodes'\nimport * as ComAtprotoAdminGetSubjectStatus from './types/com/atproto/admin/getSubjectStatus'\nimport * as ComAtprotoAdminSendEmail from './types/com/atproto/admin/sendEmail'\nimport * as ComAtprotoAdminUpdateAccountEmail from './types/com/atproto/admin/updateAccountEmail'\nimport * as ComAtprotoAdminUpdateAccountHandle from './types/com/atproto/admin/updateAccountHandle'\nimport * as ComAtprotoAdminUpdateAccountPassword from './types/com/atproto/admin/updateAccountPassword'\nimport * as ComAtprotoAdminUpdateSubjectStatus from './types/com/atproto/admin/updateSubjectStatus'\nimport * as ComAtprotoIdentityGetRecommendedDidCredentials from './types/com/atproto/identity/getRecommendedDidCredentials'\nimport * as ComAtprotoIdentityRequestPlcOperationSignature from './types/com/atproto/identity/requestPlcOperationSignature'\nimport * as ComAtprotoIdentityResolveHandle from './types/com/atproto/identity/resolveHandle'\nimport * as ComAtprotoIdentitySignPlcOperation from './types/com/atproto/identity/signPlcOperation'\nimport * as ComAtprotoIdentitySubmitPlcOperation from './types/com/atproto/identity/submitPlcOperation'\nimport * as ComAtprotoIdentityUpdateHandle from './types/com/atproto/identity/updateHandle'\nimport * as ComAtprotoLabelDefs from './types/com/atproto/label/defs'\nimport * as ComAtprotoLabelQueryLabels from './types/com/atproto/label/queryLabels'\nimport * as ComAtprotoLabelSubscribeLabels from './types/com/atproto/label/subscribeLabels'\nimport * as ComAtprotoModerationCreateReport from './types/com/atproto/moderation/createReport'\nimport * as ComAtprotoModerationDefs from './types/com/atproto/moderation/defs'\nimport * as ComAtprotoRepoApplyWrites from './types/com/atproto/repo/applyWrites'\nimport * as ComAtprotoRepoCreateRecord from './types/com/atproto/repo/createRecord'\nimport * as ComAtprotoRepoDeleteRecord from './types/com/atproto/repo/deleteRecord'\nimport * as ComAtprotoRepoDescribeRepo from './types/com/atproto/repo/describeRepo'\nimport * as ComAtprotoRepoGetRecord from './types/com/atproto/repo/getRecord'\nimport * as ComAtprotoRepoImportRepo from './types/com/atproto/repo/importRepo'\nimport * as ComAtprotoRepoListMissingBlobs from './types/com/atproto/repo/listMissingBlobs'\nimport * as ComAtprotoRepoListRecords from './types/com/atproto/repo/listRecords'\nimport * as ComAtprotoRepoPutRecord from './types/com/atproto/repo/putRecord'\nimport * as ComAtprotoRepoStrongRef from './types/com/atproto/repo/strongRef'\nimport * as ComAtprotoRepoUploadBlob from './types/com/atproto/repo/uploadBlob'\nimport * as ComAtprotoServerActivateAccount from './types/com/atproto/server/activateAccount'\nimport * as ComAtprotoServerCheckAccountStatus from './types/com/atproto/server/checkAccountStatus'\nimport * as ComAtprotoServerConfirmEmail from './types/com/atproto/server/confirmEmail'\nimport * as ComAtprotoServerCreateAccount from './types/com/atproto/server/createAccount'\nimport * as ComAtprotoServerCreateAppPassword from './types/com/atproto/server/createAppPassword'\nimport * as ComAtprotoServerCreateInviteCode from './types/com/atproto/server/createInviteCode'\nimport * as ComAtprotoServerCreateInviteCodes from './types/com/atproto/server/createInviteCodes'\nimport * as ComAtprotoServerCreateSession from './types/com/atproto/server/createSession'\nimport * as ComAtprotoServerDeactivateAccount from './types/com/atproto/server/deactivateAccount'\nimport * as ComAtprotoServerDefs from './types/com/atproto/server/defs'\nimport * as ComAtprotoServerDeleteAccount from './types/com/atproto/server/deleteAccount'\nimport * as ComAtprotoServerDeleteSession from './types/com/atproto/server/deleteSession'\nimport * as ComAtprotoServerDescribeServer from './types/com/atproto/server/describeServer'\nimport * as ComAtprotoServerGetAccountInviteCodes from './types/com/atproto/server/getAccountInviteCodes'\nimport * as ComAtprotoServerGetServiceAuth from './types/com/atproto/server/getServiceAuth'\nimport * as ComAtprotoServerGetSession from './types/com/atproto/server/getSession'\nimport * as ComAtprotoServerListAppPasswords from './types/com/atproto/server/listAppPasswords'\nimport * as ComAtprotoServerRefreshSession from './types/com/atproto/server/refreshSession'\nimport * as ComAtprotoServerRequestAccountDelete from './types/com/atproto/server/requestAccountDelete'\nimport * as ComAtprotoServerRequestEmailConfirmation from './types/com/atproto/server/requestEmailConfirmation'\nimport * as ComAtprotoServerRequestEmailUpdate from './types/com/atproto/server/requestEmailUpdate'\nimport * as ComAtprotoServerRequestPasswordReset from './types/com/atproto/server/requestPasswordReset'\nimport * as ComAtprotoServerReserveSigningKey from './types/com/atproto/server/reserveSigningKey'\nimport * as ComAtprotoServerResetPassword from './types/com/atproto/server/resetPassword'\nimport * as ComAtprotoServerRevokeAppPassword from './types/com/atproto/server/revokeAppPassword'\nimport * as ComAtprotoServerUpdateEmail from './types/com/atproto/server/updateEmail'\nimport * as ComAtprotoSyncGetBlob from './types/com/atproto/sync/getBlob'\nimport * as ComAtprotoSyncGetBlocks from './types/com/atproto/sync/getBlocks'\nimport * as ComAtprotoSyncGetCheckout from './types/com/atproto/sync/getCheckout'\nimport * as ComAtprotoSyncGetHead from './types/com/atproto/sync/getHead'\nimport * as ComAtprotoSyncGetLatestCommit from './types/com/atproto/sync/getLatestCommit'\nimport * as ComAtprotoSyncGetRecord from './types/com/atproto/sync/getRecord'\nimport * as ComAtprotoSyncGetRepo from './types/com/atproto/sync/getRepo'\nimport * as ComAtprotoSyncListBlobs from './types/com/atproto/sync/listBlobs'\nimport * as ComAtprotoSyncListRepos from './types/com/atproto/sync/listRepos'\nimport * as ComAtprotoSyncNotifyOfUpdate from './types/com/atproto/sync/notifyOfUpdate'\nimport * as ComAtprotoSyncRequestCrawl from './types/com/atproto/sync/requestCrawl'\nimport * as ComAtprotoSyncSubscribeRepos from './types/com/atproto/sync/subscribeRepos'\nimport * as ComAtprotoTempCheckSignupQueue from './types/com/atproto/temp/checkSignupQueue'\nimport * as ComAtprotoTempFetchLabels from './types/com/atproto/temp/fetchLabels'\nimport * as ComAtprotoTempRequestPhoneVerification from './types/com/atproto/temp/requestPhoneVerification'\nimport * as AppBskyActorDefs from './types/app/bsky/actor/defs'\nimport * as AppBskyActorGetPreferences from './types/app/bsky/actor/getPreferences'\nimport * as AppBskyActorGetProfile from './types/app/bsky/actor/getProfile'\nimport * as AppBskyActorGetProfiles from './types/app/bsky/actor/getProfiles'\nimport * as AppBskyActorGetSuggestions from './types/app/bsky/actor/getSuggestions'\nimport * as AppBskyActorProfile from './types/app/bsky/actor/profile'\nimport * as AppBskyActorPutPreferences from './types/app/bsky/actor/putPreferences'\nimport * as AppBskyActorSearchActors from './types/app/bsky/actor/searchActors'\nimport * as AppBskyActorSearchActorsTypeahead from './types/app/bsky/actor/searchActorsTypeahead'\nimport * as AppBskyEmbedExternal from './types/app/bsky/embed/external'\nimport * as AppBskyEmbedImages from './types/app/bsky/embed/images'\nimport * as AppBskyEmbedRecord from './types/app/bsky/embed/record'\nimport * as AppBskyEmbedRecordWithMedia from './types/app/bsky/embed/recordWithMedia'\nimport * as AppBskyFeedDefs from './types/app/bsky/feed/defs'\nimport * as AppBskyFeedDescribeFeedGenerator from './types/app/bsky/feed/describeFeedGenerator'\nimport * as AppBskyFeedGenerator from './types/app/bsky/feed/generator'\nimport * as AppBskyFeedGetActorFeeds from './types/app/bsky/feed/getActorFeeds'\nimport * as AppBskyFeedGetActorLikes from './types/app/bsky/feed/getActorLikes'\nimport * as AppBskyFeedGetAuthorFeed from './types/app/bsky/feed/getAuthorFeed'\nimport * as AppBskyFeedGetFeed from './types/app/bsky/feed/getFeed'\nimport * as AppBskyFeedGetFeedGenerator from './types/app/bsky/feed/getFeedGenerator'\nimport * as AppBskyFeedGetFeedGenerators from './types/app/bsky/feed/getFeedGenerators'\nimport * as AppBskyFeedGetFeedSkeleton from './types/app/bsky/feed/getFeedSkeleton'\nimport * as AppBskyFeedGetLikes from './types/app/bsky/feed/getLikes'\nimport * as AppBskyFeedGetListFeed from './types/app/bsky/feed/getListFeed'\nimport * as AppBskyFeedGetPostThread from './types/app/bsky/feed/getPostThread'\nimport * as AppBskyFeedGetPosts from './types/app/bsky/feed/getPosts'\nimport * as AppBskyFeedGetRepostedBy from './types/app/bsky/feed/getRepostedBy'\nimport * as AppBskyFeedGetSuggestedFeeds from './types/app/bsky/feed/getSuggestedFeeds'\nimport * as AppBskyFeedGetTimeline from './types/app/bsky/feed/getTimeline'\nimport * as AppBskyFeedLike from './types/app/bsky/feed/like'\nimport * as AppBskyFeedPost from './types/app/bsky/feed/post'\nimport * as AppBskyFeedRepost from './types/app/bsky/feed/repost'\nimport * as AppBskyFeedSearchPosts from './types/app/bsky/feed/searchPosts'\nimport * as AppBskyFeedThreadgate from './types/app/bsky/feed/threadgate'\nimport * as AppBskyGraphBlock from './types/app/bsky/graph/block'\nimport * as AppBskyGraphDefs from './types/app/bsky/graph/defs'\nimport * as AppBskyGraphFollow from './types/app/bsky/graph/follow'\nimport * as AppBskyGraphGetBlocks from './types/app/bsky/graph/getBlocks'\nimport * as AppBskyGraphGetFollowers from './types/app/bsky/graph/getFollowers'\nimport * as AppBskyGraphGetFollows from './types/app/bsky/graph/getFollows'\nimport * as AppBskyGraphGetList from './types/app/bsky/graph/getList'\nimport * as AppBskyGraphGetListBlocks from './types/app/bsky/graph/getListBlocks'\nimport * as AppBskyGraphGetListMutes from './types/app/bsky/graph/getListMutes'\nimport * as AppBskyGraphGetLists from './types/app/bsky/graph/getLists'\nimport * as AppBskyGraphGetMutes from './types/app/bsky/graph/getMutes'\nimport * as AppBskyGraphGetRelationships from './types/app/bsky/graph/getRelationships'\nimport * as AppBskyGraphGetSuggestedFollowsByActor from './types/app/bsky/graph/getSuggestedFollowsByActor'\nimport * as AppBskyGraphList from './types/app/bsky/graph/list'\nimport * as AppBskyGraphListblock from './types/app/bsky/graph/listblock'\nimport * as AppBskyGraphListitem from './types/app/bsky/graph/listitem'\nimport * as AppBskyGraphMuteActor from './types/app/bsky/graph/muteActor'\nimport * as AppBskyGraphMuteActorList from './types/app/bsky/graph/muteActorList'\nimport * as AppBskyGraphUnmuteActor from './types/app/bsky/graph/unmuteActor'\nimport * as AppBskyGraphUnmuteActorList from './types/app/bsky/graph/unmuteActorList'\nimport * as AppBskyLabelerDefs from './types/app/bsky/labeler/defs'\nimport * as AppBskyLabelerGetServices from './types/app/bsky/labeler/getServices'\nimport * as AppBskyLabelerService from './types/app/bsky/labeler/service'\nimport * as AppBskyNotificationGetUnreadCount from './types/app/bsky/notification/getUnreadCount'\nimport * as AppBskyNotificationListNotifications from './types/app/bsky/notification/listNotifications'\nimport * as AppBskyNotificationRegisterPush from './types/app/bsky/notification/registerPush'\nimport * as AppBskyNotificationUpdateSeen from './types/app/bsky/notification/updateSeen'\nimport * as AppBskyRichtextFacet from './types/app/bsky/richtext/facet'\nimport * as AppBskyUnspeccedDefs from './types/app/bsky/unspecced/defs'\nimport * as AppBskyUnspeccedGetPopularFeedGenerators from './types/app/bsky/unspecced/getPopularFeedGenerators'\nimport * as AppBskyUnspeccedGetTaggedSuggestions from './types/app/bsky/unspecced/getTaggedSuggestions'\nimport * as AppBskyUnspeccedSearchActorsSkeleton from './types/app/bsky/unspecced/searchActorsSkeleton'\nimport * as AppBskyUnspeccedSearchPostsSkeleton from './types/app/bsky/unspecced/searchPostsSkeleton'\nimport * as ToolsOzoneCommunicationCreateTemplate from './types/tools/ozone/communication/createTemplate'\nimport * as ToolsOzoneCommunicationDefs from './types/tools/ozone/communication/defs'\nimport * as ToolsOzoneCommunicationDeleteTemplate from './types/tools/ozone/communication/deleteTemplate'\nimport * as ToolsOzoneCommunicationListTemplates from './types/tools/ozone/communication/listTemplates'\nimport * as ToolsOzoneCommunicationUpdateTemplate from './types/tools/ozone/communication/updateTemplate'\nimport * as ToolsOzoneModerationDefs from './types/tools/ozone/moderation/defs'\nimport * as ToolsOzoneModerationEmitEvent from './types/tools/ozone/moderation/emitEvent'\nimport * as ToolsOzoneModerationGetEvent from './types/tools/ozone/moderation/getEvent'\nimport * as ToolsOzoneModerationGetRecord from './types/tools/ozone/moderation/getRecord'\nimport * as ToolsOzoneModerationGetRepo from './types/tools/ozone/moderation/getRepo'\nimport * as ToolsOzoneModerationQueryEvents from './types/tools/ozone/moderation/queryEvents'\nimport * as ToolsOzoneModerationQueryStatuses from './types/tools/ozone/moderation/queryStatuses'\nimport * as ToolsOzoneModerationSearchRepos from './types/tools/ozone/moderation/searchRepos'\n\nexport * as ComAtprotoAdminDefs from './types/com/atproto/admin/defs'\nexport * as ComAtprotoAdminDeleteAccount from './types/com/atproto/admin/deleteAccount'\nexport * as ComAtprotoAdminDisableAccountInvites from './types/com/atproto/admin/disableAccountInvites'\nexport * as ComAtprotoAdminDisableInviteCodes from './types/com/atproto/admin/disableInviteCodes'\nexport * as ComAtprotoAdminEnableAccountInvites from './types/com/atproto/admin/enableAccountInvites'\nexport * as ComAtprotoAdminGetAccountInfo from './types/com/atproto/admin/getAccountInfo'\nexport * as ComAtprotoAdminGetAccountInfos from './types/com/atproto/admin/getAccountInfos'\nexport * as ComAtprotoAdminGetInviteCodes from './types/com/atproto/admin/getInviteCodes'\nexport * as ComAtprotoAdminGetSubjectStatus from './types/com/atproto/admin/getSubjectStatus'\nexport * as ComAtprotoAdminSendEmail from './types/com/atproto/admin/sendEmail'\nexport * as ComAtprotoAdminUpdateAccountEmail from './types/com/atproto/admin/updateAccountEmail'\nexport * as ComAtprotoAdminUpdateAccountHandle from './types/com/atproto/admin/updateAccountHandle'\nexport * as ComAtprotoAdminUpdateAccountPassword from './types/com/atproto/admin/updateAccountPassword'\nexport * as ComAtprotoAdminUpdateSubjectStatus from './types/com/atproto/admin/updateSubjectStatus'\nexport * as ComAtprotoIdentityGetRecommendedDidCredentials from './types/com/atproto/identity/getRecommendedDidCredentials'\nexport * as ComAtprotoIdentityRequestPlcOperationSignature from './types/com/atproto/identity/requestPlcOperationSignature'\nexport * as ComAtprotoIdentityResolveHandle from './types/com/atproto/identity/resolveHandle'\nexport * as ComAtprotoIdentitySignPlcOperation from './types/com/atproto/identity/signPlcOperation'\nexport * as ComAtprotoIdentitySubmitPlcOperation from './types/com/atproto/identity/submitPlcOperation'\nexport * as ComAtprotoIdentityUpdateHandle from './types/com/atproto/identity/updateHandle'\nexport * as ComAtprotoLabelDefs from './types/com/atproto/label/defs'\nexport * as ComAtprotoLabelQueryLabels from './types/com/atproto/label/queryLabels'\nexport * as ComAtprotoLabelSubscribeLabels from './types/com/atproto/label/subscribeLabels'\nexport * as ComAtprotoModerationCreateReport from './types/com/atproto/moderation/createReport'\nexport * as ComAtprotoModerationDefs from './types/com/atproto/moderation/defs'\nexport * as ComAtprotoRepoApplyWrites from './types/com/atproto/repo/applyWrites'\nexport * as ComAtprotoRepoCreateRecord from './types/com/atproto/repo/createRecord'\nexport * as ComAtprotoRepoDeleteRecord from './types/com/atproto/repo/deleteRecord'\nexport * as ComAtprotoRepoDescribeRepo from './types/com/atproto/repo/describeRepo'\nexport * as ComAtprotoRepoGetRecord from './types/com/atproto/repo/getRecord'\nexport * as ComAtprotoRepoImportRepo from './types/com/atproto/repo/importRepo'\nexport * as ComAtprotoRepoListMissingBlobs from './types/com/atproto/repo/listMissingBlobs'\nexport * as ComAtprotoRepoListRecords from './types/com/atproto/repo/listRecords'\nexport * as ComAtprotoRepoPutRecord from './types/com/atproto/repo/putRecord'\nexport * as ComAtprotoRepoStrongRef from './types/com/atproto/repo/strongRef'\nexport * as ComAtprotoRepoUploadBlob from './types/com/atproto/repo/uploadBlob'\nexport * as ComAtprotoServerActivateAccount from './types/com/atproto/server/activateAccount'\nexport * as ComAtprotoServerCheckAccountStatus from './types/com/atproto/server/checkAccountStatus'\nexport * as ComAtprotoServerConfirmEmail from './types/com/atproto/server/confirmEmail'\nexport * as ComAtprotoServerCreateAccount from './types/com/atproto/server/createAccount'\nexport * as ComAtprotoServerCreateAppPassword from './types/com/atproto/server/createAppPassword'\nexport * as ComAtprotoServerCreateInviteCode from './types/com/atproto/server/createInviteCode'\nexport * as ComAtprotoServerCreateInviteCodes from './types/com/atproto/server/createInviteCodes'\nexport * as ComAtprotoServerCreateSession from './types/com/atproto/server/createSession'\nexport * as ComAtprotoServerDeactivateAccount from './types/com/atproto/server/deactivateAccount'\nexport * as ComAtprotoServerDefs from './types/com/atproto/server/defs'\nexport * as ComAtprotoServerDeleteAccount from './types/com/atproto/server/deleteAccount'\nexport * as ComAtprotoServerDeleteSession from './types/com/atproto/server/deleteSession'\nexport * as ComAtprotoServerDescribeServer from './types/com/atproto/server/describeServer'\nexport * as ComAtprotoServerGetAccountInviteCodes from './types/com/atproto/server/getAccountInviteCodes'\nexport * as ComAtprotoServerGetServiceAuth from './types/com/atproto/server/getServiceAuth'\nexport * as ComAtprotoServerGetSession from './types/com/atproto/server/getSession'\nexport * as ComAtprotoServerListAppPasswords from './types/com/atproto/server/listAppPasswords'\nexport * as ComAtprotoServerRefreshSession from './types/com/atproto/server/refreshSession'\nexport * as ComAtprotoServerRequestAccountDelete from './types/com/atproto/server/requestAccountDelete'\nexport * as ComAtprotoServerRequestEmailConfirmation from './types/com/atproto/server/requestEmailConfirmation'\nexport * as ComAtprotoServerRequestEmailUpdate from './types/com/atproto/server/requestEmailUpdate'\nexport * as ComAtprotoServerRequestPasswordReset from './types/com/atproto/server/requestPasswordReset'\nexport * as ComAtprotoServerReserveSigningKey from './types/com/atproto/server/reserveSigningKey'\nexport * as ComAtprotoServerResetPassword from './types/com/atproto/server/resetPassword'\nexport * as ComAtprotoServerRevokeAppPassword from './types/com/atproto/server/revokeAppPassword'\nexport * as ComAtprotoServerUpdateEmail from './types/com/atproto/server/updateEmail'\nexport * as ComAtprotoSyncGetBlob from './types/com/atproto/sync/getBlob'\nexport * as ComAtprotoSyncGetBlocks from './types/com/atproto/sync/getBlocks'\nexport * as ComAtprotoSyncGetCheckout from './types/com/atproto/sync/getCheckout'\nexport * as ComAtprotoSyncGetHead from './types/com/atproto/sync/getHead'\nexport * as ComAtprotoSyncGetLatestCommit from './types/com/atproto/sync/getLatestCommit'\nexport * as ComAtprotoSyncGetRecord from './types/com/atproto/sync/getRecord'\nexport * as ComAtprotoSyncGetRepo from './types/com/atproto/sync/getRepo'\nexport * as ComAtprotoSyncListBlobs from './types/com/atproto/sync/listBlobs'\nexport * as ComAtprotoSyncListRepos from './types/com/atproto/sync/listRepos'\nexport * as ComAtprotoSyncNotifyOfUpdate from './types/com/atproto/sync/notifyOfUpdate'\nexport * as ComAtprotoSyncRequestCrawl from './types/com/atproto/sync/requestCrawl'\nexport * as ComAtprotoSyncSubscribeRepos from './types/com/atproto/sync/subscribeRepos'\nexport * as ComAtprotoTempCheckSignupQueue from './types/com/atproto/temp/checkSignupQueue'\nexport * as ComAtprotoTempFetchLabels from './types/com/atproto/temp/fetchLabels'\nexport * as ComAtprotoTempRequestPhoneVerification from './types/com/atproto/temp/requestPhoneVerification'\nexport * as AppBskyActorDefs from './types/app/bsky/actor/defs'\nexport * as AppBskyActorGetPreferences from './types/app/bsky/actor/getPreferences'\nexport * as AppBskyActorGetProfile from './types/app/bsky/actor/getProfile'\nexport * as AppBskyActorGetProfiles from './types/app/bsky/actor/getProfiles'\nexport * as AppBskyActorGetSuggestions from './types/app/bsky/actor/getSuggestions'\nexport * as AppBskyActorProfile from './types/app/bsky/actor/profile'\nexport * as AppBskyActorPutPreferences from './types/app/bsky/actor/putPreferences'\nexport * as AppBskyActorSearchActors from './types/app/bsky/actor/searchActors'\nexport * as AppBskyActorSearchActorsTypeahead from './types/app/bsky/actor/searchActorsTypeahead'\nexport * as AppBskyEmbedExternal from './types/app/bsky/embed/external'\nexport * as AppBskyEmbedImages from './types/app/bsky/embed/images'\nexport * as AppBskyEmbedRecord from './types/app/bsky/embed/record'\nexport * as AppBskyEmbedRecordWithMedia from './types/app/bsky/embed/recordWithMedia'\nexport * as AppBskyFeedDefs from './types/app/bsky/feed/defs'\nexport * as AppBskyFeedDescribeFeedGenerator from './types/app/bsky/feed/describeFeedGenerator'\nexport * as AppBskyFeedGenerator from './types/app/bsky/feed/generator'\nexport * as AppBskyFeedGetActorFeeds from './types/app/bsky/feed/getActorFeeds'\nexport * as AppBskyFeedGetActorLikes from './types/app/bsky/feed/getActorLikes'\nexport * as AppBskyFeedGetAuthorFeed from './types/app/bsky/feed/getAuthorFeed'\nexport * as AppBskyFeedGetFeed from './types/app/bsky/feed/getFeed'\nexport * as AppBskyFeedGetFeedGenerator from './types/app/bsky/feed/getFeedGenerator'\nexport * as AppBskyFeedGetFeedGenerators from './types/app/bsky/feed/getFeedGenerators'\nexport * as AppBskyFeedGetFeedSkeleton from './types/app/bsky/feed/getFeedSkeleton'\nexport * as AppBskyFeedGetLikes from './types/app/bsky/feed/getLikes'\nexport * as AppBskyFeedGetListFeed from './types/app/bsky/feed/getListFeed'\nexport * as AppBskyFeedGetPostThread from './types/app/bsky/feed/getPostThread'\nexport * as AppBskyFeedGetPosts from './types/app/bsky/feed/getPosts'\nexport * as AppBskyFeedGetRepostedBy from './types/app/bsky/feed/getRepostedBy'\nexport * as AppBskyFeedGetSuggestedFeeds from './types/app/bsky/feed/getSuggestedFeeds'\nexport * as AppBskyFeedGetTimeline from './types/app/bsky/feed/getTimeline'\nexport * as AppBskyFeedLike from './types/app/bsky/feed/like'\nexport * as AppBskyFeedPost from './types/app/bsky/feed/post'\nexport * as AppBskyFeedRepost from './types/app/bsky/feed/repost'\nexport * as AppBskyFeedSearchPosts from './types/app/bsky/feed/searchPosts'\nexport * as AppBskyFeedThreadgate from './types/app/bsky/feed/threadgate'\nexport * as AppBskyGraphBlock from './types/app/bsky/graph/block'\nexport * as AppBskyGraphDefs from './types/app/bsky/graph/defs'\nexport * as AppBskyGraphFollow from './types/app/bsky/graph/follow'\nexport * as AppBskyGraphGetBlocks from './types/app/bsky/graph/getBlocks'\nexport * as AppBskyGraphGetFollowers from './types/app/bsky/graph/getFollowers'\nexport * as AppBskyGraphGetFollows from './types/app/bsky/graph/getFollows'\nexport * as AppBskyGraphGetList from './types/app/bsky/graph/getList'\nexport * as AppBskyGraphGetListBlocks from './types/app/bsky/graph/getListBlocks'\nexport * as AppBskyGraphGetListMutes from './types/app/bsky/graph/getListMutes'\nexport * as AppBskyGraphGetLists from './types/app/bsky/graph/getLists'\nexport * as AppBskyGraphGetMutes from './types/app/bsky/graph/getMutes'\nexport * as AppBskyGraphGetRelationships from './types/app/bsky/graph/getRelationships'\nexport * as AppBskyGraphGetSuggestedFollowsByActor from './types/app/bsky/graph/getSuggestedFollowsByActor'\nexport * as AppBskyGraphList from './types/app/bsky/graph/list'\nexport * as AppBskyGraphListblock from './types/app/bsky/graph/listblock'\nexport * as AppBskyGraphListitem from './types/app/bsky/graph/listitem'\nexport * as AppBskyGraphMuteActor from './types/app/bsky/graph/muteActor'\nexport * as AppBskyGraphMuteActorList from './types/app/bsky/graph/muteActorList'\nexport * as AppBskyGraphUnmuteActor from './types/app/bsky/graph/unmuteActor'\nexport * as AppBskyGraphUnmuteActorList from './types/app/bsky/graph/unmuteActorList'\nexport * as AppBskyLabelerDefs from './types/app/bsky/labeler/defs'\nexport * as AppBskyLabelerGetServices from './types/app/bsky/labeler/getServices'\nexport * as AppBskyLabelerService from './types/app/bsky/labeler/service'\nexport * as AppBskyNotificationGetUnreadCount from './types/app/bsky/notification/getUnreadCount'\nexport * as AppBskyNotificationListNotifications from './types/app/bsky/notification/listNotifications'\nexport * as AppBskyNotificationRegisterPush from './types/app/bsky/notification/registerPush'\nexport * as AppBskyNotificationUpdateSeen from './types/app/bsky/notification/updateSeen'\nexport * as AppBskyRichtextFacet from './types/app/bsky/richtext/facet'\nexport * as AppBskyUnspeccedDefs from './types/app/bsky/unspecced/defs'\nexport * as AppBskyUnspeccedGetPopularFeedGenerators from './types/app/bsky/unspecced/getPopularFeedGenerators'\nexport * as AppBskyUnspeccedGetTaggedSuggestions from './types/app/bsky/unspecced/getTaggedSuggestions'\nexport * as AppBskyUnspeccedSearchActorsSkeleton from './types/app/bsky/unspecced/searchActorsSkeleton'\nexport * as AppBskyUnspeccedSearchPostsSkeleton from './types/app/bsky/unspecced/searchPostsSkeleton'\nexport * as ToolsOzoneCommunicationCreateTemplate from './types/tools/ozone/communication/createTemplate'\nexport * as ToolsOzoneCommunicationDefs from './types/tools/ozone/communication/defs'\nexport * as ToolsOzoneCommunicationDeleteTemplate from './types/tools/ozone/communication/deleteTemplate'\nexport * as ToolsOzoneCommunicationListTemplates from './types/tools/ozone/communication/listTemplates'\nexport * as ToolsOzoneCommunicationUpdateTemplate from './types/tools/ozone/communication/updateTemplate'\nexport * as ToolsOzoneModerationDefs from './types/tools/ozone/moderation/defs'\nexport * as ToolsOzoneModerationEmitEvent from './types/tools/ozone/moderation/emitEvent'\nexport * as ToolsOzoneModerationGetEvent from './types/tools/ozone/moderation/getEvent'\nexport * as ToolsOzoneModerationGetRecord from './types/tools/ozone/moderation/getRecord'\nexport * as ToolsOzoneModerationGetRepo from './types/tools/ozone/moderation/getRepo'\nexport * as ToolsOzoneModerationQueryEvents from './types/tools/ozone/moderation/queryEvents'\nexport * as ToolsOzoneModerationQueryStatuses from './types/tools/ozone/moderation/queryStatuses'\nexport * as ToolsOzoneModerationSearchRepos from './types/tools/ozone/moderation/searchRepos'\n\nexport const COM_ATPROTO_MODERATION = {\n  DefsReasonSpam: 'com.atproto.moderation.defs#reasonSpam',\n  DefsReasonViolation: 'com.atproto.moderation.defs#reasonViolation',\n  DefsReasonMisleading: 'com.atproto.moderation.defs#reasonMisleading',\n  DefsReasonSexual: 'com.atproto.moderation.defs#reasonSexual',\n  DefsReasonRude: 'com.atproto.moderation.defs#reasonRude',\n  DefsReasonOther: 'com.atproto.moderation.defs#reasonOther',\n  DefsReasonAppeal: 'com.atproto.moderation.defs#reasonAppeal',\n}\nexport const APP_BSKY_GRAPH = {\n  DefsModlist: 'app.bsky.graph.defs#modlist',\n  DefsCuratelist: 'app.bsky.graph.defs#curatelist',\n}\nexport const TOOLS_OZONE_MODERATION = {\n  DefsReviewOpen: 'tools.ozone.moderation.defs#reviewOpen',\n  DefsReviewEscalated: 'tools.ozone.moderation.defs#reviewEscalated',\n  DefsReviewClosed: 'tools.ozone.moderation.defs#reviewClosed',\n  DefsReviewNone: 'tools.ozone.moderation.defs#reviewNone',\n}\n\nexport class AtpBaseClient {\n  xrpc: XrpcClient = new XrpcClient()\n\n  constructor() {\n    this.xrpc.addLexicons(schemas)\n  }\n\n  service(serviceUri: string | URL): AtpServiceClient {\n    return new AtpServiceClient(this, this.xrpc.service(serviceUri))\n  }\n}\n\nexport class AtpServiceClient {\n  _baseClient: AtpBaseClient\n  xrpc: XrpcServiceClient\n  com: ComNS\n  app: AppNS\n  tools: ToolsNS\n\n  constructor(baseClient: AtpBaseClient, xrpcService: XrpcServiceClient) {\n    this._baseClient = baseClient\n    this.xrpc = xrpcService\n    this.com = new ComNS(this)\n    this.app = new AppNS(this)\n    this.tools = new ToolsNS(this)\n  }\n\n  setHeader(key: string, value: string): void {\n    this.xrpc.setHeader(key, value)\n  }\n}\n\nexport class ComNS {\n  _service: AtpServiceClient\n  atproto: ComAtprotoNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.atproto = new ComAtprotoNS(service)\n  }\n}\n\nexport class ComAtprotoNS {\n  _service: AtpServiceClient\n  admin: ComAtprotoAdminNS\n  identity: ComAtprotoIdentityNS\n  label: ComAtprotoLabelNS\n  moderation: ComAtprotoModerationNS\n  repo: ComAtprotoRepoNS\n  server: ComAtprotoServerNS\n  sync: ComAtprotoSyncNS\n  temp: ComAtprotoTempNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.admin = new ComAtprotoAdminNS(service)\n    this.identity = new ComAtprotoIdentityNS(service)\n    this.label = new ComAtprotoLabelNS(service)\n    this.moderation = new ComAtprotoModerationNS(service)\n    this.repo = new ComAtprotoRepoNS(service)\n    this.server = new ComAtprotoServerNS(service)\n    this.sync = new ComAtprotoSyncNS(service)\n    this.temp = new ComAtprotoTempNS(service)\n  }\n}\n\nexport class ComAtprotoAdminNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  deleteAccount(\n    data?: ComAtprotoAdminDeleteAccount.InputSchema,\n    opts?: ComAtprotoAdminDeleteAccount.CallOptions,\n  ): Promise<ComAtprotoAdminDeleteAccount.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.deleteAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminDeleteAccount.toKnownErr(e)\n      })\n  }\n\n  disableAccountInvites(\n    data?: ComAtprotoAdminDisableAccountInvites.InputSchema,\n    opts?: ComAtprotoAdminDisableAccountInvites.CallOptions,\n  ): Promise<ComAtprotoAdminDisableAccountInvites.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.disableAccountInvites', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminDisableAccountInvites.toKnownErr(e)\n      })\n  }\n\n  disableInviteCodes(\n    data?: ComAtprotoAdminDisableInviteCodes.InputSchema,\n    opts?: ComAtprotoAdminDisableInviteCodes.CallOptions,\n  ): Promise<ComAtprotoAdminDisableInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.disableInviteCodes', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminDisableInviteCodes.toKnownErr(e)\n      })\n  }\n\n  enableAccountInvites(\n    data?: ComAtprotoAdminEnableAccountInvites.InputSchema,\n    opts?: ComAtprotoAdminEnableAccountInvites.CallOptions,\n  ): Promise<ComAtprotoAdminEnableAccountInvites.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.enableAccountInvites', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminEnableAccountInvites.toKnownErr(e)\n      })\n  }\n\n  getAccountInfo(\n    params?: ComAtprotoAdminGetAccountInfo.QueryParams,\n    opts?: ComAtprotoAdminGetAccountInfo.CallOptions,\n  ): Promise<ComAtprotoAdminGetAccountInfo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getAccountInfo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetAccountInfo.toKnownErr(e)\n      })\n  }\n\n  getAccountInfos(\n    params?: ComAtprotoAdminGetAccountInfos.QueryParams,\n    opts?: ComAtprotoAdminGetAccountInfos.CallOptions,\n  ): Promise<ComAtprotoAdminGetAccountInfos.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getAccountInfos', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetAccountInfos.toKnownErr(e)\n      })\n  }\n\n  getInviteCodes(\n    params?: ComAtprotoAdminGetInviteCodes.QueryParams,\n    opts?: ComAtprotoAdminGetInviteCodes.CallOptions,\n  ): Promise<ComAtprotoAdminGetInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getInviteCodes', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetInviteCodes.toKnownErr(e)\n      })\n  }\n\n  getSubjectStatus(\n    params?: ComAtprotoAdminGetSubjectStatus.QueryParams,\n    opts?: ComAtprotoAdminGetSubjectStatus.CallOptions,\n  ): Promise<ComAtprotoAdminGetSubjectStatus.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.getSubjectStatus', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminGetSubjectStatus.toKnownErr(e)\n      })\n  }\n\n  sendEmail(\n    data?: ComAtprotoAdminSendEmail.InputSchema,\n    opts?: ComAtprotoAdminSendEmail.CallOptions,\n  ): Promise<ComAtprotoAdminSendEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.sendEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminSendEmail.toKnownErr(e)\n      })\n  }\n\n  updateAccountEmail(\n    data?: ComAtprotoAdminUpdateAccountEmail.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountEmail.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.updateAccountEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminUpdateAccountEmail.toKnownErr(e)\n      })\n  }\n\n  updateAccountHandle(\n    data?: ComAtprotoAdminUpdateAccountHandle.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountHandle.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountHandle.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.updateAccountHandle', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminUpdateAccountHandle.toKnownErr(e)\n      })\n  }\n\n  updateAccountPassword(\n    data?: ComAtprotoAdminUpdateAccountPassword.InputSchema,\n    opts?: ComAtprotoAdminUpdateAccountPassword.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateAccountPassword.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.updateAccountPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminUpdateAccountPassword.toKnownErr(e)\n      })\n  }\n\n  updateSubjectStatus(\n    data?: ComAtprotoAdminUpdateSubjectStatus.InputSchema,\n    opts?: ComAtprotoAdminUpdateSubjectStatus.CallOptions,\n  ): Promise<ComAtprotoAdminUpdateSubjectStatus.Response> {\n    return this._service.xrpc\n      .call('com.atproto.admin.updateSubjectStatus', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoAdminUpdateSubjectStatus.toKnownErr(e)\n      })\n  }\n}\n\nexport class ComAtprotoIdentityNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  getRecommendedDidCredentials(\n    params?: ComAtprotoIdentityGetRecommendedDidCredentials.QueryParams,\n    opts?: ComAtprotoIdentityGetRecommendedDidCredentials.CallOptions,\n  ): Promise<ComAtprotoIdentityGetRecommendedDidCredentials.Response> {\n    return this._service.xrpc\n      .call(\n        'com.atproto.identity.getRecommendedDidCredentials',\n        params,\n        undefined,\n        opts,\n      )\n      .catch((e) => {\n        throw ComAtprotoIdentityGetRecommendedDidCredentials.toKnownErr(e)\n      })\n  }\n\n  requestPlcOperationSignature(\n    data?: ComAtprotoIdentityRequestPlcOperationSignature.InputSchema,\n    opts?: ComAtprotoIdentityRequestPlcOperationSignature.CallOptions,\n  ): Promise<ComAtprotoIdentityRequestPlcOperationSignature.Response> {\n    return this._service.xrpc\n      .call(\n        'com.atproto.identity.requestPlcOperationSignature',\n        opts?.qp,\n        data,\n        opts,\n      )\n      .catch((e) => {\n        throw ComAtprotoIdentityRequestPlcOperationSignature.toKnownErr(e)\n      })\n  }\n\n  resolveHandle(\n    params?: ComAtprotoIdentityResolveHandle.QueryParams,\n    opts?: ComAtprotoIdentityResolveHandle.CallOptions,\n  ): Promise<ComAtprotoIdentityResolveHandle.Response> {\n    return this._service.xrpc\n      .call('com.atproto.identity.resolveHandle', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoIdentityResolveHandle.toKnownErr(e)\n      })\n  }\n\n  signPlcOperation(\n    data?: ComAtprotoIdentitySignPlcOperation.InputSchema,\n    opts?: ComAtprotoIdentitySignPlcOperation.CallOptions,\n  ): Promise<ComAtprotoIdentitySignPlcOperation.Response> {\n    return this._service.xrpc\n      .call('com.atproto.identity.signPlcOperation', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoIdentitySignPlcOperation.toKnownErr(e)\n      })\n  }\n\n  submitPlcOperation(\n    data?: ComAtprotoIdentitySubmitPlcOperation.InputSchema,\n    opts?: ComAtprotoIdentitySubmitPlcOperation.CallOptions,\n  ): Promise<ComAtprotoIdentitySubmitPlcOperation.Response> {\n    return this._service.xrpc\n      .call('com.atproto.identity.submitPlcOperation', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoIdentitySubmitPlcOperation.toKnownErr(e)\n      })\n  }\n\n  updateHandle(\n    data?: ComAtprotoIdentityUpdateHandle.InputSchema,\n    opts?: ComAtprotoIdentityUpdateHandle.CallOptions,\n  ): Promise<ComAtprotoIdentityUpdateHandle.Response> {\n    return this._service.xrpc\n      .call('com.atproto.identity.updateHandle', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoIdentityUpdateHandle.toKnownErr(e)\n      })\n  }\n}\n\nexport class ComAtprotoLabelNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  queryLabels(\n    params?: ComAtprotoLabelQueryLabels.QueryParams,\n    opts?: ComAtprotoLabelQueryLabels.CallOptions,\n  ): Promise<ComAtprotoLabelQueryLabels.Response> {\n    return this._service.xrpc\n      .call('com.atproto.label.queryLabels', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoLabelQueryLabels.toKnownErr(e)\n      })\n  }\n}\n\nexport class ComAtprotoModerationNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  createReport(\n    data?: ComAtprotoModerationCreateReport.InputSchema,\n    opts?: ComAtprotoModerationCreateReport.CallOptions,\n  ): Promise<ComAtprotoModerationCreateReport.Response> {\n    return this._service.xrpc\n      .call('com.atproto.moderation.createReport', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoModerationCreateReport.toKnownErr(e)\n      })\n  }\n}\n\nexport class ComAtprotoRepoNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  applyWrites(\n    data?: ComAtprotoRepoApplyWrites.InputSchema,\n    opts?: ComAtprotoRepoApplyWrites.CallOptions,\n  ): Promise<ComAtprotoRepoApplyWrites.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.applyWrites', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoApplyWrites.toKnownErr(e)\n      })\n  }\n\n  createRecord(\n    data?: ComAtprotoRepoCreateRecord.InputSchema,\n    opts?: ComAtprotoRepoCreateRecord.CallOptions,\n  ): Promise<ComAtprotoRepoCreateRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.createRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoCreateRecord.toKnownErr(e)\n      })\n  }\n\n  deleteRecord(\n    data?: ComAtprotoRepoDeleteRecord.InputSchema,\n    opts?: ComAtprotoRepoDeleteRecord.CallOptions,\n  ): Promise<ComAtprotoRepoDeleteRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.deleteRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoDeleteRecord.toKnownErr(e)\n      })\n  }\n\n  describeRepo(\n    params?: ComAtprotoRepoDescribeRepo.QueryParams,\n    opts?: ComAtprotoRepoDescribeRepo.CallOptions,\n  ): Promise<ComAtprotoRepoDescribeRepo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.describeRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoDescribeRepo.toKnownErr(e)\n      })\n  }\n\n  getRecord(\n    params?: ComAtprotoRepoGetRecord.QueryParams,\n    opts?: ComAtprotoRepoGetRecord.CallOptions,\n  ): Promise<ComAtprotoRepoGetRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoGetRecord.toKnownErr(e)\n      })\n  }\n\n  importRepo(\n    data?: ComAtprotoRepoImportRepo.InputSchema,\n    opts?: ComAtprotoRepoImportRepo.CallOptions,\n  ): Promise<ComAtprotoRepoImportRepo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.importRepo', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoImportRepo.toKnownErr(e)\n      })\n  }\n\n  listMissingBlobs(\n    params?: ComAtprotoRepoListMissingBlobs.QueryParams,\n    opts?: ComAtprotoRepoListMissingBlobs.CallOptions,\n  ): Promise<ComAtprotoRepoListMissingBlobs.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.listMissingBlobs', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoListMissingBlobs.toKnownErr(e)\n      })\n  }\n\n  listRecords(\n    params?: ComAtprotoRepoListRecords.QueryParams,\n    opts?: ComAtprotoRepoListRecords.CallOptions,\n  ): Promise<ComAtprotoRepoListRecords.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.listRecords', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoListRecords.toKnownErr(e)\n      })\n  }\n\n  putRecord(\n    data?: ComAtprotoRepoPutRecord.InputSchema,\n    opts?: ComAtprotoRepoPutRecord.CallOptions,\n  ): Promise<ComAtprotoRepoPutRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.putRecord', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoPutRecord.toKnownErr(e)\n      })\n  }\n\n  uploadBlob(\n    data?: ComAtprotoRepoUploadBlob.InputSchema,\n    opts?: ComAtprotoRepoUploadBlob.CallOptions,\n  ): Promise<ComAtprotoRepoUploadBlob.Response> {\n    return this._service.xrpc\n      .call('com.atproto.repo.uploadBlob', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoRepoUploadBlob.toKnownErr(e)\n      })\n  }\n}\n\nexport class ComAtprotoServerNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  activateAccount(\n    data?: ComAtprotoServerActivateAccount.InputSchema,\n    opts?: ComAtprotoServerActivateAccount.CallOptions,\n  ): Promise<ComAtprotoServerActivateAccount.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.activateAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerActivateAccount.toKnownErr(e)\n      })\n  }\n\n  checkAccountStatus(\n    params?: ComAtprotoServerCheckAccountStatus.QueryParams,\n    opts?: ComAtprotoServerCheckAccountStatus.CallOptions,\n  ): Promise<ComAtprotoServerCheckAccountStatus.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.checkAccountStatus', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCheckAccountStatus.toKnownErr(e)\n      })\n  }\n\n  confirmEmail(\n    data?: ComAtprotoServerConfirmEmail.InputSchema,\n    opts?: ComAtprotoServerConfirmEmail.CallOptions,\n  ): Promise<ComAtprotoServerConfirmEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.confirmEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerConfirmEmail.toKnownErr(e)\n      })\n  }\n\n  createAccount(\n    data?: ComAtprotoServerCreateAccount.InputSchema,\n    opts?: ComAtprotoServerCreateAccount.CallOptions,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateAccount.toKnownErr(e)\n      })\n  }\n\n  createAppPassword(\n    data?: ComAtprotoServerCreateAppPassword.InputSchema,\n    opts?: ComAtprotoServerCreateAppPassword.CallOptions,\n  ): Promise<ComAtprotoServerCreateAppPassword.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createAppPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateAppPassword.toKnownErr(e)\n      })\n  }\n\n  createInviteCode(\n    data?: ComAtprotoServerCreateInviteCode.InputSchema,\n    opts?: ComAtprotoServerCreateInviteCode.CallOptions,\n  ): Promise<ComAtprotoServerCreateInviteCode.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createInviteCode', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateInviteCode.toKnownErr(e)\n      })\n  }\n\n  createInviteCodes(\n    data?: ComAtprotoServerCreateInviteCodes.InputSchema,\n    opts?: ComAtprotoServerCreateInviteCodes.CallOptions,\n  ): Promise<ComAtprotoServerCreateInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createInviteCodes', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateInviteCodes.toKnownErr(e)\n      })\n  }\n\n  createSession(\n    data?: ComAtprotoServerCreateSession.InputSchema,\n    opts?: ComAtprotoServerCreateSession.CallOptions,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.createSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerCreateSession.toKnownErr(e)\n      })\n  }\n\n  deactivateAccount(\n    data?: ComAtprotoServerDeactivateAccount.InputSchema,\n    opts?: ComAtprotoServerDeactivateAccount.CallOptions,\n  ): Promise<ComAtprotoServerDeactivateAccount.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.deactivateAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDeactivateAccount.toKnownErr(e)\n      })\n  }\n\n  deleteAccount(\n    data?: ComAtprotoServerDeleteAccount.InputSchema,\n    opts?: ComAtprotoServerDeleteAccount.CallOptions,\n  ): Promise<ComAtprotoServerDeleteAccount.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.deleteAccount', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDeleteAccount.toKnownErr(e)\n      })\n  }\n\n  deleteSession(\n    data?: ComAtprotoServerDeleteSession.InputSchema,\n    opts?: ComAtprotoServerDeleteSession.CallOptions,\n  ): Promise<ComAtprotoServerDeleteSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.deleteSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDeleteSession.toKnownErr(e)\n      })\n  }\n\n  describeServer(\n    params?: ComAtprotoServerDescribeServer.QueryParams,\n    opts?: ComAtprotoServerDescribeServer.CallOptions,\n  ): Promise<ComAtprotoServerDescribeServer.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.describeServer', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerDescribeServer.toKnownErr(e)\n      })\n  }\n\n  getAccountInviteCodes(\n    params?: ComAtprotoServerGetAccountInviteCodes.QueryParams,\n    opts?: ComAtprotoServerGetAccountInviteCodes.CallOptions,\n  ): Promise<ComAtprotoServerGetAccountInviteCodes.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.getAccountInviteCodes', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerGetAccountInviteCodes.toKnownErr(e)\n      })\n  }\n\n  getServiceAuth(\n    params?: ComAtprotoServerGetServiceAuth.QueryParams,\n    opts?: ComAtprotoServerGetServiceAuth.CallOptions,\n  ): Promise<ComAtprotoServerGetServiceAuth.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.getServiceAuth', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerGetServiceAuth.toKnownErr(e)\n      })\n  }\n\n  getSession(\n    params?: ComAtprotoServerGetSession.QueryParams,\n    opts?: ComAtprotoServerGetSession.CallOptions,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.getSession', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerGetSession.toKnownErr(e)\n      })\n  }\n\n  listAppPasswords(\n    params?: ComAtprotoServerListAppPasswords.QueryParams,\n    opts?: ComAtprotoServerListAppPasswords.CallOptions,\n  ): Promise<ComAtprotoServerListAppPasswords.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.listAppPasswords', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoServerListAppPasswords.toKnownErr(e)\n      })\n  }\n\n  refreshSession(\n    data?: ComAtprotoServerRefreshSession.InputSchema,\n    opts?: ComAtprotoServerRefreshSession.CallOptions,\n  ): Promise<ComAtprotoServerRefreshSession.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.refreshSession', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRefreshSession.toKnownErr(e)\n      })\n  }\n\n  requestAccountDelete(\n    data?: ComAtprotoServerRequestAccountDelete.InputSchema,\n    opts?: ComAtprotoServerRequestAccountDelete.CallOptions,\n  ): Promise<ComAtprotoServerRequestAccountDelete.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestAccountDelete', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestAccountDelete.toKnownErr(e)\n      })\n  }\n\n  requestEmailConfirmation(\n    data?: ComAtprotoServerRequestEmailConfirmation.InputSchema,\n    opts?: ComAtprotoServerRequestEmailConfirmation.CallOptions,\n  ): Promise<ComAtprotoServerRequestEmailConfirmation.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestEmailConfirmation', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestEmailConfirmation.toKnownErr(e)\n      })\n  }\n\n  requestEmailUpdate(\n    data?: ComAtprotoServerRequestEmailUpdate.InputSchema,\n    opts?: ComAtprotoServerRequestEmailUpdate.CallOptions,\n  ): Promise<ComAtprotoServerRequestEmailUpdate.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestEmailUpdate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestEmailUpdate.toKnownErr(e)\n      })\n  }\n\n  requestPasswordReset(\n    data?: ComAtprotoServerRequestPasswordReset.InputSchema,\n    opts?: ComAtprotoServerRequestPasswordReset.CallOptions,\n  ): Promise<ComAtprotoServerRequestPasswordReset.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.requestPasswordReset', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRequestPasswordReset.toKnownErr(e)\n      })\n  }\n\n  reserveSigningKey(\n    data?: ComAtprotoServerReserveSigningKey.InputSchema,\n    opts?: ComAtprotoServerReserveSigningKey.CallOptions,\n  ): Promise<ComAtprotoServerReserveSigningKey.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.reserveSigningKey', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerReserveSigningKey.toKnownErr(e)\n      })\n  }\n\n  resetPassword(\n    data?: ComAtprotoServerResetPassword.InputSchema,\n    opts?: ComAtprotoServerResetPassword.CallOptions,\n  ): Promise<ComAtprotoServerResetPassword.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.resetPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerResetPassword.toKnownErr(e)\n      })\n  }\n\n  revokeAppPassword(\n    data?: ComAtprotoServerRevokeAppPassword.InputSchema,\n    opts?: ComAtprotoServerRevokeAppPassword.CallOptions,\n  ): Promise<ComAtprotoServerRevokeAppPassword.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.revokeAppPassword', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerRevokeAppPassword.toKnownErr(e)\n      })\n  }\n\n  updateEmail(\n    data?: ComAtprotoServerUpdateEmail.InputSchema,\n    opts?: ComAtprotoServerUpdateEmail.CallOptions,\n  ): Promise<ComAtprotoServerUpdateEmail.Response> {\n    return this._service.xrpc\n      .call('com.atproto.server.updateEmail', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoServerUpdateEmail.toKnownErr(e)\n      })\n  }\n}\n\nexport class ComAtprotoSyncNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  getBlob(\n    params?: ComAtprotoSyncGetBlob.QueryParams,\n    opts?: ComAtprotoSyncGetBlob.CallOptions,\n  ): Promise<ComAtprotoSyncGetBlob.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getBlob', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetBlob.toKnownErr(e)\n      })\n  }\n\n  getBlocks(\n    params?: ComAtprotoSyncGetBlocks.QueryParams,\n    opts?: ComAtprotoSyncGetBlocks.CallOptions,\n  ): Promise<ComAtprotoSyncGetBlocks.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getBlocks', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetBlocks.toKnownErr(e)\n      })\n  }\n\n  getCheckout(\n    params?: ComAtprotoSyncGetCheckout.QueryParams,\n    opts?: ComAtprotoSyncGetCheckout.CallOptions,\n  ): Promise<ComAtprotoSyncGetCheckout.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getCheckout', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetCheckout.toKnownErr(e)\n      })\n  }\n\n  getHead(\n    params?: ComAtprotoSyncGetHead.QueryParams,\n    opts?: ComAtprotoSyncGetHead.CallOptions,\n  ): Promise<ComAtprotoSyncGetHead.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getHead', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetHead.toKnownErr(e)\n      })\n  }\n\n  getLatestCommit(\n    params?: ComAtprotoSyncGetLatestCommit.QueryParams,\n    opts?: ComAtprotoSyncGetLatestCommit.CallOptions,\n  ): Promise<ComAtprotoSyncGetLatestCommit.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getLatestCommit', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetLatestCommit.toKnownErr(e)\n      })\n  }\n\n  getRecord(\n    params?: ComAtprotoSyncGetRecord.QueryParams,\n    opts?: ComAtprotoSyncGetRecord.CallOptions,\n  ): Promise<ComAtprotoSyncGetRecord.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRecord.toKnownErr(e)\n      })\n  }\n\n  getRepo(\n    params?: ComAtprotoSyncGetRepo.QueryParams,\n    opts?: ComAtprotoSyncGetRepo.CallOptions,\n  ): Promise<ComAtprotoSyncGetRepo.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.getRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncGetRepo.toKnownErr(e)\n      })\n  }\n\n  listBlobs(\n    params?: ComAtprotoSyncListBlobs.QueryParams,\n    opts?: ComAtprotoSyncListBlobs.CallOptions,\n  ): Promise<ComAtprotoSyncListBlobs.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.listBlobs', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncListBlobs.toKnownErr(e)\n      })\n  }\n\n  listRepos(\n    params?: ComAtprotoSyncListRepos.QueryParams,\n    opts?: ComAtprotoSyncListRepos.CallOptions,\n  ): Promise<ComAtprotoSyncListRepos.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.listRepos', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncListRepos.toKnownErr(e)\n      })\n  }\n\n  notifyOfUpdate(\n    data?: ComAtprotoSyncNotifyOfUpdate.InputSchema,\n    opts?: ComAtprotoSyncNotifyOfUpdate.CallOptions,\n  ): Promise<ComAtprotoSyncNotifyOfUpdate.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.notifyOfUpdate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncNotifyOfUpdate.toKnownErr(e)\n      })\n  }\n\n  requestCrawl(\n    data?: ComAtprotoSyncRequestCrawl.InputSchema,\n    opts?: ComAtprotoSyncRequestCrawl.CallOptions,\n  ): Promise<ComAtprotoSyncRequestCrawl.Response> {\n    return this._service.xrpc\n      .call('com.atproto.sync.requestCrawl', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoSyncRequestCrawl.toKnownErr(e)\n      })\n  }\n}\n\nexport class ComAtprotoTempNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  checkSignupQueue(\n    params?: ComAtprotoTempCheckSignupQueue.QueryParams,\n    opts?: ComAtprotoTempCheckSignupQueue.CallOptions,\n  ): Promise<ComAtprotoTempCheckSignupQueue.Response> {\n    return this._service.xrpc\n      .call('com.atproto.temp.checkSignupQueue', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoTempCheckSignupQueue.toKnownErr(e)\n      })\n  }\n\n  fetchLabels(\n    params?: ComAtprotoTempFetchLabels.QueryParams,\n    opts?: ComAtprotoTempFetchLabels.CallOptions,\n  ): Promise<ComAtprotoTempFetchLabels.Response> {\n    return this._service.xrpc\n      .call('com.atproto.temp.fetchLabels', params, undefined, opts)\n      .catch((e) => {\n        throw ComAtprotoTempFetchLabels.toKnownErr(e)\n      })\n  }\n\n  requestPhoneVerification(\n    data?: ComAtprotoTempRequestPhoneVerification.InputSchema,\n    opts?: ComAtprotoTempRequestPhoneVerification.CallOptions,\n  ): Promise<ComAtprotoTempRequestPhoneVerification.Response> {\n    return this._service.xrpc\n      .call('com.atproto.temp.requestPhoneVerification', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ComAtprotoTempRequestPhoneVerification.toKnownErr(e)\n      })\n  }\n}\n\nexport class AppNS {\n  _service: AtpServiceClient\n  bsky: AppBskyNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.bsky = new AppBskyNS(service)\n  }\n}\n\nexport class AppBskyNS {\n  _service: AtpServiceClient\n  actor: AppBskyActorNS\n  embed: AppBskyEmbedNS\n  feed: AppBskyFeedNS\n  graph: AppBskyGraphNS\n  labeler: AppBskyLabelerNS\n  notification: AppBskyNotificationNS\n  richtext: AppBskyRichtextNS\n  unspecced: AppBskyUnspeccedNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.actor = new AppBskyActorNS(service)\n    this.embed = new AppBskyEmbedNS(service)\n    this.feed = new AppBskyFeedNS(service)\n    this.graph = new AppBskyGraphNS(service)\n    this.labeler = new AppBskyLabelerNS(service)\n    this.notification = new AppBskyNotificationNS(service)\n    this.richtext = new AppBskyRichtextNS(service)\n    this.unspecced = new AppBskyUnspeccedNS(service)\n  }\n}\n\nexport class AppBskyActorNS {\n  _service: AtpServiceClient\n  profile: ProfileRecord\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.profile = new ProfileRecord(service)\n  }\n\n  getPreferences(\n    params?: AppBskyActorGetPreferences.QueryParams,\n    opts?: AppBskyActorGetPreferences.CallOptions,\n  ): Promise<AppBskyActorGetPreferences.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getPreferences', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetPreferences.toKnownErr(e)\n      })\n  }\n\n  getProfile(\n    params?: AppBskyActorGetProfile.QueryParams,\n    opts?: AppBskyActorGetProfile.CallOptions,\n  ): Promise<AppBskyActorGetProfile.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getProfile', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetProfile.toKnownErr(e)\n      })\n  }\n\n  getProfiles(\n    params?: AppBskyActorGetProfiles.QueryParams,\n    opts?: AppBskyActorGetProfiles.CallOptions,\n  ): Promise<AppBskyActorGetProfiles.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getProfiles', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetProfiles.toKnownErr(e)\n      })\n  }\n\n  getSuggestions(\n    params?: AppBskyActorGetSuggestions.QueryParams,\n    opts?: AppBskyActorGetSuggestions.CallOptions,\n  ): Promise<AppBskyActorGetSuggestions.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.getSuggestions', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorGetSuggestions.toKnownErr(e)\n      })\n  }\n\n  putPreferences(\n    data?: AppBskyActorPutPreferences.InputSchema,\n    opts?: AppBskyActorPutPreferences.CallOptions,\n  ): Promise<AppBskyActorPutPreferences.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.putPreferences', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyActorPutPreferences.toKnownErr(e)\n      })\n  }\n\n  searchActors(\n    params?: AppBskyActorSearchActors.QueryParams,\n    opts?: AppBskyActorSearchActors.CallOptions,\n  ): Promise<AppBskyActorSearchActors.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.searchActors', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorSearchActors.toKnownErr(e)\n      })\n  }\n\n  searchActorsTypeahead(\n    params?: AppBskyActorSearchActorsTypeahead.QueryParams,\n    opts?: AppBskyActorSearchActorsTypeahead.CallOptions,\n  ): Promise<AppBskyActorSearchActorsTypeahead.Response> {\n    return this._service.xrpc\n      .call('app.bsky.actor.searchActorsTypeahead', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyActorSearchActorsTypeahead.toKnownErr(e)\n      })\n  }\n}\n\nexport class ProfileRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyActorProfile.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.actor.profile',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyActorProfile.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.actor.profile',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyActorProfile.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.actor.profile'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.actor.profile', rkey: 'self', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.actor.profile', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyEmbedNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n}\n\nexport class AppBskyFeedNS {\n  _service: AtpServiceClient\n  generator: GeneratorRecord\n  like: LikeRecord\n  post: PostRecord\n  repost: RepostRecord\n  threadgate: ThreadgateRecord\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.generator = new GeneratorRecord(service)\n    this.like = new LikeRecord(service)\n    this.post = new PostRecord(service)\n    this.repost = new RepostRecord(service)\n    this.threadgate = new ThreadgateRecord(service)\n  }\n\n  describeFeedGenerator(\n    params?: AppBskyFeedDescribeFeedGenerator.QueryParams,\n    opts?: AppBskyFeedDescribeFeedGenerator.CallOptions,\n  ): Promise<AppBskyFeedDescribeFeedGenerator.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.describeFeedGenerator', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedDescribeFeedGenerator.toKnownErr(e)\n      })\n  }\n\n  getActorFeeds(\n    params?: AppBskyFeedGetActorFeeds.QueryParams,\n    opts?: AppBskyFeedGetActorFeeds.CallOptions,\n  ): Promise<AppBskyFeedGetActorFeeds.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getActorFeeds', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetActorFeeds.toKnownErr(e)\n      })\n  }\n\n  getActorLikes(\n    params?: AppBskyFeedGetActorLikes.QueryParams,\n    opts?: AppBskyFeedGetActorLikes.CallOptions,\n  ): Promise<AppBskyFeedGetActorLikes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getActorLikes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetActorLikes.toKnownErr(e)\n      })\n  }\n\n  getAuthorFeed(\n    params?: AppBskyFeedGetAuthorFeed.QueryParams,\n    opts?: AppBskyFeedGetAuthorFeed.CallOptions,\n  ): Promise<AppBskyFeedGetAuthorFeed.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getAuthorFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetAuthorFeed.toKnownErr(e)\n      })\n  }\n\n  getFeed(\n    params?: AppBskyFeedGetFeed.QueryParams,\n    opts?: AppBskyFeedGetFeed.CallOptions,\n  ): Promise<AppBskyFeedGetFeed.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeed.toKnownErr(e)\n      })\n  }\n\n  getFeedGenerator(\n    params?: AppBskyFeedGetFeedGenerator.QueryParams,\n    opts?: AppBskyFeedGetFeedGenerator.CallOptions,\n  ): Promise<AppBskyFeedGetFeedGenerator.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeedGenerator', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeedGenerator.toKnownErr(e)\n      })\n  }\n\n  getFeedGenerators(\n    params?: AppBskyFeedGetFeedGenerators.QueryParams,\n    opts?: AppBskyFeedGetFeedGenerators.CallOptions,\n  ): Promise<AppBskyFeedGetFeedGenerators.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeedGenerators', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeedGenerators.toKnownErr(e)\n      })\n  }\n\n  getFeedSkeleton(\n    params?: AppBskyFeedGetFeedSkeleton.QueryParams,\n    opts?: AppBskyFeedGetFeedSkeleton.CallOptions,\n  ): Promise<AppBskyFeedGetFeedSkeleton.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getFeedSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetFeedSkeleton.toKnownErr(e)\n      })\n  }\n\n  getLikes(\n    params?: AppBskyFeedGetLikes.QueryParams,\n    opts?: AppBskyFeedGetLikes.CallOptions,\n  ): Promise<AppBskyFeedGetLikes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getLikes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetLikes.toKnownErr(e)\n      })\n  }\n\n  getListFeed(\n    params?: AppBskyFeedGetListFeed.QueryParams,\n    opts?: AppBskyFeedGetListFeed.CallOptions,\n  ): Promise<AppBskyFeedGetListFeed.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getListFeed', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetListFeed.toKnownErr(e)\n      })\n  }\n\n  getPostThread(\n    params?: AppBskyFeedGetPostThread.QueryParams,\n    opts?: AppBskyFeedGetPostThread.CallOptions,\n  ): Promise<AppBskyFeedGetPostThread.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getPostThread', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetPostThread.toKnownErr(e)\n      })\n  }\n\n  getPosts(\n    params?: AppBskyFeedGetPosts.QueryParams,\n    opts?: AppBskyFeedGetPosts.CallOptions,\n  ): Promise<AppBskyFeedGetPosts.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getPosts', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetPosts.toKnownErr(e)\n      })\n  }\n\n  getRepostedBy(\n    params?: AppBskyFeedGetRepostedBy.QueryParams,\n    opts?: AppBskyFeedGetRepostedBy.CallOptions,\n  ): Promise<AppBskyFeedGetRepostedBy.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getRepostedBy', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetRepostedBy.toKnownErr(e)\n      })\n  }\n\n  getSuggestedFeeds(\n    params?: AppBskyFeedGetSuggestedFeeds.QueryParams,\n    opts?: AppBskyFeedGetSuggestedFeeds.CallOptions,\n  ): Promise<AppBskyFeedGetSuggestedFeeds.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getSuggestedFeeds', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetSuggestedFeeds.toKnownErr(e)\n      })\n  }\n\n  getTimeline(\n    params?: AppBskyFeedGetTimeline.QueryParams,\n    opts?: AppBskyFeedGetTimeline.CallOptions,\n  ): Promise<AppBskyFeedGetTimeline.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.getTimeline', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedGetTimeline.toKnownErr(e)\n      })\n  }\n\n  searchPosts(\n    params?: AppBskyFeedSearchPosts.QueryParams,\n    opts?: AppBskyFeedSearchPosts.CallOptions,\n  ): Promise<AppBskyFeedSearchPosts.Response> {\n    return this._service.xrpc\n      .call('app.bsky.feed.searchPosts', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyFeedSearchPosts.toKnownErr(e)\n      })\n  }\n}\n\nexport class GeneratorRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedGenerator.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.generator',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedGenerator.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.generator',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedGenerator.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.generator'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.generator', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.generator', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class LikeRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedLike.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.like',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedLike.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.like',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedLike.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.like'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.like', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.like', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class PostRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedPost.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.post',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedPost.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.post',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedPost.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.post'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.post', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.post', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class RepostRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedRepost.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.repost',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyFeedRepost.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.repost',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedRepost.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.repost'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.repost', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.repost', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ThreadgateRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyFeedThreadgate.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.feed.threadgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyFeedThreadgate.Record\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.feed.threadgate',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyFeedThreadgate.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.feed.threadgate'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.feed.threadgate', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.feed.threadgate', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyGraphNS {\n  _service: AtpServiceClient\n  block: BlockRecord\n  follow: FollowRecord\n  list: ListRecord\n  listblock: ListblockRecord\n  listitem: ListitemRecord\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.block = new BlockRecord(service)\n    this.follow = new FollowRecord(service)\n    this.list = new ListRecord(service)\n    this.listblock = new ListblockRecord(service)\n    this.listitem = new ListitemRecord(service)\n  }\n\n  getBlocks(\n    params?: AppBskyGraphGetBlocks.QueryParams,\n    opts?: AppBskyGraphGetBlocks.CallOptions,\n  ): Promise<AppBskyGraphGetBlocks.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getBlocks', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetBlocks.toKnownErr(e)\n      })\n  }\n\n  getFollowers(\n    params?: AppBskyGraphGetFollowers.QueryParams,\n    opts?: AppBskyGraphGetFollowers.CallOptions,\n  ): Promise<AppBskyGraphGetFollowers.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getFollowers', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetFollowers.toKnownErr(e)\n      })\n  }\n\n  getFollows(\n    params?: AppBskyGraphGetFollows.QueryParams,\n    opts?: AppBskyGraphGetFollows.CallOptions,\n  ): Promise<AppBskyGraphGetFollows.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getFollows', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetFollows.toKnownErr(e)\n      })\n  }\n\n  getList(\n    params?: AppBskyGraphGetList.QueryParams,\n    opts?: AppBskyGraphGetList.CallOptions,\n  ): Promise<AppBskyGraphGetList.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getList', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetList.toKnownErr(e)\n      })\n  }\n\n  getListBlocks(\n    params?: AppBskyGraphGetListBlocks.QueryParams,\n    opts?: AppBskyGraphGetListBlocks.CallOptions,\n  ): Promise<AppBskyGraphGetListBlocks.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getListBlocks', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetListBlocks.toKnownErr(e)\n      })\n  }\n\n  getListMutes(\n    params?: AppBskyGraphGetListMutes.QueryParams,\n    opts?: AppBskyGraphGetListMutes.CallOptions,\n  ): Promise<AppBskyGraphGetListMutes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getListMutes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetListMutes.toKnownErr(e)\n      })\n  }\n\n  getLists(\n    params?: AppBskyGraphGetLists.QueryParams,\n    opts?: AppBskyGraphGetLists.CallOptions,\n  ): Promise<AppBskyGraphGetLists.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getLists', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetLists.toKnownErr(e)\n      })\n  }\n\n  getMutes(\n    params?: AppBskyGraphGetMutes.QueryParams,\n    opts?: AppBskyGraphGetMutes.CallOptions,\n  ): Promise<AppBskyGraphGetMutes.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getMutes', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetMutes.toKnownErr(e)\n      })\n  }\n\n  getRelationships(\n    params?: AppBskyGraphGetRelationships.QueryParams,\n    opts?: AppBskyGraphGetRelationships.CallOptions,\n  ): Promise<AppBskyGraphGetRelationships.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.getRelationships', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyGraphGetRelationships.toKnownErr(e)\n      })\n  }\n\n  getSuggestedFollowsByActor(\n    params?: AppBskyGraphGetSuggestedFollowsByActor.QueryParams,\n    opts?: AppBskyGraphGetSuggestedFollowsByActor.CallOptions,\n  ): Promise<AppBskyGraphGetSuggestedFollowsByActor.Response> {\n    return this._service.xrpc\n      .call(\n        'app.bsky.graph.getSuggestedFollowsByActor',\n        params,\n        undefined,\n        opts,\n      )\n      .catch((e) => {\n        throw AppBskyGraphGetSuggestedFollowsByActor.toKnownErr(e)\n      })\n  }\n\n  muteActor(\n    data?: AppBskyGraphMuteActor.InputSchema,\n    opts?: AppBskyGraphMuteActor.CallOptions,\n  ): Promise<AppBskyGraphMuteActor.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.muteActor', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphMuteActor.toKnownErr(e)\n      })\n  }\n\n  muteActorList(\n    data?: AppBskyGraphMuteActorList.InputSchema,\n    opts?: AppBskyGraphMuteActorList.CallOptions,\n  ): Promise<AppBskyGraphMuteActorList.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.muteActorList', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphMuteActorList.toKnownErr(e)\n      })\n  }\n\n  unmuteActor(\n    data?: AppBskyGraphUnmuteActor.InputSchema,\n    opts?: AppBskyGraphUnmuteActor.CallOptions,\n  ): Promise<AppBskyGraphUnmuteActor.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.unmuteActor', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphUnmuteActor.toKnownErr(e)\n      })\n  }\n\n  unmuteActorList(\n    data?: AppBskyGraphUnmuteActorList.InputSchema,\n    opts?: AppBskyGraphUnmuteActorList.CallOptions,\n  ): Promise<AppBskyGraphUnmuteActorList.Response> {\n    return this._service.xrpc\n      .call('app.bsky.graph.unmuteActorList', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyGraphUnmuteActorList.toKnownErr(e)\n      })\n  }\n}\n\nexport class BlockRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphBlock.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.block',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphBlock.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.block',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphBlock.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.block'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.block', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.block', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class FollowRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphFollow.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.follow',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphFollow.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.follow',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphFollow.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.follow'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.follow', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.follow', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphList.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.list',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphList.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.list',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphList.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.list'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.list', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.list', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListblockRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphListblock.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.listblock',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyGraphListblock.Record\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.listblock',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphListblock.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.listblock'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listblock', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listblock', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class ListitemRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyGraphListitem.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.graph.listitem',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{ uri: string; cid: string; value: AppBskyGraphListitem.Record }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.graph.listitem',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyGraphListitem.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.graph.listitem'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listitem', ...params, record },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.graph.listitem', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyLabelerNS {\n  _service: AtpServiceClient\n  service: ServiceRecord\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.service = new ServiceRecord(service)\n  }\n\n  getServices(\n    params?: AppBskyLabelerGetServices.QueryParams,\n    opts?: AppBskyLabelerGetServices.CallOptions,\n  ): Promise<AppBskyLabelerGetServices.Response> {\n    return this._service.xrpc\n      .call('app.bsky.labeler.getServices', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyLabelerGetServices.toKnownErr(e)\n      })\n  }\n}\n\nexport class ServiceRecord {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  async list(\n    params: Omit<ComAtprotoRepoListRecords.QueryParams, 'collection'>,\n  ): Promise<{\n    cursor?: string\n    records: { uri: string; value: AppBskyLabelerService.Record }[]\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.listRecords', {\n      collection: 'app.bsky.labeler.service',\n      ...params,\n    })\n    return res.data\n  }\n\n  async get(\n    params: Omit<ComAtprotoRepoGetRecord.QueryParams, 'collection'>,\n  ): Promise<{\n    uri: string\n    cid: string\n    value: AppBskyLabelerService.Record\n  }> {\n    const res = await this._service.xrpc.call('com.atproto.repo.getRecord', {\n      collection: 'app.bsky.labeler.service',\n      ...params,\n    })\n    return res.data\n  }\n\n  async create(\n    params: Omit<\n      ComAtprotoRepoCreateRecord.InputSchema,\n      'collection' | 'record'\n    >,\n    record: AppBskyLabelerService.Record,\n    headers?: Record<string, string>,\n  ): Promise<{ uri: string; cid: string }> {\n    record.$type = 'app.bsky.labeler.service'\n    const res = await this._service.xrpc.call(\n      'com.atproto.repo.createRecord',\n      undefined,\n      {\n        collection: 'app.bsky.labeler.service',\n        rkey: 'self',\n        ...params,\n        record,\n      },\n      { encoding: 'application/json', headers },\n    )\n    return res.data\n  }\n\n  async delete(\n    params: Omit<ComAtprotoRepoDeleteRecord.InputSchema, 'collection'>,\n    headers?: Record<string, string>,\n  ): Promise<void> {\n    await this._service.xrpc.call(\n      'com.atproto.repo.deleteRecord',\n      undefined,\n      { collection: 'app.bsky.labeler.service', ...params },\n      { headers },\n    )\n  }\n}\n\nexport class AppBskyNotificationNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  getUnreadCount(\n    params?: AppBskyNotificationGetUnreadCount.QueryParams,\n    opts?: AppBskyNotificationGetUnreadCount.CallOptions,\n  ): Promise<AppBskyNotificationGetUnreadCount.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.getUnreadCount', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyNotificationGetUnreadCount.toKnownErr(e)\n      })\n  }\n\n  listNotifications(\n    params?: AppBskyNotificationListNotifications.QueryParams,\n    opts?: AppBskyNotificationListNotifications.CallOptions,\n  ): Promise<AppBskyNotificationListNotifications.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.listNotifications', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyNotificationListNotifications.toKnownErr(e)\n      })\n  }\n\n  registerPush(\n    data?: AppBskyNotificationRegisterPush.InputSchema,\n    opts?: AppBskyNotificationRegisterPush.CallOptions,\n  ): Promise<AppBskyNotificationRegisterPush.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.registerPush', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyNotificationRegisterPush.toKnownErr(e)\n      })\n  }\n\n  updateSeen(\n    data?: AppBskyNotificationUpdateSeen.InputSchema,\n    opts?: AppBskyNotificationUpdateSeen.CallOptions,\n  ): Promise<AppBskyNotificationUpdateSeen.Response> {\n    return this._service.xrpc\n      .call('app.bsky.notification.updateSeen', opts?.qp, data, opts)\n      .catch((e) => {\n        throw AppBskyNotificationUpdateSeen.toKnownErr(e)\n      })\n  }\n}\n\nexport class AppBskyRichtextNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n}\n\nexport class AppBskyUnspeccedNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  getPopularFeedGenerators(\n    params?: AppBskyUnspeccedGetPopularFeedGenerators.QueryParams,\n    opts?: AppBskyUnspeccedGetPopularFeedGenerators.CallOptions,\n  ): Promise<AppBskyUnspeccedGetPopularFeedGenerators.Response> {\n    return this._service.xrpc\n      .call(\n        'app.bsky.unspecced.getPopularFeedGenerators',\n        params,\n        undefined,\n        opts,\n      )\n      .catch((e) => {\n        throw AppBskyUnspeccedGetPopularFeedGenerators.toKnownErr(e)\n      })\n  }\n\n  getTaggedSuggestions(\n    params?: AppBskyUnspeccedGetTaggedSuggestions.QueryParams,\n    opts?: AppBskyUnspeccedGetTaggedSuggestions.CallOptions,\n  ): Promise<AppBskyUnspeccedGetTaggedSuggestions.Response> {\n    return this._service.xrpc\n      .call('app.bsky.unspecced.getTaggedSuggestions', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedGetTaggedSuggestions.toKnownErr(e)\n      })\n  }\n\n  searchActorsSkeleton(\n    params?: AppBskyUnspeccedSearchActorsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchActorsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchActorsSkeleton.Response> {\n    return this._service.xrpc\n      .call('app.bsky.unspecced.searchActorsSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchActorsSkeleton.toKnownErr(e)\n      })\n  }\n\n  searchPostsSkeleton(\n    params?: AppBskyUnspeccedSearchPostsSkeleton.QueryParams,\n    opts?: AppBskyUnspeccedSearchPostsSkeleton.CallOptions,\n  ): Promise<AppBskyUnspeccedSearchPostsSkeleton.Response> {\n    return this._service.xrpc\n      .call('app.bsky.unspecced.searchPostsSkeleton', params, undefined, opts)\n      .catch((e) => {\n        throw AppBskyUnspeccedSearchPostsSkeleton.toKnownErr(e)\n      })\n  }\n}\n\nexport class ToolsNS {\n  _service: AtpServiceClient\n  ozone: ToolsOzoneNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.ozone = new ToolsOzoneNS(service)\n  }\n}\n\nexport class ToolsOzoneNS {\n  _service: AtpServiceClient\n  communication: ToolsOzoneCommunicationNS\n  moderation: ToolsOzoneModerationNS\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n    this.communication = new ToolsOzoneCommunicationNS(service)\n    this.moderation = new ToolsOzoneModerationNS(service)\n  }\n}\n\nexport class ToolsOzoneCommunicationNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  createTemplate(\n    data?: ToolsOzoneCommunicationCreateTemplate.InputSchema,\n    opts?: ToolsOzoneCommunicationCreateTemplate.CallOptions,\n  ): Promise<ToolsOzoneCommunicationCreateTemplate.Response> {\n    return this._service.xrpc\n      .call('tools.ozone.communication.createTemplate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneCommunicationCreateTemplate.toKnownErr(e)\n      })\n  }\n\n  deleteTemplate(\n    data?: ToolsOzoneCommunicationDeleteTemplate.InputSchema,\n    opts?: ToolsOzoneCommunicationDeleteTemplate.CallOptions,\n  ): Promise<ToolsOzoneCommunicationDeleteTemplate.Response> {\n    return this._service.xrpc\n      .call('tools.ozone.communication.deleteTemplate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneCommunicationDeleteTemplate.toKnownErr(e)\n      })\n  }\n\n  listTemplates(\n    params?: ToolsOzoneCommunicationListTemplates.QueryParams,\n    opts?: ToolsOzoneCommunicationListTemplates.CallOptions,\n  ): Promise<ToolsOzoneCommunicationListTemplates.Response> {\n    return this._service.xrpc\n      .call('tools.ozone.communication.listTemplates', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneCommunicationListTemplates.toKnownErr(e)\n      })\n  }\n\n  updateTemplate(\n    data?: ToolsOzoneCommunicationUpdateTemplate.InputSchema,\n    opts?: ToolsOzoneCommunicationUpdateTemplate.CallOptions,\n  ): Promise<ToolsOzoneCommunicationUpdateTemplate.Response> {\n    return this._service.xrpc\n      .call('tools.ozone.communication.updateTemplate', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneCommunicationUpdateTemplate.toKnownErr(e)\n      })\n  }\n}\n\nexport class ToolsOzoneModerationNS {\n  _service: AtpServiceClient\n\n  constructor(service: AtpServiceClient) {\n    this._service = service\n  }\n\n  emitEvent(\n    data?: ToolsOzoneModerationEmitEvent.InputSchema,\n    opts?: ToolsOzoneModerationEmitEvent.CallOptions,\n  ): Promise<ToolsOzoneModerationEmitEvent.Response> {\n    return this._service.xrpc\n      .call('tools.ozone.moderation.emitEvent', opts?.qp, data, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationEmitEvent.toKnownErr(e)\n      })\n  }\n\n  getEvent(\n    params?: ToolsOzoneModerationGetEvent.QueryParams,\n    opts?: ToolsOzoneModerationGetEvent.CallOptions,\n  ): Promise<ToolsOzoneModerationGetEvent.Response> {\n    return this._service.xrpc\n      .call('tools.ozone.moderation.getEvent', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationGetEvent.toKnownErr(e)\n      })\n  }\n\n  getRecord(\n    params?: ToolsOzoneModerationGetRecord.QueryParams,\n    opts?: ToolsOzoneModerationGetRecord.CallOptions,\n  ): Promise<ToolsOzoneModerationGetRecord.Response> {\n    return this._service.xrpc\n      .call('tools.ozone.moderation.getRecord', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationGetRecord.toKnownErr(e)\n      })\n  }\n\n  getRepo(\n    params?: ToolsOzoneModerationGetRepo.QueryParams,\n    opts?: ToolsOzoneModerationGetRepo.CallOptions,\n  ): Promise<ToolsOzoneModerationGetRepo.Response> {\n    return this._service.xrpc\n      .call('tools.ozone.moderation.getRepo', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationGetRepo.toKnownErr(e)\n      })\n  }\n\n  queryEvents(\n    params?: ToolsOzoneModerationQueryEvents.QueryParams,\n    opts?: ToolsOzoneModerationQueryEvents.CallOptions,\n  ): Promise<ToolsOzoneModerationQueryEvents.Response> {\n    return this._service.xrpc\n      .call('tools.ozone.moderation.queryEvents', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationQueryEvents.toKnownErr(e)\n      })\n  }\n\n  queryStatuses(\n    params?: ToolsOzoneModerationQueryStatuses.QueryParams,\n    opts?: ToolsOzoneModerationQueryStatuses.CallOptions,\n  ): Promise<ToolsOzoneModerationQueryStatuses.Response> {\n    return this._service.xrpc\n      .call('tools.ozone.moderation.queryStatuses', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationQueryStatuses.toKnownErr(e)\n      })\n  }\n\n  searchRepos(\n    params?: ToolsOzoneModerationSearchRepos.QueryParams,\n    opts?: ToolsOzoneModerationSearchRepos.CallOptions,\n  ): Promise<ToolsOzoneModerationSearchRepos.Response> {\n    return this._service.xrpc\n      .call('tools.ozone.moderation.searchRepos', params, undefined, opts)\n      .catch((e) => {\n        throw ToolsOzoneModerationSearchRepos.toKnownErr(e)\n      })\n  }\n}\n", "import { ErrorResponseBody, errorResponseBody } from '@atproto/xrpc'\nimport { defaultFetchHandler, XRPCError, ResponseType } from '@atproto/xrpc'\nimport { isValidDidDoc, getPdsEndpoint } from '@atproto/common-web'\nimport {\n  AtpBaseClient,\n  AtpServiceClient,\n  ComAtprotoServerCreateAccount,\n  ComAtprotoServerCreateSession,\n  ComAtprotoServerGetSession,\n  ComAtprotoServerRefreshSession,\n} from './client'\nimport {\n  AtpSessionData,\n  AtpAgentLoginOpts,\n  AtpAgentFetchHandler,\n  AtpAgentFetchHandlerResponse,\n  AtpAgentGlobalOpts,\n  AtpPersistSessionHandler,\n  AtpAgentOpts,\n  AtprotoServiceType,\n} from './types'\nimport { BSKY_LABELER_DID } from './const'\n\nconst MAX_MOD_AUTHORITIES = 3\nconst MAX_LABELERS = 10\nconst REFRESH_SESSION = 'com.atproto.server.refreshSession'\n\n/**\n * An ATP \"Agent\"\n * Manages session token lifecycles and provides convenience methods.\n */\nexport class AtpAgent {\n  service: URL\n  api: AtpServiceClient\n  session?: AtpSessionData\n  labelersHeader: string[] = []\n  proxyHeader: string | undefined\n  pdsUrl: URL | undefined // The PDS URL, driven by the did doc. May be undefined.\n\n  protected _baseClient: AtpBaseClient\n  protected _persistSession?: AtpPersistSessionHandler\n  protected _refreshSessionPromise: Promise<void> | undefined\n\n  get com() {\n    return this.api.com\n  }\n\n  /**\n   * The `fetch` implementation; must be implemented for your platform.\n   */\n  static fetch: AtpAgentFetchHandler | undefined = defaultFetchHandler\n\n  /**\n   * The labelers to be used across all requests with the takedown capability\n   */\n  static appLabelers: string[] = [BSKY_LABELER_DID]\n\n  /**\n   * Configures the API globally.\n   */\n  static configure(opts: AtpAgentGlobalOpts) {\n    if (opts.fetch) {\n      AtpAgent.fetch = opts.fetch\n    }\n    if (opts.appLabelers) {\n      AtpAgent.appLabelers = opts.appLabelers\n    }\n  }\n\n  constructor(opts: AtpAgentOpts) {\n    this.service =\n      opts.service instanceof URL ? opts.service : new URL(opts.service)\n    this._persistSession = opts.persistSession\n\n    // create an ATP client instance for this agent\n    this._baseClient = new AtpBaseClient()\n    this._baseClient.xrpc.fetch = this._fetch.bind(this) // patch its fetch implementation\n    this.api = this._baseClient.service(opts.service)\n  }\n\n  clone() {\n    const inst = new AtpAgent({\n      service: this.service,\n    })\n    this.copyInto(inst)\n    return inst\n  }\n\n  copyInto(inst: AtpAgent) {\n    inst.session = this.session\n    inst.labelersHeader = this.labelersHeader\n    inst.proxyHeader = this.proxyHeader\n    inst.pdsUrl = this.pdsUrl\n    inst.api.xrpc.uri = this.pdsUrl || this.service\n  }\n\n  withProxy(serviceType: AtprotoServiceType, did: string) {\n    const inst = this.clone()\n    inst.configureProxyHeader(serviceType, did)\n    return inst\n  }\n\n  /**\n   * Is there any active session?\n   */\n  get hasSession() {\n    return !!this.session\n  }\n\n  /**\n   * Sets the \"Persist Session\" method which can be used to store access tokens\n   * as they change.\n   */\n  setPersistSessionHandler(handler?: AtpPersistSessionHandler) {\n    this._persistSession = handler\n  }\n\n  /**\n   * Configures the moderation services to be applied on requests.\n   * NOTE: this is called automatically by getPreferences() and the relevant moderation config\n   * methods in BskyAgent instances.\n   */\n  configureLabelersHeader(labelerDids: string[]) {\n    this.labelersHeader = labelerDids\n  }\n\n  /**\n   * Configures the atproto-proxy header to be applied on requests\n   */\n  configureProxyHeader(serviceType: AtprotoServiceType, did: string) {\n    if (did.startsWith('did:')) {\n      this.proxyHeader = `${did}#${serviceType}`\n    }\n  }\n\n  /**\n   * Create a new account and hydrate its session in this agent.\n   */\n  async createAccount(\n    opts: ComAtprotoServerCreateAccount.InputSchema,\n  ): Promise<ComAtprotoServerCreateAccount.Response> {\n    try {\n      const res = await this.api.com.atproto.server.createAccount(opts)\n      this.session = {\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n        email: opts.email,\n        emailConfirmed: false,\n      }\n      this._updateApiEndpoint(res.data.didDoc)\n      return res\n    } catch (e) {\n      this.session = undefined\n      throw e\n    } finally {\n      if (this.session) {\n        this._persistSession?.('create', this.session)\n      } else {\n        this._persistSession?.('create-failed', undefined)\n      }\n    }\n  }\n\n  /**\n   * Start a new session with this agent.\n   */\n  async login(\n    opts: AtpAgentLoginOpts,\n  ): Promise<ComAtprotoServerCreateSession.Response> {\n    try {\n      const res = await this.api.com.atproto.server.createSession({\n        identifier: opts.identifier,\n        password: opts.password,\n      })\n      this.session = {\n        accessJwt: res.data.accessJwt,\n        refreshJwt: res.data.refreshJwt,\n        handle: res.data.handle,\n        did: res.data.did,\n        email: res.data.email,\n        emailConfirmed: res.data.emailConfirmed,\n      }\n      this._updateApiEndpoint(res.data.didDoc)\n      return res\n    } catch (e) {\n      this.session = undefined\n      throw e\n    } finally {\n      if (this.session) {\n        this._persistSession?.('create', this.session)\n      } else {\n        this._persistSession?.('create-failed', undefined)\n      }\n    }\n  }\n\n  /**\n   * Resume a pre-existing session with this agent.\n   */\n  async resumeSession(\n    session: AtpSessionData,\n  ): Promise<ComAtprotoServerGetSession.Response> {\n    try {\n      this.session = session\n      const res = await this.api.com.atproto.server.getSession()\n      if (res.data.did !== this.session.did) {\n        throw new XRPCError(\n          ResponseType.InvalidRequest,\n          'Invalid session',\n          'InvalidDID',\n        )\n      }\n      this.session.email = res.data.email\n      this.session.handle = res.data.handle\n      this.session.emailConfirmed = res.data.emailConfirmed\n      this._updateApiEndpoint(res.data.didDoc)\n      this._persistSession?.('update', this.session)\n      return res\n    } catch (e) {\n      this.session = undefined\n\n      if (e instanceof XRPCError) {\n        /*\n         * `ExpiredToken` and `InvalidToken` are handled in\n         * `this_refreshSession`, and emit an `expired` event there.\n         *\n         * Everything else is handled here.\n         */\n        if (\n          [1, 408, 425, 429, 500, 502, 503, 504, 522, 524].includes(e.status)\n        ) {\n          this._persistSession?.('network-error', undefined)\n        } else {\n          this._persistSession?.('expired', undefined)\n        }\n      } else {\n        this._persistSession?.('network-error', undefined)\n      }\n\n      throw e\n    }\n  }\n\n  /**\n   * Internal helper to add authorization headers to requests.\n   */\n  private _addHeaders(reqHeaders: Record<string, string>) {\n    if (!reqHeaders.authorization && this.session?.accessJwt) {\n      reqHeaders = {\n        ...reqHeaders,\n        authorization: `Bearer ${this.session.accessJwt}`,\n      }\n    }\n    if (this.proxyHeader) {\n      reqHeaders = {\n        ...reqHeaders,\n        'atproto-proxy': this.proxyHeader,\n      }\n    }\n    reqHeaders = {\n      ...reqHeaders,\n      'atproto-accept-labelers': AtpAgent.appLabelers\n        .map((str) => `${str};redact`)\n        .concat(this.labelersHeader.filter((str) => str.startsWith('did:')))\n        .slice(0, MAX_LABELERS)\n        .join(', '),\n    }\n    return reqHeaders\n  }\n\n  /**\n   * Internal fetch handler which adds access-token management\n   */\n  private async _fetch(\n    reqUri: string,\n    reqMethod: string,\n    reqHeaders: Record<string, string>,\n    reqBody: any,\n  ): Promise<AtpAgentFetchHandlerResponse> {\n    if (!AtpAgent.fetch) {\n      throw new Error('AtpAgent fetch() method not configured')\n    }\n\n    // wait for any active session-refreshes to finish\n    await this._refreshSessionPromise\n\n    // send the request\n    let res = await AtpAgent.fetch(\n      reqUri,\n      reqMethod,\n      this._addHeaders(reqHeaders),\n      reqBody,\n    )\n\n    // handle session-refreshes as needed\n    if (isErrorResponse(res, ['ExpiredToken']) && this.session?.refreshJwt) {\n      // attempt refresh\n      await this.refreshSession()\n\n      // resend the request with the new access token\n      res = await AtpAgent.fetch(\n        reqUri,\n        reqMethod,\n        this._addHeaders(reqHeaders),\n        reqBody,\n      )\n    }\n\n    return res\n  }\n\n  /**\n   * Internal helper to refresh sessions\n   * - Wraps the actual implementation in a promise-guard to ensure only\n   *   one refresh is attempted at a time.\n   */\n  async refreshSession() {\n    if (this._refreshSessionPromise) {\n      return this._refreshSessionPromise\n    }\n    this._refreshSessionPromise = this._refreshSessionInner()\n    try {\n      await this._refreshSessionPromise\n    } finally {\n      this._refreshSessionPromise = undefined\n    }\n  }\n\n  /**\n   * Internal helper to refresh sessions (actual behavior)\n   */\n  private async _refreshSessionInner() {\n    if (!AtpAgent.fetch) {\n      throw new Error('AtpAgent fetch() method not configured')\n    }\n    if (!this.session?.refreshJwt) {\n      return\n    }\n\n    // send the refresh request\n    const url = new URL((this.pdsUrl || this.service).origin)\n    url.pathname = `/xrpc/${REFRESH_SESSION}`\n    const res = await AtpAgent.fetch(\n      url.toString(),\n      'POST',\n      {\n        authorization: `Bearer ${this.session.refreshJwt}`,\n      },\n      undefined,\n    )\n\n    if (isErrorResponse(res, ['ExpiredToken', 'InvalidToken'])) {\n      // failed due to a bad refresh token\n      this.session = undefined\n      this._persistSession?.('expired', undefined)\n    } else if (isNewSessionObject(this._baseClient, res.body)) {\n      // succeeded, update the session\n      this.session = {\n        ...(this.session || {}),\n        accessJwt: res.body.accessJwt,\n        refreshJwt: res.body.refreshJwt,\n        handle: res.body.handle,\n        did: res.body.did,\n      }\n      this._updateApiEndpoint(res.body.didDoc)\n      this._persistSession?.('update', this.session)\n    }\n    // else: other failures should be ignored - the issue will\n    // propagate in the _fetch() handler's second attempt to run\n    // the request\n  }\n\n  /**\n   * Upload a binary blob to the server\n   */\n  uploadBlob: typeof this.api.com.atproto.repo.uploadBlob = (data, opts) =>\n    this.api.com.atproto.repo.uploadBlob(data, opts)\n\n  /**\n   * Resolve a handle to a DID\n   */\n  resolveHandle: typeof this.api.com.atproto.identity.resolveHandle = (\n    params,\n    opts,\n  ) => this.api.com.atproto.identity.resolveHandle(params, opts)\n\n  /**\n   * Change the user's handle\n   */\n  updateHandle: typeof this.api.com.atproto.identity.updateHandle = (\n    data,\n    opts,\n  ) => this.api.com.atproto.identity.updateHandle(data, opts)\n\n  /**\n   * Create a moderation report\n   */\n  createModerationReport: typeof this.api.com.atproto.moderation.createReport =\n    (data, opts) => this.api.com.atproto.moderation.createReport(data, opts)\n\n  /**\n   * Helper to update the pds endpoint dynamically.\n   *\n   * The session methods (create, resume, refresh) may respond with the user's\n   * did document which contains the user's canonical PDS endpoint. That endpoint\n   * may differ from the endpoint used to contact the server. We capture that\n   * PDS endpoint and update the client to use that given endpoint for future\n   * requests. (This helps ensure smooth migrations between PDSes, especially\n   * when the PDSes are operated by a single org.)\n   */\n  private _updateApiEndpoint(didDoc: unknown) {\n    if (isValidDidDoc(didDoc)) {\n      const endpoint = getPdsEndpoint(didDoc)\n      this.pdsUrl = endpoint ? new URL(endpoint) : undefined\n    }\n    this.api.xrpc.uri = this.pdsUrl || this.service\n  }\n}\n\nfunction isErrorObject(v: unknown): v is ErrorResponseBody {\n  return errorResponseBody.safeParse(v).success\n}\n\nfunction isErrorResponse(\n  res: AtpAgentFetchHandlerResponse,\n  errorNames: string[],\n): boolean {\n  if (res.status !== 400) {\n    return false\n  }\n  if (!isErrorObject(res.body)) {\n    return false\n  }\n  return (\n    typeof res.body.error === 'string' && errorNames.includes(res.body.error)\n  )\n}\n\nfunction isNewSessionObject(\n  client: AtpBaseClient,\n  v: unknown,\n): v is ComAtprotoServerRefreshSession.OutputSchema {\n  try {\n    client.xrpc.lex.assertValidXrpcOutput(\n      'com.atproto.server.refreshSession',\n      v,\n    )\n    return true\n  } catch {\n    return false\n  }\n}\n", "/**\n * Javascript uses utf16-encoded strings while most environments and specs\n * have standardized around utf8 (including JSON).\n *\n * After some lengthy debated we decided that richtext facets need to use\n * utf8 indices. This means we need tools to convert indices between utf8\n * and utf16, and that's precisely what this library handles.\n */\n\nimport { graphemeLen } from '@atproto/common-web'\n\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\n\nexport class UnicodeString {\n  utf16: string\n  utf8: Uint8Array\n  private _graphemeLen?: number | undefined\n\n  constructor(utf16: string) {\n    this.utf16 = utf16\n    this.utf8 = encoder.encode(utf16)\n  }\n\n  get length() {\n    return this.utf8.byteLength\n  }\n\n  get graphemeLength() {\n    if (!this._graphemeLen) {\n      this._graphemeLen = graphemeLen(this.utf16)\n    }\n    return this._graphemeLen\n  }\n\n  slice(start?: number, end?: number): string {\n    return decoder.decode(this.utf8.slice(start, end))\n  }\n\n  utf16IndexToUtf8Index(i: number) {\n    return encoder.encode(this.utf16.slice(0, i)).byteLength\n  }\n\n  toString() {\n    return this.utf16\n  }\n}\n", "import { RichText } from './rich-text'\nimport { UnicodeString } from './unicode'\n\n// this regex is intentionally matching on the zero-with-separator codepoint\n// eslint-disable-next-line no-misleading-character-class\nconst EXCESS_SPACE_RE = /[\\r\\n]([\\u00AD\\u2060\\u200D\\u200C\\u200B\\s]*[\\r\\n]){2,}/\nconst REPLACEMENT_STR = '\\n\\n'\n\nexport function sanitizeRichText(\n  richText: RichText,\n  opts: { cleanNewlines?: boolean },\n) {\n  if (opts.cleanNewlines) {\n    richText = clean(richText, EXCESS_SPACE_RE, REPLACEMENT_STR)\n  }\n  return richText\n}\n\nfunction clean(\n  richText: RichText,\n  targetRegexp: RegExp,\n  replacementString: string,\n): RichText {\n  richText = richText.clone()\n\n  let match = richText.unicodeText.utf16.match(targetRegexp)\n  while (match && typeof match.index !== 'undefined') {\n    const oldText = richText.unicodeText\n    const removeStartIndex = richText.unicodeText.utf16IndexToUtf8Index(\n      match.index,\n    )\n    const removeEndIndex = removeStartIndex + new UnicodeString(match[0]).length\n    richText.delete(removeStartIndex, removeEndIndex)\n    if (richText.unicodeText.utf16 === oldText.utf16) {\n      break // sanity check\n    }\n    richText.insert(removeStartIndex, replacementString)\n    match = richText.unicodeText.utf16.match(targetRegexp)\n  }\n\n  return richText\n}\n", "[\n  \"aaa\",\n  \"aarp\",\n  \"abb\",\n  \"abbott\",\n  \"abbvie\",\n  \"abc\",\n  \"able\",\n  \"abogado\",\n  \"abudhabi\",\n  \"ac\",\n  \"academy\",\n  \"accenture\",\n  \"accountant\",\n  \"accountants\",\n  \"aco\",\n  \"actor\",\n  \"ad\",\n  \"ads\",\n  \"adult\",\n  \"ae\",\n  \"aeg\",\n  \"aero\",\n  \"aetna\",\n  \"af\",\n  \"afl\",\n  \"africa\",\n  \"ag\",\n  \"agakhan\",\n  \"agency\",\n  \"ai\",\n  \"aig\",\n  \"airbus\",\n  \"airforce\",\n  \"airtel\",\n  \"akdn\",\n  \"al\",\n  \"alibaba\",\n  \"alipay\",\n  \"allfinanz\",\n  \"allstate\",\n  \"ally\",\n  \"alsace\",\n  \"alstom\",\n  \"am\",\n  \"amazon\",\n  \"americanexpress\",\n  \"americanfamily\",\n  \"amex\",\n  \"amfam\",\n  \"amica\",\n  \"amsterdam\",\n  \"analytics\",\n  \"android\",\n  \"anquan\",\n  \"anz\",\n  \"ao\",\n  \"aol\",\n  \"apartments\",\n  \"app\",\n  \"apple\",\n  \"aq\",\n  \"aquarelle\",\n  \"ar\",\n  \"arab\",\n  \"aramco\",\n  \"archi\",\n  \"army\",\n  \"arpa\",\n  \"art\",\n  \"arte\",\n  \"as\",\n  \"asda\",\n  \"asia\",\n  \"associates\",\n  \"at\",\n  \"athleta\",\n  \"attorney\",\n  \"au\",\n  \"auction\",\n  \"audi\",\n  \"audible\",\n  \"audio\",\n  \"auspost\",\n  \"author\",\n  \"auto\",\n  \"autos\",\n  \"aw\",\n  \"aws\",\n  \"ax\",\n  \"axa\",\n  \"az\",\n  \"azure\",\n  \"ba\",\n  \"baby\",\n  \"baidu\",\n  \"banamex\",\n  \"band\",\n  \"bank\",\n  \"bar\",\n  \"barcelona\",\n  \"barclaycard\",\n  \"barclays\",\n  \"barefoot\",\n  \"bargains\",\n  \"baseball\",\n  \"basketball\",\n  \"bauhaus\",\n  \"bayern\",\n  \"bb\",\n  \"bbc\",\n  \"bbt\",\n  \"bbva\",\n  \"bcg\",\n  \"bcn\",\n  \"bd\",\n  \"be\",\n  \"beats\",\n  \"beauty\",\n  \"beer\",\n  \"bentley\",\n  \"berlin\",\n  \"best\",\n  \"bestbuy\",\n  \"bet\",\n  \"bf\",\n  \"bg\",\n  \"bh\",\n  \"bharti\",\n  \"bi\",\n  \"bible\",\n  \"bid\",\n  \"bike\",\n  \"bing\",\n  \"bingo\",\n  \"bio\",\n  \"biz\",\n  \"bj\",\n  \"black\",\n  \"blackfriday\",\n  \"blockbuster\",\n  \"blog\",\n  \"bloomberg\",\n  \"blue\",\n  \"bm\",\n  \"bms\",\n  \"bmw\",\n  \"bn\",\n  \"bnpparibas\",\n  \"bo\",\n  \"boats\",\n  \"boehringer\",\n  \"bofa\",\n  \"bom\",\n  \"bond\",\n  \"boo\",\n  \"book\",\n  \"booking\",\n  \"bosch\",\n  \"bostik\",\n  \"boston\",\n  \"bot\",\n  \"boutique\",\n  \"box\",\n  \"br\",\n  \"bradesco\",\n  \"bridgestone\",\n  \"broadway\",\n  \"broker\",\n  \"brother\",\n  \"brussels\",\n  \"bs\",\n  \"bt\",\n  \"build\",\n  \"builders\",\n  \"business\",\n  \"buy\",\n  \"buzz\",\n  \"bv\",\n  \"bw\",\n  \"by\",\n  \"bz\",\n  \"bzh\",\n  \"ca\",\n  \"cab\",\n  \"cafe\",\n  \"cal\",\n  \"call\",\n  \"calvinklein\",\n  \"cam\",\n  \"camera\",\n  \"camp\",\n  \"canon\",\n  \"capetown\",\n  \"capital\",\n  \"capitalone\",\n  \"car\",\n  \"caravan\",\n  \"cards\",\n  \"care\",\n  \"career\",\n  \"careers\",\n  \"cars\",\n  \"casa\",\n  \"case\",\n  \"cash\",\n  \"casino\",\n  \"cat\",\n  \"catering\",\n  \"catholic\",\n  \"cba\",\n  \"cbn\",\n  \"cbre\",\n  \"cc\",\n  \"cd\",\n  \"center\",\n  \"ceo\",\n  \"cern\",\n  \"cf\",\n  \"cfa\",\n  \"cfd\",\n  \"cg\",\n  \"ch\",\n  \"chanel\",\n  \"channel\",\n  \"charity\",\n  \"chase\",\n  \"chat\",\n  \"cheap\",\n  \"chintai\",\n  \"christmas\",\n  \"chrome\",\n  \"church\",\n  \"ci\",\n  \"cipriani\",\n  \"circle\",\n  \"cisco\",\n  \"citadel\",\n  \"citi\",\n  \"citic\",\n  \"city\",\n  \"ck\",\n  \"cl\",\n  \"claims\",\n  \"cleaning\",\n  \"click\",\n  \"clinic\",\n  \"clinique\",\n  \"clothing\",\n  \"cloud\",\n  \"club\",\n  \"clubmed\",\n  \"cm\",\n  \"cn\",\n  \"co\",\n  \"coach\",\n  \"codes\",\n  \"coffee\",\n  \"college\",\n  \"cologne\",\n  \"com\",\n  \"commbank\",\n  \"community\",\n  \"company\",\n  \"compare\",\n  \"computer\",\n  \"comsec\",\n  \"condos\",\n  \"construction\",\n  \"consulting\",\n  \"contact\",\n  \"contractors\",\n  \"cooking\",\n  \"cool\",\n  \"coop\",\n  \"corsica\",\n  \"country\",\n  \"coupon\",\n  \"coupons\",\n  \"courses\",\n  \"cpa\",\n  \"cr\",\n  \"credit\",\n  \"creditcard\",\n  \"creditunion\",\n  \"cricket\",\n  \"crown\",\n  \"crs\",\n  \"cruise\",\n  \"cruises\",\n  \"cu\",\n  \"cuisinella\",\n  \"cv\",\n  \"cw\",\n  \"cx\",\n  \"cy\",\n  \"cymru\",\n  \"cyou\",\n  \"cz\",\n  \"dabur\",\n  \"dad\",\n  \"dance\",\n  \"data\",\n  \"date\",\n  \"dating\",\n  \"datsun\",\n  \"day\",\n  \"dclk\",\n  \"dds\",\n  \"de\",\n  \"deal\",\n  \"dealer\",\n  \"deals\",\n  \"degree\",\n  \"delivery\",\n  \"dell\",\n  \"deloitte\",\n  \"delta\",\n  \"democrat\",\n  \"dental\",\n  \"dentist\",\n  \"desi\",\n  \"design\",\n  \"dev\",\n  \"dhl\",\n  \"diamonds\",\n  \"diet\",\n  \"digital\",\n  \"direct\",\n  \"directory\",\n  \"discount\",\n  \"discover\",\n  \"dish\",\n  \"diy\",\n  \"dj\",\n  \"dk\",\n  \"dm\",\n  \"dnp\",\n  \"do\",\n  \"docs\",\n  \"doctor\",\n  \"dog\",\n  \"domains\",\n  \"dot\",\n  \"download\",\n  \"drive\",\n  \"dtv\",\n  \"dubai\",\n  \"dunlop\",\n  \"dupont\",\n  \"durban\",\n  \"dvag\",\n  \"dvr\",\n  \"dz\",\n  \"earth\",\n  \"eat\",\n  \"ec\",\n  \"eco\",\n  \"edeka\",\n  \"edu\",\n  \"education\",\n  \"ee\",\n  \"eg\",\n  \"email\",\n  \"emerck\",\n  \"energy\",\n  \"engineer\",\n  \"engineering\",\n  \"enterprises\",\n  \"epson\",\n  \"equipment\",\n  \"er\",\n  \"ericsson\",\n  \"erni\",\n  \"es\",\n  \"esq\",\n  \"estate\",\n  \"et\",\n  \"eu\",\n  \"eurovision\",\n  \"eus\",\n  \"events\",\n  \"exchange\",\n  \"expert\",\n  \"exposed\",\n  \"express\",\n  \"extraspace\",\n  \"fage\",\n  \"fail\",\n  \"fairwinds\",\n  \"faith\",\n  \"family\",\n  \"fan\",\n  \"fans\",\n  \"farm\",\n  \"farmers\",\n  \"fashion\",\n  \"fast\",\n  \"fedex\",\n  \"feedback\",\n  \"ferrari\",\n  \"ferrero\",\n  \"fi\",\n  \"fidelity\",\n  \"fido\",\n  \"film\",\n  \"final\",\n  \"finance\",\n  \"financial\",\n  \"fire\",\n  \"firestone\",\n  \"firmdale\",\n  \"fish\",\n  \"fishing\",\n  \"fit\",\n  \"fitness\",\n  \"fj\",\n  \"fk\",\n  \"flickr\",\n  \"flights\",\n  \"flir\",\n  \"florist\",\n  \"flowers\",\n  \"fly\",\n  \"fm\",\n  \"fo\",\n  \"foo\",\n  \"food\",\n  \"football\",\n  \"ford\",\n  \"forex\",\n  \"forsale\",\n  \"forum\",\n  \"foundation\",\n  \"fox\",\n  \"fr\",\n  \"free\",\n  \"fresenius\",\n  \"frl\",\n  \"frogans\",\n  \"frontier\",\n  \"ftr\",\n  \"fujitsu\",\n  \"fun\",\n  \"fund\",\n  \"furniture\",\n  \"futbol\",\n  \"fyi\",\n  \"ga\",\n  \"gal\",\n  \"gallery\",\n  \"gallo\",\n  \"gallup\",\n  \"game\",\n  \"games\",\n  \"gap\",\n  \"garden\",\n  \"gay\",\n  \"gb\",\n  \"gbiz\",\n  \"gd\",\n  \"gdn\",\n  \"ge\",\n  \"gea\",\n  \"gent\",\n  \"genting\",\n  \"george\",\n  \"gf\",\n  \"gg\",\n  \"ggee\",\n  \"gh\",\n  \"gi\",\n  \"gift\",\n  \"gifts\",\n  \"gives\",\n  \"giving\",\n  \"gl\",\n  \"glass\",\n  \"gle\",\n  \"global\",\n  \"globo\",\n  \"gm\",\n  \"gmail\",\n  \"gmbh\",\n  \"gmo\",\n  \"gmx\",\n  \"gn\",\n  \"godaddy\",\n  \"gold\",\n  \"goldpoint\",\n  \"golf\",\n  \"goo\",\n  \"goodyear\",\n  \"goog\",\n  \"google\",\n  \"gop\",\n  \"got\",\n  \"gov\",\n  \"gp\",\n  \"gq\",\n  \"gr\",\n  \"grainger\",\n  \"graphics\",\n  \"gratis\",\n  \"green\",\n  \"gripe\",\n  \"grocery\",\n  \"group\",\n  \"gs\",\n  \"gt\",\n  \"gu\",\n  \"gucci\",\n  \"guge\",\n  \"guide\",\n  \"guitars\",\n  \"guru\",\n  \"gw\",\n  \"gy\",\n  \"hair\",\n  \"hamburg\",\n  \"hangout\",\n  \"haus\",\n  \"hbo\",\n  \"hdfc\",\n  \"hdfcbank\",\n  \"health\",\n  \"healthcare\",\n  \"help\",\n  \"helsinki\",\n  \"here\",\n  \"hermes\",\n  \"hiphop\",\n  \"hisamitsu\",\n  \"hitachi\",\n  \"hiv\",\n  \"hk\",\n  \"hkt\",\n  \"hm\",\n  \"hn\",\n  \"hockey\",\n  \"holdings\",\n  \"holiday\",\n  \"homedepot\",\n  \"homegoods\",\n  \"homes\",\n  \"homesense\",\n  \"honda\",\n  \"horse\",\n  \"hospital\",\n  \"host\",\n  \"hosting\",\n  \"hot\",\n  \"hotels\",\n  \"hotmail\",\n  \"house\",\n  \"how\",\n  \"hr\",\n  \"hsbc\",\n  \"ht\",\n  \"hu\",\n  \"hughes\",\n  \"hyatt\",\n  \"hyundai\",\n  \"ibm\",\n  \"icbc\",\n  \"ice\",\n  \"icu\",\n  \"id\",\n  \"ie\",\n  \"ieee\",\n  \"ifm\",\n  \"ikano\",\n  \"il\",\n  \"im\",\n  \"imamat\",\n  \"imdb\",\n  \"immo\",\n  \"immobilien\",\n  \"in\",\n  \"inc\",\n  \"industries\",\n  \"infiniti\",\n  \"info\",\n  \"ing\",\n  \"ink\",\n  \"institute\",\n  \"insurance\",\n  \"insure\",\n  \"int\",\n  \"international\",\n  \"intuit\",\n  \"investments\",\n  \"io\",\n  \"ipiranga\",\n  \"iq\",\n  \"ir\",\n  \"irish\",\n  \"is\",\n  \"ismaili\",\n  \"ist\",\n  \"istanbul\",\n  \"it\",\n  \"itau\",\n  \"itv\",\n  \"jaguar\",\n  \"java\",\n  \"jcb\",\n  \"je\",\n  \"jeep\",\n  \"jetzt\",\n  \"jewelry\",\n  \"jio\",\n  \"jll\",\n  \"jm\",\n  \"jmp\",\n  \"jnj\",\n  \"jo\",\n  \"jobs\",\n  \"joburg\",\n  \"jot\",\n  \"joy\",\n  \"jp\",\n  \"jpmorgan\",\n  \"jprs\",\n  \"juegos\",\n  \"juniper\",\n  \"kaufen\",\n  \"kddi\",\n  \"ke\",\n  \"kerryhotels\",\n  \"kerrylogistics\",\n  \"kerryproperties\",\n  \"kfh\",\n  \"kg\",\n  \"kh\",\n  \"ki\",\n  \"kia\",\n  \"kids\",\n  \"kim\",\n  \"kindle\",\n  \"kitchen\",\n  \"kiwi\",\n  \"km\",\n  \"kn\",\n  \"koeln\",\n  \"komatsu\",\n  \"kosher\",\n  \"kp\",\n  \"kpmg\",\n  \"kpn\",\n  \"kr\",\n  \"krd\",\n  \"kred\",\n  \"kuokgroup\",\n  \"kw\",\n  \"ky\",\n  \"kyoto\",\n  \"kz\",\n  \"la\",\n  \"lacaixa\",\n  \"lamborghini\",\n  \"lamer\",\n  \"lancaster\",\n  \"land\",\n  \"landrover\",\n  \"lanxess\",\n  \"lasalle\",\n  \"lat\",\n  \"latino\",\n  \"latrobe\",\n  \"law\",\n  \"lawyer\",\n  \"lb\",\n  \"lc\",\n  \"lds\",\n  \"lease\",\n  \"leclerc\",\n  \"lefrak\",\n  \"legal\",\n  \"lego\",\n  \"lexus\",\n  \"lgbt\",\n  \"li\",\n  \"lidl\",\n  \"life\",\n  \"lifeinsurance\",\n  \"lifestyle\",\n  \"lighting\",\n  \"like\",\n  \"lilly\",\n  \"limited\",\n  \"limo\",\n  \"lincoln\",\n  \"link\",\n  \"lipsy\",\n  \"live\",\n  \"living\",\n  \"lk\",\n  \"llc\",\n  \"llp\",\n  \"loan\",\n  \"loans\",\n  \"locker\",\n  \"locus\",\n  \"lol\",\n  \"london\",\n  \"lotte\",\n  \"lotto\",\n  \"love\",\n  \"lpl\",\n  \"lplfinancial\",\n  \"lr\",\n  \"ls\",\n  \"lt\",\n  \"ltd\",\n  \"ltda\",\n  \"lu\",\n  \"lundbeck\",\n  \"luxe\",\n  \"luxury\",\n  \"lv\",\n  \"ly\",\n  \"ma\",\n  \"madrid\",\n  \"maif\",\n  \"maison\",\n  \"makeup\",\n  \"man\",\n  \"management\",\n  \"mango\",\n  \"map\",\n  \"market\",\n  \"marketing\",\n  \"markets\",\n  \"marriott\",\n  \"marshalls\",\n  \"mattel\",\n  \"mba\",\n  \"mc\",\n  \"mckinsey\",\n  \"md\",\n  \"me\",\n  \"med\",\n  \"media\",\n  \"meet\",\n  \"melbourne\",\n  \"meme\",\n  \"memorial\",\n  \"men\",\n  \"menu\",\n  \"merckmsd\",\n  \"mg\",\n  \"mh\",\n  \"miami\",\n  \"microsoft\",\n  \"mil\",\n  \"mini\",\n  \"mint\",\n  \"mit\",\n  \"mitsubishi\",\n  \"mk\",\n  \"ml\",\n  \"mlb\",\n  \"mls\",\n  \"mm\",\n  \"mma\",\n  \"mn\",\n  \"mo\",\n  \"mobi\",\n  \"mobile\",\n  \"moda\",\n  \"moe\",\n  \"moi\",\n  \"mom\",\n  \"monash\",\n  \"money\",\n  \"monster\",\n  \"mormon\",\n  \"mortgage\",\n  \"moscow\",\n  \"moto\",\n  \"motorcycles\",\n  \"mov\",\n  \"movie\",\n  \"mp\",\n  \"mq\",\n  \"mr\",\n  \"ms\",\n  \"msd\",\n  \"mt\",\n  \"mtn\",\n  \"mtr\",\n  \"mu\",\n  \"museum\",\n  \"music\",\n  \"mv\",\n  \"mw\",\n  \"mx\",\n  \"my\",\n  \"mz\",\n  \"na\",\n  \"nab\",\n  \"nagoya\",\n  \"name\",\n  \"natura\",\n  \"navy\",\n  \"nba\",\n  \"nc\",\n  \"ne\",\n  \"nec\",\n  \"net\",\n  \"netbank\",\n  \"netflix\",\n  \"network\",\n  \"neustar\",\n  \"new\",\n  \"news\",\n  \"next\",\n  \"nextdirect\",\n  \"nexus\",\n  \"nf\",\n  \"nfl\",\n  \"ng\",\n  \"ngo\",\n  \"nhk\",\n  \"ni\",\n  \"nico\",\n  \"nike\",\n  \"nikon\",\n  \"ninja\",\n  \"nissan\",\n  \"nissay\",\n  \"nl\",\n  \"no\",\n  \"nokia\",\n  \"norton\",\n  \"now\",\n  \"nowruz\",\n  \"nowtv\",\n  \"np\",\n  \"nr\",\n  \"nra\",\n  \"nrw\",\n  \"ntt\",\n  \"nu\",\n  \"nyc\",\n  \"nz\",\n  \"obi\",\n  \"observer\",\n  \"office\",\n  \"okinawa\",\n  \"olayan\",\n  \"olayangroup\",\n  \"ollo\",\n  \"om\",\n  \"omega\",\n  \"one\",\n  \"ong\",\n  \"onl\",\n  \"online\",\n  \"ooo\",\n  \"open\",\n  \"oracle\",\n  \"orange\",\n  \"org\",\n  \"organic\",\n  \"origins\",\n  \"osaka\",\n  \"otsuka\",\n  \"ott\",\n  \"ovh\",\n  \"pa\",\n  \"page\",\n  \"panasonic\",\n  \"paris\",\n  \"pars\",\n  \"partners\",\n  \"parts\",\n  \"party\",\n  \"pay\",\n  \"pccw\",\n  \"pe\",\n  \"pet\",\n  \"pf\",\n  \"pfizer\",\n  \"pg\",\n  \"ph\",\n  \"pharmacy\",\n  \"phd\",\n  \"philips\",\n  \"phone\",\n  \"photo\",\n  \"photography\",\n  \"photos\",\n  \"physio\",\n  \"pics\",\n  \"pictet\",\n  \"pictures\",\n  \"pid\",\n  \"pin\",\n  \"ping\",\n  \"pink\",\n  \"pioneer\",\n  \"pizza\",\n  \"pk\",\n  \"pl\",\n  \"place\",\n  \"play\",\n  \"playstation\",\n  \"plumbing\",\n  \"plus\",\n  \"pm\",\n  \"pn\",\n  \"pnc\",\n  \"pohl\",\n  \"poker\",\n  \"politie\",\n  \"porn\",\n  \"post\",\n  \"pr\",\n  \"pramerica\",\n  \"praxi\",\n  \"press\",\n  \"prime\",\n  \"pro\",\n  \"prod\",\n  \"productions\",\n  \"prof\",\n  \"progressive\",\n  \"promo\",\n  \"properties\",\n  \"property\",\n  \"protection\",\n  \"pru\",\n  \"prudential\",\n  \"ps\",\n  \"pt\",\n  \"pub\",\n  \"pw\",\n  \"pwc\",\n  \"py\",\n  \"qa\",\n  \"qpon\",\n  \"quebec\",\n  \"quest\",\n  \"racing\",\n  \"radio\",\n  \"re\",\n  \"read\",\n  \"realestate\",\n  \"realtor\",\n  \"realty\",\n  \"recipes\",\n  \"red\",\n  \"redstone\",\n  \"redumbrella\",\n  \"rehab\",\n  \"reise\",\n  \"reisen\",\n  \"reit\",\n  \"reliance\",\n  \"ren\",\n  \"rent\",\n  \"rentals\",\n  \"repair\",\n  \"report\",\n  \"republican\",\n  \"rest\",\n  \"restaurant\",\n  \"review\",\n  \"reviews\",\n  \"rexroth\",\n  \"rich\",\n  \"richardli\",\n  \"ricoh\",\n  \"ril\",\n  \"rio\",\n  \"rip\",\n  \"ro\",\n  \"rocks\",\n  \"rodeo\",\n  \"rogers\",\n  \"room\",\n  \"rs\",\n  \"rsvp\",\n  \"ru\",\n  \"rugby\",\n  \"ruhr\",\n  \"run\",\n  \"rw\",\n  \"rwe\",\n  \"ryukyu\",\n  \"sa\",\n  \"saarland\",\n  \"safe\",\n  \"safety\",\n  \"sakura\",\n  \"sale\",\n  \"salon\",\n  \"samsclub\",\n  \"samsung\",\n  \"sandvik\",\n  \"sandvikcoromant\",\n  \"sanofi\",\n  \"sap\",\n  \"sarl\",\n  \"sas\",\n  \"save\",\n  \"saxo\",\n  \"sb\",\n  \"sbi\",\n  \"sbs\",\n  \"sc\",\n  \"scb\",\n  \"schaeffler\",\n  \"schmidt\",\n  \"scholarships\",\n  \"school\",\n  \"schule\",\n  \"schwarz\",\n  \"science\",\n  \"scot\",\n  \"sd\",\n  \"se\",\n  \"search\",\n  \"seat\",\n  \"secure\",\n  \"security\",\n  \"seek\",\n  \"select\",\n  \"sener\",\n  \"services\",\n  \"seven\",\n  \"sew\",\n  \"sex\",\n  \"sexy\",\n  \"sfr\",\n  \"sg\",\n  \"sh\",\n  \"shangrila\",\n  \"sharp\",\n  \"shaw\",\n  \"shell\",\n  \"shia\",\n  \"shiksha\",\n  \"shoes\",\n  \"shop\",\n  \"shopping\",\n  \"shouji\",\n  \"show\",\n  \"si\",\n  \"silk\",\n  \"sina\",\n  \"singles\",\n  \"site\",\n  \"sj\",\n  \"sk\",\n  \"ski\",\n  \"skin\",\n  \"sky\",\n  \"skype\",\n  \"sl\",\n  \"sling\",\n  \"sm\",\n  \"smart\",\n  \"smile\",\n  \"sn\",\n  \"sncf\",\n  \"so\",\n  \"soccer\",\n  \"social\",\n  \"softbank\",\n  \"software\",\n  \"sohu\",\n  \"solar\",\n  \"solutions\",\n  \"song\",\n  \"sony\",\n  \"soy\",\n  \"spa\",\n  \"space\",\n  \"sport\",\n  \"spot\",\n  \"sr\",\n  \"srl\",\n  \"ss\",\n  \"st\",\n  \"stada\",\n  \"staples\",\n  \"star\",\n  \"statebank\",\n  \"statefarm\",\n  \"stc\",\n  \"stcgroup\",\n  \"stockholm\",\n  \"storage\",\n  \"store\",\n  \"stream\",\n  \"studio\",\n  \"study\",\n  \"style\",\n  \"su\",\n  \"sucks\",\n  \"supplies\",\n  \"supply\",\n  \"support\",\n  \"surf\",\n  \"surgery\",\n  \"suzuki\",\n  \"sv\",\n  \"swatch\",\n  \"swiss\",\n  \"sx\",\n  \"sy\",\n  \"sydney\",\n  \"systems\",\n  \"sz\",\n  \"tab\",\n  \"taipei\",\n  \"talk\",\n  \"taobao\",\n  \"target\",\n  \"tatamotors\",\n  \"tatar\",\n  \"tattoo\",\n  \"tax\",\n  \"taxi\",\n  \"tc\",\n  \"tci\",\n  \"td\",\n  \"tdk\",\n  \"team\",\n  \"tech\",\n  \"technology\",\n  \"tel\",\n  \"temasek\",\n  \"tennis\",\n  \"teva\",\n  \"tf\",\n  \"tg\",\n  \"th\",\n  \"thd\",\n  \"theater\",\n  \"theatre\",\n  \"tiaa\",\n  \"tickets\",\n  \"tienda\",\n  \"tips\",\n  \"tires\",\n  \"tirol\",\n  \"tj\",\n  \"tjmaxx\",\n  \"tjx\",\n  \"tk\",\n  \"tkmaxx\",\n  \"tl\",\n  \"tm\",\n  \"tmall\",\n  \"tn\",\n  \"to\",\n  \"today\",\n  \"tokyo\",\n  \"tools\",\n  \"top\",\n  \"toray\",\n  \"toshiba\",\n  \"total\",\n  \"tours\",\n  \"town\",\n  \"toyota\",\n  \"toys\",\n  \"tr\",\n  \"trade\",\n  \"trading\",\n  \"training\",\n  \"travel\",\n  \"travelers\",\n  \"travelersinsurance\",\n  \"trust\",\n  \"trv\",\n  \"tt\",\n  \"tube\",\n  \"tui\",\n  \"tunes\",\n  \"tushu\",\n  \"tv\",\n  \"tvs\",\n  \"tw\",\n  \"tz\",\n  \"ua\",\n  \"ubank\",\n  \"ubs\",\n  \"ug\",\n  \"uk\",\n  \"unicom\",\n  \"university\",\n  \"uno\",\n  \"uol\",\n  \"ups\",\n  \"us\",\n  \"uy\",\n  \"uz\",\n  \"va\",\n  \"vacations\",\n  \"vana\",\n  \"vanguard\",\n  \"vc\",\n  \"ve\",\n  \"vegas\",\n  \"ventures\",\n  \"verisign\",\n  \"verm\u00F6gensberater\",\n  \"verm\u00F6gensberatung\",\n  \"versicherung\",\n  \"vet\",\n  \"vg\",\n  \"vi\",\n  \"viajes\",\n  \"video\",\n  \"vig\",\n  \"viking\",\n  \"villas\",\n  \"vin\",\n  \"vip\",\n  \"virgin\",\n  \"visa\",\n  \"vision\",\n  \"viva\",\n  \"vivo\",\n  \"vlaanderen\",\n  \"vn\",\n  \"vodka\",\n  \"volvo\",\n  \"vote\",\n  \"voting\",\n  \"voto\",\n  \"voyage\",\n  \"vu\",\n  \"wales\",\n  \"walmart\",\n  \"walter\",\n  \"wang\",\n  \"wanggou\",\n  \"watch\",\n  \"watches\",\n  \"weather\",\n  \"weatherchannel\",\n  \"webcam\",\n  \"weber\",\n  \"website\",\n  \"wed\",\n  \"wedding\",\n  \"weibo\",\n  \"weir\",\n  \"wf\",\n  \"whoswho\",\n  \"wien\",\n  \"wiki\",\n  \"williamhill\",\n  \"win\",\n  \"windows\",\n  \"wine\",\n  \"winners\",\n  \"wme\",\n  \"wolterskluwer\",\n  \"woodside\",\n  \"work\",\n  \"works\",\n  \"world\",\n  \"wow\",\n  \"ws\",\n  \"wtc\",\n  \"wtf\",\n  \"xbox\",\n  \"xerox\",\n  \"xihuan\",\n  \"xin\",\n  \"xxx\",\n  \"xyz\",\n  \"yachts\",\n  \"yahoo\",\n  \"yamaxun\",\n  \"yandex\",\n  \"ye\",\n  \"yodobashi\",\n  \"yoga\",\n  \"yokohama\",\n  \"you\",\n  \"youtube\",\n  \"yt\",\n  \"yun\",\n  \"za\",\n  \"zappos\",\n  \"zara\",\n  \"zero\",\n  \"zip\",\n  \"zm\",\n  \"zone\",\n  \"zuerich\",\n  \"zw\",\n  \"\u03B5\u03BB\",\n  \"\u03B5\u03C5\",\n  \"\u0431\u0433\",\n  \"\u0431\u0435\u043B\",\n  \"\u0434\u0435\u0442\u0438\",\n  \"\u0435\u044E\",\n  \"\u043A\u0430\u0442\u043E\u043B\u0438\u043A\",\n  \"\u043A\u043E\u043C\",\n  \"\u043C\u043A\u0434\",\n  \"\u043C\u043E\u043D\",\n  \"\u043C\u043E\u0441\u043A\u0432\u0430\",\n  \"\u043E\u043D\u043B\u0430\u0439\u043D\",\n  \"\u043E\u0440\u0433\",\n  \"\u0440\u0443\u0441\",\n  \"\u0440\u0444\",\n  \"\u0441\u0430\u0439\u0442\",\n  \"\u0441\u0440\u0431\",\n  \"\u0443\u043A\u0440\",\n  \"\u049B\u0430\u0437\",\n  \"\u0570\u0561\u0575\",\n  \"\u05D9\u05E9\u05E8\u05D0\u05DC\",\n  \"\u05E7\u05D5\u05DD\",\n  \"\u0627\u0628\u0648\u0638\u0628\u064A\",\n  \"\u0627\u0631\u0627\u0645\u0643\u0648\",\n  \"\u0627\u0644\u0627\u0631\u062F\u0646\",\n  \"\u0627\u0644\u0628\u062D\u0631\u064A\u0646\",\n  \"\u0627\u0644\u062C\u0632\u0627\u0626\u0631\",\n  \"\u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629\",\n  \"\u0627\u0644\u0639\u0644\u064A\u0627\u0646\",\n  \"\u0627\u0644\u0645\u063A\u0631\u0628\",\n  \"\u0627\u0645\u0627\u0631\u0627\u062A\",\n  \"\u0627\u06CC\u0631\u0627\u0646\",\n  \"\u0628\u0627\u0631\u062A\",\n  \"\u0628\u0627\u0632\u0627\u0631\",\n  \"\u0628\u064A\u062A\u0643\",\n  \"\u0628\u06BE\u0627\u0631\u062A\",\n  \"\u062A\u0648\u0646\u0633\",\n  \"\u0633\u0648\u062F\u0627\u0646\",\n  \"\u0633\u0648\u0631\u064A\u0629\",\n  \"\u0634\u0628\u0643\u0629\",\n  \"\u0639\u0631\u0627\u0642\",\n  \"\u0639\u0631\u0628\",\n  \"\u0639\u0645\u0627\u0646\",\n  \"\u0641\u0644\u0633\u0637\u064A\u0646\",\n  \"\u0642\u0637\u0631\",\n  \"\u0643\u0627\u062B\u0648\u0644\u064A\u0643\",\n  \"\u0643\u0648\u0645\",\n  \"\u0645\u0635\u0631\",\n  \"\u0645\u0644\u064A\u0633\u064A\u0627\",\n  \"\u0645\u0648\u0631\u064A\u062A\u0627\u0646\u064A\u0627\",\n  \"\u0645\u0648\u0642\u0639\",\n  \"\u0647\u0645\u0631\u0627\u0647\",\n  \"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646\",\n  \"\u0680\u0627\u0631\u062A\",\n  \"\u0915\u0949\u092E\",\n  \"\u0928\u0947\u091F\",\n  \"\u092D\u093E\u0930\u0924\",\n  \"\u092D\u093E\u0930\u0924\u092E\u094D\",\n  \"\u092D\u093E\u0930\u094B\u0924\",\n  \"\u0938\u0902\u0917\u0920\u0928\",\n  \"\u09AC\u09BE\u0982\u09B2\u09BE\",\n  \"\u09AD\u09BE\u09B0\u09A4\",\n  \"\u09AD\u09BE\u09F0\u09A4\",\n  \"\u0A2D\u0A3E\u0A30\u0A24\",\n  \"\u0AAD\u0ABE\u0AB0\u0AA4\",\n  \"\u0B2D\u0B3E\u0B30\u0B24\",\n  \"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE\",\n  \"\u0B87\u0BB2\u0B99\u0BCD\u0B95\u0BC8\",\n  \"\u0B9A\u0BBF\u0B99\u0BCD\u0B95\u0BAA\u0BCD\u0BAA\u0BC2\u0BB0\u0BCD\",\n  \"\u0C2D\u0C3E\u0C30\u0C24\u0C4D\",\n  \"\u0CAD\u0CBE\u0CB0\u0CA4\",\n  \"\u0D2D\u0D3E\u0D30\u0D24\u0D02\",\n  \"\u0DBD\u0D82\u0D9A\u0DCF\",\n  \"\u0E04\u0E2D\u0E21\",\n  \"\u0E44\u0E17\u0E22\",\n  \"\u0EA5\u0EB2\u0EA7\",\n  \"\u10D2\u10D4\",\n  \"\u307F\u3093\u306A\",\n  \"\u30A2\u30DE\u30BE\u30F3\",\n  \"\u30AF\u30E9\u30A6\u30C9\",\n  \"\u30B0\u30FC\u30B0\u30EB\",\n  \"\u30B3\u30E0\",\n  \"\u30B9\u30C8\u30A2\",\n  \"\u30BB\u30FC\u30EB\",\n  \"\u30D5\u30A1\u30C3\u30B7\u30E7\u30F3\",\n  \"\u30DD\u30A4\u30F3\u30C8\",\n  \"\u4E16\u754C\",\n  \"\u4E2D\u4FE1\",\n  \"\u4E2D\u56FD\",\n  \"\u4E2D\u570B\",\n  \"\u4E2D\u6587\u7F51\",\n  \"\u4E9A\u9A6C\u900A\",\n  \"\u4F01\u4E1A\",\n  \"\u4F5B\u5C71\",\n  \"\u4FE1\u606F\",\n  \"\u5065\u5EB7\",\n  \"\u516B\u5366\",\n  \"\u516C\u53F8\",\n  \"\u516C\u76CA\",\n  \"\u53F0\u6E7E\",\n  \"\u53F0\u7063\",\n  \"\u5546\u57CE\",\n  \"\u5546\u5E97\",\n  \"\u5546\u6807\",\n  \"\u5609\u91CC\",\n  \"\u5609\u91CC\u5927\u9152\u5E97\",\n  \"\u5728\u7EBF\",\n  \"\u5927\u62FF\",\n  \"\u5929\u4E3B\u6559\",\n  \"\u5A31\u4E50\",\n  \"\u5BB6\u96FB\",\n  \"\u5E7F\u4E1C\",\n  \"\u5FAE\u535A\",\n  \"\u6148\u5584\",\n  \"\u6211\u7231\u4F60\",\n  \"\u624B\u673A\",\n  \"\u62DB\u8058\",\n  \"\u653F\u52A1\",\n  \"\u653F\u5E9C\",\n  \"\u65B0\u52A0\u5761\",\n  \"\u65B0\u95FB\",\n  \"\u65F6\u5C1A\",\n  \"\u66F8\u7C4D\",\n  \"\u673A\u6784\",\n  \"\u6DE1\u9A6C\u9521\",\n  \"\u6E38\u620F\",\n  \"\u6FB3\u9580\",\n  \"\u70B9\u770B\",\n  \"\u79FB\u52A8\",\n  \"\u7EC4\u7EC7\u673A\u6784\",\n  \"\u7F51\u5740\",\n  \"\u7F51\u5E97\",\n  \"\u7F51\u7AD9\",\n  \"\u7F51\u7EDC\",\n  \"\u8054\u901A\",\n  \"\u8C37\u6B4C\",\n  \"\u8D2D\u7269\",\n  \"\u901A\u8CA9\",\n  \"\u96C6\u56E2\",\n  \"\u96FB\u8A0A\u76C8\u79D1\",\n  \"\u98DE\u5229\u6D66\",\n  \"\u98DF\u54C1\",\n  \"\u9910\u5385\",\n  \"\u9999\u683C\u91CC\u62C9\",\n  \"\u9999\u6E2F\",\n  \"\uB2F7\uB137\",\n  \"\uB2F7\uCEF4\",\n  \"\uC0BC\uC131\",\n  \"\uD55C\uAD6D\"\n]", "export const MENTION_REGEX = /(^|\\s|\\()(@)([a-zA-Z0-9.-]+)(\\b)/g\nexport const URL_REGEX =\n  /(^|\\s|\\()((https?:\\/\\/[\\S]+)|((?<domain>[a-z][a-z0-9]*(\\.[a-z0-9]+)+)[\\S]*))/gim\nexport const TRAILING_PUNCTUATION_REGEX = /\\p{P}+$/gu\n\n/**\n * `\\ufe0f` emoji modifier\n * `\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2` zero-width spaces (likely incomplete)\n */\nexport const TAG_REGEX =\n  /(^|\\s)[#\uFF03]((?!\\ufe0f)[^\\s\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]*[^\\d\\s\\p{P}\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]+[^\\s\\u00AD\\u2060\\u200A\\u200B\\u200C\\u200D\\u20e2]*)?/gu\n", "import TLDs from 'tlds'\nimport { AppBskyRichtextFacet } from '../client'\nimport { UnicodeString } from './unicode'\nimport {\n  URL_REGEX,\n  MENTION_REGEX,\n  TAG_REGEX,\n  TRAILING_PUNCTUATION_REGEX,\n} from './util'\n\nexport type Facet = AppBskyRichtextFacet.Main\n\nexport function detectFacets(text: UnicodeString): Facet[] | undefined {\n  let match\n  const facets: Facet[] = []\n  {\n    // mentions\n    const re = MENTION_REGEX\n    while ((match = re.exec(text.utf16))) {\n      if (!isValidDomain(match[3]) && !match[3].endsWith('.test')) {\n        continue // probably not a handle\n      }\n\n      const start = text.utf16.indexOf(match[3], match.index) - 1\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(start),\n          byteEnd: text.utf16IndexToUtf8Index(start + match[3].length + 1),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#mention',\n            did: match[3], // must be resolved afterwards\n          },\n        ],\n      })\n    }\n  }\n  {\n    // links\n    const re = URL_REGEX\n    while ((match = re.exec(text.utf16))) {\n      let uri = match[2]\n      if (!uri.startsWith('http')) {\n        const domain = match.groups?.domain\n        if (!domain || !isValidDomain(domain)) {\n          continue\n        }\n        uri = `https://${uri}`\n      }\n      const start = text.utf16.indexOf(match[2], match.index)\n      const index = { start, end: start + match[2].length }\n      // strip ending puncuation\n      if (/[.,;:!?]$/.test(uri)) {\n        uri = uri.slice(0, -1)\n        index.end--\n      }\n      if (/[)]$/.test(uri) && !uri.includes('(')) {\n        uri = uri.slice(0, -1)\n        index.end--\n      }\n      facets.push({\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(index.start),\n          byteEnd: text.utf16IndexToUtf8Index(index.end),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#link',\n            uri,\n          },\n        ],\n      })\n    }\n  }\n  {\n    const re = TAG_REGEX\n    while ((match = re.exec(text.utf16))) {\n      let [, leading, tag] = match\n\n      if (!tag) continue\n\n      // strip ending punctuation and any spaces\n      tag = tag.trim().replace(TRAILING_PUNCTUATION_REGEX, '')\n\n      if (tag.length === 0 || tag.length > 64) continue\n\n      const index = match.index + leading.length\n\n      facets.push({\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(index),\n          byteEnd: text.utf16IndexToUtf8Index(index + 1 + tag.length),\n        },\n        features: [\n          {\n            $type: 'app.bsky.richtext.facet#tag',\n            tag: tag,\n          },\n        ],\n      })\n    }\n  }\n  return facets.length > 0 ? facets : undefined\n}\n\nfunction isValidDomain(str: string): boolean {\n  return !!TLDs.find((tld) => {\n    const i = str.lastIndexOf(tld)\n    if (i === -1) {\n      return false\n    }\n    return str.charAt(i - 1) === '.' && i === str.length - tld.length\n  })\n}\n", "/*\n= Rich Text Manipulation\n\nWhen we sanitize rich text, we have to update the entity indices as the\ntext is modified. This can be modeled as inserts() and deletes() of the\nrich text string. The possible scenarios are outlined below, along with\ntheir expected behaviors.\n\nNOTE: Slices are start inclusive, end exclusive\n\n== richTextInsert()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^                       // insert \"test\" at 0\nB:        ^                // insert \"test\" at 4\nC:                 ^       // insert \"test\" at 8\n\nA = before           -> move both by num added\nB = inner            -> move end by num added\nC = after            -> noop\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   t e s t h e l l o   w   // string value\n               ^-------^   // target slice {start: 6, end: 11}\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l t e s t o   w   // string value\n       ^---------------^   // target slice {start: 2, end: 11}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o t e s   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\n== richTextDelete()\n\nTarget string:\n\n   0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w o r l d   // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nScenarios:\n\nA: ^---------------^       // remove slice {start: 0, end: 9}\nB:               ^-----^   // remove slice {start: 7, end: 11}\nC:         ^-----------^   // remove slice {start: 4, end: 11}\nD:       ^-^               // remove slice {start: 3, end: 5}\nE:   ^-----^               // remove slice {start: 1, end: 5}\nF: ^-^                     // remove slice {start: 0, end: 2}\n\nA = entirely outer   -> delete slice\nB = entirely after   -> noop\nC = partially after  -> move end to remove-start\nD = entirely inner   -> move end by num removed\nE = partially before -> move start to remove-start index, move end by num removed\nF = entirely before  -> move both by num removed\n\nResults:\n\nA: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l d                     // string value\n                           // target slice (deleted)\n\nB: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l o   w           // string value\n       ^-------^           // target slice {start: 2, end: 7}\n\nC: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l l                 // string value\n       ^-^                 // target slice {start: 2, end: 4}\n\nD: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h e l   w o r l d       // string value\n       ^---^               // target slice {start: 2, end: 5}\n\nE: 0 1 2 3 4 5 6 7 8 910   // string indices\n   h   w o r l d           // string value\n     ^-^                   // target slice {start: 1, end: 3}\n\nF: 0 1 2 3 4 5 6 7 8 910   // string indices\n   l l o   w o r l d       // string value\n   ^-------^               // target slice {start: 0, end: 5}\n */\n\nimport { AtpAgent } from '../agent'\nimport { AppBskyFeedPost, AppBskyRichtextFacet } from '../client'\nimport { UnicodeString } from './unicode'\nimport { sanitizeRichText } from './sanitization'\nimport { detectFacets } from './detection'\n\nexport type Facet = AppBskyRichtextFacet.Main\nexport type FacetLink = AppBskyRichtextFacet.Link\nexport type FacetMention = AppBskyRichtextFacet.Mention\nexport type FacetTag = AppBskyRichtextFacet.Tag\nexport type Entity = AppBskyFeedPost.Entity\n\nexport interface RichTextProps {\n  text: string\n  facets?: Facet[]\n  /**\n   * @deprecated Use facets instead\n   */\n  entities?: Entity[]\n}\n\nexport interface RichTextOpts {\n  cleanNewlines?: boolean\n}\n\nexport class RichTextSegment {\n  constructor(public text: string, public facet?: Facet) {}\n\n  get link(): FacetLink | undefined {\n    const link = this.facet?.features.find(AppBskyRichtextFacet.isLink)\n    if (AppBskyRichtextFacet.isLink(link)) {\n      return link\n    }\n    return undefined\n  }\n\n  isLink() {\n    return !!this.link\n  }\n\n  get mention(): FacetMention | undefined {\n    const mention = this.facet?.features.find(AppBskyRichtextFacet.isMention)\n    if (AppBskyRichtextFacet.isMention(mention)) {\n      return mention\n    }\n    return undefined\n  }\n\n  isMention() {\n    return !!this.mention\n  }\n\n  get tag(): FacetTag | undefined {\n    const tag = this.facet?.features.find(AppBskyRichtextFacet.isTag)\n    if (AppBskyRichtextFacet.isTag(tag)) {\n      return tag\n    }\n    return undefined\n  }\n\n  isTag() {\n    return !!this.tag\n  }\n}\n\nexport class RichText {\n  unicodeText: UnicodeString\n  facets?: Facet[]\n\n  constructor(props: RichTextProps, opts?: RichTextOpts) {\n    this.unicodeText = new UnicodeString(props.text)\n    this.facets = props.facets\n    if (!this.facets?.length && props.entities?.length) {\n      this.facets = entitiesToFacets(this.unicodeText, props.entities)\n    }\n    if (this.facets) {\n      this.facets.sort(facetSort)\n    }\n    if (opts?.cleanNewlines) {\n      sanitizeRichText(this, { cleanNewlines: true }).copyInto(this)\n    }\n  }\n\n  get text() {\n    return this.unicodeText.toString()\n  }\n\n  get length() {\n    return this.unicodeText.length\n  }\n\n  get graphemeLength() {\n    return this.unicodeText.graphemeLength\n  }\n\n  clone() {\n    return new RichText({\n      text: this.unicodeText.utf16,\n      facets: cloneDeep(this.facets),\n    })\n  }\n\n  copyInto(target: RichText) {\n    target.unicodeText = this.unicodeText\n    target.facets = cloneDeep(this.facets)\n  }\n\n  *segments(): Generator<RichTextSegment, void, void> {\n    const facets = this.facets || []\n    if (!facets.length) {\n      yield new RichTextSegment(this.unicodeText.utf16)\n      return\n    }\n\n    let textCursor = 0\n    let facetCursor = 0\n    do {\n      const currFacet = facets[facetCursor]\n      if (textCursor < currFacet.index.byteStart) {\n        yield new RichTextSegment(\n          this.unicodeText.slice(textCursor, currFacet.index.byteStart),\n        )\n      } else if (textCursor > currFacet.index.byteStart) {\n        facetCursor++\n        continue\n      }\n      if (currFacet.index.byteStart < currFacet.index.byteEnd) {\n        const subtext = this.unicodeText.slice(\n          currFacet.index.byteStart,\n          currFacet.index.byteEnd,\n        )\n        if (!subtext.trim()) {\n          // dont empty string entities\n          yield new RichTextSegment(subtext)\n        } else {\n          yield new RichTextSegment(subtext, currFacet)\n        }\n      }\n      textCursor = currFacet.index.byteEnd\n      facetCursor++\n    } while (facetCursor < facets.length)\n    if (textCursor < this.unicodeText.length) {\n      yield new RichTextSegment(\n        this.unicodeText.slice(textCursor, this.unicodeText.length),\n      )\n    }\n  }\n\n  insert(insertIndex: number, insertText: string) {\n    this.unicodeText = new UnicodeString(\n      this.unicodeText.slice(0, insertIndex) +\n        insertText +\n        this.unicodeText.slice(insertIndex),\n    )\n\n    if (!this.facets?.length) {\n      return this\n    }\n\n    const numCharsAdded = insertText.length\n    for (const ent of this.facets) {\n      // see comment at top of file for labels of each scenario\n      // scenario A (before)\n      if (insertIndex <= ent.index.byteStart) {\n        // move both by num added\n        ent.index.byteStart += numCharsAdded\n        ent.index.byteEnd += numCharsAdded\n      }\n      // scenario B (inner)\n      else if (\n        insertIndex >= ent.index.byteStart &&\n        insertIndex < ent.index.byteEnd\n      ) {\n        // move end by num added\n        ent.index.byteEnd += numCharsAdded\n      }\n      // scenario C (after)\n      // noop\n    }\n    return this\n  }\n\n  delete(removeStartIndex: number, removeEndIndex: number) {\n    this.unicodeText = new UnicodeString(\n      this.unicodeText.slice(0, removeStartIndex) +\n        this.unicodeText.slice(removeEndIndex),\n    )\n\n    if (!this.facets?.length) {\n      return this\n    }\n\n    const numCharsRemoved = removeEndIndex - removeStartIndex\n    for (const ent of this.facets) {\n      // see comment at top of file for labels of each scenario\n      // scenario A (entirely outer)\n      if (\n        removeStartIndex <= ent.index.byteStart &&\n        removeEndIndex >= ent.index.byteEnd\n      ) {\n        // delete slice (will get removed in final pass)\n        ent.index.byteStart = 0\n        ent.index.byteEnd = 0\n      }\n      // scenario B (entirely after)\n      else if (removeStartIndex > ent.index.byteEnd) {\n        // noop\n      }\n      // scenario C (partially after)\n      else if (\n        removeStartIndex > ent.index.byteStart &&\n        removeStartIndex <= ent.index.byteEnd &&\n        removeEndIndex > ent.index.byteEnd\n      ) {\n        // move end to remove start\n        ent.index.byteEnd = removeStartIndex\n      }\n      // scenario D (entirely inner)\n      else if (\n        removeStartIndex >= ent.index.byteStart &&\n        removeEndIndex <= ent.index.byteEnd\n      ) {\n        // move end by num removed\n        ent.index.byteEnd -= numCharsRemoved\n      }\n      // scenario E (partially before)\n      else if (\n        removeStartIndex < ent.index.byteStart &&\n        removeEndIndex >= ent.index.byteStart &&\n        removeEndIndex <= ent.index.byteEnd\n      ) {\n        // move start to remove-start index, move end by num removed\n        ent.index.byteStart = removeStartIndex\n        ent.index.byteEnd -= numCharsRemoved\n      }\n      // scenario F (entirely before)\n      else if (removeEndIndex < ent.index.byteStart) {\n        // move both by num removed\n        ent.index.byteStart -= numCharsRemoved\n        ent.index.byteEnd -= numCharsRemoved\n      }\n    }\n\n    // filter out any facets that were made irrelevant\n    this.facets = this.facets.filter(\n      (ent) => ent.index.byteStart < ent.index.byteEnd,\n    )\n    return this\n  }\n\n  /**\n   * Detects facets such as links and mentions\n   * Note: Overwrites the existing facets with auto-detected facets\n   */\n  async detectFacets(agent: AtpAgent) {\n    this.facets = detectFacets(this.unicodeText)\n    if (this.facets) {\n      for (const facet of this.facets) {\n        for (const feature of facet.features) {\n          if (AppBskyRichtextFacet.isMention(feature)) {\n            const did = await agent\n              .resolveHandle({ handle: feature.did })\n              .catch((_) => undefined)\n              .then((res) => res?.data.did)\n            feature.did = did || ''\n          }\n        }\n      }\n      this.facets.sort(facetSort)\n    }\n  }\n\n  /**\n   * Detects facets such as links and mentions but does not resolve them\n   * Will produce invalid facets! For instance, mentions will not have their DIDs set.\n   * Note: Overwrites the existing facets with auto-detected facets\n   */\n  detectFacetsWithoutResolution() {\n    this.facets = detectFacets(this.unicodeText)\n    if (this.facets) {\n      this.facets.sort(facetSort)\n    }\n  }\n}\n\nconst facetSort = (a, b) => a.index.byteStart - b.index.byteStart\n\nfunction entitiesToFacets(text: UnicodeString, entities: Entity[]): Facet[] {\n  const facets: Facet[] = []\n  for (const ent of entities) {\n    if (ent.type === 'link') {\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n          byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n        },\n        features: [{ $type: 'app.bsky.richtext.facet#link', uri: ent.value }],\n      })\n    } else if (ent.type === 'mention') {\n      facets.push({\n        $type: 'app.bsky.richtext.facet',\n        index: {\n          byteStart: text.utf16IndexToUtf8Index(ent.index.start),\n          byteEnd: text.utf16IndexToUtf8Index(ent.index.end),\n        },\n        features: [\n          { $type: 'app.bsky.richtext.facet#mention', did: ent.value },\n        ],\n      })\n    }\n  }\n  return facets\n}\n\nfunction cloneDeep<T>(v: T): T {\n  if (typeof v === 'undefined') {\n    return v\n  }\n  return JSON.parse(JSON.stringify(v))\n}\n", "import {\n  AppBskyActorDefs,\n  AppBskyFeedDefs,\n  AppBskyNotificationListNotifications,\n  AppBskyGraphDefs,\n  ComAtprotoLabelDefs,\n} from '../client/index'\nimport { KnownLabelValue } from './const/labels'\n\n// syntax\n// =\n\nexport const CUSTOM_LABEL_VALUE_RE = /^[a-z-]+$/\n\n// behaviors\n// =\n\nexport interface ModerationBehavior {\n  profileList?: 'blur' | 'alert' | 'inform'\n  profileView?: 'blur' | 'alert' | 'inform'\n  avatar?: 'blur' | 'alert'\n  banner?: 'blur'\n  displayName?: 'blur'\n  contentList?: 'blur' | 'alert' | 'inform'\n  contentView?: 'blur' | 'alert' | 'inform'\n  contentMedia?: 'blur'\n}\nexport const BLOCK_BEHAVIOR: ModerationBehavior = {\n  profileList: 'blur',\n  profileView: 'alert',\n  avatar: 'blur',\n  banner: 'blur',\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const MUTE_BEHAVIOR: ModerationBehavior = {\n  profileList: 'inform',\n  profileView: 'alert',\n  contentList: 'blur',\n  contentView: 'inform',\n}\nexport const MUTEWORD_BEHAVIOR: ModerationBehavior = {\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const HIDE_BEHAVIOR: ModerationBehavior = {\n  contentList: 'blur',\n  contentView: 'blur',\n}\nexport const NOOP_BEHAVIOR: ModerationBehavior = {}\n\n// labels\n// =\n\nexport type Label = ComAtprotoLabelDefs.Label\nexport type LabelTarget = 'account' | 'profile' | 'content'\nexport type LabelPreference = 'ignore' | 'warn' | 'hide'\n\nexport type LabelValueDefinitionFlag =\n  | 'no-override'\n  | 'adult'\n  | 'unauthed'\n  | 'no-self'\n\nexport interface InterpretedLabelValueDefinition\n  extends ComAtprotoLabelDefs.LabelValueDefinition {\n  definedBy?: string | undefined // did of labeler or undefined for global\n  configurable: boolean\n  defaultSetting: LabelPreference // type narrowing\n  flags: LabelValueDefinitionFlag[]\n  behaviors: {\n    account?: ModerationBehavior\n    profile?: ModerationBehavior\n    content?: ModerationBehavior\n  }\n}\n\nexport type LabelDefinitionMap = Record<\n  KnownLabelValue,\n  InterpretedLabelValueDefinition\n>\n\n// subjects\n// =\n\nexport type ModerationSubjectProfile =\n  | AppBskyActorDefs.ProfileViewBasic\n  | AppBskyActorDefs.ProfileView\n  | AppBskyActorDefs.ProfileViewDetailed\n\nexport type ModerationSubjectPost = AppBskyFeedDefs.PostView\n\nexport type ModerationSubjectNotification =\n  AppBskyNotificationListNotifications.Notification\n\nexport type ModerationSubjectFeedGenerator = AppBskyFeedDefs.GeneratorView\n\nexport type ModerationSubjectUserList =\n  | AppBskyGraphDefs.ListViewBasic\n  | AppBskyGraphDefs.ListView\n\nexport type ModerationSubject =\n  | ModerationSubjectProfile\n  | ModerationSubjectPost\n  | ModerationSubjectNotification\n  | ModerationSubjectFeedGenerator\n  | ModerationSubjectUserList\n\n// behaviors\n// =\n\nexport type ModerationCauseSource =\n  | { type: 'user' }\n  | { type: 'list'; list: AppBskyGraphDefs.ListViewBasic }\n  | { type: 'labeler'; did: string }\n\nexport type ModerationCause =\n  | {\n      type: 'blocking'\n      source: ModerationCauseSource\n      priority: 3\n      downgraded?: boolean\n    }\n  | {\n      type: 'blocked-by'\n      source: ModerationCauseSource\n      priority: 4\n      downgraded?: boolean\n    }\n  | {\n      type: 'block-other'\n      source: ModerationCauseSource\n      priority: 4\n      downgraded?: boolean\n    }\n  | {\n      type: 'label'\n      source: ModerationCauseSource\n      label: Label\n      labelDef: InterpretedLabelValueDefinition\n      target: LabelTarget\n      setting: LabelPreference\n      behavior: ModerationBehavior\n      noOverride: boolean\n      priority: 1 | 2 | 5 | 7 | 8\n      downgraded?: boolean\n    }\n  | {\n      type: 'muted'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n    }\n  | {\n      type: 'mute-word'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n    }\n  | {\n      type: 'hidden'\n      source: ModerationCauseSource\n      priority: 6\n      downgraded?: boolean\n    }\n\nexport interface ModerationPrefsLabeler {\n  did: string\n  labels: Record<string, LabelPreference>\n}\n\nexport interface ModerationPrefs {\n  adultContentEnabled: boolean\n  labels: Record<string, LabelPreference>\n  labelers: ModerationPrefsLabeler[]\n  mutedWords: AppBskyActorDefs.MutedWord[]\n  hiddenPosts: string[]\n}\n\nexport interface ModerationOpts {\n  userDid: string | undefined\n  prefs: ModerationPrefs\n  /**\n   * Map of labeler did -> custom definitions\n   */\n  labelDefs?: Record<string, InterpretedLabelValueDefinition[]>\n}\n", "import { ModerationCause } from './types'\n\nexport class ModerationUI {\n  noOverride: boolean = false\n  filters: ModerationCause[] = []\n  blurs: ModerationCause[] = []\n  alerts: ModerationCause[] = []\n  informs: ModerationCause[] = []\n  get filter(): boolean {\n    return this.filters.length !== 0\n  }\n  get blur(): boolean {\n    return this.blurs.length !== 0\n  }\n  get alert(): boolean {\n    return this.alerts.length !== 0\n  }\n  get inform(): boolean {\n    return this.informs.length !== 0\n  }\n}\n", "/** this doc is generated by ./scripts/code/labels.mjs **/\nimport { InterpretedLabelValueDefinition, LabelPreference } from '../types'\n\nexport type KnownLabelValue =\n  | '!hide'\n  | '!warn'\n  | '!no-unauthenticated'\n  | 'porn'\n  | 'sexual'\n  | 'nudity'\n  | 'graphic-media'\n\nexport const DEFAULT_LABEL_SETTINGS: Record<string, LabelPreference> = {\n  porn: 'hide',\n  sexual: 'warn',\n  nudity: 'ignore',\n  'graphic-media': 'warn',\n}\n\nexport const LABELS: Record<KnownLabelValue, InterpretedLabelValueDefinition> =\n  {\n    '!hide': {\n      identifier: '!hide',\n      configurable: false,\n      defaultSetting: 'hide',\n      flags: ['no-override', 'no-self'],\n      severity: 'alert',\n      blurs: 'content',\n      behaviors: {\n        account: {\n          profileList: 'blur',\n          profileView: 'blur',\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n        },\n        content: {\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n      },\n      locales: [],\n    },\n    '!warn': {\n      identifier: '!warn',\n      configurable: false,\n      defaultSetting: 'warn',\n      flags: ['no-self'],\n      severity: 'none',\n      blurs: 'content',\n      behaviors: {\n        account: {\n          profileList: 'blur',\n          profileView: 'blur',\n          avatar: 'blur',\n          banner: 'blur',\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n        },\n        content: {\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n      },\n      locales: [],\n    },\n    '!no-unauthenticated': {\n      identifier: '!no-unauthenticated',\n      configurable: false,\n      defaultSetting: 'hide',\n      flags: ['no-override', 'unauthed'],\n      severity: 'none',\n      blurs: 'content',\n      behaviors: {\n        account: {\n          profileList: 'blur',\n          profileView: 'blur',\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n          displayName: 'blur',\n        },\n        content: {\n          contentList: 'blur',\n          contentView: 'blur',\n        },\n      },\n      locales: [],\n    },\n    porn: {\n      identifier: 'porn',\n      configurable: true,\n      defaultSetting: 'hide',\n      flags: ['adult'],\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n    sexual: {\n      identifier: 'sexual',\n      configurable: true,\n      defaultSetting: 'warn',\n      flags: ['adult'],\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n    nudity: {\n      identifier: 'nudity',\n      configurable: true,\n      defaultSetting: 'ignore',\n      flags: [],\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n    'graphic-media': {\n      identifier: 'graphic-media',\n      flags: ['adult'],\n      configurable: true,\n      defaultSetting: 'warn',\n      severity: 'none',\n      blurs: 'media',\n      behaviors: {\n        account: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        profile: {\n          avatar: 'blur',\n          banner: 'blur',\n        },\n        content: {\n          contentMedia: 'blur',\n        },\n      },\n      locales: [],\n    },\n  }\n", "import { AppBskyGraphDefs } from '../client/index'\nimport {\n  BLOCK_BEHAVIOR,\n  MUTE_BEHAVIOR,\n  MUTEWORD_BEHAVIOR,\n  HIDE_BEHAVIOR,\n  NOOP_BEHAVIOR,\n  Label,\n  LabelPreference,\n  ModerationCause,\n  ModerationOpts,\n  LabelTarget,\n  ModerationBehavior,\n  CUSTOM_LABEL_VALUE_RE,\n} from './types'\nimport { ModerationUI } from './ui'\nimport { LABELS } from './const/labels'\n\nenum ModerationBehaviorSeverity {\n  High,\n  Medium,\n  Low,\n}\n\nexport class ModerationDecision {\n  did = ''\n  isMe = false\n  causes: ModerationCause[] = []\n\n  constructor() {}\n\n  static merge(\n    ...decisions: (ModerationDecision | undefined)[]\n  ): ModerationDecision {\n    const decisionsFiltered: ModerationDecision[] = decisions.filter(\n      (v) => !!v,\n    ) as ModerationDecision[]\n    const decision = new ModerationDecision()\n    if (decisionsFiltered[0]) {\n      decision.did = decisionsFiltered[0].did\n      decision.isMe = decisionsFiltered[0].isMe\n    }\n    decision.causes = decisionsFiltered.flatMap((d) => d.causes)\n    return decision\n  }\n\n  downgrade() {\n    for (const cause of this.causes) {\n      cause.downgraded = true\n    }\n    return this\n  }\n\n  get blocked() {\n    return !!this.blockCause\n  }\n\n  get muted() {\n    return !!this.muteCause\n  }\n\n  get blockCause() {\n    return this.causes.find(\n      (cause) =>\n        cause.type === 'blocking' ||\n        cause.type === 'blocked-by' ||\n        cause.type === 'block-other',\n    )\n  }\n\n  get muteCause() {\n    return this.causes.find((cause) => cause.type === 'muted')\n  }\n\n  get labelCauses() {\n    return this.causes.filter((cause) => cause.type === 'label')\n  }\n\n  ui(context: keyof ModerationBehavior): ModerationUI {\n    const ui = new ModerationUI()\n    if (this.isMe) {\n      return ui\n    }\n    for (const cause of this.causes) {\n      if (\n        cause.type === 'blocking' ||\n        cause.type === 'blocked-by' ||\n        cause.type === 'block-other'\n      ) {\n        if (context === 'profileList' || context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (BLOCK_BEHAVIOR[context] === 'blur') {\n            ui.noOverride = true\n            ui.blurs.push(cause)\n          } else if (BLOCK_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (BLOCK_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'muted') {\n        if (context === 'profileList' || context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (MUTE_BEHAVIOR[context] === 'blur') {\n            ui.blurs.push(cause)\n          } else if (MUTE_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (MUTE_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'mute-word') {\n        if (context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (MUTEWORD_BEHAVIOR[context] === 'blur') {\n            ui.blurs.push(cause)\n          } else if (MUTEWORD_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (MUTEWORD_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'hidden') {\n        if (context === 'profileList' || context === 'contentList') {\n          ui.filters.push(cause)\n        }\n        if (!cause.downgraded) {\n          if (HIDE_BEHAVIOR[context] === 'blur') {\n            ui.blurs.push(cause)\n          } else if (HIDE_BEHAVIOR[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (HIDE_BEHAVIOR[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      } else if (cause.type === 'label') {\n        if (context === 'profileList' && cause.target === 'account') {\n          if (cause.setting === 'hide') {\n            ui.filters.push(cause)\n          }\n        } else if (\n          context === 'contentList' &&\n          (cause.target === 'account' || cause.target === 'content')\n        ) {\n          if (cause.setting === 'hide') {\n            ui.filters.push(cause)\n          }\n        }\n        if (!cause.downgraded) {\n          if (cause.behavior[context] === 'blur') {\n            ui.blurs.push(cause)\n            if (cause.noOverride) {\n              ui.noOverride = true\n            }\n          } else if (cause.behavior[context] === 'alert') {\n            ui.alerts.push(cause)\n          } else if (cause.behavior[context] === 'inform') {\n            ui.informs.push(cause)\n          }\n        }\n      }\n    }\n\n    ui.filters.sort(sortByPriority)\n    ui.blurs.sort(sortByPriority)\n\n    return ui\n  }\n\n  setDid(did: string) {\n    this.did = did\n  }\n\n  setIsMe(isMe: boolean) {\n    this.isMe = isMe\n  }\n\n  addHidden(hidden: boolean) {\n    if (hidden) {\n      this.causes.push({\n        type: 'hidden',\n        source: { type: 'user' },\n        priority: 6,\n      })\n    }\n  }\n\n  addMutedWord(mutedWord: boolean) {\n    if (mutedWord) {\n      this.causes.push({\n        type: 'mute-word',\n        source: { type: 'user' },\n        priority: 6,\n      })\n    }\n  }\n\n  addBlocking(blocking: string | undefined) {\n    if (blocking) {\n      this.causes.push({\n        type: 'blocking',\n        source: { type: 'user' },\n        priority: 3,\n      })\n    }\n  }\n\n  addBlockingByList(\n    blockingByList: AppBskyGraphDefs.ListViewBasic | undefined,\n  ) {\n    if (blockingByList) {\n      this.causes.push({\n        type: 'blocking',\n        source: { type: 'list', list: blockingByList },\n        priority: 3,\n      })\n    }\n  }\n\n  addBlockedBy(blockedBy: boolean | undefined) {\n    if (blockedBy) {\n      this.causes.push({\n        type: 'blocked-by',\n        source: { type: 'user' },\n        priority: 4,\n      })\n    }\n  }\n\n  addBlockOther(blockOther: boolean | undefined) {\n    if (blockOther) {\n      this.causes.push({\n        type: 'block-other',\n        source: { type: 'user' },\n        priority: 4,\n      })\n    }\n  }\n\n  addLabel(target: LabelTarget, label: Label, opts: ModerationOpts) {\n    // look up the label definition\n    const labelDef = CUSTOM_LABEL_VALUE_RE.test(label.val)\n      ? opts.labelDefs?.[label.src]?.find(\n          (def) => def.identifier === label.val,\n        ) || LABELS[label.val]\n      : LABELS[label.val]\n    if (!labelDef) {\n      // ignore labels we don't understand\n      return\n    }\n\n    // look up the label preference\n    const isSelf = label.src === this.did\n    const labeler = isSelf\n      ? undefined\n      : opts.prefs.labelers.find((s) => s.did === label.src)\n\n    if (!isSelf && !labeler) {\n      return // skip labelers not configured by the user\n    }\n    if (isSelf && labelDef.flags.includes('no-self')) {\n      return // skip self-labels that arent supported\n    }\n\n    // establish the label preference for interpretation\n    let labelPref: LabelPreference = labelDef.defaultSetting || 'ignore'\n    if (!labelDef.configurable) {\n      labelPref = labelDef.defaultSetting || 'hide'\n    } else if (\n      labelDef.flags.includes('adult') &&\n      !opts.prefs.adultContentEnabled\n    ) {\n      labelPref = 'hide'\n    } else if (labeler?.labels[labelDef.identifier]) {\n      labelPref = labeler?.labels[labelDef.identifier]\n    } else if (opts.prefs.labels[labelDef.identifier]) {\n      labelPref = opts.prefs.labels[labelDef.identifier]\n    }\n\n    // ignore labels the user has asked to ignore\n    if (labelPref === 'ignore') {\n      return\n    }\n\n    // ignore 'unauthed' labels when the user is authed\n    if (labelDef.flags.includes('unauthed') && !!opts.userDid) {\n      return\n    }\n\n    // establish the priority of the label\n    let priority: 1 | 2 | 5 | 7 | 8\n    const severity = measureModerationBehaviorSeverity(\n      labelDef.behaviors[target],\n    )\n    if (\n      labelDef.flags.includes('no-override') ||\n      (labelDef.flags.includes('adult') && !opts.prefs.adultContentEnabled)\n    ) {\n      priority = 1\n    } else if (labelPref === 'hide') {\n      priority = 2\n    } else if (severity === ModerationBehaviorSeverity.High) {\n      // blurring profile view or content view\n      priority = 5\n    } else if (severity === ModerationBehaviorSeverity.Medium) {\n      // blurring content list or content media\n      priority = 7\n    } else {\n      // blurring avatar, adding alerts\n      priority = 8\n    }\n\n    let noOverride = false\n    if (labelDef.flags.includes('no-override')) {\n      noOverride = true\n    } else if (\n      labelDef.flags.includes('adult') &&\n      !opts.prefs.adultContentEnabled\n    ) {\n      noOverride = true\n    }\n\n    this.causes.push({\n      type: 'label',\n      source:\n        isSelf || !labeler\n          ? { type: 'user' }\n          : { type: 'labeler', did: labeler.did },\n      label,\n      labelDef,\n      target,\n      setting: labelPref,\n      behavior: labelDef.behaviors[target] || NOOP_BEHAVIOR,\n      noOverride,\n      priority,\n    })\n  }\n\n  addMuted(muted: boolean | undefined) {\n    if (muted) {\n      this.causes.push({\n        type: 'muted',\n        source: { type: 'user' },\n        priority: 6,\n      })\n    }\n  }\n\n  addMutedByList(mutedByList: AppBskyGraphDefs.ListViewBasic | undefined) {\n    if (mutedByList) {\n      this.causes.push({\n        type: 'muted',\n        source: { type: 'list', list: mutedByList },\n        priority: 6,\n      })\n    }\n  }\n}\n\nfunction measureModerationBehaviorSeverity(\n  beh: ModerationBehavior | undefined,\n): ModerationBehaviorSeverity {\n  if (!beh) {\n    return ModerationBehaviorSeverity.Low\n  }\n  if (beh.profileView === 'blur' || beh.contentView === 'blur') {\n    return ModerationBehaviorSeverity.High\n  }\n  if (beh.contentList === 'blur' || beh.contentMedia === 'blur') {\n    return ModerationBehaviorSeverity.Medium\n  }\n  return ModerationBehaviorSeverity.Low\n}\n\nfunction sortByPriority(a: ModerationCause, b: ModerationCause) {\n  return a.priority - b.priority\n}\n", "import { ModerationDecision } from '../decision'\nimport { Label, ModerationSubjectProfile, ModerationOpts } from '../types'\n\nexport function decideAccount(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.did)\n  acc.setIsMe(subject.did === opts.userDid)\n  if (subject.viewer?.muted) {\n    if (subject.viewer?.mutedByList) {\n      acc.addMutedByList(subject.viewer?.mutedByList)\n    } else {\n      acc.addMuted(subject.viewer?.muted)\n    }\n  }\n  if (subject.viewer?.blocking) {\n    if (subject.viewer?.blockingByList) {\n      acc.addBlockingByList(subject.viewer?.blockingByList)\n    } else {\n      acc.addBlocking(subject.viewer?.blocking)\n    }\n  }\n  acc.addBlockedBy(subject.viewer?.blockedBy)\n\n  for (const label of filterAccountLabels(subject.labels)) {\n    acc.addLabel('account', label, opts)\n  }\n\n  return acc\n}\n\nexport function filterAccountLabels(labels?: Label[]): Label[] {\n  if (!labels) {\n    return []\n  }\n  return labels.filter(\n    (label) =>\n      !label.uri.endsWith('/app.bsky.actor.profile/self') ||\n      label.val === '!no-unauthenticated',\n  )\n}\n", "import { ModerationDecision } from '../decision'\nimport { Label, ModerationSubjectProfile, ModerationOpts } from '../types'\n\nexport function decideProfile(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.did)\n  acc.setIsMe(subject.did === opts.userDid)\n  for (const label of filterProfileLabels(subject.labels)) {\n    acc.addLabel('profile', label, opts)\n  }\n\n  return acc\n}\n\nexport function filterProfileLabels(labels?: Label[]): Label[] {\n  if (!labels) {\n    return []\n  }\n  return labels.filter((label) =>\n    label.uri.endsWith('/app.bsky.actor.profile/self'),\n  )\n}\n", "import { ModerationDecision } from '../decision'\nimport { ModerationSubjectNotification, ModerationOpts } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decideNotification(\n  subject: ModerationSubjectNotification,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n\n  return ModerationDecision.merge(\n    acc,\n    decideAccount(subject.author, opts),\n    decideProfile(subject.author, opts),\n  )\n}\n", "import { AppBskyActorDefs, AppBskyRichtextFacet } from '../client'\n\nconst REGEX = {\n  LEADING_TRAILING_PUNCTUATION: /(?:^\\p{P}+|\\p{P}+$)/gu,\n  ESCAPE: /[[\\]{}()*+?.\\\\^$|\\s]/g,\n  SEPARATORS: /[/\\-\u2013\u2014()[\\]_]+/g,\n  WORD_BOUNDARY: /[\\s\\n\\t\\r\\f\\v]+?/g,\n}\n\n/**\n * List of 2-letter lang codes for languages that either don't use spaces, or\n * don't use spaces in a way conducive to word-based filtering.\n *\n * For these, we use a simple `String.includes` to check for a match.\n */\nconst LANGUAGE_EXCEPTIONS = [\n  'ja', // Japanese\n  'zh', // Chinese\n  'ko', // Korean\n  'th', // Thai\n  'vi', // Vietnamese\n]\n\nexport function hasMutedWord({\n  mutedWords,\n  text,\n  facets,\n  outlineTags,\n  languages,\n}: {\n  mutedWords: AppBskyActorDefs.MutedWord[]\n  text: string\n  facets?: AppBskyRichtextFacet.Main[]\n  outlineTags?: string[]\n  languages?: string[]\n}) {\n  const exception = LANGUAGE_EXCEPTIONS.includes(languages?.[0] || '')\n  const tags = ([] as string[])\n    .concat(outlineTags || [])\n    .concat(\n      facets\n        ?.filter((facet) => {\n          return facet.features.find((feature) =>\n            AppBskyRichtextFacet.isTag(feature),\n          )\n        })\n        .map((t) => t.features[0].tag as string) || [],\n    )\n    .map((t) => t.toLowerCase())\n\n  for (const mute of mutedWords) {\n    const mutedWord = mute.value.toLowerCase()\n    const postText = text.toLowerCase()\n\n    // `content` applies to tags as well\n    if (tags.includes(mutedWord)) return true\n    // rest of the checks are for `content` only\n    if (!mute.targets.includes('content')) continue\n    // single character or other exception, has to use includes\n    if ((mutedWord.length === 1 || exception) && postText.includes(mutedWord))\n      return true\n    // too long\n    if (mutedWord.length > postText.length) continue\n    // exact match\n    if (mutedWord === postText) return true\n    // any muted phrase with space or punctuation\n    if (/(?:\\s|\\p{P})+?/u.test(mutedWord) && postText.includes(mutedWord))\n      return true\n\n    // check individual character groups\n    const words = postText.split(REGEX.WORD_BOUNDARY)\n    for (const word of words) {\n      if (word === mutedWord) return true\n\n      // compare word without leading/trailing punctuation, but allow internal\n      // punctuation (such as `s@ssy`)\n      const wordTrimmedPunctuation = word.replace(\n        REGEX.LEADING_TRAILING_PUNCTUATION,\n        '',\n      )\n\n      if (mutedWord === wordTrimmedPunctuation) return true\n      if (mutedWord.length > wordTrimmedPunctuation.length) continue\n\n      if (/\\p{P}+/u.test(wordTrimmedPunctuation)) {\n        const spacedWord = wordTrimmedPunctuation.replace(/\\p{P}+/gu, ' ')\n        if (spacedWord === mutedWord) return true\n\n        const contiguousWord = spacedWord.replace(/\\s/gu, '')\n        if (contiguousWord === mutedWord) return true\n\n        const wordParts = wordTrimmedPunctuation.split(/\\p{P}+/u)\n        for (const wordPart of wordParts) {\n          if (wordPart === mutedWord) return true\n        }\n      }\n    }\n  }\n\n  return false\n}\n", "import { ModerationDecision } from '../decision'\nimport {\n  AppBskyFeedPost,\n  AppBskyEmbedImages,\n  AppBskyEmbedRecord,\n  AppBskyEmbedRecordWithMedia,\n  AppBskyEmbedExternal,\n  AppBskyActorDefs,\n} from '../../client'\nimport { ModerationSubjectPost, ModerationOpts } from '../types'\nimport { hasMutedWord } from '../mutewords'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decidePost(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  acc.addHidden(checkHiddenPost(subject, opts.prefs.hiddenPosts))\n  if (!acc.isMe) {\n    acc.addMutedWord(checkMutedWords(subject, opts.prefs.mutedWords))\n  }\n\n  let embedAcc\n  if (subject.embed) {\n    if (AppBskyEmbedRecord.isViewRecord(subject.embed.record)) {\n      // quote post\n      embedAcc = decideQuotedPost(subject.embed.record, opts)\n    } else if (\n      AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record.record)\n    ) {\n      // quoted post with media\n      embedAcc = decideQuotedPost(subject.embed.record.record, opts)\n    } else if (AppBskyEmbedRecord.isViewBlocked(subject.embed.record)) {\n      // blocked quote post\n      embedAcc = decideBlockedQuotedPost(subject.embed.record, opts)\n    } else if (\n      AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewBlocked(subject.embed.record.record)\n    ) {\n      // blocked quoted post with media\n      embedAcc = decideBlockedQuotedPost(subject.embed.record.record, opts)\n    }\n  }\n\n  return ModerationDecision.merge(\n    acc,\n    embedAcc?.downgrade(),\n    decideAccount(subject.author, opts),\n    decideProfile(subject.author, opts),\n  )\n}\n\nfunction decideQuotedPost(\n  subject: AppBskyEmbedRecord.ViewRecord,\n  opts: ModerationOpts,\n) {\n  const acc = new ModerationDecision()\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  return ModerationDecision.merge(\n    acc,\n    decideAccount(subject.author, opts),\n    decideProfile(subject.author, opts),\n  )\n}\n\nfunction decideBlockedQuotedPost(\n  subject: AppBskyEmbedRecord.ViewBlocked,\n  opts: ModerationOpts,\n) {\n  const acc = new ModerationDecision()\n  acc.setDid(subject.author.did)\n  acc.setIsMe(subject.author.did === opts.userDid)\n  if (subject.author.viewer?.muted) {\n    if (subject.author.viewer?.mutedByList) {\n      acc.addMutedByList(subject.author.viewer?.mutedByList)\n    } else {\n      acc.addMuted(subject.author.viewer?.muted)\n    }\n  }\n  if (subject.author.viewer?.blocking) {\n    if (subject.author.viewer?.blockingByList) {\n      acc.addBlockingByList(subject.author.viewer?.blockingByList)\n    } else {\n      acc.addBlocking(subject.author.viewer?.blocking)\n    }\n  }\n  acc.addBlockedBy(subject.author.viewer?.blockedBy)\n  return acc\n}\n\nfunction checkHiddenPost(\n  subject: ModerationSubjectPost,\n  hiddenPosts: string[] | undefined,\n) {\n  if (!hiddenPosts?.length) {\n    return false\n  }\n  if (hiddenPosts.includes(subject.uri)) {\n    return true\n  }\n  if (subject.embed) {\n    if (\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record) &&\n      hiddenPosts.includes(subject.embed.record.uri)\n    ) {\n      return true\n    }\n    if (\n      AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record.record) &&\n      hiddenPosts.includes(subject.embed.record.record.uri)\n    ) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkMutedWords(\n  subject: ModerationSubjectPost,\n  mutedWords: AppBskyActorDefs.MutedWord[] | undefined,\n) {\n  if (!mutedWords?.length) {\n    return false\n  }\n\n  if (AppBskyFeedPost.isRecord(subject.record)) {\n    // post text\n    if (\n      hasMutedWord({\n        mutedWords,\n        text: subject.record.text,\n        facets: subject.record.facets,\n        outlineTags: subject.record.tags,\n        languages: subject.record.langs,\n      })\n    ) {\n      return true\n    }\n\n    if (\n      subject.record.embed &&\n      AppBskyEmbedImages.isMain(subject.record.embed)\n    ) {\n      // post images\n      for (const image of subject.record.embed.images) {\n        if (\n          hasMutedWord({\n            mutedWords,\n            text: image.alt,\n            languages: subject.record.langs,\n          })\n        ) {\n          return true\n        }\n      }\n    }\n  }\n\n  if (subject.embed) {\n    // quote post\n    if (AppBskyEmbedRecord.isViewRecord(subject.embed.record)) {\n      if (AppBskyFeedPost.isRecord(subject.embed.record.value)) {\n        const embeddedPost = subject.embed.record.value\n\n        // quoted post text\n        if (\n          hasMutedWord({\n            mutedWords,\n            text: embeddedPost.text,\n            facets: embeddedPost.facets,\n            outlineTags: embeddedPost.tags,\n            languages: embeddedPost.langs,\n          })\n        ) {\n          return true\n        }\n\n        // quoted post's images\n        if (AppBskyEmbedImages.isMain(embeddedPost.embed)) {\n          for (const image of embeddedPost.embed.images) {\n            if (\n              hasMutedWord({\n                mutedWords,\n                text: image.alt,\n                languages: embeddedPost.langs,\n              })\n            ) {\n              return true\n            }\n          }\n        }\n\n        // quoted post's link card\n        if (AppBskyEmbedExternal.isMain(embeddedPost.embed)) {\n          const { external } = embeddedPost.embed\n          if (\n            hasMutedWord({\n              mutedWords,\n              text: external.title + ' ' + external.description,\n              languages: [],\n            })\n          ) {\n            return true\n          }\n        }\n\n        if (AppBskyEmbedRecordWithMedia.isMain(embeddedPost.embed)) {\n          // quoted post's link card when it did a quote + media\n          if (AppBskyEmbedExternal.isMain(embeddedPost.embed.media)) {\n            const { external } = embeddedPost.embed.media\n            if (\n              hasMutedWord({\n                mutedWords,\n                text: external.title + ' ' + external.description,\n                languages: [],\n              })\n            ) {\n              return true\n            }\n          }\n\n          // quoted post's images when it did a quote + media\n          if (AppBskyEmbedImages.isMain(embeddedPost.embed.media)) {\n            for (const image of embeddedPost.embed.media.images) {\n              if (\n                hasMutedWord({\n                  mutedWords,\n                  text: image.alt,\n                  languages: AppBskyFeedPost.isRecord(embeddedPost.record)\n                    ? embeddedPost.langs\n                    : [],\n                })\n              ) {\n                return true\n              }\n            }\n          }\n        }\n      }\n    }\n    // link card\n    else if (AppBskyEmbedExternal.isView(subject.embed)) {\n      const { external } = subject.embed\n      if (\n        hasMutedWord({\n          mutedWords,\n          text: external.title + ' ' + external.description,\n          languages: [],\n        })\n      ) {\n        return true\n      }\n    }\n    // quote post with media\n    else if (\n      AppBskyEmbedRecordWithMedia.isView(subject.embed) &&\n      AppBskyEmbedRecord.isViewRecord(subject.embed.record.record)\n    ) {\n      // quoted post text\n      if (AppBskyFeedPost.isRecord(subject.embed.record.record.value)) {\n        const post = subject.embed.record.record.value\n        if (\n          hasMutedWord({\n            mutedWords,\n            text: post.text,\n            facets: post.facets,\n            outlineTags: post.tags,\n            languages: post.langs,\n          })\n        ) {\n          return true\n        }\n      }\n\n      // quoted post images\n      if (AppBskyEmbedImages.isView(subject.embed.media)) {\n        for (const image of subject.embed.media.images) {\n          if (\n            hasMutedWord({\n              mutedWords,\n              text: image.alt,\n              languages: AppBskyFeedPost.isRecord(subject.record)\n                ? subject.record.langs\n                : [],\n            })\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n  return false\n}\n", "import { ModerationDecision } from '../decision'\nimport { ModerationSubjectFeedGenerator, ModerationOpts } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decideFeedGenerator(\n  subject: ModerationSubjectFeedGenerator,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  acc.setDid(subject.creator.did)\n  acc.setIsMe(subject.creator.did === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  return ModerationDecision.merge(\n    acc,\n    decideAccount(subject.creator, opts),\n    decideProfile(subject.creator, opts),\n  )\n}\n", "import { AtUri } from '@atproto/syntax'\nimport { AppBskyActorDefs } from '../../client/index'\nimport { ModerationDecision } from '../decision'\nimport { ModerationSubjectUserList, ModerationOpts } from '../types'\nimport { decideAccount } from './account'\nimport { decideProfile } from './profile'\n\nexport function decideUserList(\n  subject: ModerationSubjectUserList,\n  opts: ModerationOpts,\n): ModerationDecision {\n  const acc = new ModerationDecision()\n\n  const creator = isProfile(subject.creator) ? subject.creator : undefined\n\n  if (creator) {\n    acc.setDid(creator.did)\n    acc.setIsMe(creator.did === opts.userDid)\n    if (subject.labels?.length) {\n      for (const label of subject.labels) {\n        acc.addLabel('content', label, opts)\n      }\n    }\n    return ModerationDecision.merge(\n      acc,\n      decideAccount(creator, opts),\n      decideProfile(creator, opts),\n    )\n  }\n\n  const creatorDid = new AtUri(subject.uri).hostname\n  acc.setDid(creatorDid)\n  acc.setIsMe(creatorDid === opts.userDid)\n  if (subject.labels?.length) {\n    for (const label of subject.labels) {\n      acc.addLabel('content', label, opts)\n    }\n  }\n  return acc\n}\n\nfunction isProfile(v: any): v is AppBskyActorDefs.ProfileViewBasic {\n  return v && typeof v === 'object' && 'did' in v\n}\n", "import {\n  AppBskyEmbedRecord,\n  AppBskyEmbedRecordWithMedia,\n  AppBskyLabelerDefs,\n  ComAtprotoLabelDefs,\n} from '../client'\nimport {\n  InterpretedLabelValueDefinition,\n  ModerationBehavior,\n  LabelPreference,\n  LabelValueDefinitionFlag,\n} from './types'\n\nexport function isQuotedPost(embed: unknown): embed is AppBskyEmbedRecord.View {\n  return Boolean(embed && AppBskyEmbedRecord.isView(embed))\n}\n\nexport function isQuotedPostWithMedia(\n  embed: unknown,\n): embed is AppBskyEmbedRecordWithMedia.View {\n  return Boolean(embed && AppBskyEmbedRecordWithMedia.isView(embed))\n}\n\nexport function interpretLabelValueDefinition(\n  def: ComAtprotoLabelDefs.LabelValueDefinition,\n  definedBy: string | undefined,\n): InterpretedLabelValueDefinition {\n  const behaviors: {\n    account: ModerationBehavior\n    profile: ModerationBehavior\n    content: ModerationBehavior\n  } = {\n    account: {},\n    profile: {},\n    content: {},\n  }\n  const alertOrInform: 'alert' | 'inform' | undefined =\n    def.severity === 'alert'\n      ? 'alert'\n      : def.severity === 'inform'\n      ? 'inform'\n      : undefined\n  if (def.blurs === 'content') {\n    // target=account, blurs=content\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.contentList = 'blur'\n    behaviors.account.contentView = def.adultOnly ? 'blur' : alertOrInform\n    // target=profile, blurs=content\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    // target=content, blurs=content\n    behaviors.content.contentList = 'blur'\n    behaviors.content.contentView = def.adultOnly ? 'blur' : alertOrInform\n  } else if (def.blurs === 'media') {\n    // target=account, blurs=media\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.avatar = 'blur'\n    behaviors.account.banner = 'blur'\n    // target=profile, blurs=media\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    behaviors.profile.avatar = 'blur'\n    behaviors.profile.banner = 'blur'\n    // target=content, blurs=media\n    behaviors.content.contentMedia = 'blur'\n  } else if (def.blurs === 'none') {\n    // target=account, blurs=none\n    behaviors.account.profileList = alertOrInform\n    behaviors.account.profileView = alertOrInform\n    behaviors.account.contentList = alertOrInform\n    behaviors.account.contentView = alertOrInform\n    // target=profile, blurs=none\n    behaviors.profile.profileList = alertOrInform\n    behaviors.profile.profileView = alertOrInform\n    // target=content, blurs=none\n    behaviors.content.contentList = alertOrInform\n    behaviors.content.contentView = alertOrInform\n  }\n\n  let defaultSetting: LabelPreference = 'warn'\n  if (def.defaultSetting === 'hide' || def.defaultSetting === 'ignore') {\n    defaultSetting = def.defaultSetting as LabelPreference\n  }\n\n  const flags: LabelValueDefinitionFlag[] = ['no-self']\n  if (def.adultOnly) {\n    flags.push('adult')\n  }\n\n  return {\n    ...def,\n    definedBy,\n    configurable: true,\n    defaultSetting,\n    flags,\n    behaviors,\n  }\n}\n\nexport function interpretLabelValueDefinitions(\n  labelerView: AppBskyLabelerDefs.LabelerViewDetailed,\n): InterpretedLabelValueDefinition[] {\n  return (labelerView.policies?.labelValueDefinitions || [])\n    .filter(\n      (labelValDef) =>\n        ComAtprotoLabelDefs.validateLabelValueDefinition(labelValDef).success,\n    )\n    .map((labelValDef) =>\n      interpretLabelValueDefinition(labelValDef, labelerView.creator.did),\n    )\n}\n", "import {\n  ModerationSubjectProfile,\n  ModerationSubjectPost,\n  ModerationSubjectNotification,\n  ModerationSubjectFeedGenerator,\n  ModerationSubjectUserList,\n  ModerationOpts,\n} from './types'\nimport { decideAccount } from './subjects/account'\nimport { decideProfile } from './subjects/profile'\nimport { decideNotification } from './subjects/notification'\nimport { decidePost } from './subjects/post'\nimport { decideFeedGenerator } from './subjects/feed-generator'\nimport { decideUserList } from './subjects/user-list'\nimport { ModerationDecision } from './decision'\n\nexport { ModerationUI } from './ui'\nexport { ModerationDecision } from './decision'\nexport { hasMutedWord } from './mutewords'\nexport {\n  interpretLabelValueDefinition,\n  interpretLabelValueDefinitions,\n} from './util'\n\nexport function moderateProfile(\n  subject: ModerationSubjectProfile,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return ModerationDecision.merge(\n    decideAccount(subject, opts),\n    decideProfile(subject, opts),\n  )\n}\n\nexport function moderatePost(\n  subject: ModerationSubjectPost,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decidePost(subject, opts)\n}\n\nexport function moderateNotification(\n  subject: ModerationSubjectNotification,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decideNotification(subject, opts)\n}\n\nexport function moderateFeedGenerator(\n  subject: ModerationSubjectFeedGenerator,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decideFeedGenerator(subject, opts)\n}\n\nexport function moderateUserList(\n  subject: ModerationSubjectUserList,\n  opts: ModerationOpts,\n): ModerationDecision {\n  return decideUserList(subject, opts)\n}\n", "import {\n  ComAtprotoLabelDefs,\n  AppBskyFeedDefs,\n  AppBskyActorDefs,\n  AppBskyFeedPost,\n  AppBskyEmbedRecord,\n  AppBskyGraphDefs,\n  AppBskyNotificationListNotifications,\n} from './client'\n\nconst FAKE_CID = 'bafyreiclp443lavogvhj3d2ob2cxbfuscni2k5jk7bebjzg7khl3esabwq'\n\nexport const mock = {\n  post({\n    text,\n    facets,\n    reply,\n    embed,\n  }: {\n    text: string\n    facets?: AppBskyFeedPost.Record['facets']\n    reply?: AppBskyFeedPost.ReplyRef\n    embed?: AppBskyFeedPost.Record['embed']\n  }): AppBskyFeedPost.Record {\n    return {\n      $type: 'app.bsky.feed.post',\n      text,\n      facets,\n      reply,\n      embed,\n      langs: ['en'],\n      createdAt: new Date().toISOString(),\n    }\n  },\n\n  postView({\n    record,\n    author,\n    embed,\n    replyCount,\n    repostCount,\n    likeCount,\n    viewer,\n    labels,\n  }: {\n    record: AppBskyFeedPost.Record\n    author: AppBskyActorDefs.ProfileViewBasic\n    embed?: AppBskyFeedDefs.PostView['embed']\n    replyCount?: number\n    repostCount?: number\n    likeCount?: number\n    viewer?: AppBskyFeedDefs.ViewerState\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyFeedDefs.PostView {\n    return {\n      $type: 'app.bsky.feed.defs#postView',\n      uri: `at://${author.did}/app.bsky.feed.post/fake`,\n      cid: FAKE_CID,\n      author,\n      record,\n      embed,\n      replyCount,\n      repostCount,\n      likeCount,\n      indexedAt: new Date().toISOString(),\n      viewer,\n      labels,\n    }\n  },\n\n  embedRecordView({\n    record,\n    author,\n    labels,\n  }: {\n    record: AppBskyFeedPost.Record\n    author: AppBskyActorDefs.ProfileViewBasic\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyEmbedRecord.View {\n    return {\n      $type: 'app.bsky.embed.record#view',\n      record: {\n        $type: 'app.bsky.embed.record#viewRecord',\n        uri: `at://${author.did}/app.bsky.feed.post/fake`,\n        cid: FAKE_CID,\n        author,\n        value: record,\n        labels,\n        indexedAt: new Date().toISOString(),\n      },\n    }\n  },\n\n  profileViewBasic({\n    handle,\n    displayName,\n    description,\n    viewer,\n    labels,\n  }: {\n    handle: string\n    displayName?: string\n    description?: string\n    viewer?: AppBskyActorDefs.ViewerState\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyActorDefs.ProfileViewBasic {\n    return {\n      did: `did:web:${handle}`,\n      handle,\n      displayName,\n      description, // technically not in ProfileViewBasic but useful in some cases\n      viewer,\n      labels,\n    }\n  },\n\n  actorViewerState({\n    muted,\n    mutedByList,\n    blockedBy,\n    blocking,\n    blockingByList,\n    following,\n    followedBy,\n  }: {\n    muted?: boolean\n    mutedByList?: AppBskyGraphDefs.ListViewBasic\n    blockedBy?: boolean\n    blocking?: string\n    blockingByList?: AppBskyGraphDefs.ListViewBasic\n    following?: string\n    followedBy?: string\n  }): AppBskyActorDefs.ViewerState {\n    return {\n      muted,\n      mutedByList,\n      blockedBy,\n      blocking,\n      blockingByList,\n      following,\n      followedBy,\n    }\n  },\n\n  listViewBasic({ name }: { name: string }): AppBskyGraphDefs.ListViewBasic {\n    return {\n      uri: 'at://did:plc:fake/app.bsky.graph.list/fake',\n      cid: FAKE_CID,\n      name,\n      purpose: 'app.bsky.graph.defs#modlist',\n      indexedAt: new Date().toISOString(),\n    }\n  },\n\n  replyNotification({\n    author,\n    record,\n    labels,\n  }: {\n    record: AppBskyFeedPost.Record\n    author: AppBskyActorDefs.ProfileViewBasic\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyNotificationListNotifications.Notification {\n    return {\n      uri: `at://${author.did}/app.bsky.feed.post/fake`,\n      cid: FAKE_CID,\n      author,\n      reason: 'reply',\n      reasonSubject: `at://${author.did}/app.bsky.feed.post/fake-parent`,\n      record,\n      isRead: false,\n      indexedAt: new Date().toISOString(),\n      labels,\n    }\n  },\n\n  followNotification({\n    author,\n    subjectDid,\n    labels,\n  }: {\n    author: AppBskyActorDefs.ProfileViewBasic\n    subjectDid: string\n    labels?: ComAtprotoLabelDefs.Label[]\n  }): AppBskyNotificationListNotifications.Notification {\n    return {\n      uri: `at://${author.did}/app.bsky.graph.follow/fake`,\n      cid: FAKE_CID,\n      author,\n      reason: 'follow',\n      record: {\n        $type: 'app.bsky.graph.follow',\n        createdAt: new Date().toISOString(),\n        subject: subjectDid,\n      },\n      isRead: false,\n      indexedAt: new Date().toISOString(),\n      labels,\n    }\n  },\n\n  label({\n    val,\n    uri,\n    src,\n  }: {\n    val: string\n    uri: string\n    src?: string\n  }): ComAtprotoLabelDefs.Label {\n    return {\n      src: src || 'did:plc:fake-labeler',\n      uri,\n      val,\n      cts: new Date().toISOString(),\n    }\n  },\n}\n", "import { AtUri, ensureValidDid } from '@atproto/syntax'\nimport { AtpAgent } from './agent'\nimport {\n  AppBskyFeedPost,\n  AppBskyActorProfile,\n  AppBskyActorDefs,\n  AppBskyLabelerDefs,\n  ComAtprotoRepoPutRecord,\n} from './client'\nimport {\n  BskyPreferences,\n  BskyFeedViewPreference,\n  BskyThreadViewPreference,\n  BskyInterestsPreference,\n} from './types'\nimport {\n  InterpretedLabelValueDefinition,\n  LabelPreference,\n  ModerationPrefs,\n} from './moderation/types'\nimport { DEFAULT_LABEL_SETTINGS } from './moderation/const/labels'\nimport { sanitizeMutedWordValue } from './util'\nimport { interpretLabelValueDefinitions } from './moderation'\n\nconst FEED_VIEW_PREF_DEFAULTS = {\n  hideReplies: false,\n  hideRepliesByUnfollowed: true,\n  hideRepliesByLikeCount: 0,\n  hideReposts: false,\n  hideQuotePosts: false,\n}\nconst THREAD_VIEW_PREF_DEFAULTS = {\n  sort: 'oldest',\n  prioritizeFollowedUsers: true,\n}\n\ndeclare global {\n  interface Array<T> {\n    findLast(\n      predicate: (value: T, index: number, obj: T[]) => unknown,\n      thisArg?: any,\n    ): T\n  }\n}\n\nexport class BskyAgent extends AtpAgent {\n  clone() {\n    const inst = new BskyAgent({\n      service: this.service,\n    })\n    this.copyInto(inst)\n    return inst\n  }\n\n  get app() {\n    return this.api.app\n  }\n\n  getTimeline: typeof this.api.app.bsky.feed.getTimeline = (params, opts) =>\n    this.api.app.bsky.feed.getTimeline(params, opts)\n\n  getAuthorFeed: typeof this.api.app.bsky.feed.getAuthorFeed = (params, opts) =>\n    this.api.app.bsky.feed.getAuthorFeed(params, opts)\n\n  getActorLikes: typeof this.api.app.bsky.feed.getActorLikes = (params, opts) =>\n    this.api.app.bsky.feed.getActorLikes(params, opts)\n\n  getPostThread: typeof this.api.app.bsky.feed.getPostThread = (params, opts) =>\n    this.api.app.bsky.feed.getPostThread(params, opts)\n\n  getPost: typeof this.api.app.bsky.feed.post.get = (params) =>\n    this.api.app.bsky.feed.post.get(params)\n\n  getPosts: typeof this.api.app.bsky.feed.getPosts = (params, opts) =>\n    this.api.app.bsky.feed.getPosts(params, opts)\n\n  getLikes: typeof this.api.app.bsky.feed.getLikes = (params, opts) =>\n    this.api.app.bsky.feed.getLikes(params, opts)\n\n  getRepostedBy: typeof this.api.app.bsky.feed.getRepostedBy = (params, opts) =>\n    this.api.app.bsky.feed.getRepostedBy(params, opts)\n\n  getFollows: typeof this.api.app.bsky.graph.getFollows = (params, opts) =>\n    this.api.app.bsky.graph.getFollows(params, opts)\n\n  getFollowers: typeof this.api.app.bsky.graph.getFollowers = (params, opts) =>\n    this.api.app.bsky.graph.getFollowers(params, opts)\n\n  getProfile: typeof this.api.app.bsky.actor.getProfile = (params, opts) =>\n    this.api.app.bsky.actor.getProfile(params, opts)\n\n  getProfiles: typeof this.api.app.bsky.actor.getProfiles = (params, opts) =>\n    this.api.app.bsky.actor.getProfiles(params, opts)\n\n  getSuggestions: typeof this.api.app.bsky.actor.getSuggestions = (\n    params,\n    opts,\n  ) => this.api.app.bsky.actor.getSuggestions(params, opts)\n\n  searchActors: typeof this.api.app.bsky.actor.searchActors = (params, opts) =>\n    this.api.app.bsky.actor.searchActors(params, opts)\n\n  searchActorsTypeahead: typeof this.api.app.bsky.actor.searchActorsTypeahead =\n    (params, opts) =>\n      this.api.app.bsky.actor.searchActorsTypeahead(params, opts)\n\n  listNotifications: typeof this.api.app.bsky.notification.listNotifications = (\n    params,\n    opts,\n  ) => this.api.app.bsky.notification.listNotifications(params, opts)\n\n  countUnreadNotifications: typeof this.api.app.bsky.notification.getUnreadCount =\n    (params, opts) =>\n      this.api.app.bsky.notification.getUnreadCount(params, opts)\n\n  getLabelers: typeof this.api.app.bsky.labeler.getServices = (params, opts) =>\n    this.api.app.bsky.labeler.getServices(params, opts)\n\n  async getLabelDefinitions(\n    prefs: BskyPreferences | ModerationPrefs | string[],\n  ): Promise<Record<string, InterpretedLabelValueDefinition[]>> {\n    // collect the labeler dids\n    let dids: string[] = BskyAgent.appLabelers\n    if (isBskyPrefs(prefs)) {\n      dids = dids.concat(prefs.moderationPrefs.labelers.map((l) => l.did))\n    } else if (isModPrefs(prefs)) {\n      dids = dids.concat(prefs.labelers.map((l) => l.did))\n    } else {\n      dids = dids.concat(prefs)\n    }\n\n    // fetch their definitions\n    const labelers = await this.getLabelers({\n      dids,\n      detailed: true,\n    })\n\n    // assemble a map of labeler dids to the interpretted label value definitions\n    const labelDefs = {}\n    if (labelers.data) {\n      for (const labeler of labelers.data\n        .views as AppBskyLabelerDefs.LabelerViewDetailed[]) {\n        labelDefs[labeler.creator.did] = interpretLabelValueDefinitions(labeler)\n      }\n    }\n\n    return labelDefs\n  }\n\n  async post(\n    record: Partial<AppBskyFeedPost.Record> &\n      Omit<AppBskyFeedPost.Record, 'createdAt'>,\n  ) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    record.createdAt = record.createdAt || new Date().toISOString()\n    return this.api.app.bsky.feed.post.create(\n      { repo: this.session.did },\n      record as AppBskyFeedPost.Record,\n    )\n  }\n\n  async deletePost(postUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const postUrip = new AtUri(postUri)\n    return await this.api.app.bsky.feed.post.delete({\n      repo: postUrip.hostname,\n      rkey: postUrip.rkey,\n    })\n  }\n\n  async like(uri: string, cid: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.feed.like.create(\n      { repo: this.session.did },\n      {\n        subject: { uri, cid },\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteLike(likeUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const likeUrip = new AtUri(likeUri)\n    return await this.api.app.bsky.feed.like.delete({\n      repo: likeUrip.hostname,\n      rkey: likeUrip.rkey,\n    })\n  }\n\n  async repost(uri: string, cid: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.feed.repost.create(\n      { repo: this.session.did },\n      {\n        subject: { uri, cid },\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteRepost(repostUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const repostUrip = new AtUri(repostUri)\n    return await this.api.app.bsky.feed.repost.delete({\n      repo: repostUrip.hostname,\n      rkey: repostUrip.rkey,\n    })\n  }\n\n  async follow(subjectDid: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.graph.follow.create(\n      { repo: this.session.did },\n      {\n        subject: subjectDid,\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async deleteFollow(followUri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const followUrip = new AtUri(followUri)\n    return await this.api.app.bsky.graph.follow.delete({\n      repo: followUrip.hostname,\n      rkey: followUrip.rkey,\n    })\n  }\n\n  async upsertProfile(\n    updateFn: (\n      existing: AppBskyActorProfile.Record | undefined,\n    ) => AppBskyActorProfile.Record | Promise<AppBskyActorProfile.Record>,\n  ) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n\n    let retriesRemaining = 5\n    while (retriesRemaining >= 0) {\n      // fetch existing\n      const existing = await this.com.atproto.repo\n        .getRecord({\n          repo: this.session.did,\n          collection: 'app.bsky.actor.profile',\n          rkey: 'self',\n        })\n        .catch((_) => undefined)\n\n      // run the update\n      const updated = await updateFn(existing?.data.value)\n      if (updated) {\n        updated.$type = 'app.bsky.actor.profile'\n      }\n\n      // validate the record\n      const validation = AppBskyActorProfile.validateRecord(updated)\n      if (!validation.success) {\n        throw validation.error\n      }\n\n      try {\n        // attempt the put\n        await this.com.atproto.repo.putRecord({\n          repo: this.session.did,\n          collection: 'app.bsky.actor.profile',\n          rkey: 'self',\n          record: updated,\n          swapRecord: existing?.data.cid || null,\n        })\n      } catch (e: unknown) {\n        if (\n          retriesRemaining > 0 &&\n          e instanceof ComAtprotoRepoPutRecord.InvalidSwapError\n        ) {\n          // try again\n          retriesRemaining--\n          continue\n        } else {\n          throw e\n        }\n      }\n      break\n    }\n  }\n\n  async mute(actor: string) {\n    return this.api.app.bsky.graph.muteActor({ actor })\n  }\n\n  async unmute(actor: string) {\n    return this.api.app.bsky.graph.unmuteActor({ actor })\n  }\n\n  async muteModList(uri: string) {\n    return this.api.app.bsky.graph.muteActorList({\n      list: uri,\n    })\n  }\n\n  async unmuteModList(uri: string) {\n    return this.api.app.bsky.graph.unmuteActorList({\n      list: uri,\n    })\n  }\n\n  async blockModList(uri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    return await this.api.app.bsky.graph.listblock.create(\n      { repo: this.session.did },\n      {\n        subject: uri,\n        createdAt: new Date().toISOString(),\n      },\n    )\n  }\n\n  async unblockModList(uri: string) {\n    if (!this.session) {\n      throw new Error('Not logged in')\n    }\n    const listInfo = await this.api.app.bsky.graph.getList({\n      list: uri,\n      limit: 1,\n    })\n    if (!listInfo.data.list.viewer?.blocked) {\n      return\n    }\n    const { rkey } = new AtUri(listInfo.data.list.viewer.blocked)\n    return await this.api.app.bsky.graph.listblock.delete({\n      repo: this.session.did,\n      rkey,\n    })\n  }\n\n  async updateSeenNotifications(seenAt?: string) {\n    seenAt = seenAt || new Date().toISOString()\n    return this.api.app.bsky.notification.updateSeen({\n      seenAt,\n    })\n  }\n\n  async getPreferences(): Promise<BskyPreferences> {\n    const prefs: BskyPreferences = {\n      feeds: {\n        saved: undefined,\n        pinned: undefined,\n      },\n      feedViewPrefs: {\n        home: {\n          ...FEED_VIEW_PREF_DEFAULTS,\n        },\n      },\n      threadViewPrefs: { ...THREAD_VIEW_PREF_DEFAULTS },\n      moderationPrefs: {\n        adultContentEnabled: false,\n        labels: { ...DEFAULT_LABEL_SETTINGS },\n        labelers: BskyAgent.appLabelers.map((did) => ({ did, labels: {} })),\n        mutedWords: [],\n        hiddenPosts: [],\n      },\n      birthDate: undefined,\n      interests: {\n        tags: [],\n      },\n    }\n    const res = await this.app.bsky.actor.getPreferences({})\n    const labelPrefs: AppBskyActorDefs.ContentLabelPref[] = []\n    for (const pref of res.data.preferences) {\n      if (\n        AppBskyActorDefs.isAdultContentPref(pref) &&\n        AppBskyActorDefs.validateAdultContentPref(pref).success\n      ) {\n        // adult content preferences\n        prefs.moderationPrefs.adultContentEnabled = pref.enabled\n      } else if (\n        AppBskyActorDefs.isContentLabelPref(pref) &&\n        AppBskyActorDefs.validateContentLabelPref(pref).success\n      ) {\n        // content label preference\n        const adjustedPref = adjustLegacyContentLabelPref(pref)\n        labelPrefs.push(adjustedPref)\n      } else if (\n        AppBskyActorDefs.isLabelersPref(pref) &&\n        AppBskyActorDefs.validateLabelersPref(pref).success\n      ) {\n        // labelers preferences\n        prefs.moderationPrefs.labelers = BskyAgent.appLabelers\n          .map((did) => ({ did, labels: {} }))\n          .concat(\n            pref.labelers.map((labeler) => ({\n              ...labeler,\n              labels: {},\n            })),\n          )\n      } else if (\n        AppBskyActorDefs.isSavedFeedsPref(pref) &&\n        AppBskyActorDefs.validateSavedFeedsPref(pref).success\n      ) {\n        // saved and pinned feeds\n        prefs.feeds.saved = pref.saved\n        prefs.feeds.pinned = pref.pinned\n      } else if (\n        AppBskyActorDefs.isPersonalDetailsPref(pref) &&\n        AppBskyActorDefs.validatePersonalDetailsPref(pref).success\n      ) {\n        // birth date (irl)\n        if (pref.birthDate) {\n          prefs.birthDate = new Date(pref.birthDate)\n        }\n      } else if (\n        AppBskyActorDefs.isFeedViewPref(pref) &&\n        AppBskyActorDefs.validateFeedViewPref(pref).success\n      ) {\n        // feed view preferences\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, feed, ...v } = pref\n        prefs.feedViewPrefs[pref.feed] = { ...FEED_VIEW_PREF_DEFAULTS, ...v }\n      } else if (\n        AppBskyActorDefs.isThreadViewPref(pref) &&\n        AppBskyActorDefs.validateThreadViewPref(pref).success\n      ) {\n        // thread view preferences\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, ...v } = pref\n        prefs.threadViewPrefs = { ...prefs.threadViewPrefs, ...v }\n      } else if (\n        AppBskyActorDefs.isInterestsPref(pref) &&\n        AppBskyActorDefs.validateInterestsPref(pref).success\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, ...v } = pref\n        prefs.interests = { ...prefs.interests, ...v }\n      } else if (\n        AppBskyActorDefs.isMutedWordsPref(pref) &&\n        AppBskyActorDefs.validateMutedWordsPref(pref).success\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, ...v } = pref\n        prefs.moderationPrefs.mutedWords = v.items\n      } else if (\n        AppBskyActorDefs.isHiddenPostsPref(pref) &&\n        AppBskyActorDefs.validateHiddenPostsPref(pref).success\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { $type, ...v } = pref\n        prefs.moderationPrefs.hiddenPosts = v.items\n      }\n    }\n\n    // apply the label prefs\n    for (const pref of labelPrefs) {\n      if (pref.labelerDid) {\n        const labeler = prefs.moderationPrefs.labelers.find(\n          (labeler) => labeler.did === pref.labelerDid,\n        )\n        if (!labeler) continue\n        labeler.labels[pref.label] = pref.visibility as LabelPreference\n      } else {\n        prefs.moderationPrefs.labels[pref.label] =\n          pref.visibility as LabelPreference\n      }\n    }\n\n    prefs.moderationPrefs.labels = remapLegacyLabels(\n      prefs.moderationPrefs.labels,\n    )\n\n    // automatically configure the client\n    this.configureLabelersHeader(prefsArrayToLabelerDids(res.data.preferences))\n\n    return prefs\n  }\n\n  async setSavedFeeds(saved: string[], pinned: string[]) {\n    return updateFeedPreferences(this, () => ({\n      saved,\n      pinned,\n    }))\n  }\n\n  async addSavedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved: [...saved.filter((uri) => uri !== v), v],\n      pinned,\n    }))\n  }\n\n  async removeSavedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved: saved.filter((uri) => uri !== v),\n      pinned: pinned.filter((uri) => uri !== v),\n    }))\n  }\n\n  async addPinnedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved: [...saved.filter((uri) => uri !== v), v],\n      pinned: [...pinned.filter((uri) => uri !== v), v],\n    }))\n  }\n\n  async removePinnedFeed(v: string) {\n    return updateFeedPreferences(this, (saved: string[], pinned: string[]) => ({\n      saved,\n      pinned: pinned.filter((uri) => uri !== v),\n    }))\n  }\n\n  async setAdultContentEnabled(v: boolean) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      let adultContentPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isAdultContentPref(pref) &&\n          AppBskyActorDefs.validateAdultContentPref(pref).success,\n      )\n      if (adultContentPref) {\n        adultContentPref.enabled = v\n      } else {\n        adultContentPref = {\n          $type: 'app.bsky.actor.defs#adultContentPref',\n          enabled: v,\n        }\n      }\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isAdultContentPref(pref))\n        .concat([adultContentPref])\n    })\n  }\n\n  async setContentLabelPref(\n    key: string,\n    value: LabelPreference,\n    labelerDid?: string,\n  ) {\n    if (labelerDid) {\n      ensureValidDid(labelerDid)\n    }\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      let labelPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isContentLabelPref(pref) &&\n          AppBskyActorDefs.validateContentLabelPref(pref).success &&\n          pref.label === key &&\n          pref.labelerDid === labelerDid,\n      )\n      let legacyLabelPref: AppBskyActorDefs.ContentLabelPref | undefined\n\n      if (labelPref) {\n        labelPref.visibility = value\n      } else {\n        labelPref = {\n          $type: 'app.bsky.actor.defs#contentLabelPref',\n          label: key,\n          labelerDid,\n          visibility: value,\n        }\n      }\n\n      if (AppBskyActorDefs.isContentLabelPref(labelPref)) {\n        // is global\n        if (!labelPref.labelerDid) {\n          const legacyLabelValue = {\n            'graphic-media': 'gore',\n            porn: 'nsfw',\n            sexual: 'suggestive',\n          }[labelPref.label]\n\n          // if it's a legacy label, double-write the legacy label\n          if (legacyLabelValue) {\n            legacyLabelPref = prefs.findLast(\n              (pref) =>\n                AppBskyActorDefs.isContentLabelPref(pref) &&\n                AppBskyActorDefs.validateContentLabelPref(pref).success &&\n                pref.label === legacyLabelValue &&\n                pref.labelerDid === undefined,\n            ) as AppBskyActorDefs.ContentLabelPref | undefined\n\n            if (legacyLabelPref) {\n              legacyLabelPref.visibility = value\n            } else {\n              legacyLabelPref = {\n                $type: 'app.bsky.actor.defs#contentLabelPref',\n                label: legacyLabelValue,\n                labelerDid: undefined,\n                visibility: value,\n              }\n            }\n          }\n        }\n      }\n\n      return prefs\n        .filter(\n          (pref) =>\n            !AppBskyActorDefs.isContentLabelPref(pref) ||\n            !(pref.label === key && pref.labelerDid === labelerDid),\n        )\n        .concat([labelPref])\n        .filter((pref) => {\n          if (!legacyLabelPref) return true\n          return (\n            !AppBskyActorDefs.isContentLabelPref(pref) ||\n            !(\n              pref.label === legacyLabelPref.label &&\n              pref.labelerDid === undefined\n            )\n          )\n        })\n        .concat(legacyLabelPref ? [legacyLabelPref] : [])\n    })\n  }\n\n  async addLabeler(did: string) {\n    const prefs = await updatePreferences(\n      this,\n      (prefs: AppBskyActorDefs.Preferences) => {\n        let labelersPref = prefs.findLast(\n          (pref) =>\n            AppBskyActorDefs.isLabelersPref(pref) &&\n            AppBskyActorDefs.validateLabelersPref(pref).success,\n        )\n        if (!labelersPref) {\n          labelersPref = {\n            $type: 'app.bsky.actor.defs#labelersPref',\n            labelers: [],\n          }\n        }\n        if (AppBskyActorDefs.isLabelersPref(labelersPref)) {\n          let labelerPrefItem = labelersPref.labelers.find(\n            (labeler) => labeler.did === did,\n          )\n          if (!labelerPrefItem) {\n            labelerPrefItem = {\n              did,\n            }\n            labelersPref.labelers.push(labelerPrefItem)\n          }\n        }\n        return prefs\n          .filter((pref) => !AppBskyActorDefs.isLabelersPref(pref))\n          .concat([labelersPref])\n      },\n    )\n    // automatically configure the client\n    this.configureLabelersHeader(prefsArrayToLabelerDids(prefs))\n  }\n\n  async removeLabeler(did: string) {\n    const prefs = await updatePreferences(\n      this,\n      (prefs: AppBskyActorDefs.Preferences) => {\n        let labelersPref = prefs.findLast(\n          (pref) =>\n            AppBskyActorDefs.isLabelersPref(pref) &&\n            AppBskyActorDefs.validateLabelersPref(pref).success,\n        )\n        if (!labelersPref) {\n          labelersPref = {\n            $type: 'app.bsky.actor.defs#labelersPref',\n            labelers: [],\n          }\n        }\n        if (AppBskyActorDefs.isLabelersPref(labelersPref)) {\n          labelersPref.labelers = labelersPref.labelers.filter(\n            (labeler) => labeler.did !== did,\n          )\n        }\n        return prefs\n          .filter((pref) => !AppBskyActorDefs.isLabelersPref(pref))\n          .concat([labelersPref])\n      },\n    )\n    // automatically configure the client\n    this.configureLabelersHeader(prefsArrayToLabelerDids(prefs))\n  }\n\n  async setPersonalDetails({\n    birthDate,\n  }: {\n    birthDate: string | Date | undefined\n  }) {\n    birthDate = birthDate instanceof Date ? birthDate.toISOString() : birthDate\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      let personalDetailsPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isPersonalDetailsPref(pref) &&\n          AppBskyActorDefs.validatePersonalDetailsPref(pref).success,\n      )\n      if (personalDetailsPref) {\n        personalDetailsPref.birthDate = birthDate\n      } else {\n        personalDetailsPref = {\n          $type: 'app.bsky.actor.defs#personalDetailsPref',\n          birthDate,\n        }\n      }\n      return prefs\n        .filter((pref) => !AppBskyActorDefs.isPersonalDetailsPref(pref))\n        .concat([personalDetailsPref])\n    })\n  }\n\n  async setFeedViewPrefs(feed: string, pref: Partial<BskyFeedViewPreference>) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      const existing = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isFeedViewPref(pref) &&\n          AppBskyActorDefs.validateFeedViewPref(pref).success &&\n          pref.feed === feed,\n      )\n      if (existing) {\n        pref = { ...existing, ...pref }\n      }\n      return prefs\n        .filter(\n          (p) => !AppBskyActorDefs.isFeedViewPref(pref) || p.feed !== feed,\n        )\n        .concat([{ ...pref, $type: 'app.bsky.actor.defs#feedViewPref', feed }])\n    })\n  }\n\n  async setThreadViewPrefs(pref: Partial<BskyThreadViewPreference>) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      const existing = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isThreadViewPref(pref) &&\n          AppBskyActorDefs.validateThreadViewPref(pref).success,\n      )\n      if (existing) {\n        pref = { ...existing, ...pref }\n      }\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isThreadViewPref(p))\n        .concat([{ ...pref, $type: 'app.bsky.actor.defs#threadViewPref' }])\n    })\n  }\n\n  async setInterestsPref(pref: Partial<BskyInterestsPreference>) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      const existing = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isInterestsPref(pref) &&\n          AppBskyActorDefs.validateInterestsPref(pref).success,\n      )\n      if (existing) {\n        pref = { ...existing, ...pref }\n      }\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isInterestsPref(p))\n        .concat([{ ...pref, $type: 'app.bsky.actor.defs#interestsPref' }])\n    })\n  }\n\n  async upsertMutedWords(newMutedWords: AppBskyActorDefs.MutedWord[]) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      let mutedWordsPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isMutedWordsPref(pref) &&\n          AppBskyActorDefs.validateMutedWordsPref(pref).success,\n      )\n\n      if (mutedWordsPref && AppBskyActorDefs.isMutedWordsPref(mutedWordsPref)) {\n        for (const updatedWord of newMutedWords) {\n          let foundMatch = false\n          const sanitizedUpdatedValue = sanitizeMutedWordValue(\n            updatedWord.value,\n          )\n\n          // was trimmed down to an empty string e.g. single `#`\n          if (!sanitizedUpdatedValue) continue\n\n          for (const existingItem of mutedWordsPref.items) {\n            if (existingItem.value === sanitizedUpdatedValue) {\n              existingItem.targets = Array.from(\n                new Set([...existingItem.targets, ...updatedWord.targets]),\n              )\n              foundMatch = true\n              break\n            }\n          }\n\n          if (!foundMatch) {\n            mutedWordsPref.items.push({\n              ...updatedWord,\n              value: sanitizedUpdatedValue,\n            })\n          }\n        }\n      } else {\n        // if the pref doesn't exist, create it\n        mutedWordsPref = {\n          items: newMutedWords.map((w) => ({\n            ...w,\n            value: sanitizeMutedWordValue(w.value),\n          })),\n        }\n      }\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isMutedWordsPref(p))\n        .concat([\n          { ...mutedWordsPref, $type: 'app.bsky.actor.defs#mutedWordsPref' },\n        ])\n    })\n  }\n\n  async updateMutedWord(mutedWord: AppBskyActorDefs.MutedWord) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      const mutedWordsPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isMutedWordsPref(pref) &&\n          AppBskyActorDefs.validateMutedWordsPref(pref).success,\n      )\n\n      if (mutedWordsPref && AppBskyActorDefs.isMutedWordsPref(mutedWordsPref)) {\n        for (const existingItem of mutedWordsPref.items) {\n          if (existingItem.value === mutedWord.value) {\n            existingItem.targets = mutedWord.targets\n            break\n          }\n        }\n      }\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isMutedWordsPref(p))\n        .concat([\n          { ...mutedWordsPref, $type: 'app.bsky.actor.defs#mutedWordsPref' },\n        ])\n    })\n  }\n\n  async removeMutedWord(mutedWord: AppBskyActorDefs.MutedWord) {\n    await updatePreferences(this, (prefs: AppBskyActorDefs.Preferences) => {\n      const mutedWordsPref = prefs.findLast(\n        (pref) =>\n          AppBskyActorDefs.isMutedWordsPref(pref) &&\n          AppBskyActorDefs.validateMutedWordsPref(pref).success,\n      )\n\n      if (mutedWordsPref && AppBskyActorDefs.isMutedWordsPref(mutedWordsPref)) {\n        for (let i = 0; i < mutedWordsPref.items.length; i++) {\n          const existing = mutedWordsPref.items[i]\n          if (existing.value === mutedWord.value) {\n            mutedWordsPref.items.splice(i, 1)\n            break\n          }\n        }\n      }\n\n      return prefs\n        .filter((p) => !AppBskyActorDefs.isMutedWordsPref(p))\n        .concat([\n          { ...mutedWordsPref, $type: 'app.bsky.actor.defs#mutedWordsPref' },\n        ])\n    })\n  }\n\n  async hidePost(postUri: string) {\n    await updateHiddenPost(this, postUri, 'hide')\n  }\n\n  async unhidePost(postUri: string) {\n    await updateHiddenPost(this, postUri, 'unhide')\n  }\n}\n\n/**\n * This function updates the preferences of a user and allows for a callback function to be executed\n * before the update.\n * @param cb - cb is a callback function that takes in a single parameter of type\n * AppBskyActorDefs.Preferences and returns either a boolean or void. This callback function is used to\n * update the preferences of the user. The function is called with the current preferences as an\n * argument and if the callback returns false, the preferences are not updated.\n */\nasync function updatePreferences(\n  agent: BskyAgent,\n  cb: (\n    prefs: AppBskyActorDefs.Preferences,\n  ) => AppBskyActorDefs.Preferences | false,\n) {\n  const res = await agent.app.bsky.actor.getPreferences({})\n  const newPrefs = cb(res.data.preferences)\n  if (newPrefs === false) {\n    return res.data.preferences\n  }\n  await agent.app.bsky.actor.putPreferences({\n    preferences: newPrefs,\n  })\n  return newPrefs\n}\n\n/**\n * A helper specifically for updating feed preferences\n */\nasync function updateFeedPreferences(\n  agent: BskyAgent,\n  cb: (\n    saved: string[],\n    pinned: string[],\n  ) => { saved: string[]; pinned: string[] },\n): Promise<{ saved: string[]; pinned: string[] }> {\n  let res\n  await updatePreferences(agent, (prefs: AppBskyActorDefs.Preferences) => {\n    let feedsPref = prefs.findLast(\n      (pref) =>\n        AppBskyActorDefs.isSavedFeedsPref(pref) &&\n        AppBskyActorDefs.validateSavedFeedsPref(pref).success,\n    ) as AppBskyActorDefs.SavedFeedsPref | undefined\n    if (feedsPref) {\n      res = cb(feedsPref.saved, feedsPref.pinned)\n      feedsPref.saved = res.saved\n      feedsPref.pinned = res.pinned\n    } else {\n      res = cb([], [])\n      feedsPref = {\n        $type: 'app.bsky.actor.defs#savedFeedsPref',\n        saved: res.saved,\n        pinned: res.pinned,\n      }\n    }\n    return prefs\n      .filter((pref) => !AppBskyActorDefs.isSavedFeedsPref(pref))\n      .concat([feedsPref])\n  })\n  return res\n}\n\n/**\n * Helper to transform the legacy content preferences.\n */\nfunction adjustLegacyContentLabelPref(\n  pref: AppBskyActorDefs.ContentLabelPref,\n): AppBskyActorDefs.ContentLabelPref {\n  let visibility = pref.visibility\n\n  // adjust legacy values\n  if (visibility === 'show') {\n    visibility = 'ignore'\n  }\n\n  return { ...pref, visibility }\n}\n\n/**\n * Re-maps legacy labels to new labels on READ. Does not save these changes to\n * the user's preferences.\n */\nfunction remapLegacyLabels(\n  labels: BskyPreferences['moderationPrefs']['labels'],\n) {\n  const _labels = { ...labels }\n  const legacyToNewMap: Record<string, string | undefined> = {\n    gore: 'graphic-media',\n    nsfw: 'porn',\n    suggestive: 'sexual',\n  }\n\n  for (const labelName in _labels) {\n    const newLabelName = legacyToNewMap[labelName]!\n    if (newLabelName) {\n      _labels[newLabelName] = _labels[labelName]\n    }\n  }\n\n  return _labels\n}\n\n/**\n * A helper to get the currently enabled labelers from the full preferences array\n */\nfunction prefsArrayToLabelerDids(\n  prefs: AppBskyActorDefs.Preferences,\n): string[] {\n  const labelersPref = prefs.findLast(\n    (pref) =>\n      AppBskyActorDefs.isLabelersPref(pref) &&\n      AppBskyActorDefs.validateLabelersPref(pref).success,\n  )\n  let dids: string[] = []\n  if (labelersPref) {\n    dids = (labelersPref as AppBskyActorDefs.LabelersPref).labelers.map(\n      (labeler) => labeler.did,\n    )\n  }\n  return dids\n}\n\nasync function updateHiddenPost(\n  agent: BskyAgent,\n  postUri: string,\n  action: 'hide' | 'unhide',\n) {\n  await updatePreferences(agent, (prefs: AppBskyActorDefs.Preferences) => {\n    let pref = prefs.findLast(\n      (pref) =>\n        AppBskyActorDefs.isHiddenPostsPref(pref) &&\n        AppBskyActorDefs.validateHiddenPostsPref(pref).success,\n    )\n    if (pref && AppBskyActorDefs.isHiddenPostsPref(pref)) {\n      pref.items =\n        action === 'hide'\n          ? Array.from(new Set([...pref.items, postUri]))\n          : pref.items.filter((uri) => uri !== postUri)\n    } else {\n      if (action === 'hide') {\n        pref = {\n          $type: 'app.bsky.actor.defs#hiddenPostsPref',\n          items: [postUri],\n        }\n      }\n    }\n    return prefs\n      .filter((p) => !AppBskyActorDefs.isInterestsPref(p))\n      .concat([{ ...pref, $type: 'app.bsky.actor.defs#hiddenPostsPref' }])\n  })\n}\n\nfunction isBskyPrefs(v: any): v is BskyPreferences {\n  return (\n    v &&\n    typeof v === 'object' &&\n    'moderationPrefs' in v &&\n    isModPrefs(v.moderationPrefs)\n  )\n}\n\nfunction isModPrefs(v: any): v is ModerationPrefs {\n  return v && typeof v === 'object' && 'labelers' in v\n}\n", "export { AtUri } from '@atproto/syntax'\nexport {\n  BlobRef,\n  lexToJson,\n  stringifyLex,\n  jsonToLex,\n  jsonStringToLex,\n} from '@atproto/lexicon'\nexport { parseLanguage } from '@atproto/common-web'\nexport * from './types'\nexport * from './const'\nexport * from './util'\nexport * from './client'\nexport * from './agent'\nexport * from './rich-text/rich-text'\nexport * from './rich-text/sanitization'\nexport * from './rich-text/unicode'\nexport * from './rich-text/util'\nexport * from './moderation'\nexport * from './moderation/types'\nexport * from './mocker'\nexport { LABELS, DEFAULT_LABEL_SETTINGS } from './moderation/const/labels'\nexport { BskyAgent } from './bsky-agent'\nexport { AtpAgent as default } from './agent'\n", "module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n", "module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n", "\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n", "module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n", "// @ts-check\n\n/** @param {string | null | undefined} text */\nexport function likelyDID(text) {\n  return text && (\n    !text.trim().indexOf('did:') ||\n    text.trim().length === 24 && !/[^\\sa-z0-9]/i.test(text)\n  );\n}\n\n/**\n * @param {T} did\n * @returns {T}\n * @template {string | undefined | null} T\n */\nexport function shortenDID(did) {\n  return did && /** @type {T} */(did.replace(_shortenDID_Regex, '').toLowerCase() || undefined);\n}\n\nconst _shortenDID_Regex = /^did\\:plc\\:/;\n\nexport function unwrapShortDID(shortDID) {\n  return !shortDID ? undefined : shortDID.indexOf(':') < 0 ? 'did:plc:' + shortDID.toLowerCase() : shortDID.toLowerCase();\n}\n\n/**\n * @param {T} handle\n * @returns {T}\n * @template {string | undefined | null} T\n */\nexport function shortenHandle(handle) {\n  handle = cheapNormalizeHandle(handle);\n  return handle && /** @type {T} */(handle.replace(_shortenHandle_Regex, '').toLowerCase() || undefined);\n}\nconst _shortenHandle_Regex = /\\.bsky\\.social$/;\n\nexport function unwrapShortHandle(shortHandle) {\n  if (likelyDID(shortHandle)) return unwrapShortDID(shortHandle);\n  shortHandle = cheapNormalizeHandle(shortHandle);\n  return !shortHandle ? undefined : shortHandle.indexOf('.') < 0 ? shortHandle.toLowerCase() + '.bsky.social' : shortHandle.toLowerCase();\n}\n\nfunction cheapNormalizeHandle(handle) {\n  handle = handle && handle.trim().toLowerCase();\n\n  if (handle && handle.charCodeAt(0) === 64)\n    handle = handle.slice(1);\n\n  const urlprefix = 'https://bsky.app/';\n  if (handle && handle.lastIndexOf(urlprefix, 0) === 0) {\n    const postURL = breakPostURL(handle);\n    if (postURL && postURL.shortDID)\n      return postURL.shortDID;\n  }\n\n  if (handle && handle.lastIndexOf('at:', 0) === 0) {\n    const feedUri = breakFeedUri(handle);\n    if (feedUri && feedUri.shortDID)\n      return feedUri.shortDID;\n\n    if (handle && handle.lastIndexOf('at://', 0) === 0) handle = handle.slice(5);\n    else handle = handle.slice(3);\n  }\n\n  return handle || undefined;\n}\n\n/** @param {string | undefined | null} pdc */\nexport function shortenPDC(pdc) {\n  if (!pdc) return undefined;\n\n  pdc = pdc.trim().toLowerCase();\n\n  if (pdc === 'https://bsky.social') return '.s';\n  else if (pdc === 'https://bsky.network') return '.n';\n  else if (pdc === 'https://bsky.app') return '.a';\n\n  // https://morel.us-east.host.bsky.network\n  return pdc.replace(/^https:\\/\\//, '').replace(/host\\.bsky\\.network$/, '');\n}\n\nexport function unwrapShortPDC(shortPDC) {\n  if (!shortPDC) return undefined;\n\n  if (shortPDC === '.s') return 'https://bsky.social';\n  else if (shortPDC === '.n') return 'https://bsky.network';\n  else if (shortPDC === '.a') return 'https://bsky.app';\n\n  return 'https://' + shortPDC + 'host.bsky.network';\n}\n\n/**\n * dd+hh:mm:ss like 30+23:59:59\n * @param {string | null | undefined} dtOffsetStr\n */\nexport function parseTimestampOffset(dtOffsetStr) {\n\n  if (!dtOffsetStr) return undefined;\n\n  let offset = 0;\n  let lead = 0;\n  const plusPos = dtOffsetStr.indexOf('+');\n  if (plusPos >= 0) {\n    offset = Number(dtOffsetStr.substring(0, plusPos)) * 24 * 60 * 60 * 1000;\n    lead = plusPos + 1;\n  }\n\n  const secondsColonPos = dtOffsetStr.lastIndexOf(':');\n  if (secondsColonPos < 0) {\n    offset += Number(dtOffsetStr.substring(lead)) * 1000;\n  } else {\n    offset += Number(dtOffsetStr.substring(secondsColonPos + 1)) * 1000;\n\n    const minutesColonPos = dtOffsetStr.lastIndexOf(':', secondsColonPos - 1);\n    if (minutesColonPos < 0) {\n      offset += Number(dtOffsetStr.substring(lead, secondsColonPos)) * 60 * 1000;\n    } else {\n      offset += Number(dtOffsetStr.substring(minutesColonPos + 1, secondsColonPos)) * 60 * 1000;\n      offset += Number(dtOffsetStr.substring(lead, minutesColonPos)) * 60 * 60 * 1000;\n    }\n  }\n\n  return offset;\n}\n\nconst offsetTooLarge = Date.UTC(2022, 1, 1);\n\n/**\n * @param {number} offset\n * @returns dd+hh:mm:ss like 30+23:59:59 or 59:59.999\n */\nexport function timestampOffsetToString(offset) {\n  if (offset > offsetTooLarge) {\n    console.error('timestampOffsetToString: offset too large', offset, new Date(offset));\n  }\n\n  const milliseconds = offset % 1000;\n  offset = (offset - milliseconds) / 1000;\n  const seconds = offset % 60;\n  offset = (offset - seconds) / 60;\n  const minutes = offset % 60;\n  offset = (offset - minutes) / 60;\n  const hours = offset % 24;\n  const days = (offset - hours) / 24;\n\n  let str = (100 + seconds).toString().slice(1);\n  if (milliseconds) {\n    str = str + '.' + (1000 + milliseconds).toString().slice(1).replace(/0+$/, '');\n  }\n\n  if (days + hours + minutes) {\n    str = (100 + minutes).toString().slice(1) + ':' + str;\n    if (days + hours) {\n      str = hours.toString() + ':' + str;\n      if (days) {\n        str = days + '+' + str;\n      }\n    }\n  }\n\n  // no need for leading zero\n  if (str.lastIndexOf('0', 0) === 0) str = str.slice(1);\n\n  return str;\n}\n\n/**\n* @param {string | null | undefined} url\n*/\nexport function breakPostURL(url) {\n  if (!url) return;\n  const match = _breakPostURL_Regex.exec(url);\n  if (!match) return;\n  return { shortDID: match[1], postID: match[2] };\n}\nconst _breakPostURL_Regex = /^http[s]?\\:\\/\\/bsky\\.app\\/profile\\/([a-z0-9\\.\\:]+)\\/post\\/([a-z0-9]+)$/;\n\n/**\n* @param {string | null | undefined} uri\n*/\nexport function breakFeedUri(uri) {\n  if (!uri) return;\n  const match = _breakFeedUri_Regex.exec(uri);\n  if (!match || !match[3]) return;\n  return { shortDID: match[2], postID: match[3] };\n}\nconst _breakFeedUri_Regex = /^at\\:\\/\\/(did:plc:)?([a-z0-9]+)\\/[a-z\\.]+\\/?(.*)?$/;\n", "/**\n * @param {any} x\n * @returns {x is Promise<any>}\n */\nexport function isPromise(x) {\n  if (!x || typeof x !== 'object') return false;\n  else return typeof x.then === 'function';\n}\n", "// @ts-check\n\nimport { BskyAgent } from '@atproto/api';\nimport { throttledAsyncCache } from './throttled-async-cache';\n\nexport const BSKY_SOCIAL_URL = 'https://bsky.social/';\nexport const BSKY_NETWORK_URL = 'https://bsky.network/';\n\nexport class ColdskyAgent extends BskyAgent {\n  /** @param {Omit<ConstructorParameters<typeof BskyAgent>[0], 'service'>} args */\n  constructor(args) {\n    super({\n      ...args,\n      // most of methods work fine on bsky.social\n      service: BSKY_SOCIAL_URL,\n    });\n\n    // find all clients to patch\n    for (const key in this.com.atproto) {\n      /** @type {typeof this.com.atproto.admin} */\n      const ns = this.com.atproto[key];\n      const baseClient = ns._service?.xrpc?.baseClient;\n      if (baseClient) this.patchBaseClient(baseClient)\n    }\n  }\n\n  /**\n   * @param {typeof this.com.atproto.sync._service.xrpc.baseClient} baseClient \n   */\n  patchBaseClient(baseClient) {\n    baseClient.lex.assertValidXrpcOutput = function (lexUri, value, ...rest) {\n      return true;\n    };\n\n    if (/** @type {*} */(baseClient.fetch)._patchedFetch) return;\n    baseClient.fetch = overrideFetch(baseClient.fetch.bind(baseClient));\n  }\n\n}\n\nconst typedCaches = {};\n\n/**\n * @param {BskyAgent['com']['atproto']['sync']['_service']['xrpc']['baseClient']['fetch'] &\n *  { _patchedFetch?: boolean }} baseFetch\n * @returns {BskyAgent['com']['atproto']['sync']['_service']['xrpc']['baseClient']['fetch'] &\n *  { _patchedFetch?: boolean }}\n */\nfunction overrideFetch(baseFetch) {\n  if (baseFetch._patchedFetch) return baseFetch;\n  fetchOverride._patchedFetch = true;\n  return fetchOverride;\n\n  function fetchOverride(httpUri, httpMethod, httpHeaders, httpReqBody) {\n    const useBskyNetwork =\n      httpUri.indexOf('com.atproto.sync.listRepos') >= 0;\n\n    const useHttpUri = useBskyNetwork ?\n      'https://corsproxy.io/?' + httpUri.replace(BSKY_SOCIAL_URL, BSKY_NETWORK_URL) :\n      httpUri;\n\n    const qPos = useHttpUri.indexOf('?');\n    const httpUriKey = qPos >= 0 ? useHttpUri.slice(0, qPos) : useHttpUri;\n\n    const headersUnique = JSON.stringify(httpHeaders);\n    const httpReqBodyUnique = JSON.stringify(httpReqBody);\n\n    let cache = typedCaches[httpUriKey];\n    if (!cache) {\n      cache = typedCaches[httpUriKey] = throttledAsyncCache(\n        fetchWithBase,\n        { maxConcurrency: 2, interval: 100 });\n    }\n\n    return cache(useHttpUri, httpMethod, headersUnique, httpReqBodyUnique);\n  \n\n    function fetchWithBase(httpUri, httpMethod, httpHeadersStringified, httpReqBodyStringified) {\n      const startFetch = Date.now();\n      const httpHeaders = typeof httpHeadersStringified === 'undefined' ? undefined :\n        JSON.parse(httpHeadersStringified);\n      const httpReqBody = typeof httpReqBodyStringified === 'undefined' ? undefined :\n        JSON.parse(httpReqBodyStringified);\n\n      return fetchWithRateHandling();\n\n      function fetchWithRateHandling() {\n        return baseFetch(httpUri, httpMethod, httpHeaders, httpReqBody).then(\n          result => {\n            setTimeout(() => {\n              cache.evict(httpUri, httpMethod, headersUnique, httpReqBodyUnique);\n            }, httpMethod === 'GET' ? 1000 : 100);\n            return result;\n          },\n          handleFetchError);\n      }\n\n      function handleFetchError(error) {\n        if (/\\brate\\b/i.test(error.message || '')) {\n          const waitTime = Math.min(\n            Math.max(1000, (Date.now() - startFetch) / 3),\n            1000);\n\n          return new Promise(resolve => setTimeout(resolve, waitTime))\n            .then(() => fetchWithRateHandling());\n        } else {\n          setTimeout(() => {\n            cache.evict(httpUri, httpMethod, headersUnique, httpReqBodyUnique);\n          }, 10);\n\n          throw error;\n        }\n      }\n    }\n  }\n\n}\n", "// @ts-check\n\nimport { isPromise } from './is-promise';\n\n/**\n * @template {Function} TFunction\n * @param {TFunction} call\n * @param {{ maxConcurrency?: number, interval?: number }} _\n * @returns TFunction & { prepopulate: (value: any, ...args: any[]) => void, evict: (...args: any[]) => void }\n */\nexport function throttledAsyncCache(call, { maxConcurrency = 3, interval = 100 } = {}) {\n  const cache = multikeyMap();\n\n  const outstandingRequests = new Set();\n  const waitingRequests = new Set();\n\n  var scheduleMoreLaterTimeout;\n\n  throttledCall.prepopulate = prepopulate;\n  throttledCall.evict = evict;\n\n  return throttledCall;\n\n  function prepopulate(value, ...args) {\n    cache.set(...args, { value });\n  }\n\n  function evict(...args) {\n    cache.delete(...args);\n  }\n\n  function throttledCall(...args) {\n    let result = cache.get(...args);\n    if (result) {\n      if (isPromise(result.value)) result.priority++;\n      return result.value;\n    }\n\n    let scheduleNow;\n    const schedulePromise = new Promise(resolve => scheduleNow = resolve);\n\n    const entry = {\n      priority: 0,\n      value: invokeCall(),\n      scheduleNow\n    };\n\n    cache.set(...args, entry);\n    waitingRequests.add(entry);\n\n    scheduleAsAppropriate();\n\n    return entry.value;\n\n    async function invokeCall() {\n      await schedulePromise;\n      waitingRequests.delete(entry);\n      outstandingRequests.add(entry);\n      try {\n        const result = await call(...args);\n        entry.value = result;\n        return result;\n      } finally {\n        outstandingRequests.delete(entry);\n        scheduleAsAppropriate();\n      }\n    }\n  }\n\n  async function scheduleAsAppropriate() {\n    if (outstandingRequests.size >= maxConcurrency) return;\n\n    if (interval) {\n      await new Promise(resolve => setTimeout(resolve, interval));\n      if (outstandingRequests.size >= maxConcurrency) return;\n    }\n\n    const nextRequest = [...waitingRequests].sort((a, b) => b.priority - a.priority)[0];\n    if (!nextRequest) return;\n    nextRequest.scheduleNow();\n\n    if (outstandingRequests.size < maxConcurrency) {\n      clearTimeout(scheduleMoreLaterTimeout);\n      scheduleMoreLaterTimeout = setTimeout(scheduleAsAppropriate, (interval || 100));\n    }\n  }\n}\n\nfunction multikeyMap() {\n  /** @type {Map & { _value?: any }} */\n  const storeMap = new Map();\n\n  const resultMap = {\n    get,\n    set,\n    delete: deleteKeys,\n    has,\n    clear\n  };\n\n  return resultMap;\n\n  function get(...keys) {\n    let entry = storeMap;\n    for (const key of keys) {\n      entry = entry.get(key);\n      if (!entry) return;\n    }\n    return entry._value;\n  }\n\n  function set(...keys) {\n    let entry = storeMap;\n    for (let i = 0; i < keys.length - 1; i++) {\n      const key = keys[i];\n      entry = entry.get(key) || entry.set(key, new Map()).get(key);\n    }\n    entry._value = keys[keys.length - 1];\n    return resultMap;\n  }\n\n  function deleteKeys(...keys) {\n    let entry = storeMap;\n    for (let i = 0; i < keys.length - 1; i++) {\n      const key = keys[i];\n      entry = entry.get(key);\n      if (!entry) return false;\n    }\n    return entry.delete(keys[keys.length - 1]);\n  }\n\n  function has(...keys) {\n    let entry = storeMap;\n    for (const key of keys) {\n      entry = entry.get(key);\n      if (!entry) return false;\n    }\n    return true;\n  }\n\n  function clear() {\n    return storeMap.clear();\n  }\n}", "let decoder\ntry {\n\tdecoder = new TextDecoder()\n} catch(error) {}\nlet src\nlet srcEnd\nlet position = 0\nlet alreadySet\nconst EMPTY_ARRAY = []\nconst LEGACY_RECORD_INLINE_ID = 105\nconst RECORD_DEFINITIONS_ID = 0xdffe\nconst RECORD_INLINE_ID = 0xdfff // temporary first-come first-serve tag // proposed tag: 0x7265 // 're'\nconst BUNDLED_STRINGS_ID = 0xdff9\nconst PACKED_TABLE_TAG_ID = 51\nconst PACKED_REFERENCE_TAG_ID = 6\nconst STOP_CODE = {}\nlet strings = EMPTY_ARRAY\nlet stringPosition = 0\nlet currentDecoder = {}\nlet currentStructures\nlet srcString\nlet srcStringStart = 0\nlet srcStringEnd = 0\nlet bundledStrings\nlet referenceMap\nlet currentExtensions = []\nlet currentExtensionRanges = []\nlet packedValues\nlet dataView\nlet restoreMapsAsObject\nlet defaultOptions = {\n\tuseRecords: false,\n\tmapsAsObjects: true\n}\nlet sequentialMode = false\nlet inlineObjectReadThreshold = 2;\nvar BlockedFunction // we use search and replace to change the next call to BlockedFunction to avoid CSP issues for\n// no-eval build\ntry {\n\tnew Function('')\n} catch(error) {\n\t// if eval variants are not supported, do not create inline object readers ever\n\tinlineObjectReadThreshold = Infinity\n}\n\n\n\nexport class Decoder {\n\tconstructor(options) {\n\t\tif (options) {\n\t\t\tif ((options.keyMap || options._keyMap) && !options.useRecords) {\n\t\t\t\toptions.useRecords = false\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\t}\n\t\t\tif (options.useRecords === false && options.mapsAsObjects === undefined)\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\tif (options.getStructures)\n\t\t\t\toptions.getShared = options.getStructures\n\t\t\tif (options.getShared && !options.structures)\n\t\t\t\t(options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n\t\t\tif (options.keyMap) {\n\t\t\t\tthis.mapKey = new Map()\n\t\t\t\tfor (let [k,v] of Object.entries(options.keyMap)) this.mapKey.set(v,k)\n\t\t\t}\n\t\t}\n\t\tObject.assign(this, options)\n\t}\n\t/*\n\tdecodeKey(key) {\n\t\treturn this.keyMap\n\t\t\t? Object.keys(this.keyMap)[Object.values(this.keyMap).indexOf(key)] || key\n\t\t\t: key\n\t}\n\t*/\n\tdecodeKey(key) {\n\t\treturn this.keyMap ? this.mapKey.get(key) || key : key\n\t}\n\t\n\tencodeKey(key) {\n\t\treturn this.keyMap && this.keyMap.hasOwnProperty(key) ? this.keyMap[key] : key\n\t}\n\n\tencodeKeys(rec) {\n\t\tif (!this._keyMap) return rec\n\t\tlet map = new Map()\n\t\tfor (let [k,v] of Object.entries(rec)) map.set((this._keyMap.hasOwnProperty(k) ? this._keyMap[k] : k), v)\n\t\treturn map\n\t}\n\n\tdecodeKeys(map) {\n\t\tif (!this._keyMap || map.constructor.name != 'Map') return map\n\t\tif (!this._mapKey) {\n\t\t\tthis._mapKey = new Map()\n\t\t\tfor (let [k,v] of Object.entries(this._keyMap)) this._mapKey.set(v,k)\n\t\t}\n\t\tlet res = {}\n\t\t//map.forEach((v,k) => res[Object.keys(this._keyMap)[Object.values(this._keyMap).indexOf(k)] || k] = v)\n\t\tmap.forEach((v,k) => res[safeKey(this._mapKey.has(k) ? this._mapKey.get(k) : k)] =  v)\n\t\treturn res\n\t}\n\t\n\tmapDecode(source, end) {\n\t\n\t\tlet res = this.decode(source)\n\t\tif (this._keyMap) { \n\t\t\t//Experiemntal support for Optimised KeyMap  decoding \n\t\t\tswitch (res.constructor.name) {\n\t\t\t\tcase 'Array': return res.map(r => this.decodeKeys(r))\n\t\t\t\t//case 'Map': return this.decodeKeys(res)\n\t\t\t}\n\t\t}\n\t\treturn res\n\t}\n\n\tdecode(source, end) {\n\t\tif (src) {\n\t\t\t// re-entrant execution, save the state and restore it after we do this decode\n\t\t\treturn saveState(() => {\n\t\t\t\tclearSource()\n\t\t\t\treturn this ? this.decode(source, end) : Decoder.prototype.decode.call(defaultOptions, source, end)\n\t\t\t})\n\t\t}\n\t\tsrcEnd = end > -1 ? end : source.length\n\t\tposition = 0\n\t\tstringPosition = 0\n\t\tsrcStringEnd = 0\n\t\tsrcString = null\n\t\tstrings = EMPTY_ARRAY\n\t\tbundledStrings = null\n\t\tsrc = source\n\t\t// this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n\t\t// technique for getting data from a database where it can be copied into an existing buffer instead of creating\n\t\t// new ones\n\t\ttry {\n\t\t\tdataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength))\n\t\t} catch(error) {\n\t\t\t// if it doesn't have a buffer, maybe it is the wrong type of object\n\t\t\tsrc = null\n\t\t\tif (source instanceof Uint8Array)\n\t\t\t\tthrow error\n\t\t\tthrow new Error('Source must be a Uint8Array or Buffer but was a ' + ((source && typeof source == 'object') ? source.constructor.name : typeof source))\n\t\t}\n\t\tif (this instanceof Decoder) {\n\t\t\tcurrentDecoder = this\n\t\t\tpackedValues = this.sharedValues &&\n\t\t\t\t(this.pack ? new Array(this.maxPrivatePackedValues || 16).concat(this.sharedValues) :\n\t\t\t\tthis.sharedValues)\n\t\t\tif (this.structures) {\n\t\t\t\tcurrentStructures = this.structures\n\t\t\t\treturn checkedRead()\n\t\t\t} else if (!currentStructures || currentStructures.length > 0) {\n\t\t\t\tcurrentStructures = []\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentDecoder = defaultOptions\n\t\t\tif (!currentStructures || currentStructures.length > 0)\n\t\t\t\tcurrentStructures = []\n\t\t\tpackedValues = null\n\t\t}\n\t\treturn checkedRead()\n\t}\n\tdecodeMultiple(source, forEach) {\n\t\tlet values, lastPosition = 0\n\t\ttry {\n\t\t\tlet size = source.length\n\t\t\tsequentialMode = true\n\t\t\tlet value = this ? this.decode(source, size) : defaultDecoder.decode(source, size)\n\t\t\tif (forEach) {\n\t\t\t\tif (forEach(value) === false) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tif (forEach(checkedRead()) === false) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalues = [ value ]\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tvalues.push(checkedRead())\n\t\t\t\t}\n\t\t\t\treturn values\n\t\t\t}\n\t\t} catch(error) {\n\t\t\terror.lastPosition = lastPosition\n\t\t\terror.values = values\n\t\t\tthrow error\n\t\t} finally {\n\t\t\tsequentialMode = false\n\t\t\tclearSource()\n\t\t}\n\t}\n}\nexport function getPosition() {\n\treturn position\n}\nexport function checkedRead() {\n\ttry {\n\t\tlet result = read()\n\t\tif (bundledStrings) {\n\t\t\tif (position >= bundledStrings.postBundlePosition) {\n\t\t\t\tlet error = new Error('Unexpected bundle position');\n\t\t\t\terror.incomplete = true;\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\t// bundled strings to skip past\n\t\t\tposition = bundledStrings.postBundlePosition;\n\t\t\tbundledStrings = null;\n\t\t}\n\n\t\tif (position == srcEnd) {\n\t\t\t// finished reading this source, cleanup references\n\t\t\tcurrentStructures = null\n\t\t\tsrc = null\n\t\t\tif (referenceMap)\n\t\t\t\treferenceMap = null\n\t\t} else if (position > srcEnd) {\n\t\t\t// over read\n\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\terror.incomplete = true\n\t\t\tthrow error\n\t\t} else if (!sequentialMode) {\n\t\t\tthrow new Error('Data read, but end of buffer not reached')\n\t\t}\n\t\t// else more to read, but we are reading sequentially, so don't clear source yet\n\t\treturn result\n\t} catch(error) {\n\t\tclearSource()\n\t\tif (error instanceof RangeError || error.message.startsWith('Unexpected end of buffer')) {\n\t\t\terror.incomplete = true\n\t\t}\n\t\tthrow error\n\t}\n}\n\nexport function read() {\n\tlet token = src[position++]\n\tlet majorType = token >> 5\n\ttoken = token & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\treturn getFloat16()\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat32(position)\n\t\t\t\t\tif (currentDecoder.useFloat32 > 2) {\n\t\t\t\t\t\t// this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\tlet multiplier = mult10[((src[position] & 0x7f) << 1) | (src[position + 1] >> 7)]\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\treturn ((multiplier * value + (value > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n\t\t\t\t\t}\n\t\t\t\t\tposition += 4\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t\tcase 0x1b:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat64(position)\n\t\t\t\t\tposition += 8\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\tif (majorType > 1) {\n\t\t\t\t\tif (dataView.getUint32(position) > 0)\n\t\t\t\t\t\tthrow new Error('JavaScript does not support arrays, maps, or strings with length over 4294967295')\n\t\t\t\t\ttoken = dataView.getUint32(position + 4)\n\t\t\t\t} else if (currentDecoder.int64AsNumber) {\n\t\t\t\t\ttoken = dataView.getUint32(position) * 0x100000000\n\t\t\t\t\ttoken += dataView.getUint32(position + 4)\n\t\t\t\t} else\n\t\t\t\t\ttoken = dataView.getBigUint64(position)\n\t\t\t\tposition += 8\n\t\t\t\tbreak\n\t\t\tcase 0x1f: \n\t\t\t\t// indefinite length\n\t\t\t\tswitch(majorType) {\n\t\t\t\t\tcase 2: // byte string\n\t\t\t\t\tcase 3: // text string\n\t\t\t\t\t\tthrow new Error('Indefinite length not supported for byte or text strings')\n\t\t\t\t\tcase 4: // array\n\t\t\t\t\t\tlet array = []\n\t\t\t\t\t\tlet value, i = 0\n\t\t\t\t\t\twhile ((value = read()) != STOP_CODE) {\n\t\t\t\t\t\t\tarray[i++] = value\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn majorType == 4 ? array : majorType == 3 ? array.join('') : Buffer.concat(array)\n\t\t\t\t\tcase 5: // map\n\t\t\t\t\t\tlet key\n\t\t\t\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) while((key = read()) != STOP_CODE) object[safeKey(currentDecoder.decodeKey(key))] = read()\n\t\t\t\t\t\t\telse while ((key = read()) != STOP_CODE) object[safeKey(key)] = read()\n\t\t\t\t\t\t\treturn object\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet map = new Map()\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) while((key = read()) != STOP_CODE) map.set(currentDecoder.decodeKey(key), read())\n\t\t\t\t\t\t\telse while ((key = read()) != STOP_CODE) map.set(key, read())\n\t\t\t\t\t\t\treturn map\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\treturn STOP_CODE\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid major type for indefinite length ' + majorType)\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t}\n\t}\n\tswitch (majorType) {\n\t\tcase 0: // positive int\n\t\t\treturn token\n\t\tcase 1: // negative int\n\t\t\treturn ~token\n\t\tcase 2: // buffer\n\t\t\treturn readBin(token)\n\t\tcase 3: // string\n\t\t\tif (srcStringEnd >= position) {\n\t\t\t\treturn srcString.slice(position - srcStringStart, (position += token) - srcStringStart)\n\t\t\t}\n\t\t\tif (srcStringEnd == 0 && srcEnd < 140 && token < 32) {\n\t\t\t\t// for small blocks, avoiding the overhead of the extract call is helpful\n\t\t\t\tlet string = token < 16 ? shortStringInJS(token) : longStringInJS(token)\n\t\t\t\tif (string != null)\n\t\t\t\t\treturn string\n\t\t\t}\n\t\t\treturn readFixedString(token)\n\t\tcase 4: // array\n\t\t\tlet array = new Array(token)\n\t\t  //if (currentDecoder.keyMap) for (let i = 0; i < token; i++) array[i] = currentDecoder.decodeKey(read())\t\n\t\t\t//else \n\t\t\tfor (let i = 0; i < token; i++) array[i] = read()\n\t\t\treturn array\n\t\tcase 5: // map\n\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\tlet object = {}\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) object[safeKey(currentDecoder.decodeKey(read()))] = read()\n\t\t\t\telse for (let i = 0; i < token; i++) object[safeKey(read())] = read()\n\t\t\t\treturn object\n\t\t\t} else {\n\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t}\n\t\t\t\tlet map = new Map()\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) map.set(currentDecoder.decodeKey(read()),read())\n\t\t\t\telse for (let i = 0; i < token; i++) map.set(read(), read())\n\t\t\t\treturn map\n\t\t\t}\n\t\tcase 6: // extension\n\t\t\tif (token >= BUNDLED_STRINGS_ID) {\n\t\t\t\tlet structure = currentStructures[token & 0x1fff] // check record structures first\n\t\t\t\t// At some point we may provide an option for dynamic tag assignment with a range like token >= 8 && (token < 16 || (token > 0x80 && token < 0xc0) || (token > 0x130 && token < 0x4000))\n\t\t\t\tif (structure) {\n\t\t\t\t\tif (!structure.read) structure.read = createStructureReader(structure)\n\t\t\t\t\treturn structure.read()\n\t\t\t\t}\n\t\t\t\tif (token < 0x10000) {\n\t\t\t\t\tif (token == RECORD_INLINE_ID) { // we do a special check for this so that we can keep the\n\t\t\t\t\t\t// currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tlet structure = read()\n\t\t\t\t\t\trecordDefinition(id, structure)\n\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\tif (currentDecoder.keyMap) for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = currentDecoder.decodeKey(structure[i - 2])\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = structure[i - 2]\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn object\n\t\t\t\t\t}\n\t\t\t\t\telse if (token == RECORD_DEFINITIONS_ID) {\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tfor (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\trecordDefinition(id++, read())\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn read()\n\t\t\t\t\t} else if (token == BUNDLED_STRINGS_ID) {\n\t\t\t\t\t\treturn readBundleExt()\n\t\t\t\t\t}\n\t\t\t\t\tif (currentDecoder.getShared) {\n\t\t\t\t\t\tloadShared()\n\t\t\t\t\t\tstructure = currentStructures[token & 0x1fff]\n\t\t\t\t\t\tif (structure) {\n\t\t\t\t\t\t\tif (!structure.read)\n\t\t\t\t\t\t\t\tstructure.read = createStructureReader(structure)\n\t\t\t\t\t\t\treturn structure.read()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet extension = currentExtensions[token]\n\t\t\tif (extension) {\n\t\t\t\tif (extension.handlesRead)\n\t\t\t\t\treturn extension(read)\n\t\t\t\telse\n\t\t\t\t\treturn extension(read())\n\t\t\t} else {\n\t\t\t\tlet input = read()\n\t\t\t\tfor (let i = 0; i < currentExtensionRanges.length; i++) {\n\t\t\t\t\tlet value = currentExtensionRanges[i](token, input)\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\treturn new Tag(input, token)\n\t\t\t}\n\t\tcase 7: // fixed value\n\t\t\tswitch (token) {\n\t\t\t\tcase 0x14: return false\n\t\t\t\tcase 0x15: return true\n\t\t\t\tcase 0x16: return null\n\t\t\t\tcase 0x17: return; // undefined\n\t\t\t\tcase 0x1f:\n\t\t\t\tdefault:\n\t\t\t\t\tlet packedValue = (packedValues || getPackedValues())[token]\n\t\t\t\t\tif (packedValue !== undefined)\n\t\t\t\t\t\treturn packedValue\n\t\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t\t}\n\t\tdefault: // negative int\n\t\t\tif (isNaN(token)) {\n\t\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\t\terror.incomplete = true\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\tthrow new Error('Unknown CBOR token ' + token)\n\t}\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/\nfunction createStructureReader(structure) {\n\tfunction readObject() {\n\t\t// get the array size from the header\n\t\tlet length = src[position++]\n\t\t//let majorType = token >> 5\n\t\tlength = length & 0x1f\n\t\tif (length > 0x17) {\n\t\t\tswitch (length) {\n\t\t\t\tcase 0x18:\n\t\t\t\t\tlength = src[position++]\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x19:\n\t\t\t\t\tlength = dataView.getUint16(position)\n\t\t\t\t\tposition += 2\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x1a:\n\t\t\t\t\tlength = dataView.getUint32(position)\n\t\t\t\t\tposition += 4\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Expected array header, but got ' + src[position - 1])\n\t\t\t}\n\t\t}\n\t\t// This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n\t\tlet compiledReader = this.compiledReader // first look to see if we have the fast compiled function\n\t\twhile(compiledReader) {\n\t\t\t// we have a fast compiled object literal reader\n\t\t\tif (compiledReader.propertyCount === length)\n\t\t\t\treturn compiledReader(read) // with the right length, so we use it\n\t\t\tcompiledReader = compiledReader.next // see if there is another reader with the right length\n\t\t}\n\t\tif (this.slowReads++ >= inlineObjectReadThreshold) { // create a fast compiled reader\n\t\t\tlet array = this.length == length ? this : this.slice(0, length)\n\t\t\tcompiledReader = currentDecoder.keyMap \n\t\t\t? new Function('r', 'return {' + array.map(k => currentDecoder.decodeKey(k)).map(k => validName.test(k) ? safeKey(k) + ':r()' : ('[' + JSON.stringify(k) + ']:r()')).join(',') + '}')\n\t\t\t: new Function('r', 'return {' + array.map(key => validName.test(key) ? safeKey(key) + ':r()' : ('[' + JSON.stringify(key) + ']:r()')).join(',') + '}')\n\t\t\tif (this.compiledReader)\n\t\t\t\tcompiledReader.next = this.compiledReader // if there is an existing one, we store multiple readers as a linked list because it is usually pretty rare to have multiple readers (of different length) for the same structure\n\t\t\tcompiledReader.propertyCount = length\n\t\t\tthis.compiledReader = compiledReader\n\t\t\treturn compiledReader(read)\n\t\t}\n\t\tlet object = {}\n\t\tif (currentDecoder.keyMap) for (let i = 0; i < length; i++) object[safeKey(currentDecoder.decodeKey(this[i]))] = read()\n\t\telse for (let i = 0; i < length; i++) {\n\t\t\tobject[safeKey(this[i])] = read();\n\t\t}\n\t\treturn object\n\t}\n\tstructure.slowReads = 0\n\treturn readObject\n}\n\nfunction safeKey(key) {\n\t// protect against prototype pollution\n\tif (typeof key === 'string') return key === '__proto__' ? '__proto_' : key\n\tif (typeof key === 'number' || typeof key === 'boolean' || typeof key === 'bigint') return key.toString();\n\tif (key == null) return key + '';\n\t// protect against expensive (DoS) string conversions\n\tthrow new Error('Invalid property name type ' + typeof key);\n}\n\nlet readFixedString = readStringJS\nlet readString8 = readStringJS\nlet readString16 = readStringJS\nlet readString32 = readStringJS\n\nexport let isNativeAccelerationEnabled = false\nexport function setExtractor(extractStrings) {\n\tisNativeAccelerationEnabled = true\n\treadFixedString = readString(1)\n\treadString8 = readString(2)\n\treadString16 = readString(3)\n\treadString32 = readString(5)\n\tfunction readString(headerLength) {\n\t\treturn function readString(length) {\n\t\t\tlet string = strings[stringPosition++]\n\t\t\tif (string == null) {\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\treturn readStringJS(length)\n\t\t\t\tlet extraction = extractStrings(position, srcEnd, length, src)\n\t\t\t\tif (typeof extraction == 'string') {\n\t\t\t\t\tstring = extraction\n\t\t\t\t\tstrings = EMPTY_ARRAY\n\t\t\t\t} else {\n\t\t\t\t\tstrings = extraction\n\t\t\t\t\tstringPosition = 1\n\t\t\t\t\tsrcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n\t\t\t\t\tstring = strings[0]\n\t\t\t\t\tif (string === undefined)\n\t\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet srcStringLength = string.length\n\t\t\tif (srcStringLength <= length) {\n\t\t\t\tposition += length\n\t\t\t\treturn string\n\t\t\t}\n\t\t\tsrcString = string\n\t\t\tsrcStringStart = position\n\t\t\tsrcStringEnd = position + srcStringLength\n\t\t\tposition += length\n\t\t\treturn string.slice(0, length) // we know we just want the beginning\n\t\t}\n\t}\n}\nfunction readStringJS(length) {\n\tlet result\n\tif (length < 16) {\n\t\tif (result = shortStringInJS(length))\n\t\t\treturn result\n\t}\n\tif (length > 64 && decoder)\n\t\treturn decoder.decode(src.subarray(position, position += length))\n\tconst end = position + length\n\tconst units = []\n\tresult = ''\n\twhile (position < end) {\n\t\tconst byte1 = src[position++]\n\t\tif ((byte1 & 0x80) === 0) {\n\t\t\t// 1 byte\n\t\t\tunits.push(byte1)\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\n\t\t\t// 2 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 6) | byte2)\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\n\t\t\t// 3 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3)\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\n\t\t\t// 4 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tconst byte4 = src[position++] & 0x3f\n\t\t\tlet unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4\n\t\t\tif (unit > 0xffff) {\n\t\t\t\tunit -= 0x10000\n\t\t\t\tunits.push(((unit >>> 10) & 0x3ff) | 0xd800)\n\t\t\t\tunit = 0xdc00 | (unit & 0x3ff)\n\t\t\t}\n\t\t\tunits.push(unit)\n\t\t} else {\n\t\t\tunits.push(byte1)\n\t\t}\n\n\t\tif (units.length >= 0x1000) {\n\t\t\tresult += fromCharCode.apply(String, units)\n\t\t\tunits.length = 0\n\t\t}\n\t}\n\n\tif (units.length > 0) {\n\t\tresult += fromCharCode.apply(String, units)\n\t}\n\n\treturn result\n}\nlet fromCharCode = String.fromCharCode\nfunction longStringInJS(length) {\n\tlet start = position\n\tlet bytes = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tconst byte = src[position++];\n\t\tif ((byte & 0x80) > 0) {\n\t\t\tposition = start\n    \t\t\treturn\n    \t\t}\n    \t\tbytes[i] = byte\n    \t}\n    \treturn fromCharCode.apply(String, bytes)\n}\nfunction shortStringInJS(length) {\n\tif (length < 4) {\n\t\tif (length < 2) {\n\t\t\tif (length === 0)\n\t\t\t\treturn ''\n\t\t\telse {\n\t\t\t\tlet a = src[position++]\n\t\t\t\tif ((a & 0x80) > 1) {\n\t\t\t\t\tposition -= 1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a)\n\t\t\t}\n\t\t} else {\n\t\t\tlet a = src[position++]\n\t\t\tlet b = src[position++]\n\t\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0) {\n\t\t\t\tposition -= 2\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 3)\n\t\t\t\treturn fromCharCode(a, b)\n\t\t\tlet c = src[position++]\n\t\t\tif ((c & 0x80) > 0) {\n\t\t\t\tposition -= 3\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c)\n\t\t}\n\t} else {\n\t\tlet a = src[position++]\n\t\tlet b = src[position++]\n\t\tlet c = src[position++]\n\t\tlet d = src[position++]\n\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n\t\t\tposition -= 4\n\t\t\treturn\n\t\t}\n\t\tif (length < 6) {\n\t\t\tif (length === 4)\n\t\t\t\treturn fromCharCode(a, b, c, d)\n\t\t\telse {\n\t\t\t\tlet e = src[position++]\n\t\t\t\tif ((e & 0x80) > 0) {\n\t\t\t\t\tposition -= 5\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e)\n\t\t\t}\n\t\t} else if (length < 8) {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0) {\n\t\t\t\tposition -= 6\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 7)\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f)\n\t\t\tlet g = src[position++]\n\t\t\tif ((g & 0x80) > 0) {\n\t\t\t\tposition -= 7\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c, d, e, f, g)\n\t\t} else {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tlet g = src[position++]\n\t\t\tlet h = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n\t\t\t\tposition -= 8\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 10) {\n\t\t\t\tif (length === 8)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h)\n\t\t\t\telse {\n\t\t\t\t\tlet i = src[position++]\n\t\t\t\t\tif ((i & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 9\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i)\n\t\t\t\t}\n\t\t\t} else if (length < 12) {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0) {\n\t\t\t\t\tposition -= 10\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 11)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j)\n\t\t\t\tlet k = src[position++]\n\t\t\t\tif ((k & 0x80) > 0) {\n\t\t\t\t\tposition -= 11\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k)\n\t\t\t} else {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tlet k = src[position++]\n\t\t\t\tlet l = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n\t\t\t\t\tposition -= 12\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 14) {\n\t\t\t\t\tif (length === 12)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\t\tif ((m & 0x80) > 0) {\n\t\t\t\t\t\t\tposition -= 13\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\tlet n = src[position++]\n\t\t\t\t\tif ((m & 0x80) > 0 || (n & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 14\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (length < 15)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n)\n\t\t\t\t\tlet o = src[position++]\n\t\t\t\t\tif ((o & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 15\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction readBin(length) {\n\treturn currentDecoder.copyBuffers ?\n\t\t// specifically use the copying slice (not the node one)\n\t\tUint8Array.prototype.slice.call(src, position, position += length) :\n\t\tsrc.subarray(position, position += length)\n}\nfunction readExt(length) {\n\tlet type = src[position++]\n\tif (currentExtensions[type]) {\n\t\treturn currentExtensions[type](src.subarray(position, position += length))\n\t}\n\telse\n\t\tthrow new Error('Unknown extension type ' + type)\n}\nlet f32Array = new Float32Array(1)\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4)\nfunction getFloat16() {\n\tlet byte0 = src[position++]\n\tlet byte1 = src[position++]\n\tlet exponent = (byte0 & 0x7f) >> 2;\n\tif (exponent === 0x1f) { // specials\n\t\tif (byte1 || (byte0 & 3))\n\t\t\treturn NaN;\n\t\treturn (byte0 & 0x80) ? -Infinity : Infinity;\n\t}\n\tif (exponent === 0) { // sub-normals\n\t\t// significand with 10 fractional bits and divided by 2^14\n\t\tlet abs = (((byte0 & 3) << 8) | byte1) / (1 << 24)\n\t\treturn (byte0 & 0x80) ? -abs : abs\n\t}\n\n\tu8Array[3] = (byte0 & 0x80) | // sign bit\n\t\t((exponent >> 1) + 56) // 4 of 5 of the exponent bits, re-offset-ed\n\tu8Array[2] = ((byte0 & 7) << 5) | // last exponent bit and first two mantissa bits\n\t\t(byte1 >> 3) // next 5 bits of mantissa\n\tu8Array[1] = byte1 << 5; // last three bits of mantissa\n\tu8Array[0] = 0;\n\treturn f32Array[0];\n}\n\nlet keyCache = new Array(4096)\nfunction readKey() {\n\tlet length = src[position++]\n\tif (length >= 0x60 && length < 0x78) {\n\t\t// fixstr, potentially use key cache\n\t\tlength = length - 0x60\n\t\tif (srcStringEnd >= position) // if it has been extracted, must use it (and faster anyway)\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\telse if (!(srcStringEnd == 0 && srcEnd < 180))\n\t\t\treturn readFixedString(length)\n\t} else { // not cacheable, go back and do a standard read\n\t\tposition--\n\t\treturn read()\n\t}\n\tlet key = ((length << 5) ^ (length > 1 ? dataView.getUint16(position) : length > 0 ? src[position] : 0)) & 0xfff\n\tlet entry = keyCache[key]\n\tlet checkPosition = position\n\tlet end = position + length - 3\n\tlet chunk\n\tlet i = 0\n\tif (entry && entry.bytes == length) {\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = dataView.getUint32(checkPosition)\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcheckPosition += 4\n\t\t}\n\t\tend += 3\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = src[checkPosition++]\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (checkPosition === end) {\n\t\t\tposition = checkPosition\n\t\t\treturn entry.string\n\t\t}\n\t\tend -= 3\n\t\tcheckPosition = position\n\t}\n\tentry = []\n\tkeyCache[key] = entry\n\tentry.bytes = length\n\twhile (checkPosition < end) {\n\t\tchunk = dataView.getUint32(checkPosition)\n\t\tentry.push(chunk)\n\t\tcheckPosition += 4\n\t}\n\tend += 3\n\twhile (checkPosition < end) {\n\t\tchunk = src[checkPosition++]\n\t\tentry.push(chunk)\n\t}\n\t// for small blocks, avoiding the overhead of the extract call is helpful\n\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\tif (string != null)\n\t\treturn entry.string = string\n\treturn entry.string = readFixedString(length)\n}\n\nexport class Tag {\n\tconstructor(value, tag) {\n\t\tthis.value = value\n\t\tthis.tag = tag\n\t}\n}\n\ncurrentExtensions[0] = (dateString) => {\n\t// string date extension\n\treturn new Date(dateString)\n}\n\ncurrentExtensions[1] = (epochSec) => {\n\t// numeric date extension\n\treturn new Date(Math.round(epochSec * 1000))\n}\n\ncurrentExtensions[2] = (buffer) => {\n\t// bigint extension\n\tlet value = BigInt(0)\n\tfor (let i = 0, l = buffer.byteLength; i < l; i++) {\n\t\tvalue = BigInt(buffer[i]) + value << BigInt(8)\n\t}\n\treturn value\n}\n\ncurrentExtensions[3] = (buffer) => {\n\t// negative bigint extension\n\treturn BigInt(-1) - currentExtensions[2](buffer)\n}\ncurrentExtensions[4] = (fraction) => {\n\t// best to reparse to maintain accuracy\n\treturn +(fraction[1] + 'e' + fraction[0])\n}\n\ncurrentExtensions[5] = (fraction) => {\n\t// probably not sufficiently accurate\n\treturn fraction[1] * Math.exp(fraction[0] * Math.log(2))\n}\n\n// the registration of the record definition extension\nconst recordDefinition = (id, structure) => {\n\tid = id - 0xe000\n\tlet existingStructure = currentStructures[id]\n\tif (existingStructure && existingStructure.isShared) {\n\t\t(currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure\n\t}\n\tcurrentStructures[id] = structure\n\n\tstructure.read = createStructureReader(structure)\n}\ncurrentExtensions[LEGACY_RECORD_INLINE_ID] = (data) => {\n\tlet length = data.length\n\tlet structure = data[1]\n\trecordDefinition(data[0], structure)\n\tlet object = {}\n\tfor (let i = 2; i < length; i++) {\n\t\tlet key = structure[i - 2]\n\t\tobject[safeKey(key)] = data[i]\n\t}\n\treturn object\n}\ncurrentExtensions[14] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 += value)\n\treturn new Tag(value, 14)\n}\ncurrentExtensions[15] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value)\n\treturn new Tag(value, 15)\n}\nlet glbl = { Error, RegExp }\ncurrentExtensions[27] = (data) => { // http://cbor.schmorp.de/generic-object\n\treturn (glbl[data[0]] || Error)(data[1], data[2])\n}\nconst packedTable = (read) => {\n\tif (src[position++] != 0x84) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\tif (src.length < position)\n\t\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tlet newPackedValues = read() // packed values\n\tif (!newPackedValues || !newPackedValues.length) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tpackedValues = packedValues ? newPackedValues.concat(packedValues.slice(newPackedValues.length)) : newPackedValues\n\tpackedValues.prefixes = read()\n\tpackedValues.suffixes = read()\n\treturn read() // read the rump\n}\npackedTable.handlesRead = true\ncurrentExtensions[51] = packedTable\n\ncurrentExtensions[PACKED_REFERENCE_TAG_ID] = (data) => { // packed reference\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\treturn new Tag(data, PACKED_REFERENCE_TAG_ID)\n\t}\n\tif (typeof data == 'number')\n\t\treturn packedValues[16 + (data >= 0 ? 2 * data : (-2 * data - 1))]\n\tlet error = new Error('No support for non-integer packed references yet')\n\tif (data === undefined)\n\t\terror.incomplete = true\n\tthrow error\n}\n\n// The following code is an incomplete implementation of http://cbor.schmorp.de/stringref\n// the real thing would need to implemennt more logic to populate the stringRefs table and\n// maintain a stack of stringRef \"namespaces\".\n//\n// currentExtensions[25] = (id) => {\n// \treturn stringRefs[id]\n// }\n// currentExtensions[256] = (read) => {\n// \tstringRefs = []\n// \ttry {\n// \t\treturn read()\n// \t} finally {\n// \t\tstringRefs = null\n// \t}\n// }\n// currentExtensions[256].handlesRead = true\n\ncurrentExtensions[28] = (read) => { \n\t// shareable http://cbor.schmorp.de/value-sharing (for structured clones)\n\tif (!referenceMap) {\n\t\treferenceMap = new Map()\n\t\treferenceMap.id = 0\n\t}\n\tlet id = referenceMap.id++\n\tlet startingPosition = position\n\tlet token = src[position]\n\tlet target\n\t// TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n\t// ahead past references to record structure definitions\n\tif ((token >> 5) == 4)\n\t\ttarget = []\n\telse\n\t\ttarget = {}\n\n\tlet refEntry = { target } // a placeholder object\n\treferenceMap.set(id, refEntry)\n\tlet targetProperties = read() // read the next value as the target object to id\n\tif (refEntry.used) {// there is a cycle, so we have to assign properties to original target\n\t\tif (Object.getPrototypeOf(target) !== Object.getPrototypeOf(targetProperties)) {\n\t\t\t// this means that the returned target does not match the targetProperties, so we need rerun the read to\n\t\t\t// have the correctly create instance be assigned as a reference, then we do the copy the properties back to the\n\t\t\t// target\n\t\t\t// reset the position so that the read can be repeated\n\t\t\tposition = startingPosition\n\t\t\t// the returned instance is our new target for references\n\t\t\ttarget = targetProperties\n\t\t\treferenceMap.set(id, { target })\n\t\t\ttargetProperties = read()\n\t\t}\n\t\treturn Object.assign(target, targetProperties)\n\t}\n\trefEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n\treturn targetProperties // no cycle, can just use the returned read object\n}\ncurrentExtensions[28].handlesRead = true\n\ncurrentExtensions[29] = (id) => {\n\t// sharedref http://cbor.schmorp.de/value-sharing (for structured clones)\n\tlet refEntry = referenceMap.get(id)\n\trefEntry.used = true\n\treturn refEntry.target\n}\n\ncurrentExtensions[258] = (array) => new Set(array); // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n(currentExtensions[259] = (read) => {\n\t// https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec\n\t// for decoding as a standard Map\n\tif (currentDecoder.mapsAsObjects) {\n\t\tcurrentDecoder.mapsAsObjects = false\n\t\trestoreMapsAsObject = true\n\t}\n\treturn read()\n}).handlesRead = true\nfunction combine(a, b) {\n\tif (typeof a === 'string')\n\t\treturn a + b\n\tif (a instanceof Array)\n\t\treturn a.concat(b)\n\treturn Object.assign({}, a, b)\n}\nfunction getPackedValues() {\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\tthrow new Error('No packed values available')\n\t}\n\treturn packedValues\n}\nconst SHARED_DATA_TAG_ID = 0x53687264 // ascii 'Shrd'\ncurrentExtensionRanges.push((tag, input) => {\n\tif (tag >= 225 && tag <= 255)\n\t\treturn combine(getPackedValues().prefixes[tag - 224], input)\n\tif (tag >= 28704 && tag <= 32767)\n\t\treturn combine(getPackedValues().prefixes[tag - 28672], input)\n\tif (tag >= 1879052288 && tag <= 2147483647)\n\t\treturn combine(getPackedValues().prefixes[tag - 1879048192], input)\n\tif (tag >= 216 && tag <= 223)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 216])\n\tif (tag >= 27647 && tag <= 28671)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 27639])\n\tif (tag >= 1811940352 && tag <= 1879048191)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 1811939328])\n\tif (tag == SHARED_DATA_TAG_ID) {// we do a special check for this so that we can keep the currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\treturn {\n\t\t\tpackedValues: packedValues,\n\t\t\tstructures: currentStructures.slice(0),\n\t\t\tversion: input,\n\t\t}\n\t}\n\tif (tag == 55799) // self-descriptive CBOR tag, just return input value\n\t\treturn input\n})\n\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nexport const typedArrays = [Uint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? { name:'BigUint64Array' } : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? { name:'BigInt64Array' } : BigInt64Array, Float32Array, Float64Array]\nconst typedArrayTags = [64, 68, 69, 70, 71, 72, 77, 78, 79, 85, 86]\nfor (let i = 0; i < typedArrays.length; i++) {\n\tregisterTypedArray(typedArrays[i], typedArrayTags[i])\n}\nfunction registerTypedArray(TypedArray, tag) {\n\tlet dvMethod = 'get' + TypedArray.name.slice(0, -5)\n\tlet bytesPerElement;\n\tif (typeof TypedArray === 'function')\n\t\tbytesPerElement = TypedArray.BYTES_PER_ELEMENT;\n\telse\n\t\tTypedArray = null;\n\tfor (let littleEndian = 0; littleEndian < 2; littleEndian++) {\n\t\tif (!littleEndian && bytesPerElement == 1)\n\t\t\tcontinue\n\t\tlet sizeShift = bytesPerElement == 2 ? 1 : bytesPerElement == 4 ? 2 : bytesPerElement == 8 ? 3 : 0\n\t\tcurrentExtensions[littleEndian ? tag : (tag - 4)] = (bytesPerElement == 1 || littleEndian == isLittleEndianMachine) ? (buffer) => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tif (!currentDecoder.copyBuffers) {\n\t\t\t\t// try provide a direct view, but will only work if we are byte-aligned\n\t\t\t\tif (bytesPerElement === 1 ||\n\t\t\t\t\tbytesPerElement === 2 && !(buffer.byteOffset & 1) ||\n\t\t\t\t\tbytesPerElement === 4 && !(buffer.byteOffset & 3) ||\n\t\t\t\t\tbytesPerElement === 8 && !(buffer.byteOffset & 7))\n\t\t\t\t\treturn new TypedArray(buffer.buffer, buffer.byteOffset, buffer.byteLength >> sizeShift);\n\t\t\t}\n\t\t\t// we have to slice/copy here to get a new ArrayBuffer, if we are not word/byte aligned\n\t\t\treturn new TypedArray(Uint8Array.prototype.slice.call(buffer, 0).buffer)\n\t\t} : buffer => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tlet dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\t\t\tlet elements = buffer.length >> sizeShift\n\t\t\tlet ta = new TypedArray(elements)\n\t\t\tlet method = dv[dvMethod]\n\t\t\tfor (let i = 0; i < elements; i++) {\n\t\t\t\tta[i] = method.call(dv, i << sizeShift, littleEndian)\n\t\t\t}\n\t\t\treturn ta\n\t\t}\n\t}\n}\n\nfunction readBundleExt() {\n\tlet length = readJustLength()\n\tlet bundlePosition = position + read()\n\tfor (let i = 2; i < length; i++) {\n\t\t// skip past bundles that were already read\n\t\tlet bundleLength = readJustLength() // this will increment position, so must add to position afterwards\n\t\tposition += bundleLength\n\t}\n\tlet dataPosition = position\n\tposition = bundlePosition\n\tbundledStrings = [readStringJS(readJustLength()), readStringJS(readJustLength())]\n\tbundledStrings.position0 = 0\n\tbundledStrings.position1 = 0\n\tbundledStrings.postBundlePosition = position\n\tposition = dataPosition\n\treturn read()\n}\n\nfunction readJustLength() {\n\tlet token = src[position++] & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t}\n\t}\n\treturn token\n}\n\nfunction loadShared() {\n\tif (currentDecoder.getShared) {\n\t\tlet sharedData = saveState(() => {\n\t\t\t// save the state in case getShared modifies our buffer\n\t\t\tsrc = null\n\t\t\treturn currentDecoder.getShared()\n\t\t}) || {}\n\t\tlet updatedStructures = sharedData.structures || []\n\t\tcurrentDecoder.sharedVersion = sharedData.version\n\t\tpackedValues = currentDecoder.sharedValues = sharedData.packedValues\n\t\tif (currentStructures === true)\n\t\t\tcurrentDecoder.structures = currentStructures = updatedStructures\n\t\telse\n\t\t\tcurrentStructures.splice.apply(currentStructures, [0, updatedStructures.length].concat(updatedStructures))\n\t}\n}\n\nfunction saveState(callback) {\n\tlet savedSrcEnd = srcEnd\n\tlet savedPosition = position\n\tlet savedStringPosition = stringPosition\n\tlet savedSrcStringStart = srcStringStart\n\tlet savedSrcStringEnd = srcStringEnd\n\tlet savedSrcString = srcString\n\tlet savedStrings = strings\n\tlet savedReferenceMap = referenceMap\n\tlet savedBundledStrings = bundledStrings\n\n\t// TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n\tlet savedSrc = new Uint8Array(src.slice(0, srcEnd)) // we copy the data in case it changes while external data is processed\n\tlet savedStructures = currentStructures\n\tlet savedDecoder = currentDecoder\n\tlet savedSequentialMode = sequentialMode\n\tlet value = callback()\n\tsrcEnd = savedSrcEnd\n\tposition = savedPosition\n\tstringPosition = savedStringPosition\n\tsrcStringStart = savedSrcStringStart\n\tsrcStringEnd = savedSrcStringEnd\n\tsrcString = savedSrcString\n\tstrings = savedStrings\n\treferenceMap = savedReferenceMap\n\tbundledStrings = savedBundledStrings\n\tsrc = savedSrc\n\tsequentialMode = savedSequentialMode\n\tcurrentStructures = savedStructures\n\tcurrentDecoder = savedDecoder\n\tdataView = new DataView(src.buffer, src.byteOffset, src.byteLength)\n\treturn value\n}\nexport function clearSource() {\n\tsrc = null\n\treferenceMap = null\n\tcurrentStructures = null\n}\n\nexport function addExtension(extension) {\n\tcurrentExtensions[extension.tag] = extension.decode\n}\n\nexport const mult10 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i < 256; i++) {\n\tmult10[i] = +('1e' + Math.floor(45.15 - i * 0.30103))\n}\nlet defaultDecoder = new Decoder({ useRecords: false })\nexport const decode = defaultDecoder.decode\nexport const decodeMultiple = defaultDecoder.decodeMultiple\nexport const FLOAT32_OPTIONS = {\n\tNEVER: 0,\n\tALWAYS: 1,\n\tDECIMAL_ROUND: 3,\n\tDECIMAL_FIT: 4\n}\nexport function roundFloat32(float32Number) {\n\tf32Array[0] = float32Number\n\tlet multiplier = mult10[((u8Array[3] & 0x7f) << 1) | (u8Array[2] >> 7)]\n\treturn ((multiplier * float32Number + (float32Number > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n}\n", "import { Decoder, mult10, Tag, typedArrays, addExtension as decodeAddExtension } from './decode.js'\nlet textEncoder\ntry {\n\ttextEncoder = new TextEncoder()\n} catch (error) {}\nlet extensions, extensionClasses\nconst Buffer = typeof globalThis === 'object' && globalThis.Buffer;\nconst hasNodeBuffer = typeof Buffer !== 'undefined'\nconst ByteArrayAllocate = hasNodeBuffer ? Buffer.allocUnsafeSlow : Uint8Array\nconst ByteArray = hasNodeBuffer ? Buffer : Uint8Array\nconst MAX_STRUCTURES = 0x100\nconst MAX_BUFFER_SIZE = hasNodeBuffer ? 0x100000000 : 0x7fd00000\nlet serializationId = 1\nlet throwOnIterable\nlet target\nlet targetView\nlet position = 0\nlet safeEnd\nlet bundledStrings = null\nconst MAX_BUNDLE_SIZE = 0xf000\nconst hasNonLatin = /[\\u0080-\\uFFFF]/\nconst RECORD_SYMBOL = Symbol('record-id')\nexport class Encoder extends Decoder {\n\tconstructor(options) {\n\t\tsuper(options)\n\t\tthis.offset = 0\n\t\tlet typeBuffer\n\t\tlet start\n\t\tlet sharedStructures\n\t\tlet hasSharedUpdate\n\t\tlet structures\n\t\tlet referenceMap\n\t\toptions = options || {}\n\t\tlet encodeUtf8 = ByteArray.prototype.utf8Write ? function(string, position, maxBytes) {\n\t\t\treturn target.utf8Write(string, position, maxBytes)\n\t\t} : (textEncoder && textEncoder.encodeInto) ?\n\t\t\tfunction(string, position) {\n\t\t\t\treturn textEncoder.encodeInto(string, target.subarray(position)).written\n\t\t\t} : false\n\n\t\tlet encoder = this\n\t\tlet hasSharedStructures = options.structures || options.saveStructures\n\t\tlet maxSharedStructures = options.maxSharedStructures\n\t\tif (maxSharedStructures == null)\n\t\t\tmaxSharedStructures = hasSharedStructures ? 128 : 0\n\t\tif (maxSharedStructures > 8190)\n\t\t\tthrow new Error('Maximum maxSharedStructure is 8190')\n\t\tlet isSequential = options.sequential\n\t\tif (isSequential) {\n\t\t\tmaxSharedStructures = 0\n\t\t}\n\t\tif (!this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.saveStructures)\n\t\t\tthis.saveShared = this.saveStructures\n\t\tlet samplingPackedValues, packedObjectMap, sharedValues = options.sharedValues\n\t\tlet sharedPackedObjectMap\n\t\tif (sharedValues) {\n\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++) {\n\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t}\n\t\t}\n\t\tlet recordIdsToRemove = []\n\t\tlet transitionsCount = 0\n\t\tlet serializationsSinceTransitionRebuild = 0\n\t\t\n\t\tthis.mapEncode = function(value, encodeOptions) {\n\t\t\t// Experimental support for premapping keys using _keyMap instad of keyMap - not optiimised yet)\n\t\t\tif (this._keyMap && !this._mapped) {\n\t\t\t\t//console.log('encoding ', value)\n\t\t\t\tswitch (value.constructor.name) {\n\t\t\t\t\tcase 'Array': \n\t\t\t\t\t\tvalue = value.map(r => this.encodeKeys(r))\n\t\t\t\t\t\tbreak\n\t\t\t\t\t//case 'Map': \n\t\t\t\t\t//\tvalue = this.encodeKeys(value)\n\t\t\t\t\t//\tbreak\n\t\t\t\t}\n\t\t\t\t//this._mapped = true\n\t\t\t}\n\t\t\treturn this.encode(value, encodeOptions)\n\t\t}\n\t\t\n\t\tthis.encode = function(value, encodeOptions)\t{\n\t\t\tif (!target) {\n\t\t\t\ttarget = new ByteArrayAllocate(8192)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, 8192)\n\t\t\t\tposition = 0\n\t\t\t}\n\t\t\tsafeEnd = target.length - 10\n\t\t\tif (safeEnd - position < 0x800) {\n\t\t\t\t// don't start too close to the end, \n\t\t\t\ttarget = new ByteArrayAllocate(target.length)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, target.length)\n\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\tposition = 0\n\t\t\t} else if (encodeOptions === REUSE_BUFFER_MODE)\n\t\t\t\tposition = (position + 7) & 0x7ffffff8 // Word align to make any future copying of this buffer faster\n\t\t\tstart = position\n\t\t\tif (encoder.useSelfDescribedHeader) {\n\t\t\t\ttargetView.setUint32(position, 0xd9d9f700) // tag two byte, then self-descriptive tag\n\t\t\t\tposition += 3\n\t\t\t}\n\t\t\treferenceMap = encoder.structuredClone ? new Map() : null\n\t\t\tif (encoder.bundleStrings && typeof value !== 'string') {\n\t\t\t\tbundledStrings = []\n\t\t\t\tbundledStrings.size = Infinity // force a new bundle start on first string\n\t\t\t} else\n\t\t\t\tbundledStrings = null\n\n\t\t\tsharedStructures = encoder.structures\n\t\t\tif (sharedStructures) {\n\t\t\t\tif (sharedStructures.uninitialized) {\n\t\t\t\t\tlet sharedData = encoder.getShared() || {}\n\t\t\t\t\tencoder.structures = sharedStructures = sharedData.structures || []\n\t\t\t\t\tencoder.sharedVersion = sharedData.version\n\t\t\t\t\tlet sharedValues = encoder.sharedValues = sharedData.packedValues\n\t\t\t\t\tif (sharedValues) {\n\t\t\t\t\t\tsharedPackedObjectMap = {}\n\t\t\t\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++)\n\t\t\t\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet sharedStructuresLength = sharedStructures.length\n\t\t\t\tif (sharedStructuresLength > maxSharedStructures && !isSequential)\n\t\t\t\t\tsharedStructuresLength = maxSharedStructures\n\t\t\t\tif (!sharedStructures.transitions) {\n\t\t\t\t\t// rebuild our structure transitions\n\t\t\t\t\tsharedStructures.transitions = Object.create(null)\n\t\t\t\t\tfor (let i = 0; i < sharedStructuresLength; i++) {\n\t\t\t\t\t\tlet keys = sharedStructures[i]\n\t\t\t\t\t\t//console.log('shared struct keys:', keys)\n\t\t\t\t\t\tif (!keys)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tlet nextTransition, transition = sharedStructures.transitions\n\t\t\t\t\t\tfor (let j = 0, l = keys.length; j < l; j++) {\n\t\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined)\n\t\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i\n\t\t\t\t\t\t\tlet key = keys[j]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i | 0x100000\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isSequential)\n\t\t\t\t\tsharedStructures.nextId = sharedStructuresLength\n\t\t\t}\n\t\t\tif (hasSharedUpdate)\n\t\t\t\thasSharedUpdate = false\n\t\t\tstructures = sharedStructures || []\n\t\t\tpackedObjectMap = sharedPackedObjectMap\n\t\t\tif (options.pack) {\n\t\t\t\tlet packedValues = new Map()\n\t\t\t\tpackedValues.values = []\n\t\t\t\tpackedValues.encoder = encoder\n\t\t\t\tpackedValues.maxValues = options.maxPrivatePackedValues || (sharedPackedObjectMap ? 16 : Infinity)\n\t\t\t\tpackedValues.objectMap = sharedPackedObjectMap || false\n\t\t\t\tpackedValues.samplingPackedValues = samplingPackedValues\n\t\t\t\tfindRepetitiveStrings(value, packedValues)\n\t\t\t\tif (packedValues.values.length > 0) {\n\t\t\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\twriteArrayHeader(4)\n\t\t\t\t\tlet valuesArray = packedValues.values\n\t\t\t\t\tencode(valuesArray)\n\t\t\t\t\twriteArrayHeader(0) // prefixes\n\t\t\t\t\twriteArrayHeader(0) // suffixes\n\t\t\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrowOnIterable = encodeOptions & THROW_ON_ITERABLE;\n\t\t\ttry {\n\t\t\t\tif (throwOnIterable)\n\t\t\t\t\treturn;\n\t\t\t\tencode(value)\n\t\t\t\tif (bundledStrings) {\n\t\t\t\t\twriteBundles(start, encode)\n\t\t\t\t}\n\t\t\t\tencoder.offset = position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n\t\t\t\tif (referenceMap && referenceMap.idsToInsert) {\n\t\t\t\t\tposition += referenceMap.idsToInsert.length * 2\n\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\tencoder.offset = position\n\t\t\t\t\tlet serialized = insertIds(target.subarray(start, position), referenceMap.idsToInsert)\n\t\t\t\t\treferenceMap = null\n\t\t\t\t\treturn serialized\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & REUSE_BUFFER_MODE) {\n\t\t\t\t\ttarget.start = start\n\t\t\t\t\ttarget.end = position\n\t\t\t\t\treturn target\n\t\t\t\t}\n\t\t\t\treturn target.subarray(start, position) // position can change if we call encode again in saveShared, so we get the buffer now\n\t\t\t} finally {\n\t\t\t\tif (sharedStructures) {\n\t\t\t\t\tif (serializationsSinceTransitionRebuild < 10)\n\t\t\t\t\t\tserializationsSinceTransitionRebuild++\n\t\t\t\t\tif (sharedStructures.length > maxSharedStructures)\n\t\t\t\t\t\tsharedStructures.length = maxSharedStructures\n\t\t\t\t\tif (transitionsCount > 10000) {\n\t\t\t\t\t\t// force a rebuild occasionally after a lot of transitions so it can get cleaned up\n\t\t\t\t\t\tsharedStructures.transitions = null\n\t\t\t\t\t\tserializationsSinceTransitionRebuild = 0\n\t\t\t\t\t\ttransitionsCount = 0\n\t\t\t\t\t\tif (recordIdsToRemove.length > 0)\n\t\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t} else if (recordIdsToRemove.length > 0 && !isSequential) {\n\t\t\t\t\t\tfor (let i = 0, l = recordIdsToRemove.length; i < l; i++) {\n\t\t\t\t\t\t\trecordIdsToRemove[i][RECORD_SYMBOL] = undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t\t//sharedStructures.nextId = maxSharedStructures\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hasSharedUpdate && encoder.saveShared) {\n\t\t\t\t\tif (encoder.structures.length > maxSharedStructures) {\n\t\t\t\t\t\tencoder.structures = encoder.structures.slice(0, maxSharedStructures)\n\t\t\t\t\t}\n\t\t\t\t\t// we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n\t\t\t\t\tlet returnBuffer = target.subarray(start, position)\n\t\t\t\t\tif (encoder.updateSharedData() === false)\n\t\t\t\t\t\treturn encoder.encode(value) // re-encode if it fails\n\t\t\t\t\treturn returnBuffer\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & RESET_BUFFER_MODE)\n\t\t\t\t\tposition = start\n\t\t\t}\n\t\t}\n\t\tthis.findCommonStringsToPack = () => {\n\t\t\tsamplingPackedValues = new Map()\n\t\t\tif (!sharedPackedObjectMap)\n\t\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\treturn (options) => {\n\t\t\t\tlet threshold = options && options.threshold || 4\n\t\t\t\tlet position = this.pack ? options.maxPrivatePackedValues || 16 : 0\n\t\t\t\tif (!sharedValues)\n\t\t\t\t\tsharedValues = this.sharedValues = []\n\t\t\t\tfor (let [ key, status ] of samplingPackedValues) {\n\t\t\t\t\tif (status.count > threshold) {\n\t\t\t\t\t\tsharedPackedObjectMap[key] = position++\n\t\t\t\t\t\tsharedValues.push(key)\n\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (this.saveShared && this.updateSharedData() === false) {}\n\t\t\t\tsamplingPackedValues = null\n\t\t\t}\n\t\t}\n\t\tconst encode = (value) => {\n\t\t\tif (position > safeEnd)\n\t\t\t\ttarget = makeRoom(position)\n\n\t\t\tvar type = typeof value\n\t\t\tvar length\n\t\t\tif (type === 'string') {\n\t\t\t\tif (packedObjectMap) {\n\t\t\t\t\tlet packedPosition = packedObjectMap[value]\n\t\t\t\t\tif (packedPosition >= 0) {\n\t\t\t\t\t\tif (packedPosition < 16)\n\t\t\t\t\t\t\ttarget[position++] = packedPosition + 0xe0 // simple values, defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget[position++] = 0xc6 // tag 6 defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\t\tif (packedPosition & 1)\n\t\t\t\t\t\t\t\tencode((15 - packedPosition) >> 1)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tencode((packedPosition - 16) >> 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn\n/*\t\t\t\t\t\t} else if (packedStatus.serializationId != serializationId) {\n\t\t\t\t\t\t\tpackedStatus.serializationId = serializationId\n\t\t\t\t\t\t\tpackedStatus.count = 1\n\t\t\t\t\t\t\tif (options.sharedPack) {\n\t\t\t\t\t\t\t\tlet sharedCount = packedStatus.sharedCount = (packedStatus.sharedCount || 0) + 1\n\t\t\t\t\t\t\t\tif (shareCount > (options.sharedPack.threshold || 5)) {\n\t\t\t\t\t\t\t\t\tlet sharedPosition = packedStatus.position = packedStatus.nextSharedPosition\n\t\t\t\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t\t\t\t\tif (sharedPosition < 16)\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = sharedPosition + 0xc0\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} // else any in-doc incrementation?*/\n\t\t\t\t\t} else if (samplingPackedValues && !options.pack) {\n\t\t\t\t\t\tlet status = samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsamplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet strLength = value.length\n\t\t\t\tif (bundledStrings && strLength >= 4 && strLength < 0x400) {\n\t\t\t\t\tif ((bundledStrings.size += strLength) > MAX_BUNDLE_SIZE) {\n\t\t\t\t\t\tlet extStart\n\t\t\t\t\t\tlet maxBytes = (bundledStrings[0] ? bundledStrings[0].length * 3 + bundledStrings[1].length : 0) + 10\n\t\t\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\t\t\t\t\t\ttarget[position++] = 0xd9 // tag 16-bit\n\t\t\t\t\t\ttarget[position++] = 0xdf // tag 0xdff9\n\t\t\t\t\t\ttarget[position++] = 0xf9\n\t\t\t\t\t\t// TODO: If we only have one bundle with any string data, only write one string bundle\n\t\t\t\t\t\ttarget[position++] = bundledStrings.position ? 0x84 : 0x82 // array of 4 or 2 elements depending on if we write bundles\n\t\t\t\t\t\ttarget[position++] = 0x1a // 32-bit unsigned int\n\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\tif (bundledStrings.position) {\n\t\t\t\t\t\t\twriteBundles(start, encode) // write the last bundles\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbundledStrings = ['', ''] // create new ones\n\t\t\t\t\t\tbundledStrings.size = 0\n\t\t\t\t\t\tbundledStrings.position = extStart\n\t\t\t\t\t}\n\t\t\t\t\tlet twoByte = hasNonLatin.test(value)\n\t\t\t\t\tbundledStrings[twoByte ? 0 : 1] += value\n\t\t\t\t\ttarget[position++] = twoByte ? 0xce : 0xcf\n\t\t\t\t\tencode(strLength);\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlet headerSize\n\t\t\t\t// first we estimate the header size, so we can write to the correct location\n\t\t\t\tif (strLength < 0x20) {\n\t\t\t\t\theaderSize = 1\n\t\t\t\t} else if (strLength < 0x100) {\n\t\t\t\t\theaderSize = 2\n\t\t\t\t} else if (strLength < 0x10000) {\n\t\t\t\t\theaderSize = 3\n\t\t\t\t} else {\n\t\t\t\t\theaderSize = 5\n\t\t\t\t}\n\t\t\t\tlet maxBytes = strLength * 3\n\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\n\t\t\t\tif (strLength < 0x40 || !encodeUtf8) {\n\t\t\t\t\tlet i, c1, c2, strPosition = position + headerSize\n\t\t\t\t\tfor (i = 0; i < strLength; i++) {\n\t\t\t\t\t\tc1 = value.charCodeAt(i)\n\t\t\t\t\t\tif (c1 < 0x80) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1\n\t\t\t\t\t\t} else if (c1 < 0x800) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 | 0xc0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(c1 & 0xfc00) === 0xd800 &&\n\t\t\t\t\t\t\t((c2 = value.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tc1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff)\n\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 18 | 0xf0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 | 0xe0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlength = strPosition - position - headerSize\n\t\t\t\t} else {\n\t\t\t\t\tlength = encodeUtf8(value, position + headerSize, maxBytes)\n\t\t\t\t}\n\n\t\t\t\tif (length < 0x18) {\n\t\t\t\t\ttarget[position++] = 0x60 | length\n\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\tif (headerSize < 2) {\n\t\t\t\t\t\ttarget.copyWithin(position + 2, position + 1, position + 1 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x78\n\t\t\t\t\ttarget[position++] = length\n\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\tif (headerSize < 3) {\n\t\t\t\t\t\ttarget.copyWithin(position + 3, position + 2, position + 2 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x79\n\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t} else {\n\t\t\t\t\tif (headerSize < 5) {\n\t\t\t\t\t\ttarget.copyWithin(position + 5, position + 3, position + 3 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x7a\n\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\tposition += 4\n\t\t\t\t}\n\t\t\t\tposition += length\n\t\t\t} else if (type === 'number') {\n\t\t\t\tif (!this.alwaysUseFloat && value >>> 0 === value) {// positive integer, 32-bit or less\n\t\t\t\t\t// positive uint\n\t\t\t\t\tif (value < 0x18) {\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x18\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x19\n\t\t\t\t\t\ttarget[position++] = value >> 8\n\t\t\t\t\t\ttarget[position++] = value & 0xff\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x1a\n\t\t\t\t\t\ttargetView.setUint32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else if (!this.alwaysUseFloat && value >> 0 === value) { // negative integer\n\t\t\t\t\tif (value >= -0x18) {\n\t\t\t\t\t\ttarget[position++] = 0x1f - value\n\t\t\t\t\t} else if (value >= -0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x38\n\t\t\t\t\t\ttarget[position++] = ~value\n\t\t\t\t\t} else if (value >= -0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x39\n\t\t\t\t\t\ttargetView.setUint16(position, ~value)\n\t\t\t\t\t\tposition += 2\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x3a\n\t\t\t\t\t\ttargetView.setUint32(position, ~value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet useFloat32\n\t\t\t\t\tif ((useFloat32 = this.useFloat32) > 0 && value < 0x100000000 && value >= -0x80000000) {\n\t\t\t\t\t\ttarget[position++] = 0xfa\n\t\t\t\t\t\ttargetView.setFloat32(position, value)\n\t\t\t\t\t\tlet xShifted\n\t\t\t\t\t\tif (useFloat32 < 4 ||\n\t\t\t\t\t\t\t\t// this checks for rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\t\t\t((xShifted = value * mult10[((target[position] & 0x7f) << 1) | (target[position + 1] >> 7)]) >> 0) === xShifted) {\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tposition-- // move back into position for writing a double\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\ttargetView.setFloat64(position, value)\n\t\t\t\t\tposition += 8\n\t\t\t\t}\n\t\t\t} else if (type === 'object') {\n\t\t\t\tif (!value)\n\t\t\t\t\ttarget[position++] = 0xf6\n\t\t\t\telse {\n\t\t\t\t\tif (referenceMap) {\n\t\t\t\t\t\tlet referee = referenceMap.get(value)\n\t\t\t\t\t\tif (referee) {\n\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\ttarget[position++] = 29 // http://cbor.schmorp.de/value-sharing\n\t\t\t\t\t\t\ttarget[position++] = 0x19 // 16-bit uint\n\t\t\t\t\t\t\tif (!referee.references) {\n\t\t\t\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = [])\n\t\t\t\t\t\t\t\treferee.references = []\n\t\t\t\t\t\t\t\tidsToInsert.push(referee)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treferee.references.push(position - start)\n\t\t\t\t\t\t\tposition += 2 // TODO: also support 32-bit\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else \n\t\t\t\t\t\t\treferenceMap.set(value, { offset: position - start })\n\t\t\t\t\t}\n\t\t\t\t\tlet constructor = value.constructor\n\t\t\t\t\tif (constructor === Object) {\n\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t} else if (constructor === Array) {\n\t\t\t\t\t\tlength = value.length\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twriteArrayHeader(length)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\t\tencode(value[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (constructor === Map) {\n\t\t\t\t\t\tif (this.mapsAsObjects ? this.useTag259ForMaps !== false : this.useTag259ForMaps) {\n\t\t\t\t\t\t\t// use Tag 259 (https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec--explicit-maps.md) for maps if the user wants it that way\n\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\ttarget[position++] = 1\n\t\t\t\t\t\t\ttarget[position++] = 3\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlength = value.size\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\t\t\t\ttarget[position++] = length\n\t\t\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[position++] = 0xba\n\t\t\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (encoder.keyMap) { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} else { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(key) \n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let i = 0, l = extensions.length; i < l; i++) {\n\t\t\t\t\t\t\tlet extensionClass = extensionClasses[i]\n\t\t\t\t\t\t\tif (value instanceof extensionClass) {\n\t\t\t\t\t\t\t\tlet extension = extensions[i]\n\t\t\t\t\t\t\t\tlet tag = extension.tag\n\t\t\t\t\t\t\t\tif (tag == undefined)\n\t\t\t\t\t\t\t\t\ttag = extension.getTag && extension.getTag.call(this, value)\n\t\t\t\t\t\t\t\tif (tag < 0x18) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xc0 | tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x100) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x10000) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag >> 8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag & 0xff\n\t\t\t\t\t\t\t\t} else if (tag > -1) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xda\n\t\t\t\t\t\t\t\t\ttargetView.setUint32(position, tag)\n\t\t\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\t\t} // else undefined, don't write tag\n\t\t\t\t\t\t\t\textension.encode.call(this, value, encode, makeRoom)\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.iterator]) {\n\t\t\t\t\t\t\tif (throwOnIterable) {\n\t\t\t\t\t\t\t\tlet error = new Error('Iterable should be serialized as iterator')\n\t\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0x9f // indefinite length array\n\t\t\t\t\t\t\tfor (let entry of value) {\n\t\t\t\t\t\t\t\tencode(entry)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0xff // stop-code\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.asyncIterator] || isBlob(value)) {\n\t\t\t\t\t\t\tlet error = new Error('Iterable/blob should be serialized as iterator')\n\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.useToJSON && value.toJSON) {\n\t\t\t\t\t\t\tconst json = value.toJSON()\n\t\t\t\t\t\t\t// if for some reason value.toJSON returns itself it'll loop forever\n\t\t\t\t\t\t\tif (json !== value)\n\t\t\t\t\t\t\t\treturn encode(json)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// no extension found, write as a plain object\n\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'boolean') {\n\t\t\t\ttarget[position++] = value ? 0xf5 : 0xf4\n\t\t\t} else if (type === 'bigint') {\n\t\t\t\tif (value < (BigInt(1)<<BigInt(64)) && value >= 0) {\n\t\t\t\t\t// use an unsigned int as long as it fits\n\t\t\t\t\ttarget[position++] = 0x1b\n\t\t\t\t\ttargetView.setBigUint64(position, value)\n\t\t\t\t} else if (value > -(BigInt(1)<<BigInt(64)) && value < 0) {\n\t\t\t\t\t// if we can fit an unsigned int, use that\n\t\t\t\t\ttarget[position++] = 0x3b\n\t\t\t\t\ttargetView.setBigUint64(position, -value - BigInt(1))\n\t\t\t\t} else {\n\t\t\t\t\t// overflow\n\t\t\t\t\tif (this.largeBigIntToFloat) {\n\t\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\t\ttargetView.setFloat64(position, Number(value))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new RangeError(value + ' was too large to fit in CBOR 64-bit integer format, set largeBigIntToFloat to convert to float-64')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tposition += 8\n\t\t\t} else if (type === 'undefined') {\n\t\t\t\ttarget[position++] = 0xf7\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown type: ' + type)\n\t\t\t}\n\t\t}\n\n\t\tconst writeObject = this.useRecords === false ? this.variableMapSize ? (object) => {\n\t\t\t// this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n\t\t\tlet keys = Object.keys(object)\n\t\t\tlet vals = Object.values(object)\n\t\t\tlet length = keys.length\n\t\t\tif (length < 0x18) {\n\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t} else if (length < 0x100) {\n\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\ttarget[position++] = length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xba\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tlet key\n\t\t\tif (encoder.keyMap) { \n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(encoder.encodeKey(keys[i]))\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(keys[i])\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\t\t(object) => {\n\t\t\ttarget[position++] = 0xb9 // always use map 16, so we can preallocate and set the length afterwards\n\t\t\tlet objectOffset = position - start\n\t\t\tposition += 2\n\t\t\tlet size = 0\n\t\t\tif (encoder.keyMap) { \n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t} else { \n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\t\tencode(key)\n\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget[objectOffset++ + start] = size >> 8\n\t\t\ttarget[objectOffset + start] = size & 0xff\n\t\t} :\n\t\t(object, skipValues) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet newTransitions = 0\n\t\t\tlet length = 0\n\t\t\tlet parentRecordId\n\t\t\tlet keys\n\t\t\tif (this.keyMap) {\n\t\t\t\tkeys = Object.keys(object).map(k => this.encodeKey(k))\n\t\t\t\tlength = keys.length\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet key = keys[i]\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] & 0x100000) {// this indicates it is a brancheable/extendable terminal node, so we will use this record id and extend it\n\t\t\t\t\t\t\tparentRecordId = transition[RECORD_SYMBOL] & 0xffff\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\tlength++\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\tif (recordId !== undefined) {\n\t\t\t\trecordId &= 0xffff\n\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t} else {\n\t\t\t\tif (!keys)\n\t\t\t\t\tkeys = transition.__keys__ || (transition.__keys__ = Object.keys(object))\n\t\t\t\tif (parentRecordId === undefined) {\n\t\t\t\t\trecordId = structures.nextId++\n\t\t\t\t\tif (!recordId) {\n\t\t\t\t\t\trecordId = 0\n\t\t\t\t\t\tstructures.nextId = 1\n\t\t\t\t\t}\n\t\t\t\t\tif (recordId >= MAX_STRUCTURES) {// cycle back around\n\t\t\t\t\t\tstructures.nextId = (recordId = maxSharedStructures) + 1\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trecordId = parentRecordId\n\t\t\t\t}\n\t\t\t\tstructures[recordId] = keys\n\t\t\t\tif (recordId < maxSharedStructures) {\n\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t\t\ttransition = structures.transitions\n\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined || (transition[RECORD_SYMBOL] & 0x100000))\n\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\t\ttransition = transition[keys[i]]\n\t\t\t\t\t}\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId | 0x100000 // indicates it is a extendable terminal\n\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t} else {\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\ttargetView.setUint32(position, 0xd9dfff00) // tag two byte, then record definition id\n\t\t\t\t\tposition += 3\n\t\t\t\t\tif (newTransitions)\n\t\t\t\t\t\ttransitionsCount += serializationsSinceTransitionRebuild * newTransitions\n\t\t\t\t\t// record the removal of the id, we can maintain our shared structure\n\t\t\t\t\tif (recordIdsToRemove.length >= MAX_STRUCTURES - maxSharedStructures)\n\t\t\t\t\t\trecordIdsToRemove.shift()[RECORD_SYMBOL] = undefined // we are cycling back through, and have to remove old ones\n\t\t\t\t\trecordIdsToRemove.push(transition)\n\t\t\t\t\twriteArrayHeader(length + 2)\n\t\t\t\t\tencode(0xe000 + recordId)\n\t\t\t\t\tencode(keys)\n\t\t\t\t\tif (skipValues) return; // special exit for iterator\n\t\t\t\t\tfor (let key in object)\n\t\t\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key))\n\t\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 0x18) { // write the array header\n\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t} else {\n\t\t\t\twriteArrayHeader(length)\n\t\t\t}\n\t\t\tif (skipValues) return; // special exit for iterator\n\t\t\tfor (let key in object)\n\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key))\n\t\t\t\t\tencode(object[key])\n\t\t}\n\t\tconst makeRoom = (end) => {\n\t\t\tlet newSize\n\t\t\tif (end > 0x1000000) {\n\t\t\t\t// special handling for really large buffers\n\t\t\t\tif ((end - start) > MAX_BUFFER_SIZE)\n\t\t\t\t\tthrow new Error('Encoded buffer would be larger than maximum buffer size')\n\t\t\t\tnewSize = Math.min(MAX_BUFFER_SIZE,\n\t\t\t\t\tMath.round(Math.max((end - start) * (end > 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000)\n\t\t\t} else // faster handling for smaller buffers\n\t\t\t\tnewSize = ((Math.max((end - start) << 2, target.length - 1) >> 12) + 1) << 12\n\t\t\tlet newBuffer = new ByteArrayAllocate(newSize)\n\t\t\ttargetView = new DataView(newBuffer.buffer, 0, newSize)\n\t\t\tif (target.copy)\n\t\t\t\ttarget.copy(newBuffer, 0, start, end)\n\t\t\telse\n\t\t\t\tnewBuffer.set(target.slice(start, end))\n\t\t\tposition -= start\n\t\t\tstart = 0\n\t\t\tsafeEnd = newBuffer.length - 10\n\t\t\treturn target = newBuffer\n\t\t}\n\t\tlet chunkThreshold = 100;\n\t\tlet continuedChunkThreshold = 1000;\n\t\tthis.encodeAsIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsIterable);\n\t\t}\n\t\tthis.encodeAsAsyncIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsAsyncIterable);\n\t\t}\n\n\t\tfunction* encodeObjectAsIterable(object, iterateProperties, finalIterable) {\n\t\t\tlet constructor = object.constructor;\n\t\t\tif (constructor === Object) {\n\t\t\t\tlet useRecords = encoder.useRecords !== false;\n\t\t\t\tif (useRecords)\n\t\t\t\t\twriteObject(object, true); // write the record identifier\n\t\t\t\telse\n\t\t\t\t\twriteEntityLength(Object.keys(object).length, 0xa0);\n\t\t\t\tfor (let key in object) {\n\t\t\t\t\tlet value = object[key];\n\t\t\t\t\tif (!useRecords) encode(key);\n\t\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\t\tif (iterateProperties[key])\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties[key]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, key);\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (constructor === Array) {\n\t\t\t\tlet length = object.length;\n\t\t\t\twriteArrayHeader(length);\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet value = object[i];\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (object[Symbol.iterator]) {\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tfor (let value of object) {\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else if (isBlob(object)){\n\t\t\t\twriteEntityLength(object.size, 0x40); // encode as binary data\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return blobs, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t} else if (object[Symbol.asyncIterator]) {\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return async iterators, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else {\n\t\t\t\tencode(object);\n\t\t\t}\n\t\t\tif (finalIterable && position > start) yield target.subarray(start, position);\n\t\t\telse if (position - start > chunkThreshold) {\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\trestartEncoding();\n\t\t\t}\n\t\t}\n\t\tfunction* tryEncode(value, iterateProperties, key) {\n\t\t\tlet restart = position - start;\n\t\t\ttry {\n\t\t\t\tencode(value);\n\t\t\t\tif (position - start > chunkThreshold) {\n\t\t\t\t\tyield target.subarray(start, position);\n\t\t\t\t\trestartEncoding();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (error.iteratorNotHandled) {\n\t\t\t\t\titerateProperties[key] = {};\n\t\t\t\t\tposition = start + restart; // restart our position so we don't have partial data from last encode\n\t\t\t\t\tyield* encodeObjectAsIterable.call(this, value, iterateProperties[key]);\n\t\t\t\t} else throw error;\n\t\t\t}\n\t\t}\n\t\tfunction restartEncoding() {\n\t\t\tchunkThreshold = continuedChunkThreshold;\n\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // restart encoding\n\t\t}\n\t\tfunction startEncoding(value, options, encodeIterable) {\n\t\t\tif (options && options.chunkThreshold) // explicitly specified chunk sizes\n\t\t\t\tchunkThreshold = continuedChunkThreshold = options.chunkThreshold;\n\t\t\telse // we start with a smaller threshold to get initial bytes sent quickly\n\t\t\t\tchunkThreshold = 100;\n\t\t\tif (value && typeof value === 'object') {\n\t\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // start encoding\n\t\t\t\treturn encodeIterable(value, encoder.iterateProperties || (encoder.iterateProperties = {}), true);\n\t\t\t}\n\t\t\treturn [encoder.encode(value)];\n\t\t}\n\n\t\tasync function* encodeObjectAsAsyncIterable(value, iterateProperties) {\n\t\t\tfor (let encodedValue of encodeObjectAsIterable(value, iterateProperties, true)) {\n\t\t\t\tlet constructor = encodedValue.constructor;\n\t\t\t\tif (constructor === ByteArray || constructor === Uint8Array)\n\t\t\t\t\tyield encodedValue;\n\t\t\t\telse if (isBlob(encodedValue)) {\n\t\t\t\t\tlet reader = encodedValue.stream().getReader();\n\t\t\t\t\tlet next;\n\t\t\t\t\twhile (!(next = await reader.read()).done) {\n\t\t\t\t\t\tyield next.value;\n\t\t\t\t\t}\n\t\t\t\t} else if (encodedValue[Symbol.asyncIterator]) {\n\t\t\t\t\tfor await (let asyncValue of encodedValue) {\n\t\t\t\t\t\trestartEncoding();\n\t\t\t\t\t\tif (asyncValue)\n\t\t\t\t\t\t\tyield* encodeObjectAsAsyncIterable(asyncValue, iterateProperties.async || (iterateProperties.async = {}));\n\t\t\t\t\t\telse yield encoder.encode(asyncValue);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tyield encodedValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tuseBuffer(buffer) {\n\t\t// this means we are finished using our own buffer and we can write over it safely\n\t\ttarget = buffer\n\t\ttargetView = new DataView(target.buffer, target.byteOffset, target.byteLength)\n\t\tposition = 0\n\t}\n\tclearSharedData() {\n\t\tif (this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.sharedValues)\n\t\t\tthis.sharedValues = undefined\n\t}\n\tupdateSharedData() {\n\t\tlet lastVersion = this.sharedVersion || 0\n\t\tthis.sharedVersion = lastVersion + 1\n\t\tlet structuresCopy = this.structures.slice(0)\n\t\tlet sharedData = new SharedData(structuresCopy, this.sharedValues, this.sharedVersion)\n\t\tlet saveResults = this.saveShared(sharedData,\n\t\t\t\texistingShared => (existingShared && existingShared.version || 0) == lastVersion)\n\t\tif (saveResults === false) {\n\t\t\t// get updated structures and try again if the update failed\n\t\t\tsharedData = this.getShared() || {}\n\t\t\tthis.structures = sharedData.structures || []\n\t\t\tthis.sharedValues = sharedData.packedValues\n\t\t\tthis.sharedVersion = sharedData.version\n\t\t\tthis.structures.nextId = this.structures.length\n\t\t} else {\n\t\t\t// restore structures\n\t\t\tstructuresCopy.forEach((structure, i) => this.structures[i] = structure)\n\t\t}\n\t\t// saveShared may fail to write and reload, or may have reloaded to check compatibility and overwrite saved data, either way load the correct shared data\n\t\treturn saveResults\n\t}\n}\nfunction writeEntityLength(length, majorValue) {\n\tif (length < 0x18)\n\t\ttarget[position++] = majorValue | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = majorValue | 0x18\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = majorValue | 0x19\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = majorValue | 0x1a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\n}\nclass SharedData {\n\tconstructor(structures, values, version) {\n\t\tthis.structures = structures\n\t\tthis.packedValues = values\n\t\tthis.version = version\n\t}\n}\n\nfunction writeArrayHeader(length) {\n\tif (length < 0x18)\n\t\ttarget[position++] = 0x80 | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = 0x98\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x99\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x9a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n}\n\nconst BlobConstructor = typeof Blob === 'undefined' ? function(){} : Blob;\nfunction isBlob(object) {\n\tif (object instanceof BlobConstructor)\n\t\treturn true;\n\tlet tag = object[Symbol.toStringTag];\n\treturn tag === 'Blob' || tag === 'File';\n}\nfunction findRepetitiveStrings(value, packedValues) {\n\tswitch(typeof value) {\n\t\tcase 'string':\n\t\t\tif (value.length > 3) {\n\t\t\t\tif (packedValues.objectMap[value] > -1 || packedValues.values.length >= packedValues.maxValues)\n\t\t\t\t\treturn\n\t\t\t\tlet packedStatus = packedValues.get(value)\n\t\t\t\tif (packedStatus) {\n\t\t\t\t\tif (++packedStatus.count == 2) {\n\t\t\t\t\t\tpackedValues.values.push(value)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpackedValues.set(value, {\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t})\n\t\t\t\t\tif (packedValues.samplingPackedValues) {\n\t\t\t\t\t\tlet status = packedValues.samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpackedValues.samplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'object':\n\t\t\tif (value) {\n\t\t\t\tif (value instanceof Array) {\n\t\t\t\t\tfor (let i = 0, l = value.length; i < l; i++) {\n\t\t\t\t\t\tfindRepetitiveStrings(value[i], packedValues)\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tlet includeKeys = !packedValues.encoder.useRecords\n\t\t\t\t\tfor (var key in value) {\n\t\t\t\t\t\tif (value.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tif (includeKeys)\n\t\t\t\t\t\t\t\tfindRepetitiveStrings(key, packedValues)\n\t\t\t\t\t\t\tfindRepetitiveStrings(value[key], packedValues)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'function': console.log(value)\n\t}\n}\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nextensionClasses = [ Date, Set, Error, RegExp, Tag, ArrayBuffer,\n\tUint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? function() {} : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? function() {} : BigInt64Array,\n\tFloat32Array, Float64Array, SharedData ]\n\n//Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/\nextensions = [{ // Date\n\ttag: 1,\n\tencode(date, encode) {\n\t\tlet seconds = date.getTime() / 1000\n\t\tif ((this.useTimestamp32 || date.getMilliseconds() === 0) && seconds >= 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 32\n\t\t\ttarget[position++] = 0x1a\n\t\t\ttargetView.setUint32(position, seconds)\n\t\t\tposition += 4\n\t\t} else {\n\t\t\t// Timestamp float64\n\t\t\ttarget[position++] = 0xfb\n\t\t\ttargetView.setFloat64(position, seconds)\n\t\t\tposition += 8\n\t\t}\n\t}\n}, { // Set\n\ttag: 258, // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n\tencode(set, encode) {\n\t\tlet array = Array.from(set)\n\t\tencode(array)\n\t}\n}, { // Error\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(error, encode) {\n\t\tencode([ error.name, error.message ])\n\t}\n}, { // RegExp\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(regex, encode) {\n\t\tencode([ 'RegExp', regex.source, regex.flags ])\n\t}\n}, { // Tag\n\tgetTag(tag) {\n\t\treturn tag.tag\n\t},\n\tencode(tag, encode) {\n\t\tencode(tag.value)\n\t}\n}, { // ArrayBuffer\n\tencode(arrayBuffer, encode, makeRoom) {\n\t\twriteBuffer(arrayBuffer, makeRoom)\n\t}\n}, { // Uint8Array\n\tgetTag(typedArray) {\n\t\tif (typedArray.constructor === Uint8Array) {\n\t\t\tif (this.tagUint8Array || hasNodeBuffer && this.tagUint8Array !== false)\n\t\t\t\treturn 64;\n\t\t} // else no tag\n\t},\n\tencode(typedArray, encode, makeRoom) {\n\t\twriteBuffer(typedArray, makeRoom)\n\t}\n},\n\ttypedArrayEncoder(68, 1),\n\ttypedArrayEncoder(69, 2),\n\ttypedArrayEncoder(70, 4),\n\ttypedArrayEncoder(71, 8),\n\ttypedArrayEncoder(72, 1),\n\ttypedArrayEncoder(77, 2),\n\ttypedArrayEncoder(78, 4),\n\ttypedArrayEncoder(79, 8),\n\ttypedArrayEncoder(85, 4),\n\ttypedArrayEncoder(86, 8),\n{\n\tencode(sharedData, encode) { // write SharedData\n\t\tlet packedValues = sharedData.packedValues || []\n\t\tlet sharedStructures = sharedData.structures || []\n\t\tif (packedValues.values.length > 0) {\n\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\twriteArrayHeader(4)\n\t\t\tlet valuesArray = packedValues.values\n\t\t\tencode(valuesArray)\n\t\t\twriteArrayHeader(0) // prefixes\n\t\t\twriteArrayHeader(0) // suffixes\n\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t}\n\t\t}\n\t\tif (sharedStructures) {\n\t\t\ttargetView.setUint32(position, 0xd9dffe00)\n\t\t\tposition += 3\n\t\t\tlet definitions = sharedStructures.slice(0)\n\t\t\tdefinitions.unshift(0xe000)\n\t\t\tdefinitions.push(new Tag(sharedData.version, 0x53687264))\n\t\t\tencode(definitions)\n\t\t} else\n\t\t\tencode(new Tag(sharedData.version, 0x53687264))\n\t\t}\n\t}]\nfunction typedArrayEncoder(tag, size) {\n\tif (!isLittleEndianMachine && size > 1)\n\t\ttag -= 4 // the big endian equivalents are 4 less\n\treturn {\n\t\ttag: tag,\n\t\tencode: function writeExtBuffer(typedArray, encode) {\n\t\t\tlet length = typedArray.byteLength\n\t\t\tlet offset = typedArray.byteOffset || 0\n\t\t\tlet buffer = typedArray.buffer || typedArray\n\t\t\tencode(hasNodeBuffer ? Buffer.from(buffer, offset, length) :\n\t\t\t\tnew Uint8Array(buffer, offset, length))\n\t\t}\n\t}\n}\nfunction writeBuffer(buffer, makeRoom) {\n\tlet length = buffer.byteLength\n\tif (length < 0x18) {\n\t\ttarget[position++] = 0x40 + length\n\t} else if (length < 0x100) {\n\t\ttarget[position++] = 0x58\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x59\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x5a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\tif (position + length >= target.length) {\n\t\tmakeRoom(position + length)\n\t}\n\t// if it is already a typed array (has an ArrayBuffer), use that, but if it is an ArrayBuffer itself,\n\t// must wrap it to set it.\n\ttarget.set(buffer.buffer ? buffer : new Uint8Array(buffer), position)\n\tposition += length\n}\n\nfunction insertIds(serialized, idsToInsert) {\n\t// insert the ids that need to be referenced for structured clones\n\tlet nextId\n\tlet distanceToMove = idsToInsert.length * 2\n\tlet lastEnd = serialized.length - distanceToMove\n\tidsToInsert.sort((a, b) => a.offset > b.offset ? 1 : -1)\n\tfor (let id = 0; id < idsToInsert.length; id++) {\n\t\tlet referee = idsToInsert[id]\n\t\treferee.id = id\n\t\tfor (let position of referee.references) {\n\t\t\tserialized[position++] = id >> 8\n\t\t\tserialized[position] = id & 0xff\n\t\t}\n\t}\n\twhile (nextId = idsToInsert.pop()) {\n\t\tlet offset = nextId.offset\n\t\tserialized.copyWithin(offset + distanceToMove, offset, lastEnd)\n\t\tdistanceToMove -= 2\n\t\tlet position = offset + distanceToMove\n\t\tserialized[position++] = 0xd8\n\t\tserialized[position++] = 28 // http://cbor.schmorp.de/value-sharing\n\t\tlastEnd = offset\n\t}\n\treturn serialized\n}\nfunction writeBundles(start, encode) {\n\ttargetView.setUint32(bundledStrings.position + start, position - bundledStrings.position - start + 1) // the offset to bundle\n\tlet writeStrings = bundledStrings\n\tbundledStrings = null\n\tencode(writeStrings[0])\n\tencode(writeStrings[1])\n}\n\nexport function addExtension(extension) {\n\tif (extension.Class) {\n\t\tif (!extension.encode)\n\t\t\tthrow new Error('Extension has no encode function')\n\t\textensionClasses.unshift(extension.Class)\n\t\textensions.unshift(extension)\n\t}\n\tdecodeAddExtension(extension)\n}\nlet defaultEncoder = new Encoder({ useRecords: false })\nexport const encode = defaultEncoder.encode\nexport const encodeAsIterable = defaultEncoder.encodeAsIterable\nexport const encodeAsAsyncIterable = defaultEncoder.encodeAsAsyncIterable\nexport { FLOAT32_OPTIONS } from './decode.js'\nimport { FLOAT32_OPTIONS } from './decode.js'\nexport const { NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT } = FLOAT32_OPTIONS\nexport const REUSE_BUFFER_MODE = 512\nexport const RESET_BUFFER_MODE = 1024\nexport const THROW_ON_ITERABLE = 2048\n\n\n", "export const empty = new Uint8Array(0)\n\nexport function toHex (d: Uint8Array): string {\n  return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '')\n}\n\nexport function fromHex (hex: string): Uint8Array {\n  const hexes = hex.match(/../g)\n  return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty\n}\n\nexport function equals (aa: Uint8Array, bb: Uint8Array): boolean {\n  if (aa === bb) return true\n  if (aa.byteLength !== bb.byteLength) {\n    return false\n  }\n\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function coerce (o: ArrayBufferView | ArrayBuffer | Uint8Array): Uint8Array {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array') return o\n  if (o instanceof ArrayBuffer) return new Uint8Array(o)\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength)\n  }\n  throw new Error('Unknown type, must be binary type')\n}\n\nexport function isBinary (o: unknown): o is ArrayBuffer | ArrayBufferView {\n  return o instanceof ArrayBuffer || ArrayBuffer.isView(o)\n}\n\nexport function fromString (str: string): Uint8Array {\n  return new TextEncoder().encode(str)\n}\n\nexport function toString (b: Uint8Array): string {\n  return new TextDecoder().decode(b)\n}\n", "/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base (ALPHABET, name) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n  /**\n   * @param {any[] | Iterable<number>} source\n   */\n  function encode (source) {\n    // @ts-ignore\n    if (source instanceof Uint8Array) ; else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n    var b58 = new Uint8Array(size);\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0;\n        b58[it1] = (carry % BASE) >>> 0;\n        carry = (carry / BASE) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      pbegin++;\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]); }\n    return str\n  }\n  /**\n   * @param {string | string[]} source\n   */\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0;\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size);\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0;\n        b256[it3] = (carry % 256) >>> 0;\n        carry = (carry / 256) >>> 0;\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i;\n      psz++;\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch\n  }\n  /**\n   * @param {string | string[]} string\n   */\n  function decode (string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) { return buffer }\n    throw new Error(`Non-${name} character`)\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nvar src = base;\n\nvar _brrp__multiformats_scope_baseX = src;\n\nexport default _brrp__multiformats_scope_baseX;\n", "import { coerce } from '../bytes.js'\nimport basex from '../vendor/base-x.js'\nimport type { BaseCodec, BaseDecoder, BaseEncoder, CombobaseDecoder, Multibase, MultibaseCodec, MultibaseDecoder, MultibaseEncoder, UnibaseDecoder } from './interface.js'\n\ninterface EncodeFn { (bytes: Uint8Array): string }\ninterface DecodeFn { (text: string): Uint8Array }\n\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder<Base extends string, Prefix extends string> implements MultibaseEncoder<Prefix>, BaseEncoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseEncode: EncodeFn\n\n  constructor (name: Base, prefix: Prefix, baseEncode: EncodeFn) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n  }\n\n  encode (bytes: Uint8Array): Multibase<Prefix> {\n    if (bytes instanceof Uint8Array) {\n      return `${this.prefix}${this.baseEncode(bytes)}`\n    } else {\n      throw Error('Unknown type, must be binary type')\n    }\n  }\n}\n\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder<Base extends string, Prefix extends string> implements MultibaseDecoder<Prefix>, UnibaseDecoder<Prefix>, BaseDecoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseDecode: DecodeFn\n  private readonly prefixCodePoint: number\n\n  constructor (name: Base, prefix: Prefix, baseDecode: DecodeFn) {\n    this.name = name\n    this.prefix = prefix\n    /* c8 ignore next 3 */\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character')\n    }\n    this.prefixCodePoint = prefix.codePointAt(0) as number\n    this.baseDecode = baseDecode\n  }\n\n  decode (text: string): Uint8Array {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`)\n      }\n      return this.baseDecode(text.slice(this.prefix.length))\n    } else {\n      throw Error('Can only multibase decode strings')\n    }\n  }\n\n  or<OtherPrefix extends string> (decoder: UnibaseDecoder<OtherPrefix> | ComposedDecoder<OtherPrefix>): ComposedDecoder<Prefix | OtherPrefix> {\n    return or(this, decoder)\n  }\n}\n\ntype Decoders<Prefix extends string> = Record<Prefix, UnibaseDecoder<Prefix>>\n\nclass ComposedDecoder<Prefix extends string> implements MultibaseDecoder<Prefix>, CombobaseDecoder<Prefix> {\n  readonly decoders: Decoders<Prefix>\n\n  constructor (decoders: Decoders<Prefix>) {\n    this.decoders = decoders\n  }\n\n  or <OtherPrefix extends string> (decoder: UnibaseDecoder<OtherPrefix> | ComposedDecoder<OtherPrefix>): ComposedDecoder<Prefix | OtherPrefix> {\n    return or(this, decoder)\n  }\n\n  decode (input: string): Uint8Array {\n    const prefix = input[0] as Prefix\n    const decoder = this.decoders[prefix]\n    if (decoder != null) {\n      return decoder.decode(input)\n    } else {\n      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)\n    }\n  }\n}\n\nexport function or <L extends string, R extends string> (left: UnibaseDecoder<L> | CombobaseDecoder<L>, right: UnibaseDecoder<R> | CombobaseDecoder<R>): ComposedDecoder<L | R> {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n  return new ComposedDecoder({\n    ...(left.decoders ?? { [(left as UnibaseDecoder<L>).prefix]: left }),\n    ...(right.decoders ?? { [(right as UnibaseDecoder<R>).prefix]: right })\n  } as Decoders<L | R>)\n}\n\nexport class Codec<Base extends string, Prefix extends string> implements MultibaseCodec<Prefix>, MultibaseEncoder<Prefix>, MultibaseDecoder<Prefix>, BaseCodec, BaseEncoder, BaseDecoder {\n  readonly name: Base\n  readonly prefix: Prefix\n  readonly baseEncode: EncodeFn\n  readonly baseDecode: DecodeFn\n  readonly encoder: Encoder<Base, Prefix>\n  readonly decoder: Decoder<Base, Prefix>\n\n  constructor (name: Base, prefix: Prefix, baseEncode: EncodeFn, baseDecode: DecodeFn) {\n    this.name = name\n    this.prefix = prefix\n    this.baseEncode = baseEncode\n    this.baseDecode = baseDecode\n    this.encoder = new Encoder(name, prefix, baseEncode)\n    this.decoder = new Decoder(name, prefix, baseDecode)\n  }\n\n  encode (input: Uint8Array): string {\n    return this.encoder.encode(input)\n  }\n\n  decode (input: string): Uint8Array {\n    return this.decoder.decode(input)\n  }\n}\n\nexport function from <Base extends string, Prefix extends string> ({ name, prefix, encode, decode }: { name: Base, prefix: Prefix, encode: EncodeFn, decode: DecodeFn }): Codec<Base, Prefix> {\n  return new Codec(name, prefix, encode, decode)\n}\n\nexport function baseX <Base extends string, Prefix extends string> ({ name, prefix, alphabet }: { name: Base, prefix: Prefix, alphabet: string }): Codec<Base, Prefix> {\n  const { encode, decode } = basex(alphabet, name)\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: (text: string): Uint8Array => coerce(decode(text))\n  })\n}\n\nfunction decode (string: string, alphabet: string, bitsPerChar: number, name: string): Uint8Array {\n  // Build the character lookup table:\n  const codes: Record<string, number> = {}\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i\n  }\n\n  // Count the padding bytes:\n  let end = string.length\n  while (string[end - 1] === '=') {\n    --end\n  }\n\n  // Allocate the output:\n  const out = new Uint8Array((end * bitsPerChar / 8) | 0)\n\n  // Parse the data:\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  let written = 0 // Next byte to write\n  for (let i = 0; i < end; ++i) {\n    // Read one character from the string:\n    const value = codes[string[i]]\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${name} character`)\n    }\n\n    // Append the bits to the buffer:\n    buffer = (buffer << bitsPerChar) | value\n    bits += bitsPerChar\n\n    // Write out some bits if the buffer has a byte's worth:\n    if (bits >= 8) {\n      bits -= 8\n      out[written++] = 0xff & (buffer >> bits)\n    }\n  }\n\n  // Verify that we have received just enough bits:\n  if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n    throw new SyntaxError('Unexpected end of data')\n  }\n\n  return out\n}\n\nfunction encode (data: Uint8Array, alphabet: string, bitsPerChar: number): string {\n  const pad = alphabet[alphabet.length - 1] === '='\n  const mask = (1 << bitsPerChar) - 1\n  let out = ''\n\n  let bits = 0 // Number of bits currently in the buffer\n  let buffer = 0 // Bits waiting to be written out, MSB first\n  for (let i = 0; i < data.length; ++i) {\n    // Slurp data into the buffer:\n    buffer = (buffer << 8) | data[i]\n    bits += 8\n\n    // Write out as much as we can:\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar\n      out += alphabet[mask & (buffer >> bits)]\n    }\n  }\n\n  // Partial character:\n  if (bits !== 0) {\n    out += alphabet[mask & (buffer << (bitsPerChar - bits))]\n  }\n\n  // Add padding characters until we hit a byte boundary:\n  if (pad) {\n    while (((out.length * bitsPerChar) & 7) !== 0) {\n      out += '='\n    }\n  }\n\n  return out\n}\n\n/**\n * RFC4648 Factory\n */\nexport function rfc4648 <Base extends string, Prefix extends string> ({ name, prefix, bitsPerChar, alphabet }: { name: Base, prefix: Prefix, bitsPerChar: number, alphabet: string }): Codec<Base, Prefix> {\n  return from({\n    prefix,\n    name,\n    encode (input: Uint8Array): string {\n      return encode(input, alphabet, bitsPerChar)\n    },\n    decode (input: string): Uint8Array {\n      return decode(input, alphabet, bitsPerChar, name)\n    }\n  })\n}\n", "import { rfc4648 } from './base.js'\n\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n})\n\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n})\n\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n})\n\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n})\n\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n})\n\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n})\n\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n})\n\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n})\n\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n})\n", "import { baseX } from './base.js'\n\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n})\n\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n})\n", "/* eslint-disable */\nvar encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  // @ts-ignore\n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      // @ts-ignore\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  // @ts-ignore\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (/** @type {number} */ value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n", "import varint from './vendor/varint.js'\n\nexport function decode (data: Uint8Array, offset = 0): [number, number] {\n  const code = varint.decode(data, offset)\n  return [code, varint.decode.bytes]\n}\n\nexport function encodeTo (int: number, target: Uint8Array, offset = 0): Uint8Array {\n  varint.encode(int, target, offset)\n  return target\n}\n\nexport function encodingLength (int: number): number {\n  return varint.encodingLength(int)\n}\n", "import { coerce, equals as equalBytes } from '../bytes.js'\nimport * as varint from '../varint.js'\nimport type { MultihashDigest } from './interface.js'\n\n/**\n * Creates a multihash digest.\n */\nexport function create <Code extends number> (code: Code, digest: Uint8Array): Digest<Code, number> {\n  const size = digest.byteLength\n  const sizeOffset = varint.encodingLength(code)\n  const digestOffset = sizeOffset + varint.encodingLength(size)\n\n  const bytes = new Uint8Array(digestOffset + size)\n  varint.encodeTo(code, bytes, 0)\n  varint.encodeTo(size, bytes, sizeOffset)\n  bytes.set(digest, digestOffset)\n\n  return new Digest(code, size, digest, bytes)\n}\n\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nexport function decode (multihash: Uint8Array): MultihashDigest {\n  const bytes = coerce(multihash)\n  const [code, sizeOffset] = varint.decode(bytes)\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset))\n  const digest = bytes.subarray(sizeOffset + digestOffset)\n\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length')\n  }\n\n  return new Digest(code, size, digest, bytes)\n}\n\nexport function equals (a: MultihashDigest, b: unknown): b is MultihashDigest {\n  if (a === b) {\n    return true\n  } else {\n    const data = b as { code?: unknown, size?: unknown, bytes?: unknown }\n\n    return (\n      a.code === data.code &&\n      a.size === data.size &&\n      data.bytes instanceof Uint8Array &&\n      equalBytes(a.bytes, data.bytes)\n    )\n  }\n}\n\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nexport class Digest<Code extends number, Size extends number> implements MultihashDigest {\n  readonly code: Code\n  readonly size: Size\n  readonly digest: Uint8Array\n  readonly bytes: Uint8Array\n\n  /**\n   * Creates a multihash digest.\n   */\n  constructor (code: Code, size: Size, digest: Uint8Array, bytes: Uint8Array) {\n    this.code = code\n    this.size = size\n    this.digest = digest\n    this.bytes = bytes\n  }\n}\n", "import { base32 } from './bases/base32.js'\nimport { base58btc } from './bases/base58.js'\nimport { coerce } from './bytes.js'\nimport * as Digest from './hashes/digest.js'\nimport * as varint from './varint.js'\nimport type * as API from './link/interface.js'\n\n// This way TS will also expose all the types from module\nexport * from './link/interface.js'\n\nexport function format <T extends API.Link<unknown, number, number, API.Version>, Prefix extends string> (link: T, base?: API.MultibaseEncoder<Prefix>): API.ToString<T, Prefix> {\n  const { bytes, version } = link\n  switch (version) {\n    case 0:\n      return toStringV0(\n        bytes,\n        baseCache(link),\n        base as API.MultibaseEncoder<'z'> ?? base58btc.encoder\n      )\n    default:\n      return toStringV1(\n        bytes,\n        baseCache(link),\n        (base ?? base32.encoder) as API.MultibaseEncoder<Prefix>\n      )\n  }\n}\n\nexport function toJSON <Link extends API.UnknownLink> (link: Link): API.LinkJSON<Link> {\n  return {\n    '/': format(link)\n  }\n}\n\nexport function fromJSON <Link extends API.UnknownLink> (json: API.LinkJSON<Link>): CID<unknown, number, number, API.Version> {\n  return CID.parse(json['/'])\n}\n\nconst cache = new WeakMap<API.UnknownLink, Map<string, string>>()\n\nfunction baseCache (cid: API.UnknownLink): Map<string, string> {\n  const baseCache = cache.get(cid)\n  if (baseCache == null) {\n    const baseCache = new Map()\n    cache.set(cid, baseCache)\n    return baseCache\n  }\n  return baseCache\n}\n\nexport class CID<Data = unknown, Format extends number = number, Alg extends number = number, Version extends API.Version = API.Version> implements API.Link<Data, Format, Alg, Version> {\n  readonly code: Format\n  readonly version: Version\n  readonly multihash: API.MultihashDigest<Alg>\n  readonly bytes: Uint8Array\n  readonly '/': Uint8Array\n\n  /**\n   * @param version - Version of the CID\n   * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param multihash - (Multi)hash of the of the content.\n   */\n  constructor (version: Version, code: Format, multihash: API.MultihashDigest<Alg>, bytes: Uint8Array) {\n    this.code = code\n    this.version = version\n    this.multihash = multihash\n    this.bytes = bytes\n\n    // flag to serializers that this is a CID and\n    // should be treated specially\n    this['/'] = bytes\n  }\n\n  /**\n   * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n   * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n   *\n   * @deprecated\n   */\n  get asCID (): this {\n    return this\n  }\n\n  // ArrayBufferView\n  get byteOffset (): number {\n    return this.bytes.byteOffset\n  }\n\n  // ArrayBufferView\n  get byteLength (): number {\n    return this.bytes.byteLength\n  }\n\n  toV0 (): CID<Data, API.DAG_PB, API.SHA_256, 0> {\n    switch (this.version) {\n      case 0: {\n        return this as CID<Data, API.DAG_PB, API.SHA_256, 0>\n      }\n      case 1: {\n        const { code, multihash } = this\n\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0')\n        }\n\n        // sha2-256\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0')\n        }\n\n        return (\n          CID.createV0(\n            multihash as API.MultihashDigest<API.SHA_256>\n          )\n        )\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 0. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  toV1 (): CID<Data, Format, Alg, 1> {\n    switch (this.version) {\n      case 0: {\n        const { code, digest } = this.multihash\n        const multihash = Digest.create(code, digest)\n        return (\n          CID.createV1(this.code, multihash)\n        )\n      }\n      case 1: {\n        return this as CID<Data, Format, Alg, 1>\n      }\n      default: {\n        throw Error(\n          `Can not convert CID version ${this.version} to version 1. This is a bug please report`\n        )\n      }\n    }\n  }\n\n  equals (other: unknown): other is CID<Data, Format, Alg, Version> {\n    return CID.equals(this, other)\n  }\n\n  static equals <Data, Format extends number, Alg extends number, Version extends API.Version>(self: API.Link<Data, Format, Alg, Version>, other: unknown): other is CID {\n    const unknown = other as { code?: unknown, version?: unknown, multihash?: unknown }\n    return (\n      unknown != null &&\n      self.code === unknown.code &&\n      self.version === unknown.version &&\n      Digest.equals(self.multihash, unknown.multihash)\n    )\n  }\n\n  toString (base?: API.MultibaseEncoder<string>): string {\n    return format(this, base)\n  }\n\n  toJSON (): API.LinkJSON<this> {\n    return { '/': format(this) }\n  }\n\n  link (): this {\n    return this\n  }\n\n  readonly [Symbol.toStringTag] = 'CID';\n\n  // Legacy\n\n  [Symbol.for('nodejs.util.inspect.custom')] (): string {\n    return `CID(${this.toString()})`\n  }\n\n  /**\n   * Takes any input `value` and returns a `CID` instance if it was\n   * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n   * it will return value back. If `value` is not instance of this CID\n   * class, but is compatible CID it will return new instance of this\n   * `CID` class. Otherwise returns null.\n   *\n   * This allows two different incompatible versions of CID library to\n   * co-exist and interop as long as binary interface is compatible.\n   */\n  static asCID <Data, Format extends number, Alg extends number, Version extends API.Version, U>(input: API.Link<Data, Format, Alg, Version> | U): CID<Data, Format, Alg, Version> | null {\n    if (input == null) {\n      return null\n    }\n\n    const value = input as any\n    if (value instanceof CID) {\n      // If value is instance of CID then we're all set.\n      return value\n    } else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n      // If value isn't instance of this CID class but `this.asCID === this` or\n      // `value['/'] === value.bytes` is true it is CID instance coming from a\n      // different implementation (diff version or duplicate). In that case we\n      // rebase it to this `CID` implementation so caller is guaranteed to get\n      // instance with expected API.\n      const { version, code, multihash, bytes } = value\n      return new CID(\n        version,\n        code,\n        multihash as API.MultihashDigest<Alg>,\n        bytes ?? encodeCID(version, code, multihash.bytes)\n      )\n    } else if (value[cidSymbol] === true) {\n      // If value is a CID from older implementation that used to be tagged via\n      // symbol we still rebase it to the this `CID` implementation by\n      // delegating that to a constructor.\n      const { version, multihash, code } = value\n      const digest = Digest.decode(multihash) as API.MultihashDigest<Alg>\n      return CID.create(version, code, digest)\n    } else {\n      // Otherwise value is not a CID (or an incompatible version of it) in\n      // which case we return `null`.\n      return null\n    }\n  }\n\n  /**\n   * @param version - Version of the CID\n   * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n   * @param digest - (Multi)hash of the of the content.\n   */\n  static create <Data, Format extends number, Alg extends number, Version extends API.Version>(version: Version, code: Format, digest: API.MultihashDigest<Alg>): CID<Data, Format, Alg, Version> {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported')\n    }\n\n    if (!(digest.bytes instanceof Uint8Array)) {\n      throw new Error('Invalid digest')\n    }\n\n    switch (version) {\n      case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(\n            `Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`\n          )\n        } else {\n          return new CID(version, code, digest, digest.bytes)\n        }\n      }\n      case 1: {\n        const bytes = encodeCID(version, code, digest.bytes)\n        return new CID(version, code, digest, bytes)\n      }\n      default: {\n        throw new Error('Invalid version')\n      }\n    }\n  }\n\n  /**\n   * Simplified version of `create` for CIDv0.\n   */\n  static createV0 <T = unknown>(digest: API.MultihashDigest<typeof SHA_256_CODE>): CID<T, typeof DAG_PB_CODE, typeof SHA_256_CODE, 0> {\n    return CID.create(0, DAG_PB_CODE, digest)\n  }\n\n  /**\n   * Simplified version of `create` for CIDv1.\n   *\n   * @param code - Content encoding format code.\n   * @param digest - Multihash of the content.\n   */\n  static createV1 <Data, Code extends number, Alg extends number>(code: Code, digest: API.MultihashDigest<Alg>): CID<Data, Code, Alg, 1> {\n    return CID.create(1, code, digest)\n  }\n\n  /**\n   * Decoded a CID from its binary representation. The byte array must contain\n   * only the CID with no additional bytes.\n   *\n   * An error will be thrown if the bytes provided do not contain a valid\n   * binary representation of a CID.\n   */\n  static decode <Data, Code extends number, Alg extends number, Version extends API.Version>(bytes: API.ByteView<API.Link<Data, Code, Alg, Version>>): CID<Data, Code, Alg, Version> {\n    const [cid, remainder] = CID.decodeFirst(bytes)\n    if (remainder.length !== 0) {\n      throw new Error('Incorrect length')\n    }\n    return cid\n  }\n\n  /**\n   * Decoded a CID from its binary representation at the beginning of a byte\n   * array.\n   *\n   * Returns an array with the first element containing the CID and the second\n   * element containing the remainder of the original byte array. The remainder\n   * will be a zero-length byte array if the provided bytes only contained a\n   * binary CID representation.\n   */\n  static decodeFirst <T, C extends number, A extends number, V extends API.Version>(bytes: API.ByteView<API.Link<T, C, A, V>>): [CID<T, C, A, V>, Uint8Array] {\n    const specs = CID.inspectBytes(bytes)\n    const prefixSize = specs.size - specs.multihashSize\n    const multihashBytes = coerce(\n      bytes.subarray(prefixSize, prefixSize + specs.multihashSize)\n    )\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length')\n    }\n    const digestBytes = multihashBytes.subarray(\n      specs.multihashSize - specs.digestSize\n    )\n    const digest = new Digest.Digest(\n      specs.multihashCode,\n      specs.digestSize,\n      digestBytes,\n      multihashBytes\n    )\n    const cid =\n      specs.version === 0\n        ? CID.createV0(digest as API.MultihashDigest<API.SHA_256>)\n        : CID.createV1(specs.codec, digest)\n    return [cid as CID<T, C, A, V>, bytes.subarray(specs.size)]\n  }\n\n  /**\n   * Inspect the initial bytes of a CID to determine its properties.\n   *\n   * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n   * bytes but for larger multicodec code values and larger multihash digest\n   * lengths these varints can be quite large. It is recommended that at least\n   * 10 bytes be made available in the `initialBytes` argument for a complete\n   * inspection.\n   */\n  static inspectBytes <T, C extends number, A extends number, V extends API.Version>(initialBytes: API.ByteView<API.Link<T, C, A, V>>): { version: V, codec: C, multihashCode: A, digestSize: number, multihashSize: number, size: number } {\n    let offset = 0\n    const next = (): number => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset))\n      offset += length\n      return i\n    }\n\n    let version = next() as V\n    let codec = DAG_PB_CODE as C\n    if (version as number === 18) {\n      // CIDv0\n      version = 0 as V\n      offset = 0\n    } else {\n      codec = next() as C\n    }\n\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${version}`)\n    }\n\n    const prefixSize = offset\n    const multihashCode = next() as A // multihash code\n    const digestSize = next() // multihash length\n    const size = offset + digestSize\n    const multihashSize = size - prefixSize\n\n    return { version, codec, multihashCode, digestSize, multihashSize, size }\n  }\n\n  /**\n   * Takes cid in a string representation and creates an instance. If `base`\n   * decoder is not provided will use a default from the configuration. It will\n   * throw an error if encoding of the CID is not compatible with supplied (or\n   * a default decoder).\n   */\n  static parse <Prefix extends string, Data, Code extends number, Alg extends number, Version extends API.Version>(source: API.ToString<API.Link<Data, Code, Alg, Version>, Prefix>, base?: API.MultibaseDecoder<Prefix>): CID<Data, Code, Alg, Version> {\n    const [prefix, bytes] = parseCIDtoBytes(source, base)\n\n    const cid = CID.decode(bytes)\n\n    if (cid.version === 0 && source[0] !== 'Q') {\n      throw Error('Version 0 CID string must not include multibase prefix')\n    }\n\n    // Cache string representation to avoid computing it on `this.toString()`\n    baseCache(cid).set(prefix, source)\n\n    return cid\n  }\n}\n\nfunction parseCIDtoBytes <Prefix extends string, Data, Code extends number, Alg extends number, Version extends API.Version> (source: API.ToString<API.Link<Data, Code, Alg, Version>, Prefix>, base?: API.MultibaseDecoder<Prefix>): [Prefix, API.ByteView<API.Link<Data, Code, Alg, Version>>] {\n  switch (source[0]) {\n    // CIDv0 is parsed differently\n    case 'Q': {\n      const decoder = base ?? base58btc\n      return [\n        base58btc.prefix as Prefix,\n        decoder.decode(`${base58btc.prefix}${source}`)\n      ]\n    }\n    case base58btc.prefix: {\n      const decoder = base ?? base58btc\n      return [base58btc.prefix as Prefix, decoder.decode(source)]\n    }\n    case base32.prefix: {\n      const decoder = base ?? base32\n      return [base32.prefix as Prefix, decoder.decode(source)]\n    }\n    default: {\n      if (base == null) {\n        throw Error(\n          'To parse non base32 or base58btc encoded CID multibase decoder must be provided'\n        )\n      }\n      return [source[0] as Prefix, base.decode(source)]\n    }\n  }\n}\n\nfunction toStringV0 (bytes: Uint8Array, cache: Map<string, string>, base: API.MultibaseEncoder<'z'>): string {\n  const { prefix } = base\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${base.name} encoding`)\n  }\n\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nfunction toStringV1 <Prefix extends string> (bytes: Uint8Array, cache: Map<string, string>, base: API.MultibaseEncoder<Prefix>): string {\n  const { prefix } = base\n  const cid = cache.get(prefix)\n  if (cid == null) {\n    const cid = base.encode(bytes)\n    cache.set(prefix, cid)\n    return cid\n  } else {\n    return cid\n  }\n}\n\nconst DAG_PB_CODE = 0x70\nconst SHA_256_CODE = 0x12\n\nfunction encodeCID (version: API.Version, code: number, multihash: Uint8Array): Uint8Array {\n  const codeOffset = varint.encodingLength(version)\n  const hashOffset = codeOffset + varint.encodingLength(code)\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength)\n  varint.encodeTo(version, bytes, 0)\n  varint.encodeTo(code, bytes, codeOffset)\n  bytes.set(multihash, hashOffset)\n  return bytes\n}\n\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID')\n", "// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nexport function is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n", "class Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\nexport { Type, Token }\n", "// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nexport const useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nexport function asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nexport const toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nexport const fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nexport const fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nexport const slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nexport const concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nexport const alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nexport const toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nexport const fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nexport function compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nexport function decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n", "/**\n * Bl is a list of byte chunks, similar to https://github.com/rvagg/bl but for\n * writing rather than reading.\n * A Bl object accepts set() operations for individual bytes and copyTo() for\n * inserting byte arrays. These write operations don't automatically increment\n * the internal cursor so its \"length\" won't be changed. Instead, increment()\n * must be called to extend its length to cover the inserted data.\n * The toBytes() call will convert all internal memory to a single Uint8Array of\n * the correct length, truncating any data that is stored but hasn't been\n * included by an increment().\n * get() can retrieve a single byte.\n * All operations (except toBytes()) take an \"offset\" argument that will perform\n * the write at the offset _from the current cursor_. For most operations this\n * will be `0` to write at the current cursor position but it can be ahead of\n * the current cursor. Negative offsets probably work but are untested.\n */\n\n// TODO: ipjs doesn't support this, only for test files: https://github.com/mikeal/ipjs/blob/master/src/package/testFile.js#L39\nimport { alloc, concat, slice } from './byte-utils.js'\n\n// the ts-ignores in this file are almost all for the `Uint8Array|number[]` duality that exists\n// for perf reasons. Consider better approaches to this or removing it entirely, it is quite\n// risky because of some assumptions about small chunks === number[] and everything else === Uint8Array.\n\nconst defaultChunkSize = 256\n\nexport class Bl {\n  /**\n   * @param {number} [chunkSize]\n   */\n  constructor (chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize\n    /** @type {number} */\n    this.cursor = 0\n    /** @type {number} */\n    this.maxCursor = -1\n    /** @type {(Uint8Array|number[])[]} */\n    this.chunks = []\n    // keep the first chunk around if we can to save allocations for future encodes\n    /** @type {Uint8Array|number[]|null} */\n    this._initReuseChunk = null\n  }\n\n  reset () {\n    this.cursor = 0\n    this.maxCursor = -1\n    if (this.chunks.length) {\n      this.chunks = []\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk)\n      this.maxCursor = this._initReuseChunk.length - 1\n    }\n  }\n\n  /**\n   * @param {Uint8Array|number[]} bytes\n   */\n  push (bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1]\n    const newMax = this.cursor + bytes.length\n    if (newMax <= this.maxCursor + 1) {\n      // we have at least one chunk and we can fit these bytes into that chunk\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n      // @ts-ignore\n      topChunk.set(bytes, chunkPos)\n    } else {\n      // can't fit it in\n      if (topChunk) {\n        // trip the last chunk to `cursor` if we need to\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1\n        if (chunkPos < topChunk.length) {\n          // @ts-ignore\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos)\n          this.maxCursor = this.cursor - 1\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        // make a new chunk and copy the new one into it\n        topChunk = alloc(this.chunkSize)\n        this.chunks.push(topChunk)\n        this.maxCursor += topChunk.length\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk\n        }\n        // @ts-ignore\n        topChunk.set(bytes, 0)\n      } else {\n        // push the new bytes in as its own chunk\n        this.chunks.push(bytes)\n        this.maxCursor += bytes.length\n      }\n    }\n    this.cursor += bytes.length\n  }\n\n  /**\n   * @param {boolean} [reset]\n   * @returns {Uint8Array}\n   */\n  toBytes (reset = false) {\n    let byts\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0]\n      if (reset && this.cursor > chunk.length / 2) {\n        /* c8 ignore next 2 */\n        // @ts-ignore\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor)\n        this._initReuseChunk = null\n        this.chunks = []\n      } else {\n        // @ts-ignore\n        byts = slice(chunk, 0, this.cursor)\n      }\n    } else {\n      // @ts-ignore\n      byts = concat(this.chunks, this.cursor)\n    }\n    if (reset) {\n      this.reset()\n    }\n    return byts\n  }\n}\n", "const decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n}\n", "/* globals BigInt */\n\nimport { Token, Type } from './token.js'\nimport { decodeErrPrefix, assertEnoughData } from './common.js'\n\nexport const uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint8 (data, offset, options) {\n  assertEnoughData(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint16 (data, offset, options) {\n  assertEnoughData(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint32 (data, offset, options) {\n  assertEnoughData(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nexport function readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  assertEnoughData(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint8 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint16 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint32 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint64 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nexport function encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n", "/* eslint-env es2020 */\n\nimport { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint8 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint16 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint32 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint64 (data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n", "import { Token, Type } from './token.js'\nimport { assertEnoughData, decodeErrPrefix } from './common.js'\nimport * as uint from './0uint.js'\nimport { compare, fromString, slice } from './byte-utils.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length)\n  const buf = slice(data, pos + prefix, pos + prefix + length)\n  return new Token(Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nexport function compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2)\n}\n", "import { Token, Type } from './token.js'\nimport { assertEnoughData, decodeErrPrefix } from './common.js'\nimport * as uint from './0uint.js'\nimport { encodeBytes } from './2bytes.js'\nimport { toString, slice } from './byte-utils.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  assertEnoughData(data, pos, totLength)\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nexport const encodeString = encodeBytes\n", "import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeArray (buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n", "import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeMap (buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n", "import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeTagCompact (_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag8 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag16 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag32 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag64 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeTag (buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n", "// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\nimport { Token, Type } from './token.js'\nimport { decodeErrPrefix } from './common.js'\nimport { encodeUint } from './0uint.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1)\n  }\n  return new Token(Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new Token(Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new Token(Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nexport function encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n", "import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport * as negint from './1negint.js'\nimport * as bytes from './2bytes.js'\nimport * as string from './3string.js'\nimport * as array from './4array.js'\nimport * as map from './5map.js'\nimport * as tag from './6tag.js'\nimport * as float from './7float.js'\nimport { decodeErrPrefix } from './common.js'\nimport { fromArray } from './byte-utils.js'\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nexport const jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = uint.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = uint.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = uint.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = uint.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = negint.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = negint.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = negint.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = negint.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = bytes.decodeBytesCompact\n}\njump[0x58] = bytes.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = bytes.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = bytes.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = bytes.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = string.decodeStringCompact\n}\njump[0x78] = string.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = string.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = string.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = string.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = array.decodeArrayCompact\n}\njump[0x98] = array.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = array.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = array.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = array.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = array.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = map.decodeMapCompact\n}\njump[0xb8] = map.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = map.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = map.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = map.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = map.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = tag.decodeTagCompact\n}\njump[0xd8] = tag.decodeTag8\njump[0xd9] = tag.decodeTag16\njump[0xda] = tag.decodeTag32\njump[0xdb] = tag.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = float.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = float.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = float.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = float.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = float.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nexport const quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new Token(Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new Token(Type.string, '', 1)\n// empty list\nquick[0x80] = new Token(Type.array, 0, 1)\n// empty map\nquick[0xa0] = new Token(Type.map, 0, 1)\n// false\nquick[0xf4] = new Token(Type.false, false, 1)\n// true\nquick[0xf5] = new Token(Type.true, true, 1)\n// null\nquick[0xf6] = new Token(Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nexport function quickEncodeToken (token) {\n  switch (token.type) {\n    case Type.false:\n      return fromArray([0xf4])\n    case Type.true:\n      return fromArray([0xf5])\n    case Type.null:\n      return fromArray([0xf6])\n    case Type.bytes:\n      if (!token.value.length) {\n        return fromArray([0x40])\n      }\n      return\n    case Type.string:\n      if (token.value === '') {\n        return fromArray([0x60])\n      }\n      return\n    case Type.array:\n      if (token.value === 0) {\n        return fromArray([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case Type.map:\n      if (token.value === 0) {\n        return fromArray([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case Type.uint:\n      if (token.value < 24) {\n        return fromArray([Number(token.value)])\n      }\n      return\n    case Type.negint:\n      if (token.value >= -24) {\n        return fromArray([31 - Number(token.value)])\n      }\n  }\n}\n", "import { is } from './is.js'\nimport { Token, Type } from './token.js'\nimport { Bl } from './bl.js'\nimport { encodeErrPrefix } from './common.js'\nimport { quickEncodeToken } from './jump.js'\nimport { asU8A } from './byte-utils.js'\n\nimport { encodeUint } from './0uint.js'\nimport { encodeNegint } from './1negint.js'\nimport { encodeBytes } from './2bytes.js'\nimport { encodeString } from './3string.js'\nimport { encodeArray } from './4array.js'\nimport { encodeMap } from './5map.js'\nimport { encodeTag } from './6tag.js'\nimport { encodeFloat } from './7float.js'\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nexport function makeCborEncoders () {\n  const encoders = []\n  encoders[Type.uint.major] = encodeUint\n  encoders[Type.negint.major] = encodeNegint\n  encoders[Type.bytes.major] = encodeBytes\n  encoders[Type.string.major] = encodeString\n  encoders[Type.array.major] = encodeArray\n  encoders[Type.map.major] = encodeMap\n  encoders[Type.tag.major] = encodeTag\n  encoders[Type.float.major] = encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj)\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj)\n    } else {\n      return new Token(Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj)\n    } else {\n      return new Token(Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new Token(Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new Token(Type.array, obj.length), entries, new Token(Type.break)]\n    }\n    return [new Token(Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new Token(Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new Token(Type.map, length), entries, new Token(Type.break)]\n    }\n    return [new Token(Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = is(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return asU8A(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\nexport { objectToTokens, encode, encodeCustom, Ref }\n", "import { decodeErrPrefix } from './common.js'\nimport { Type } from './token.js'\nimport { jump, quick } from './jump.js'\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = quick[byt]\n    if (token === undefined) {\n      const decoder = jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\nexport { Tokeniser, tokensToObject, decode, decodeFirst }\n", "import * as cborg from 'cborg'\nimport { CID } from 'multiformats/cid'\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nexport function toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst _encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\nexport const encodeOptions = {\n  ..._encodeOptions,\n  typeEncoders: {\n    ..._encodeOptions.typeEncoders\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst _decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n_decodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nexport const decodeOptions = {\n  ..._decodeOptions,\n  tags: _decodeOptions.tags.slice()\n}\n\nexport const name = 'dag-cbor'\nexport const code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => cborg.encode(node, _encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => cborg.decode(toByteView(data), _decodeOptions)\n", "import varint from 'varint'\n\nexport const CIDV0_BYTES = {\n  SHA2_256: 0x12,\n  LENGTH: 0x20,\n  DAG_PB: 0x70\n}\n\nexport const V2_HEADER_LENGTH = /* characteristics */ 16 /* v1 offset */ + 8 /* v1 size */ + 8 /* index offset */ + 8\n\n/**\n * Decodes varint and seeks the buffer\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @param {import('./coding').Seekable} seeker\n * @returns {number}\n */\nexport function decodeVarint (bytes, seeker) {\n  if (!bytes.length) {\n    throw new Error('Unexpected end of data')\n  }\n  const i = varint.decode(bytes)\n  seeker.seek(/** @type {number} */(varint.decode.bytes))\n  return i\n}\n\n/**\n * Decode v2 header\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.exactly(V2_HEADER_LENGTH, true) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @returns {import('./coding').CarV2FixedHeader}\n */\nexport function decodeV2Header (bytes) {\n  const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  let offset = 0\n  const header = {\n    version: 2,\n    /** @type {[bigint, bigint]} */\n    characteristics: [\n      dv.getBigUint64(offset, true),\n      dv.getBigUint64(offset += 8, true)\n    ],\n    dataOffset: Number(dv.getBigUint64(offset += 8, true)),\n    dataSize: Number(dv.getBigUint64(offset += 8, true)),\n    indexOffset: Number(dv.getBigUint64(offset += 8, true))\n  }\n  return header\n}\n\n/**\n * Checks the length of the multihash to be read afterwards\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n */\nexport function getMultihashLength (bytes) {\n  // | code | length | .... |\n  // where both code and length are varints, so we have to decode\n  // them first before we can know total length\n\n  varint.decode(bytes) // code\n  const codeLength = /** @type {number} */(varint.decode.bytes)\n  const length = varint.decode(bytes.subarray(varint.decode.bytes))\n  const lengthLength = /** @type {number} */(varint.decode.bytes)\n  const mhLength = codeLength + lengthLength + length\n\n  return mhLength\n}\n", "/** Auto-generated with @ipld/schema@v4.2.0 at Thu Sep 14 2023 from IPLD Schema:\n *\n * # CarV1HeaderOrV2Pragma is a more relaxed form, and can parse {version:x} where\n * # roots are optional. This is typically useful for the {verison:2} CARv2\n * # pragma.\n *\n * type CarV1HeaderOrV2Pragma struct {\n * \troots optional [&Any]\n * \t# roots is _not_ optional for CarV1 but we defer that check within code to\n * \t# gracefully handle the V2 case where it's just {version:X}\n * \tversion Int\n * }\n *\n * # CarV1Header is the strict form of the header, and requires roots to be\n * # present. This is compatible with the CARv1 specification.\n *\n * # type CarV1Header struct {\n * # \troots [&Any]\n * # \tversion Int\n * # }\n *\n */\n\nconst Kinds = {\n  Null: /** @returns {undefined|null} */ (/** @type {any} */ obj) => obj === null ? obj : undefined,\n  Int: /** @returns {undefined|number} */ (/** @type {any} */ obj) => Number.isInteger(obj) ? obj : undefined,\n  Float: /** @returns {undefined|number} */ (/** @type {any} */ obj) => typeof obj === 'number' && Number.isFinite(obj) ? obj : undefined,\n  String: /** @returns {undefined|string} */ (/** @type {any} */ obj) => typeof obj === 'string' ? obj : undefined,\n  Bool: /** @returns {undefined|boolean} */ (/** @type {any} */ obj) => typeof obj === 'boolean' ? obj : undefined,\n  Bytes: /** @returns {undefined|Uint8Array} */ (/** @type {any} */ obj) => obj instanceof Uint8Array ? obj : undefined,\n  Link: /** @returns {undefined|object} */ (/** @type {any} */ obj) => obj !== null && typeof obj === 'object' && obj.asCID === obj ? obj : undefined,\n  List: /** @returns {undefined|Array<any>} */ (/** @type {any} */ obj) => Array.isArray(obj) ? obj : undefined,\n  Map: /** @returns {undefined|object} */ (/** @type {any} */ obj) => obj !== null && typeof obj === 'object' && obj.asCID !== obj && !Array.isArray(obj) && !(obj instanceof Uint8Array) ? obj : undefined\n}\n/** @type {{ [k in string]: (obj:any)=>undefined|any}} */\nconst Types = {\n  'CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarV1HeaderOrV2Pragma > roots (anon)': /** @returns {undefined|any} */ (/** @type {any} */ obj) => {\n    if (Kinds.List(obj) === undefined) {\n      return undefined\n    }\n    for (let i = 0; i < obj.length; i++) {\n      let v = obj[i]\n      v = Types['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n      if (v === undefined) {\n        return undefined\n      }\n      if (v !== obj[i]) {\n        const ret = obj.slice(0, i)\n        for (let j = i; j < obj.length; j++) {\n          let v = obj[j]\n          v = Types['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n          if (v === undefined) {\n            return undefined\n          }\n          ret.push(v)\n        }\n        return ret\n      }\n    }\n    return obj\n  },\n  Int: Kinds.Int,\n  CarV1HeaderOrV2Pragma: /** @returns {undefined|any} */ (/** @type {any} */ obj) => {\n    if (Kinds.Map(obj) === undefined) {\n      return undefined\n    }\n    const entries = Object.entries(obj)\n    /** @type {{[k in string]: any}} */\n    let ret = obj\n    let requiredCount = 1\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i]\n      switch (key) {\n        case 'roots':\n          {\n            const v = Types['CarV1HeaderOrV2Pragma > roots (anon)'](obj[key])\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.roots = v\n            }\n          }\n          break\n        case 'version':\n          {\n            requiredCount--\n            const v = Types.Int(obj[key])\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.version = v\n            }\n          }\n          break\n        default:\n          return undefined\n      }\n    }\n\n    if (requiredCount > 0) {\n      return undefined\n    }\n    return ret\n  }\n}\n/** @type {{ [k in string]: (obj:any)=>undefined|any}} */\nconst Reprs = {\n  'CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarV1HeaderOrV2Pragma > roots (anon)': /** @returns {undefined|any} */ (/** @type {any} */ obj) => {\n    if (Kinds.List(obj) === undefined) {\n      return undefined\n    }\n    for (let i = 0; i < obj.length; i++) {\n      let v = obj[i]\n      v = Reprs['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n      if (v === undefined) {\n        return undefined\n      }\n      if (v !== obj[i]) {\n        const ret = obj.slice(0, i)\n        for (let j = i; j < obj.length; j++) {\n          let v = obj[j]\n          v = Reprs['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n          if (v === undefined) {\n            return undefined\n          }\n          ret.push(v)\n        }\n        return ret\n      }\n    }\n    return obj\n  },\n  Int: Kinds.Int,\n  CarV1HeaderOrV2Pragma: /** @returns {undefined|any} */ (/** @type {any} */ obj) => {\n    if (Kinds.Map(obj) === undefined) {\n      return undefined\n    }\n    const entries = Object.entries(obj)\n    /** @type {{[k in string]: any}} */\n    let ret = obj\n    let requiredCount = 1\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i]\n      switch (key) {\n        case 'roots':\n          {\n            const v = Reprs['CarV1HeaderOrV2Pragma > roots (anon)'](value)\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.roots = v\n            }\n          }\n          break\n        case 'version':\n          {\n            requiredCount--\n            const v = Reprs.Int(value)\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.version = v\n            }\n          }\n          break\n        default:\n          return undefined\n      }\n    }\n    if (requiredCount > 0) {\n      return undefined\n    }\n    return ret\n  }\n}\n\nexport const CarV1HeaderOrV2Pragma = {\n  toTyped: Types.CarV1HeaderOrV2Pragma,\n  toRepresentation: Reprs.CarV1HeaderOrV2Pragma\n}\n", "import { decode as decodeDagCbor } from '@ipld/dag-cbor'\nimport { CID } from 'multiformats/cid'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { CIDV0_BYTES, decodeV2Header, decodeVarint, getMultihashLength, V2_HEADER_LENGTH } from './decoder-common.js'\nimport { CarV1HeaderOrV2Pragma } from './header-validator.js'\n\n/**\n * @typedef {import('./api').Block} Block\n * @typedef {import('./api').BlockHeader} BlockHeader\n * @typedef {import('./api').BlockIndex} BlockIndex\n * @typedef {import('./coding').BytesReader} BytesReader\n * @typedef {import('./coding').CarHeader} CarHeader\n * @typedef {import('./coding').CarV2Header} CarV2Header\n * @typedef {import('./coding').CarV2FixedHeader} CarV2FixedHeader\n * @typedef {import('./coding').CarDecoder} CarDecoder\n */\n\n/**\n * Reads header data from a `BytesReader`. The header may either be in the form\n * of a `CarHeader` or `CarV2Header` depending on the CAR being read.\n *\n * @name async decoder.readHeader(reader)\n * @param {BytesReader} reader\n * @param {number} [strictVersion]\n * @returns {Promise<CarHeader|CarV2Header>}\n */\nexport async function readHeader (reader, strictVersion) {\n  const length = decodeVarint(await reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)')\n  }\n  const header = await reader.exactly(length, true)\n  const block = decodeDagCbor(header)\n  if (CarV1HeaderOrV2Pragma.toTyped(block) === undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  if ((block.version !== 1 && block.version !== 2) || (strictVersion !== undefined && block.version !== strictVersion)) {\n    throw new Error(`Invalid CAR version: ${block.version}${strictVersion !== undefined ? ` (expected ${strictVersion})` : ''}`)\n  }\n  if (block.version === 1) {\n    // CarV1HeaderOrV2Pragma makes roots optional, let's make it mandatory\n    if (!Array.isArray(block.roots)) {\n      throw new Error('Invalid CAR header format')\n    }\n    return block\n  }\n  // version 2\n  if (block.roots !== undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  const v2Header = decodeV2Header(await reader.exactly(V2_HEADER_LENGTH, true))\n  reader.seek(v2Header.dataOffset - reader.pos)\n  const v1Header = await readHeader(reader, 1)\n  return Object.assign(v1Header, v2Header)\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<CID>}\n */\nasync function readCid (reader) {\n  const first = await reader.exactly(2, false)\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    // cidv0 32-byte sha2-256\n    const bytes = await reader.exactly(34, true)\n    const multihash = Digest.decode(bytes)\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash)\n  }\n\n  const version = decodeVarint(await reader.upTo(8), reader)\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${version})`)\n  }\n  const codec = decodeVarint(await reader.upTo(8), reader)\n  const bytes = await reader.exactly(getMultihashLength(await reader.upTo(8)), true)\n  const multihash = Digest.decode(bytes)\n  return CID.create(version, codec, multihash)\n}\n\n/**\n * Reads the leading data of an individual block from CAR data from a\n * `BytesReader`. Returns a `BlockHeader` object which contains\n * `{ cid, length, blockLength }` which can be used to either index the block\n * or read the block binary data.\n *\n * @name async decoder.readBlockHead(reader)\n * @param {BytesReader} reader\n * @returns {Promise<BlockHeader>}\n */\nexport async function readBlockHead (reader) {\n  // length includes a CID + Binary, where CID has a variable length\n  // we have to deal with\n  const start = reader.pos\n  let length = decodeVarint(await reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)')\n  }\n  length += (reader.pos - start)\n  const cid = await readCid(reader)\n  const blockLength = length - Number(reader.pos - start) // subtract CID length\n\n  return { cid, length, blockLength }\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<Block>}\n */\nasync function readBlock (reader) {\n  const { cid, blockLength } = await readBlockHead(reader)\n  const bytes = await reader.exactly(blockLength, true)\n  return { bytes, cid }\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<BlockIndex>}\n */\nasync function readBlockIndex (reader) {\n  const offset = reader.pos\n  const { cid, length, blockLength } = await readBlockHead(reader)\n  const index = { cid, length, blockLength, offset, blockOffset: reader.pos }\n  reader.seek(index.blockLength)\n  return index\n}\n\n/**\n * Creates a `CarDecoder` from a `BytesReader`. The `CarDecoder` is as async\n * interface that will consume the bytes from the `BytesReader` to yield a\n * `header()` and either `blocks()` or `blocksIndex()` data.\n *\n * @name decoder.createDecoder(reader)\n * @param {BytesReader} reader\n * @returns {CarDecoder}\n */\nexport function createDecoder (reader) {\n  const headerPromise = (async () => {\n    const header = await readHeader(reader)\n    if (header.version === 2) {\n      const v1length = reader.pos - header.dataOffset\n      reader = limitReader(reader, header.dataSize - v1length)\n    }\n    return header\n  })()\n\n  return {\n    header: () => headerPromise,\n\n    async * blocks () {\n      await headerPromise\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader)\n      }\n    },\n\n    async * blocksIndex () {\n      await headerPromise\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader)\n      }\n    }\n  }\n}\n\n/**\n * Creates a `BytesReader` from a `Uint8Array`.\n *\n * @name decoder.bytesReader(bytes)\n * @param {Uint8Array} bytes\n * @returns {BytesReader}\n */\nexport function bytesReader (bytes) {\n  let pos = 0\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      const out = bytes.subarray(pos, pos + Math.min(length, bytes.length - pos))\n      return out\n    },\n\n    async exactly (length, seek = false) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data')\n      }\n      const out = bytes.subarray(pos, pos + length)\n      if (seek) {\n        pos += length\n      }\n      return out\n    },\n\n    seek (length) {\n      pos += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * @ignore\n * reusable reader for streams and files, we just need a way to read an\n * additional chunk (of some undetermined size) and a way to close the\n * reader when finished\n * @param {() => Promise<Uint8Array|null>} readChunk\n * @returns {BytesReader}\n */\nexport function chunkReader (readChunk /*, closer */) {\n  let pos = 0\n  let have = 0\n  let offset = 0\n  let currentChunk = new Uint8Array(0)\n\n  const read = async (/** @type {number} */ length) => {\n    have = currentChunk.length - offset\n    const bufa = [currentChunk.subarray(offset)]\n    while (have < length) {\n      const chunk = await readChunk()\n      if (chunk == null) {\n        break\n      }\n      /* c8 ignore next 8 */\n      // undo this ignore ^ when we have a fd implementation that can seek()\n      if (have < 0) { // because of a seek()\n        /* c8 ignore next 4 */\n        // toohard to test the else\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have))\n        } // else discard\n      } else {\n        bufa.push(chunk)\n      }\n      have += chunk.length\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0))\n    let off = 0\n    for (const b of bufa) {\n      currentChunk.set(b, off)\n      off += b.length\n    }\n    offset = 0\n  }\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      if (currentChunk.length - offset < length) {\n        await read(length)\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length))\n    },\n\n    async exactly (length, seek = false) {\n      if (currentChunk.length - offset < length) {\n        await read(length)\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data')\n      }\n      const out = currentChunk.subarray(offset, offset + length)\n      if (seek) {\n        pos += length\n        offset += length\n      }\n      return out\n    },\n\n    seek (length) {\n      pos += length\n      offset += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * Creates a `BytesReader` from an `AsyncIterable<Uint8Array>`, which allows for\n * consumption of CAR data from a streaming source.\n *\n * @name decoder.asyncIterableReader(asyncIterable)\n * @param {AsyncIterable<Uint8Array>} asyncIterable\n * @returns {BytesReader}\n */\nexport function asyncIterableReader (asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]()\n\n  async function readChunk () {\n    const next = await iterator.next()\n    if (next.done) {\n      return null\n    }\n    return next.value\n  }\n\n  return chunkReader(readChunk)\n}\n\n/**\n * Wraps a `BytesReader` in a limiting `BytesReader` which limits maximum read\n * to `byteLimit` bytes. It _does not_ update `pos` of the original\n * `BytesReader`.\n *\n * @name decoder.limitReader(reader, byteLimit)\n * @param {BytesReader} reader\n * @param {number} byteLimit\n * @returns {BytesReader}\n */\nexport function limitReader (reader, byteLimit) {\n  let bytesRead = 0\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      let bytes = await reader.upTo(length)\n      if (bytes.length + bytesRead > byteLimit) {\n        bytes = bytes.subarray(0, byteLimit - bytesRead)\n      }\n      return bytes\n    },\n\n    async exactly (length, seek = false) {\n      const bytes = await reader.exactly(length, seek)\n      if (bytes.length + bytesRead > byteLimit) {\n        throw new Error('Unexpected end of data')\n      }\n      if (seek) {\n        bytesRead += length\n      }\n      return bytes\n    },\n\n    seek (length) {\n      bytesRead += length\n      reader.seek(length)\n    },\n\n    get pos () {\n      return reader.pos\n    }\n  }\n}\n", "import { asyncIterableReader, bytesReader, createDecoder } from './decoder.js'\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api').Block} Block\n * @typedef {import('./api').CarReader} CarReaderIface\n * @typedef {import('./coding').BytesReader} BytesReader\n * @typedef {import('./coding').CarHeader} CarHeader\n * @typedef {import('./coding').CarV2Header} CarV2Header\n */\n\n/**\n * Provides blockstore-like access to a CAR.\n *\n * Implements the `RootsReader` interface:\n * {@link CarReader.getRoots `getRoots()`}. And the `BlockReader` interface:\n * {@link CarReader.get `get()`}, {@link CarReader.has `has()`},\n * {@link CarReader.blocks `blocks()`} (defined as a `BlockIterator`) and\n * {@link CarReader.cids `cids()`} (defined as a `CIDIterator`).\n *\n * Load this class with either `import { CarReader } from '@ipld/car/reader'`\n * (`const { CarReader } = require('@ipld/car/reader')`). Or\n * `import { CarReader } from '@ipld/car'` (`const { CarReader } = require('@ipld/car')`).\n * The former will likely result in smaller bundle sizes where this is\n * important.\n *\n * @name CarReader\n * @class\n * @implements {CarReaderIface}\n * @property {number} version The version number of the CAR referenced by this\n * reader (should be `1` or `2`).\n */\nexport class CarReader {\n  /**\n   * @constructs CarReader\n   * @param {CarHeader|CarV2Header} header\n   * @param {Block[]} blocks\n   */\n  constructor (header, blocks) {\n    this._header = header\n    this._blocks = blocks\n    this._keys = blocks.map((b) => b.cid.toString())\n  }\n\n  /**\n   * @property\n   * @memberof CarReader\n   * @instance\n   */\n  get version () {\n    return this._header.version\n  }\n\n  /**\n   * Get the list of roots defined by the CAR referenced by this reader. May be\n   * zero or more `CID`s.\n   *\n   * @function\n   * @memberof CarReader\n   * @instance\n   * @async\n   * @returns {Promise<CID[]>}\n   */\n  async getRoots () {\n    return this._header.roots\n  }\n\n  /**\n   * Check whether a given `CID` exists within the CAR referenced by this\n   * reader.\n   *\n   * @function\n   * @memberof CarReader\n   * @instance\n   * @async\n   * @param {CID} key\n   * @returns {Promise<boolean>}\n   */\n  async has (key) {\n    return this._keys.indexOf(key.toString()) > -1\n  }\n\n  /**\n   * Fetch a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) from the CAR\n   * referenced by this reader matching the provided `CID`. In the case where\n   * the provided `CID` doesn't exist within the CAR, `undefined` will be\n   * returned.\n   *\n   * @function\n   * @memberof CarReader\n   * @instance\n   * @async\n   * @param {CID} key\n   * @returns {Promise<Block | undefined>}\n   */\n  async get (key) {\n    const index = this._keys.indexOf(key.toString())\n    return index > -1 ? this._blocks[index] : undefined\n  }\n\n  /**\n   * Returns a `BlockIterator` (`AsyncIterable<Block>`) that iterates over all\n   * of the `Block`s (`{ cid:CID, bytes:Uint8Array }` pairs) contained within\n   * the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarReader\n   * @instance\n   * @async\n   * @generator\n   * @returns {AsyncGenerator<Block>}\n   */\n  async * blocks () {\n    for (const block of this._blocks) {\n      yield block\n    }\n  }\n\n  /**\n   * Returns a `CIDIterator` (`AsyncIterable<CID>`) that iterates over all of\n   * the `CID`s contained within the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarReader\n   * @instance\n   * @async\n   * @generator\n   * @returns {AsyncGenerator<CID>}\n   */\n  async * cids () {\n    for (const block of this._blocks) {\n      yield block.cid\n    }\n  }\n\n  /**\n   * Instantiate a {@link CarReader} from a `Uint8Array` blob. This performs a\n   * decode fully in memory and maintains the decoded state in memory for full\n   * access to the data via the `CarReader` API.\n   *\n   * @async\n   * @static\n   * @memberof CarReader\n   * @param {Uint8Array} bytes\n   * @returns {Promise<CarReader>}\n   */\n  static async fromBytes (bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array')\n    }\n    return decodeReaderComplete(bytesReader(bytes))\n  }\n\n  /**\n   * Instantiate a {@link CarReader} from a `AsyncIterable<Uint8Array>`, such as\n   * a [modern Node.js stream](https://nodejs.org/api/stream.html#stream_streams_compatibility_with_async_generators_and_async_iterators).\n   * This performs a decode fully in memory and maintains the decoded state in\n   * memory for full access to the data via the `CarReader` API.\n   *\n   * Care should be taken for large archives; this API may not be appropriate\n   * where memory is a concern or the archive is potentially larger than the\n   * amount of memory that the runtime can handle.\n   *\n   * @async\n   * @static\n   * @memberof CarReader\n   * @param {AsyncIterable<Uint8Array>} asyncIterable\n   * @returns {Promise<CarReader>}\n   */\n  static async fromIterable (asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable')\n    }\n    return decodeReaderComplete(asyncIterableReader(asyncIterable))\n  }\n}\n\n/**\n * @private\n * @param {BytesReader} reader\n * @returns {Promise<CarReader>}\n */\nexport async function decodeReaderComplete (reader) {\n  const decoder = createDecoder(reader)\n  const header = await decoder.header()\n  const blocks = []\n  for await (const block of decoder.blocks()) {\n    blocks.push(block)\n  }\n\n  return new CarReader(header, blocks)\n}\n\nexport const __browser = true\n", "// @ts-check\n\nimport {\n  addExtension as cbor_x_addExtension,\n  decodeMultiple as cbor_x_decodeMultiple,\n  decode as cbor_x_decode\n} from 'cbor-x';\nimport { CID as multiformats_CID } from 'multiformats';\nimport { CarReader } from '../node_modules/@ipld/car/src/reader-browser.js';\n\n/**\n * @typedef {{\n *   receiveTimestamp: number,\n *   since: string,\n *   time: string,\n *   messages: FirehoseMessage[],\n *   deletes?: FirehoseMessage[],\n *   unexpected?: FirehoseMessage[]\n * }} FirehoseBlock\n */\n\n/**\n * @typedef {{ repo: string, cid: string, action: 'create' | 'delete' | 'update', path: string } & (\n *  { $type: 'app.bsky.feed.like' } & import('@atproto/api').AppBskyFeedLike.Record |\n *  { $type: 'app.bsky.feed.post' } & import('@atproto/api').AppBskyFeedPost.Record |\n *  { $type: 'app.bsky.feed.repost' } & import('@atproto/api').AppBskyFeedRepost.Record |\n *  { $type: 'app.bsky.feed.threadgate' } & import('@atproto/api').AppBskyFeedThreadgate.Record |\n *  { $type: 'app.bsky.graph.follow' } & import('@atproto/api').AppBskyGraphFollow.Record |\n *  { $type: 'app.bsky.graph.block' } & import('@atproto/api').AppBskyGraphBlock.Record |\n *  { $type: 'app.bsky.graph.list' } & import('@atproto/api').AppBskyGraphList.Record |\n *  { $type: 'app.bsky.graph.listitem' } & import('@atproto/api').AppBskyGraphListitem.Record |\n *  { $type: 'app.bsky.actor.profile' } & import('@atproto/api').AppBskyActorProfile.Record |\n *  { $type: string } & { [key: string]: any }\n * )} FirehoseMessage\n */\n\nconst knownTypes = [\n  'app.bsky.feed.like', 'app.bsky.feed.post', 'app.bsky.feed.repost', 'app.bsky.feed.threadgate',\n  'app.bsky.graph.follow', 'app.bsky.graph.block', 'app.bsky.graph.list', 'app.bsky.graph.listitem',\n  'app.bsky.actor.profile'\n];\n\nlet cbor_x_extended = false;\n\n/**\n * @returns {AsyncGenerator<FirehoseBlock[], void, void>}\n */\nexport async function* firehose() {\n  ensureCborXExtended();\n\n  /** @type {typeof WebSocket} */\n  const WebSocketImpl = typeof WebSocket === 'function' ? WebSocket :\n    /** @type {typeof WebSocket} */(require('ws'));\n\n  const wsAddress = 'wss://bsky.network/xrpc/com.atproto.sync.subscribeRepos';\n\n  const ws = new WebSocketImpl(wsAddress);\n  ws.addEventListener('message', handleMessage);\n  ws.addEventListener('error', handleError);\n  ws.addEventListener('close', handleClose)\n\n  let buf = createAwaitPromise();\n  let closed = false;\n\n  try {\n\n    while (true) {\n      await buf.promise;\n      const blocks = buf.blocks;\n      buf = createAwaitPromise();\n      if (closed) {\n        if (blocks.length) yield blocks;\n        break;\n      }\n      yield blocks;\n    }\n  } finally {\n    if (!closed) {\n      try { ws.close(); }\n      catch (error) { }\n    }\n  }\n\n  function handleClose() {\n    closed = true;\n    buf.resolve();\n  }\n\n  function handleMessage(event) {\n    const receiveTimestamp = Date.now();\n\n    if (typeof event.data?.arrayBuffer === 'function')\n      return event.data.arrayBuffer().then(arrayBuf => convertMessageBuf(receiveTimestamp, arrayBuf));\n    else if (typeof event.data?.byteLength === 'number')\n      return convertMessageBuf(receiveTimestamp, event.data);\n  }\n\n  /** @param {ArrayBuffer} messageBuf */\n  async function convertMessageBuf(receiveTimestamp, messageBuf) {\n    const entry = /** @type {any[]} */(cbor_x_decodeMultiple(new Uint8Array(messageBuf)));\n    if (!entry || entry[0]?.op !== 1) return;\n\n    const commit = entry[1];\n    if (!commit.blocks) return; // TODO: alert unusual commit\n\n    if (!commit.ops?.length) return; // TODO: alert unusual commit\n\n    const car = await CarReader.fromBytes(commit.blocks);\n\n    /** @type {FirehoseBlock} */\n    const blockEntry = {\n      receiveTimestamp,\n      since: commit.since,\n      time: commit.time,\n      messages: []\n    };\n\n    for (const op of commit.ops) {\n      const block = op.cid && await car.get(/** @type {*} */(op.cid));\n      if (!block) continue; // TODO: alert unusual op\n\n      const record = cbor_x_decode(block.bytes);\n      // record.repo = commit.repo;\n      // record.rev = /** @type {string} */(commit.rev);\n      // record.seq = commit.seq;\n      // record.since = /** @type {string} */(commit.since);\n      // record.action = op.action;\n      // record.cid = cid;\n      // record.path = op.path;\n      // record.timestamp = commit.time ? Date.parse(commit.time) : Date.now();\n\n      record.repo = commit.repo;\n      record.cid = op.cid && String(op.cid);\n      record.path = op.path;\n      record.action = op.action;\n\n      let unexpected =\n        (op.action !== 'create' && op.action !== 'update' && op.action !== 'delete') ||\n        knownTypes.indexOf(record.$type) < 0;\n\n      if (unexpected) {\n        if (!blockEntry.unexpected) blockEntry.unexpected = [];\n        blockEntry.unexpected.push(record);\n      } else if (op.action === 'delete') {\n        if (!blockEntry.deletes) blockEntry.deletes = [];\n        blockEntry.deletes.push(record);\n      } else {\n        blockEntry.messages.push(record);\n      }\n    }\n\n    buf.blocks.push(blockEntry);\n    buf.resolve();\n  }\n\n  function handleError(error) {\n    console.error(error);\n    const errorText =\n      error.message || 'WebSocket error ' + error;\n    buf.reject(new Error(errorText));\n  }\n\n}\n\n/** @returns {{\n *  blocks: FirehoseBlock[],\n *  resolve: () => void,\n *  reject: (reason?: any) => void,\n *  promise: Promise<void>\n * }} */\nfunction createAwaitPromise() {\n  const result = { blocks: [] };\n  result.promise = new Promise((resolve, reject) => {\n    result.resolve = resolve;\n    result.reject = reject;\n  });\n  return /** @type {*} */(result);\n}\n\nfunction ensureCborXExtended() {\n  if (cbor_x_extended) return;\n\n  cbor_x_addExtension({\n    Class: multiformats_CID,\n    tag: 42,\n    encode: () => {\n      throw new Error(\"cannot encode cids\");\n    },\n    decode: (bytes) => {\n      if (bytes[0] !== 0) throw new Error(\"invalid cid for cbor tag 42\");\n      return multiformats_CID.decode(bytes.subarray(1)); // ignore leading 0x00\n    },\n  });\n\n  cbor_x_extended = true;\n}\n", "{\n  \"name\": \"coldsky\",\n  \"version\": \"0.1.11\",\n  \"description\": \"Library for BlueSky\",\n  \"main\": \"libs.js\",\n  \"scripts\": {\n    \"build\": \"node build.js\",\n    \"watch\": \"node build.js --watch\",\n    \"start\": \"node build.js --serve\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"keywords\": [\n    \"bluesky\",\n    \"coldsky\",\n    \"atproto\",\n    \"social media\"\n  ],\n  \"author\": \"Oleg Mihailik\",\n  \"license\": \"not yet\",\n  \"devDependencies\": {\n    \"@atproto/api\": \"^0.12.2\",\n    \"@ipld/car\": \"^5.3.0\",\n    \"cbor-x\": \"^1.5.9\",\n    \"esbuild\": \"^0.20.2\",\n    \"multiformats\": \"^13.1.0\"\n  }\n}\n", "// @ts-check\n\nimport { firehose } from './firehose';\nimport { breakFeedUri, shortenDID } from './shorten';\n\n/**\n * @typedef {{\n *  [shortDID: string]: number | undefined, error?: undefined, errorCount?: undefined, waitUntil?: undefined } | {\n *  error: Error,\n *  errorCount: number,\n *  waitUntil: number }} FirehoseShortDIDs\n */\n\n/**\n * @param {(shortDID: string) => number} [filterShortDIDs]\n * @returns {AsyncGenerator<FirehoseShortDIDs>}\n */\nexport async function* firehoseShortDIDs(filterShortDIDs) {\n\n  /** @type {FirehoseShortDIDs} */\n  let shortDIDs = {};\n  let addedAny = false;\n\n  let lastHealth = Date.now();\n  let errorCount = 0;\n  while (true) {\n    try {\n      for await (const block of firehose()) {\n        lastHealth = Date.now();\n        if (!block?.length) continue;\n\n        for (const entry of block) {\n          if (!entry.messages?.length) continue;\n\n          for (const msg of entry.messages) {\n            collectShortDIDs(msg);\n          }\n        }\n\n        if (addedAny) {\n          /** @type {(typeof shortDIDs) & { error?: undefined, errorCount?: number, waitUntil?: undefined }} */\n          const report = shortDIDs;\n          shortDIDs = {};\n          addedAny = false;\n          yield report;\n        }\n      }\n    } catch (error) {\n      errorCount++;\n      const now = Date.now();\n      let waitFor = Math.min(\n        30000,\n        Math.max(300, (now - lastHealth) / 3)\n      ) * (0.7 + Math.random() * 0.6);\n\n      console.error('firehose error ' + errorCount + ', retry in ' + waitFor + 'ms ', error);\n\n      yield { error: /** @type {Error} */(error), errorCount, waitUntil: now + waitFor };\n\n      return new Promise(resolve => setTimeout(resolve, waitFor));\n    }\n  }\n\n  /**\n   * @param {import('./firehose').FirehoseMessage} msg \n   */\n  function collectShortDIDs(msg) {\n    addShortDID(msg.repo);\n    switch (msg.$type) {\n      case 'app.bsky.feed.like':\n        addShortDID(breakFeedUri(msg.subject?.uri)?.shortDID);\n        return;\n\n      case 'app.bsky.feed.post':\n        addShortDID(breakFeedUri(msg.reply?.parent?.uri)?.shortDID);\n        addShortDID(breakFeedUri(msg.reply?.root?.uri)?.shortDID);\n        if (msg.embed?.$type === 'app.bsky.embed.record')\n          addShortDID(breakFeedUri(/** @type {*} */(msg.embed?.record)?.uri)?.shortDID);\n        return;\n\n      case 'app.bsky.feed.repost':\n        addShortDID(breakFeedUri(msg.subject?.uri)?.shortDID);\n        return;\n\n      case 'app.bsky.feed.threadgate':\n        // TODO extend\n        return;\n\n      case 'app.bsky.graph.follow':\n        addShortDID(msg.subject);\n        return;\n\n      case 'app.bsky.graph.block':\n        addShortDID(msg.subject);\n        return;\n\n      case 'app.bsky.graph.list':\n        // TODO extend\n        return;\n\n      case 'app.bsky.graph.listitem':\n        addShortDID(msg.subject);\n        return;\n\n      case 'app.bsky.actor.profile':\n        return;\n    }\n  }\n\n  /**\n   * @param {string | undefined} did\n   * @param {number} [ratio]\n   */\n  function addShortDID(did, ratio) {\n    if (!did) return;\n    const shortDID = shortenDID(did);\n    let increment =\n      (typeof filterShortDIDs === 'function' ? filterShortDIDs(did) : 1) * (ratio || 1);\n    if (!increment) return;\n\n    shortDIDs[shortDID] = (shortDIDs[shortDID] || 0) + increment;\n    addedAny = true;\n  }\n}", "// @ts-check\n\n/**\n * @template [T=any]\n * @template [TBuffer = T[]]\n * @typedef {{\n *  yield: (item: T, combine?: (buffer: TBuffer | undefined, item?: T) => TBuffer) => Promise<void>,\n *  reject: (error: Error) => void,\n *  complete: () => void,\n *  isEnded: boolean,\n *  finally: Promise<void>\n * }} StreamParameters\n */\n\n/**\n * @template [T=any]\n * @template [TBuffer = T[]]\n * @param {(args: StreamParameters<T, TBuffer>) => void } callback\n * @returns {AsyncGenerator<TBuffer, void, unknown>}\n */\nexport async function* streamBuffer(callback) {\n\n  let finallyTrigger = () => { };\n  let stop = false;\n\n  /** @type {TBuffer | undefined} */\n  let buffer;\n\n  let continueTrigger = () => { };\n  /** @type {Promise<void>} */\n  let continuePromise = new Promise(resolve => continueTrigger = resolve);\n\n  let yieldPassedTrigger = () => { };\n  /** @type {Promise<void>} */\n  let yieldPassedPromise = new Promise(resolve => yieldPassedTrigger = resolve);\n\n  /** @type {{ error: Error } | undefined} */\n  let rejectError;\n\n  /** @type {Parameters<typeof callback>[0]} */\n  const args = {\n    yield: yieldFn,\n    reject,\n    complete,\n    isEnded: false,\n    finally: new Promise(resolve => finallyTrigger = resolve)\n  };\n\n  callback(args);\n\n  try {\n    while (!stop) {\n\n      await continuePromise;\n      if (rejectError)\n        throw rejectError.error;\n      if (stop) return;\n\n      continuePromise = new Promise(resolve => continueTrigger = resolve);\n      const yieldBuffer = buffer;\n      buffer = undefined;\n\n      if (yieldBuffer) {\n        yield yieldBuffer;\n\n        const yieldCompleted = yieldPassedTrigger;\n        yieldPassedPromise = new Promise(resolve => yieldPassedTrigger = resolve);\n\n        yieldCompleted();\n      }\n    }\n\n  } finally {\n    finallyTrigger();\n  }\n\n  /**\n   * @param {T} item\n   * @param {(buffer: TBuffer | undefined, item: T) => TBuffer} [combine]\n   */\n  function yieldFn(item, combine) {\n    if (stop) {\n      console.error('Cannot yield after complete.');\n      return /** @type Promise<void> */(new Promise(resolve => resolve()));\n    }\n    if (rejectError) {\n      console.error('Cannot yield after reject.');\n      return /** @type Promise<void> */(new Promise(resolve => resolve()));\n    }\n\n    if (typeof combine === 'function') {\n      buffer = combine(buffer, item);\n    } else {\n      if (!buffer) buffer = /** @type {TBuffer} */([]);\n      /** @type {*} */(buffer).push(item);\n    }\n\n    continueTrigger();\n\n    return yieldPassedPromise;\n  }\n\n  /** @param {Error} error */\n  function reject(error) {\n    if (stop) {\n      console.error('Cannot reject after complete.');\n      return;\n    }\n    if (rejectError) {\n      console.error('Cannot reject after reject.');\n      return;\n    }\n\n    rejectError = { error };\n    args.isEnded = true;\n  }\n\n  function complete() {\n    stop = true;\n    args.isEnded = true;\n    continueTrigger();\n  }\n}\n\n/**\n * @template T\n * @template [TProject = T]\n * @param {AsyncIterable<T>} input\n * @param {(item: T) => TProject} [project]\n */\nexport async function* map(input, project) {\n  for await (const item of input) {\n    const mapped = project ? project(item) : item;\n    yield mapped;\n  }\n}\n\n/**\n * @template T\n * @template [TProject=T extends Array ? T[0] : T]\n * @param {AsyncIterable<T>} input\n * @param {(item: T) => Iterable<TProject> | AsyncIterable<TProject>} [project]\n * @returns {AsyncIterable<TProject>}\n * }}\n */\nexport async function* mergeMap(input, project) {\n  for await (const item of input) {\n    const mapped = project ? project(item) : item;\n    for await (const subItem of /** @type {AsyncIterable<TProject>} */(mapped)) {\n      yield subItem;\n    }\n  }\n}\n\n/**\n * @template T\n * @param {(arg: {\n *  yield: (item: T) => Promise<void>,\n *  reject: (error: Error) => void,\n *  complete: () => void,\n *  finally: Promise<void>\n * }) => void } callback\n */\nexport function streamEvery(callback) {\n  return mergeMap(streamBuffer(callback));\n}\n", "// @ts-check\n\nimport { streamBuffer } from '../src/api/akpa';\nimport { retryFetch } from '../src/api/retry-fetch';\nimport { shortenDID, shortenHandle, shortenPDC } from './shorten';\n\n/**\n * @typedef {{\n *  fetch?: typeof retryFetch\n * }} Overrides\n */\n\n/**\n * @typedef {{\n *  did: string,\n *  cid: string,\n *  nullified: boolean,\n *  createdAt: string,\n *  operation: {\n *    type: 'create' | 'plc_operation',\n *    sig: string,\n *    alsoKnownAs?: string[],\n *    handle?: string,\n *    prev: string | null,\n *    service?: string,\n *    services?: {\n *      atproto_pds?: {\n *        type: 'AtprotoPersonalDataServer',\n *        endpoint: string\n *      }\n *    },\n *    rotationKeys: any[],\n *    verificationMethods: {}\n *  }\n * }} PLCDirectoryEntry\n */\n\nconst FETCH_AHEAD_MSEC_MAX = 10000;\nconst FETCH_AHEAD_COUNT_MAX = 10000\n\n/**\n * @param {string | Date | number | null} [since]\n * @param {Overrides} [overrides]\n * @returns {AsyncGenerator<{ entries: PLCDirectoryEntry[], overlap: number }>}\n */\nexport function plcDirectory(since, overrides) {\n  const useFetch = overrides?.fetch || fetch;\n  return streamBuffer(async stream => {\n    const EXPORT_URL = 'https://plc.directory/export';\n\n    let sinceTime;\n    if (since) {\n      if (typeof since === 'string') {\n        since = new Date(since);\n      } else if (typeof since === 'number') {\n        since = new Date(since);\n      }\n\n      if (Number.isFinite(since.getTime()))\n        sinceTime = since.toISOString();\n    }\n\n    const lastChunkLines = new Set();\n    let lastWaitedForConsumptionAt = Date.now();\n    let collectedEntriesSinceLastWaitedForConsumption = 0;\n\n    while (true) {\n      const nextChunkRe = await useFetch(\n        EXPORT_URL + (sinceTime ? '?after=' + sinceTime : '')\n      );\n\n      if (stream.isEnded) return;\n\n      const nextChunkText = await nextChunkRe.text();\n\n      const chunkLines = nextChunkText.split('\\n');\n      let overlap = 0;\n      const nextChunkEnitres = [];\n      for (const line of chunkLines) {\n        if (lastChunkLines.has(line)) {\n          overlap++;\n          continue;\n        }\n\n        if (!line) continue;\n        nextChunkEnitres.push(JSON.parse(line));\n      }\n\n      if (nextChunkEnitres.length) {\n        lastChunkLines.clear();\n        for (const line of chunkLines) {\n          lastChunkLines.add(line);\n        }\n\n        collectedEntriesSinceLastWaitedForConsumption += nextChunkEnitres.length;\n      }\n\n      const waitForConsumption = stream.yield(\n        { entries: nextChunkEnitres, overlap },\n        (buffer, item) => {\n          if (!buffer) return item;\n          buffer.entries = buffer.entries.concat(item.entries);\n          buffer.overlap += item.overlap;\n          return buffer;\n        }\n      );\n      if (stream.isEnded) return;\n\n      const shouldWaitForConsumption =\n        collectedEntriesSinceLastWaitedForConsumption > FETCH_AHEAD_COUNT_MAX ||\n        Date.now() - lastWaitedForConsumptionAt > FETCH_AHEAD_MSEC_MAX ||\n        !nextChunkEnitres.length;\n      \n      if (shouldWaitForConsumption) {\n        await waitForConsumption;\n        if (stream.isEnded) return;\n      }\n\n      /** @type {Date | undefined} */\n      let nextSinceTime;\n      // iterate backwards to find timestamp just before latest\n      for (let i = 0; i < nextChunkEnitres.length; i++) {\n        const entry = nextChunkEnitres[nextChunkEnitres.length - i - 1];\n        if (entry.createdAt) {\n          const timestamp = new Date(entry.createdAt);\n          if (!nextSinceTime && timestamp.getTime()) {\n            nextSinceTime = timestamp;\n          } else if (nextSinceTime && timestamp.getTime() &&\n            timestamp.getTime() < nextSinceTime.getTime()) {\n            sinceTime = timestamp.toISOString();\n            break;\n          }\n        }\n      }\n    }\n\n  });\n}\n\n/**\n * @typedef {{\n *  timestamp: number,\n *  shortDID: string,\n *  shortHandle?: string,\n *  shortPDC?: string;\n * }} PLCDirectoryEntryCompact\n */\n\n/**\n * @param {string | Date | number | null} [since]\n * @param {Overrides} [overrides]\n * @returns {AsyncGenerator<{ entries: PLCDirectoryEntryCompact[] }>}\n */\nexport async function* plcDirectoryCompact(since, overrides) {\n  const iteration = plcDirectory(since, overrides);\n  for await (const chunk of iteration) {\n    const compactEntries = [];\n    for (const entry of chunk.entries) {\n      const timestamp = new Date(entry.createdAt).getTime();\n      const compact = {\n        timestamp,\n        shortDID: shortenDID(entry.did),\n        shortHandle: shortenHandle(\n          entry.operation.alsoKnownAs?.[0] || entry.operation.handle),\n        shortPDC: shortenPDC(\n          entry.operation.services?.atproto_pds?.endpoint ||\n          entry.operation.service)\n      };\n      compactEntries.push(compact);\n    }\n\n    yield { entries: compactEntries };\n  }\n}", "import {\n  likelyDID,\n  shortenDID, shortenHandle,\n  unwrapShortDID, unwrapShortHandle,\n  breakFeedUri, breakPostURL\n} from './shorten';\n\nimport {\n  isPromise\n} from './is-promise';\n\nimport {\n  ColdskyAgent\n} from './coldsky-agent';\n\nimport { firehose } from './firehose';\n\nimport { version } from '../package.json';\nimport { firehoseShortDIDs } from './firehose-short-dids';\nimport { plcDirectory } from './plc-directory';\n\nconst all = {\n  version,\n  likelyDID,\n  shortenDID, shortenHandle,\n  unwrapShortDID, unwrapShortHandle,\n  breakFeedUri, breakPostURL,\n  isPromise,\n  ColdskyAgent,\n  plcDirectory,\n  firehose, firehoseShortDIDs\n};\n\nexport default all;\n\ncheckApplyGlobal();\n\nfunction checkApplyGlobal() {\n  if (typeof process !== 'undefined' && typeof process?.exit === 'function') {\n    if (typeof module !== 'undefined' && module?.exports) {\n      for (const key in all) {\n        module.exports[key] = all[key];\n      }\n    }\n    return;\n  }\n\n  if (typeof window !== 'undefined' && window) {\n    window['coldsky'] = all;\n  } else if (typeof global !== 'undefined' && global) {\n    global['coldsky'] = all;\n  }\n}\n"],
  "mappings": "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",
  "names": ["name", "e", "base", "date", "util", "objectUtil", "errorUtil", "_a", "target", "version", "ctx", "result", "issues", "elements", "processed", "base", "ZodFirstPartyTypeKind", "exports", "exports", "is", "length", "clockid", "buf", "decode", "init_varint", "code", "target", "decode", "equals", "init_varint", "code", "digest", "name", "encode", "length", "i", "j", "decode", "string", "buffer", "decode", "encode", "name", "decoder", "alphabet", "string", "buffer", "init_varint", "version", "code", "digest", "equals", "base", "decode", "length", "decoder", "cache", "cid", "length", "equals", "base", "name", "encode", "length", "i", "j", "decode", "string", "buffer", "src", "_brrp__multiformats_scope_baseX", "base_x_default", "init_base_x", "empty", "equals", "coerce", "init_bytes", "Encoder", "Decoder", "ComposedDecoder", "or", "Codec", "from", "baseX", "decode", "encode", "rfc4648", "init_base", "init_base_x", "init_bytes", "name", "decoder", "alphabet", "base_x_default", "coerce", "string", "buffer", "init_base", "init_bytes", "from", "buf", "base2", "init_base2", "init_base", "rfc4648", "init_base", "rfc4648", "init_base", "baseX", "init_base", "rfc4648", "base32", "base32hex", "base32hexpad", "base32hexpadupper", "base32hexupper", "base32pad", "base32padupper", "base32upper", "base32z", "init_base32", "init_base", "rfc4648", "init_base", "baseX", "base58btc", "base58flickr", "init_base58", "init_base", "baseX", "init_base", "rfc4648", "encode", "decode", "init_base", "from", "encode", "INT", "MSB", "MSBALL", "read", "buf", "REST$1", "MSB$1", "encode_1", "REST", "decode", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "varint", "_brrp_varint", "varint_default", "init_varint", "decode", "encodeTo", "encodingLength", "init_varint", "code", "varint_default", "target", "create", "decode", "equals", "Digest", "init_digest", "init_bytes", "init_varint", "code", "digest", "encodingLength", "encodeTo", "coerce", "from", "init_digest", "name", "code", "encode", "create", "digest", "name", "from", "identity_exports", "identity", "encode", "init_identity", "init_bytes", "init_digest", "coerce", "create", "init_bytes", "CID", "parseCIDtoBytes", "toStringV0", "toStringV1", "DAG_PB_CODE", "SHA_256_CODE", "encodeCID", "cidSymbol", "readonly", "hidden", "version", "deprecate", "IS_CID_DEPRECATION", "init_cid", "init_varint", "init_digest", "init_base58", "init_base32", "init_bytes", "code", "digest", "create", "equals", "base", "base58btc", "base32", "decode", "coerce", "Digest", "length", "decoder", "cache", "cid", "encodingLength", "encodeTo", "init_cid", "init_varint", "init_bytes", "init_digest", "init_base2", "init_base32", "init_base58", "init_identity", "identity_exports", "name", "encode", "decode", "buf", "decoder", "string", "fromString", "string", "base", "toString", "base", "equals", "fromString", "toString", "init_src", "_a", "from", "CLUSTER_BREAK", "code", "all", "string", "code", "require_lib", "name", "service", "encode", "INT", "MSB", "MSBALL", "read", "buf", "REST$1", "MSB$1", "encode_1", "REST", "decode", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "varint", "_brrp_varint", "varint_default", "init_varint", "decode", "encodeTo", "encodingLength", "init_varint", "code", "varint_default", "target", "empty", "equals", "coerce", "init_bytes", "create", "decode", "equals", "Digest", "init_digest", "init_bytes", "init_varint", "code", "digest", "encodingLength", "encodeTo", "coerce", "base", "name", "encode", "length", "i", "j", "decode", "string", "buffer", "src", "_brrp__multiformats_scope_baseX", "base_x_default", "init_base_x", "Encoder", "Decoder", "ComposedDecoder", "or", "Codec", "from", "baseX", "decode", "encode", "rfc4648", "init_base", "init_base_x", "init_bytes", "name", "decoder", "alphabet", "base_x_default", "coerce", "string", "buffer", "base58btc", "base58flickr", "init_base58", "init_base", "baseX", "base32", "base32upper", "base32pad", "base32padupper", "base32hex", "base32hexupper", "base32hexpad", "base32hexpadupper", "base32z", "init_base32", "init_base", "rfc4648", "cid_exports", "CID", "parseCIDtoBytes", "toStringV0", "toStringV1", "DAG_PB_CODE", "SHA_256_CODE", "encodeCID", "cidSymbol", "readonly", "hidden", "version", "deprecate", "IS_CID_DEPRECATION", "init_cid", "init_varint", "init_digest", "init_base58", "init_base32", "init_bytes", "code", "digest", "create", "equals", "base", "base58btc", "base32", "decode", "coerce", "Digest", "length", "decoder", "cache", "cid", "encodingLength", "encodeTo", "require_dist", "t", "r", "n", "e", "i", "o", "a", "u", "d", "string", "Blob", "_a", "_a", "require_types", "ResponseType", "_a", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "src", "opts", "_a", "decoder", "module", "_a", "_a", "target", "ModerationBehaviorSeverity", "hidden", "target", "_a", "_a", "_a", "_a", "_a", "_a", "_a", "name", "src", "BskyAgent", "_a", "labeler", "prefs", "pref", "module", "encode", "MSB", "REST", "MSBALL", "INT", "module", "read", "MSB", "REST", "buf", "module", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "module", "cache", "result", "_a", "cache", "httpUri", "httpMethod", "httpHeaders", "httpReqBody", "src", "Decoder", "src", "read", "src", "string", "length", "structure", "length", "src", "src", "buffer", "length", "read", "src", "target", "Decoder", "decode", "textEncoder", "Buffer", "position", "bundledStrings", "Encoder", "Decoder", "referenceMap", "string", "textEncoder", "packedObjectMap", "sharedPackedObjectMap", "encodeOptions", "sharedValues", "packedValues", "encode", "options", "length", "maxBytes", "buffer", "version", "isLittleEndianMachine", "Buffer", "addExtension", "empty", "equals", "coerce", "base", "name", "encode", "length", "i", "j", "decode", "string", "buffer", "src", "_brrp__multiformats_scope_baseX", "base_x_default", "Encoder", "name", "Decoder", "decoder", "or", "ComposedDecoder", "_a", "Codec", "from", "encode", "decode", "baseX", "alphabet", "base_x_default", "coerce", "string", "buffer", "rfc4648", "base32", "rfc4648", "base32upper", "base32pad", "base32padupper", "base32hex", "base32hexupper", "base32hexpad", "base32hexpadupper", "base32z", "base58btc", "baseX", "base58flickr", "encode_1", "encode", "MSB", "REST", "MSBALL", "INT", "decode", "read", "MSB$1", "REST$1", "buf", "N1", "N2", "N3", "N4", "N5", "N6", "N7", "N8", "N9", "length", "varint", "_brrp_varint", "varint_default", "decode", "code", "varint_default", "encodeTo", "target", "encodingLength", "create", "code", "digest", "encodingLength", "encodeTo", "Digest", "decode", "coerce", "equals", "base", "version", "toStringV0", "base58btc", "toStringV1", "base32", "baseCache", "CID", "version", "code", "DAG_PB_CODE", "SHA_256_CODE", "digest", "create", "equals", "base", "encodeCID", "cidSymbol", "decode", "coerce", "Digest", "length", "parseCIDtoBytes", "decoder", "base58btc", "base32", "toStringV0", "cache", "cid", "toStringV1", "encodingLength", "encodeTo", "name", "textDecoder", "textEncoder", "isBuffer", "buf", "toString", "fromString", "string", "isBuffer", "concat", "length", "compare", "isBuffer", "buf", "concat", "buf", "encodedSize", "buf", "encodedSize", "compareTokens", "length", "buf", "fromString", "encodedSize", "compareTokens", "compare", "toToken", "length", "toString", "toToken", "length", "buf", "encodedSize", "toToken", "length", "buf", "encodedSize", "buf", "encodedSize", "buf", "encodedSize", "dataView", "ui8a", "length", "decoder", "decode", "buf", "CID", "decode", "import_varint", "varint", "length", "v", "length", "decode", "bytes", "multihash", "CID", "version", "read", "decoder", "buf", "_a", "decode", "addExtension", "CID", "version", "_a", "error", "buffer", "combine", "buffer", "version"]
}

{"version":3,"file":"firehose.js","sources":["node_modules/cbor-x/decode.js","node_modules/cbor-x/encode.js","node_modules/multiformats/esm/vendor/varint.js","node_modules/multiformats/esm/src/varint.js","node_modules/multiformats/esm/src/bytes.js","node_modules/multiformats/esm/src/hashes/digest.js","node_modules/multiformats/esm/vendor/base-x.js","node_modules/multiformats/esm/src/bases/base.js","node_modules/multiformats/esm/src/bases/base58.js","node_modules/multiformats/esm/src/bases/base32.js","node_modules/multiformats/esm/src/cid.js","node_modules/cborg/lib/is.js","node_modules/cborg/lib/token.js","node_modules/cborg/lib/byte-utils.js","node_modules/cborg/lib/common.js","node_modules/cborg/lib/0uint.js","node_modules/cborg/lib/1negint.js","node_modules/cborg/lib/2bytes.js","node_modules/cborg/lib/3string.js","node_modules/cborg/lib/4array.js","node_modules/cborg/lib/5map.js","node_modules/cborg/lib/6tag.js","node_modules/cborg/lib/7float.js","node_modules/cborg/lib/jump.js","node_modules/cborg/lib/encode.js","node_modules/cborg/lib/decode.js","node_modules/@ipld/dag-cbor/node_modules/multiformats/dist/src/bytes.js","node_modules/@ipld/dag-cbor/node_modules/multiformats/dist/src/vendor/base-x.js","node_modules/@ipld/dag-cbor/node_modules/multiformats/dist/src/bases/base.js","node_modules/@ipld/dag-cbor/node_modules/multiformats/dist/src/bases/base32.js","node_modules/@ipld/dag-cbor/node_modules/multiformats/dist/src/bases/base36.js","node_modules/@ipld/dag-cbor/node_modules/multiformats/dist/src/bases/base58.js","node_modules/@ipld/dag-cbor/node_modules/multiformats/dist/src/vendor/varint.js","node_modules/@ipld/dag-cbor/node_modules/multiformats/dist/src/varint.js","node_modules/@ipld/dag-cbor/node_modules/multiformats/dist/src/hashes/digest.js","node_modules/@ipld/dag-cbor/node_modules/multiformats/dist/src/cid.js","node_modules/@ipld/dag-cbor/src/index.js","node_modules/@ipld/car/node_modules/multiformats/dist/src/bytes.js","node_modules/@ipld/car/node_modules/multiformats/dist/src/vendor/base-x.js","node_modules/@ipld/car/node_modules/multiformats/dist/src/bases/base.js","node_modules/@ipld/car/node_modules/multiformats/dist/src/bases/base32.js","node_modules/@ipld/car/node_modules/multiformats/dist/src/bases/base36.js","node_modules/@ipld/car/node_modules/multiformats/dist/src/bases/base58.js","node_modules/@ipld/car/node_modules/multiformats/dist/src/vendor/varint.js","node_modules/@ipld/car/node_modules/multiformats/dist/src/varint.js","node_modules/@ipld/car/node_modules/multiformats/dist/src/hashes/digest.js","node_modules/@ipld/car/node_modules/multiformats/dist/src/cid.js","node_modules/varint/encode.js","node_modules/varint/decode.js","node_modules/varint/length.js","node_modules/varint/index.js","node_modules/@ipld/car/src/decoder-common.js","node_modules/@ipld/car/src/header-validator.js","node_modules/@ipld/car/src/buffer-decoder.js","node_modules/@ipld/car/src/buffer-reader-browser.js","package/firehose.js"],"sourcesContent":["let decoder\ntry {\n\tdecoder = new TextDecoder()\n} catch(error) {}\nlet src\nlet srcEnd\nlet position = 0\nlet alreadySet\nconst EMPTY_ARRAY = []\nconst LEGACY_RECORD_INLINE_ID = 105\nconst RECORD_DEFINITIONS_ID = 0xdffe\nconst RECORD_INLINE_ID = 0xdfff // temporary first-come first-serve tag // proposed tag: 0x7265 // 're'\nconst BUNDLED_STRINGS_ID = 0xdff9\nconst PACKED_TABLE_TAG_ID = 51\nconst PACKED_REFERENCE_TAG_ID = 6\nconst STOP_CODE = {}\nlet maxArraySize = 112810000 // This is the maximum array size in V8. We would potentially detect and set it higher\n// for JSC, but this is pretty large and should be sufficient for most use cases\nlet maxMapSize = 16810000 // JavaScript has a fixed maximum map size of about 16710000, but JS itself enforces this,\n// so we don't need to\n\nlet maxObjectSize = 16710000; // This is the maximum number of keys in a Map. It takes over a minute to create this\n// many keys in an object, so also probably a reasonable choice there.\nlet strings = EMPTY_ARRAY\nlet stringPosition = 0\nlet currentDecoder = {}\nlet currentStructures\nlet srcString\nlet srcStringStart = 0\nlet srcStringEnd = 0\nlet bundledStrings\nlet referenceMap\nlet currentExtensions = []\nlet currentExtensionRanges = []\nlet packedValues\nlet dataView\nlet restoreMapsAsObject\nlet defaultOptions = {\n\tuseRecords: false,\n\tmapsAsObjects: true\n}\nlet sequentialMode = false\nlet inlineObjectReadThreshold = 2;\nvar BlockedFunction // we use search and replace to change the next call to BlockedFunction to avoid CSP issues for\n// no-eval build\ntry {\n\tnew Function('')\n} catch(error) {\n\t// if eval variants are not supported, do not create inline object readers ever\n\tinlineObjectReadThreshold = Infinity\n}\n\n\n\nexport class Decoder {\n\tconstructor(options) {\n\t\tif (options) {\n\t\t\tif ((options.keyMap || options._keyMap) && !options.useRecords) {\n\t\t\t\toptions.useRecords = false\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\t}\n\t\t\tif (options.useRecords === false && options.mapsAsObjects === undefined)\n\t\t\t\toptions.mapsAsObjects = true\n\t\t\tif (options.getStructures)\n\t\t\t\toptions.getShared = options.getStructures\n\t\t\tif (options.getShared && !options.structures)\n\t\t\t\t(options.structures = []).uninitialized = true // this is what we use to denote an uninitialized structures\n\t\t\tif (options.keyMap) {\n\t\t\t\tthis.mapKey = new Map()\n\t\t\t\tfor (let [k,v] of Object.entries(options.keyMap)) this.mapKey.set(v,k)\n\t\t\t}\n\t\t}\n\t\tObject.assign(this, options)\n\t}\n\t/*\n\tdecodeKey(key) {\n\t\treturn this.keyMap\n\t\t\t? Object.keys(this.keyMap)[Object.values(this.keyMap).indexOf(key)] || key\n\t\t\t: key\n\t}\n\t*/\n\tdecodeKey(key) {\n\t\treturn this.keyMap ? this.mapKey.get(key) || key : key\n\t}\n\t\n\tencodeKey(key) {\n\t\treturn this.keyMap && this.keyMap.hasOwnProperty(key) ? this.keyMap[key] : key\n\t}\n\n\tencodeKeys(rec) {\n\t\tif (!this._keyMap) return rec\n\t\tlet map = new Map()\n\t\tfor (let [k,v] of Object.entries(rec)) map.set((this._keyMap.hasOwnProperty(k) ? this._keyMap[k] : k), v)\n\t\treturn map\n\t}\n\n\tdecodeKeys(map) {\n\t\tif (!this._keyMap || map.constructor.name != 'Map') return map\n\t\tif (!this._mapKey) {\n\t\t\tthis._mapKey = new Map()\n\t\t\tfor (let [k,v] of Object.entries(this._keyMap)) this._mapKey.set(v,k)\n\t\t}\n\t\tlet res = {}\n\t\t//map.forEach((v,k) => res[Object.keys(this._keyMap)[Object.values(this._keyMap).indexOf(k)] || k] = v)\n\t\tmap.forEach((v,k) => res[safeKey(this._mapKey.has(k) ? this._mapKey.get(k) : k)] =  v)\n\t\treturn res\n\t}\n\t\n\tmapDecode(source, end) {\n\t\n\t\tlet res = this.decode(source)\n\t\tif (this._keyMap) { \n\t\t\t//Experiemntal support for Optimised KeyMap  decoding \n\t\t\tswitch (res.constructor.name) {\n\t\t\t\tcase 'Array': return res.map(r => this.decodeKeys(r))\n\t\t\t\t//case 'Map': return this.decodeKeys(res)\n\t\t\t}\n\t\t}\n\t\treturn res\n\t}\n\n\tdecode(source, end) {\n\t\tif (src) {\n\t\t\t// re-entrant execution, save the state and restore it after we do this decode\n\t\t\treturn saveState(() => {\n\t\t\t\tclearSource()\n\t\t\t\treturn this ? this.decode(source, end) : Decoder.prototype.decode.call(defaultOptions, source, end)\n\t\t\t})\n\t\t}\n\t\tsrcEnd = end > -1 ? end : source.length\n\t\tposition = 0\n\t\tstringPosition = 0\n\t\tsrcStringEnd = 0\n\t\tsrcString = null\n\t\tstrings = EMPTY_ARRAY\n\t\tbundledStrings = null\n\t\tsrc = source\n\t\t// this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n\t\t// technique for getting data from a database where it can be copied into an existing buffer instead of creating\n\t\t// new ones\n\t\ttry {\n\t\t\tdataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength))\n\t\t} catch(error) {\n\t\t\t// if it doesn't have a buffer, maybe it is the wrong type of object\n\t\t\tsrc = null\n\t\t\tif (source instanceof Uint8Array)\n\t\t\t\tthrow error\n\t\t\tthrow new Error('Source must be a Uint8Array or Buffer but was a ' + ((source && typeof source == 'object') ? source.constructor.name : typeof source))\n\t\t}\n\t\tif (this instanceof Decoder) {\n\t\t\tcurrentDecoder = this\n\t\t\tpackedValues = this.sharedValues &&\n\t\t\t\t(this.pack ? new Array(this.maxPrivatePackedValues || 16).concat(this.sharedValues) :\n\t\t\t\tthis.sharedValues)\n\t\t\tif (this.structures) {\n\t\t\t\tcurrentStructures = this.structures\n\t\t\t\treturn checkedRead()\n\t\t\t} else if (!currentStructures || currentStructures.length > 0) {\n\t\t\t\tcurrentStructures = []\n\t\t\t}\n\t\t} else {\n\t\t\tcurrentDecoder = defaultOptions\n\t\t\tif (!currentStructures || currentStructures.length > 0)\n\t\t\t\tcurrentStructures = []\n\t\t\tpackedValues = null\n\t\t}\n\t\treturn checkedRead()\n\t}\n\tdecodeMultiple(source, forEach) {\n\t\tlet values, lastPosition = 0\n\t\ttry {\n\t\t\tlet size = source.length\n\t\t\tsequentialMode = true\n\t\t\tlet value = this ? this.decode(source, size) : defaultDecoder.decode(source, size)\n\t\t\tif (forEach) {\n\t\t\t\tif (forEach(value) === false) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tif (forEach(checkedRead()) === false) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalues = [ value ]\n\t\t\t\twhile(position < size) {\n\t\t\t\t\tlastPosition = position\n\t\t\t\t\tvalues.push(checkedRead())\n\t\t\t\t}\n\t\t\t\treturn values\n\t\t\t}\n\t\t} catch(error) {\n\t\t\terror.lastPosition = lastPosition\n\t\t\terror.values = values\n\t\t\tthrow error\n\t\t} finally {\n\t\t\tsequentialMode = false\n\t\t\tclearSource()\n\t\t}\n\t}\n}\nexport function getPosition() {\n\treturn position\n}\nexport function checkedRead() {\n\ttry {\n\t\tlet result = read()\n\t\tif (bundledStrings) {\n\t\t\tif (position >= bundledStrings.postBundlePosition) {\n\t\t\t\tlet error = new Error('Unexpected bundle position');\n\t\t\t\terror.incomplete = true;\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\t// bundled strings to skip past\n\t\t\tposition = bundledStrings.postBundlePosition;\n\t\t\tbundledStrings = null;\n\t\t}\n\n\t\tif (position == srcEnd) {\n\t\t\t// finished reading this source, cleanup references\n\t\t\tcurrentStructures = null\n\t\t\tsrc = null\n\t\t\tif (referenceMap)\n\t\t\t\treferenceMap = null\n\t\t} else if (position > srcEnd) {\n\t\t\t// over read\n\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\terror.incomplete = true\n\t\t\tthrow error\n\t\t} else if (!sequentialMode) {\n\t\t\tthrow new Error('Data read, but end of buffer not reached')\n\t\t}\n\t\t// else more to read, but we are reading sequentially, so don't clear source yet\n\t\treturn result\n\t} catch(error) {\n\t\tclearSource()\n\t\tif (error instanceof RangeError || error.message.startsWith('Unexpected end of buffer')) {\n\t\t\terror.incomplete = true\n\t\t}\n\t\tthrow error\n\t}\n}\n\nexport function read() {\n\tlet token = src[position++]\n\tlet majorType = token >> 5\n\ttoken = token & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\treturn getFloat16()\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat32(position)\n\t\t\t\t\tif (currentDecoder.useFloat32 > 2) {\n\t\t\t\t\t\t// this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\tlet multiplier = mult10[((src[position] & 0x7f) << 1) | (src[position + 1] >> 7)]\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\treturn ((multiplier * value + (value > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n\t\t\t\t\t}\n\t\t\t\t\tposition += 4\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t\tcase 0x1b:\n\t\t\t\tif (majorType == 7) {\n\t\t\t\t\tlet value = dataView.getFloat64(position)\n\t\t\t\t\tposition += 8\n\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\tif (majorType > 1) {\n\t\t\t\t\tif (dataView.getUint32(position) > 0)\n\t\t\t\t\t\tthrow new Error('JavaScript does not support arrays, maps, or strings with length over 4294967295')\n\t\t\t\t\ttoken = dataView.getUint32(position + 4)\n\t\t\t\t} else if (currentDecoder.int64AsNumber) {\n\t\t\t\t\ttoken = dataView.getUint32(position) * 0x100000000\n\t\t\t\t\ttoken += dataView.getUint32(position + 4)\n\t\t\t\t} else\n\t\t\t\t\ttoken = dataView.getBigUint64(position)\n\t\t\t\tposition += 8\n\t\t\t\tbreak\n\t\t\tcase 0x1f: \n\t\t\t\t// indefinite length\n\t\t\t\tswitch(majorType) {\n\t\t\t\t\tcase 2: // byte string\n\t\t\t\t\tcase 3: // text string\n\t\t\t\t\t\tthrow new Error('Indefinite length not supported for byte or text strings')\n\t\t\t\t\tcase 4: // array\n\t\t\t\t\t\tlet array = []\n\t\t\t\t\t\tlet value, i = 0\n\t\t\t\t\t\twhile ((value = read()) != STOP_CODE) {\n\t\t\t\t\t\t\tif (i >= maxArraySize) throw new Error(`Array length exceeds ${maxArraySize}`)\n\t\t\t\t\t\t\tarray[i++] = value\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn majorType == 4 ? array : majorType == 3 ? array.join('') : Buffer.concat(array)\n\t\t\t\t\tcase 5: // map\n\t\t\t\t\t\tlet key\n\t\t\t\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) {\n\t\t\t\t\t\t\t\twhile((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) throw new Error(`Property count exceeds ${maxMapSize}`)\n\t\t\t\t\t\t\t\t\tobject[safeKey(currentDecoder.decodeKey(key))] = read()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\twhile ((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) throw new Error(`Property count exceeds ${maxMapSize}`)\n\t\t\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn object\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlet map = new Map()\n\t\t\t\t\t\t\tif (currentDecoder.keyMap) {\n\t\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\t\twhile((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) {\n\t\t\t\t\t\t\t\t\t\tthrow new Error(`Map size exceeds ${maxMapSize}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmap.set(currentDecoder.decodeKey(key), read())\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\t\t\twhile ((key = read()) != STOP_CODE) {\n\t\t\t\t\t\t\t\t\tif (i++ >= maxMapSize) {\n\t\t\t\t\t\t\t\t\t\tthrow new Error(`Map size exceeds ${maxMapSize}`);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmap.set(key, read())\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn map\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 7:\n\t\t\t\t\t\treturn STOP_CODE\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid major type for indefinite length ' + majorType)\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t}\n\t}\n\tswitch (majorType) {\n\t\tcase 0: // positive int\n\t\t\treturn token\n\t\tcase 1: // negative int\n\t\t\treturn ~token\n\t\tcase 2: // buffer\n\t\t\treturn readBin(token)\n\t\tcase 3: // string\n\t\t\tif (srcStringEnd >= position) {\n\t\t\t\treturn srcString.slice(position - srcStringStart, (position += token) - srcStringStart)\n\t\t\t}\n\t\t\tif (srcStringEnd == 0 && srcEnd < 140 && token < 32) {\n\t\t\t\t// for small blocks, avoiding the overhead of the extract call is helpful\n\t\t\t\tlet string = token < 16 ? shortStringInJS(token) : longStringInJS(token)\n\t\t\t\tif (string != null)\n\t\t\t\t\treturn string\n\t\t\t}\n\t\t\treturn readFixedString(token)\n\t\tcase 4: // array\n\t\t\tif (token >= maxArraySize) throw new Error(`Array length exceeds ${maxArraySize}`)\n\t\t\tlet array = new Array(token)\n\t\t  //if (currentDecoder.keyMap) for (let i = 0; i < token; i++) array[i] = currentDecoder.decodeKey(read())\t\n\t\t\t//else \n\t\t\tfor (let i = 0; i < token; i++) array[i] = read()\n\t\t\treturn array\n\t\tcase 5: // map\n\t\t\tif (token >= maxMapSize) throw new Error(`Map size exceeds ${maxArraySize}`)\n\t\t\tif (currentDecoder.mapsAsObjects) {\n\t\t\t\tlet object = {}\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) object[safeKey(currentDecoder.decodeKey(read()))] = read()\n\t\t\t\telse for (let i = 0; i < token; i++) object[safeKey(read())] = read()\n\t\t\t\treturn object\n\t\t\t} else {\n\t\t\t\tif (restoreMapsAsObject) {\n\t\t\t\t\tcurrentDecoder.mapsAsObjects = true\n\t\t\t\t\trestoreMapsAsObject = false\n\t\t\t\t}\n\t\t\t\tlet map = new Map()\n\t\t\t\tif (currentDecoder.keyMap) for (let i = 0; i < token; i++) map.set(currentDecoder.decodeKey(read()),read())\n\t\t\t\telse for (let i = 0; i < token; i++) map.set(read(), read())\n\t\t\t\treturn map\n\t\t\t}\n\t\tcase 6: // extension\n\t\t\tif (token >= BUNDLED_STRINGS_ID) {\n\t\t\t\tlet structure = currentStructures[token & 0x1fff] // check record structures first\n\t\t\t\t// At some point we may provide an option for dynamic tag assignment with a range like token >= 8 && (token < 16 || (token > 0x80 && token < 0xc0) || (token > 0x130 && token < 0x4000))\n\t\t\t\tif (structure) {\n\t\t\t\t\tif (!structure.read) structure.read = createStructureReader(structure)\n\t\t\t\t\treturn structure.read()\n\t\t\t\t}\n\t\t\t\tif (token < 0x10000) {\n\t\t\t\t\tif (token == RECORD_INLINE_ID) { // we do a special check for this so that we can keep the\n\t\t\t\t\t\t// currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tlet structure = read()\n\t\t\t\t\t\trecordDefinition(id, structure)\n\t\t\t\t\t\tlet object = {}\n\t\t\t\t\t\tif (currentDecoder.keyMap) for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = currentDecoder.decodeKey(structure[i - 2])\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse for (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\tlet key = structure[i - 2]\n\t\t\t\t\t\t\tobject[safeKey(key)] = read()\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn object\n\t\t\t\t\t}\n\t\t\t\t\telse if (token == RECORD_DEFINITIONS_ID) {\n\t\t\t\t\t\tlet length = readJustLength()\n\t\t\t\t\t\tlet id = read()\n\t\t\t\t\t\tfor (let i = 2; i < length; i++) {\n\t\t\t\t\t\t\trecordDefinition(id++, read())\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn read()\n\t\t\t\t\t} else if (token == BUNDLED_STRINGS_ID) {\n\t\t\t\t\t\treturn readBundleExt()\n\t\t\t\t\t}\n\t\t\t\t\tif (currentDecoder.getShared) {\n\t\t\t\t\t\tloadShared()\n\t\t\t\t\t\tstructure = currentStructures[token & 0x1fff]\n\t\t\t\t\t\tif (structure) {\n\t\t\t\t\t\t\tif (!structure.read)\n\t\t\t\t\t\t\t\tstructure.read = createStructureReader(structure)\n\t\t\t\t\t\t\treturn structure.read()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet extension = currentExtensions[token]\n\t\t\tif (extension) {\n\t\t\t\tif (extension.handlesRead)\n\t\t\t\t\treturn extension(read)\n\t\t\t\telse\n\t\t\t\t\treturn extension(read())\n\t\t\t} else {\n\t\t\t\tlet input = read()\n\t\t\t\tfor (let i = 0; i < currentExtensionRanges.length; i++) {\n\t\t\t\t\tlet value = currentExtensionRanges[i](token, input)\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\treturn value\n\t\t\t\t}\n\t\t\t\treturn new Tag(input, token)\n\t\t\t}\n\t\tcase 7: // fixed value\n\t\t\tswitch (token) {\n\t\t\t\tcase 0x14: return false\n\t\t\t\tcase 0x15: return true\n\t\t\t\tcase 0x16: return null\n\t\t\t\tcase 0x17: return; // undefined\n\t\t\t\tcase 0x1f:\n\t\t\t\tdefault:\n\t\t\t\t\tlet packedValue = (packedValues || getPackedValues())[token]\n\t\t\t\t\tif (packedValue !== undefined)\n\t\t\t\t\t\treturn packedValue\n\t\t\t\t\tthrow new Error('Unknown token ' + token)\n\t\t\t}\n\t\tdefault: // negative int\n\t\t\tif (isNaN(token)) {\n\t\t\t\tlet error = new Error('Unexpected end of CBOR data')\n\t\t\t\terror.incomplete = true\n\t\t\t\tthrow error\n\t\t\t}\n\t\t\tthrow new Error('Unknown CBOR token ' + token)\n\t}\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/\nfunction createStructureReader(structure) {\n\tif (!structure) throw new Error('Structure is required in record definition');\n\tfunction readObject() {\n\t\t// get the array size from the header\n\t\tlet length = src[position++]\n\t\t//let majorType = token >> 5\n\t\tlength = length & 0x1f\n\t\tif (length > 0x17) {\n\t\t\tswitch (length) {\n\t\t\t\tcase 0x18:\n\t\t\t\t\tlength = src[position++]\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x19:\n\t\t\t\t\tlength = dataView.getUint16(position)\n\t\t\t\t\tposition += 2\n\t\t\t\t\tbreak\n\t\t\t\tcase 0x1a:\n\t\t\t\t\tlength = dataView.getUint32(position)\n\t\t\t\t\tposition += 4\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Expected array header, but got ' + src[position - 1])\n\t\t\t}\n\t\t}\n\t\t// This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n\t\tlet compiledReader = this.compiledReader // first look to see if we have the fast compiled function\n\t\twhile(compiledReader) {\n\t\t\t// we have a fast compiled object literal reader\n\t\t\tif (compiledReader.propertyCount === length)\n\t\t\t\treturn compiledReader(read) // with the right length, so we use it\n\t\t\tcompiledReader = compiledReader.next // see if there is another reader with the right length\n\t\t}\n\t\tif (this.slowReads++ >= inlineObjectReadThreshold) { // create a fast compiled reader\n\t\t\tlet array = this.length == length ? this : this.slice(0, length)\n\t\t\tcompiledReader = currentDecoder.keyMap \n\t\t\t? new Function('r', 'return {' + array.map(k => currentDecoder.decodeKey(k)).map(k => validName.test(k) ? safeKey(k) + ':r()' : ('[' + JSON.stringify(k) + ']:r()')).join(',') + '}')\n\t\t\t: new Function('r', 'return {' + array.map(key => validName.test(key) ? safeKey(key) + ':r()' : ('[' + JSON.stringify(key) + ']:r()')).join(',') + '}')\n\t\t\tif (this.compiledReader)\n\t\t\t\tcompiledReader.next = this.compiledReader // if there is an existing one, we store multiple readers as a linked list because it is usually pretty rare to have multiple readers (of different length) for the same structure\n\t\t\tcompiledReader.propertyCount = length\n\t\t\tthis.compiledReader = compiledReader\n\t\t\treturn compiledReader(read)\n\t\t}\n\t\tlet object = {}\n\t\tif (currentDecoder.keyMap) for (let i = 0; i < length; i++) object[safeKey(currentDecoder.decodeKey(this[i]))] = read()\n\t\telse for (let i = 0; i < length; i++) {\n\t\t\tobject[safeKey(this[i])] = read();\n\t\t}\n\t\treturn object\n\t}\n\tstructure.slowReads = 0\n\treturn readObject\n}\n\nfunction safeKey(key) {\n\t// protect against prototype pollution\n\tif (typeof key === 'string') return key === '__proto__' ? '__proto_' : key\n\tif (typeof key === 'number' || typeof key === 'boolean' || typeof key === 'bigint') return key.toString();\n\tif (key == null) return key + '';\n\t// protect against expensive (DoS) string conversions\n\tthrow new Error('Invalid property name type ' + typeof key);\n}\n\nlet readFixedString = readStringJS\nlet readString8 = readStringJS\nlet readString16 = readStringJS\nlet readString32 = readStringJS\n\nexport let isNativeAccelerationEnabled = false\nexport function setExtractor(extractStrings) {\n\tisNativeAccelerationEnabled = true\n\treadFixedString = readString(1)\n\treadString8 = readString(2)\n\treadString16 = readString(3)\n\treadString32 = readString(5)\n\tfunction readString(headerLength) {\n\t\treturn function readString(length) {\n\t\t\tlet string = strings[stringPosition++]\n\t\t\tif (string == null) {\n\t\t\t\tif (bundledStrings)\n\t\t\t\t\treturn readStringJS(length)\n\t\t\t\tlet extraction = extractStrings(position, srcEnd, length, src)\n\t\t\t\tif (typeof extraction == 'string') {\n\t\t\t\t\tstring = extraction\n\t\t\t\t\tstrings = EMPTY_ARRAY\n\t\t\t\t} else {\n\t\t\t\t\tstrings = extraction\n\t\t\t\t\tstringPosition = 1\n\t\t\t\t\tsrcStringEnd = 1 // even if a utf-8 string was decoded, must indicate we are in the midst of extracted strings and can't skip strings\n\t\t\t\t\tstring = strings[0]\n\t\t\t\t\tif (string === undefined)\n\t\t\t\t\t\tthrow new Error('Unexpected end of buffer')\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet srcStringLength = string.length\n\t\t\tif (srcStringLength <= length) {\n\t\t\t\tposition += length\n\t\t\t\treturn string\n\t\t\t}\n\t\t\tsrcString = string\n\t\t\tsrcStringStart = position\n\t\t\tsrcStringEnd = position + srcStringLength\n\t\t\tposition += length\n\t\t\treturn string.slice(0, length) // we know we just want the beginning\n\t\t}\n\t}\n}\nfunction readStringJS(length) {\n\tlet result\n\tif (length < 16) {\n\t\tif (result = shortStringInJS(length))\n\t\t\treturn result\n\t}\n\tif (length > 64 && decoder)\n\t\treturn decoder.decode(src.subarray(position, position += length))\n\tconst end = position + length\n\tconst units = []\n\tresult = ''\n\twhile (position < end) {\n\t\tconst byte1 = src[position++]\n\t\tif ((byte1 & 0x80) === 0) {\n\t\t\t// 1 byte\n\t\t\tunits.push(byte1)\n\t\t} else if ((byte1 & 0xe0) === 0xc0) {\n\t\t\t// 2 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 6) | byte2)\n\t\t} else if ((byte1 & 0xf0) === 0xe0) {\n\t\t\t// 3 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tunits.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3)\n\t\t} else if ((byte1 & 0xf8) === 0xf0) {\n\t\t\t// 4 bytes\n\t\t\tconst byte2 = src[position++] & 0x3f\n\t\t\tconst byte3 = src[position++] & 0x3f\n\t\t\tconst byte4 = src[position++] & 0x3f\n\t\t\tlet unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4\n\t\t\tif (unit > 0xffff) {\n\t\t\t\tunit -= 0x10000\n\t\t\t\tunits.push(((unit >>> 10) & 0x3ff) | 0xd800)\n\t\t\t\tunit = 0xdc00 | (unit & 0x3ff)\n\t\t\t}\n\t\t\tunits.push(unit)\n\t\t} else {\n\t\t\tunits.push(byte1)\n\t\t}\n\n\t\tif (units.length >= 0x1000) {\n\t\t\tresult += fromCharCode.apply(String, units)\n\t\t\tunits.length = 0\n\t\t}\n\t}\n\n\tif (units.length > 0) {\n\t\tresult += fromCharCode.apply(String, units)\n\t}\n\n\treturn result\n}\nlet fromCharCode = String.fromCharCode\nfunction longStringInJS(length) {\n\tlet start = position\n\tlet bytes = new Array(length)\n\tfor (let i = 0; i < length; i++) {\n\t\tconst byte = src[position++];\n\t\tif ((byte & 0x80) > 0) {\n\t\t\tposition = start\n    \t\t\treturn\n    \t\t}\n    \t\tbytes[i] = byte\n    \t}\n    \treturn fromCharCode.apply(String, bytes)\n}\nfunction shortStringInJS(length) {\n\tif (length < 4) {\n\t\tif (length < 2) {\n\t\t\tif (length === 0)\n\t\t\t\treturn ''\n\t\t\telse {\n\t\t\t\tlet a = src[position++]\n\t\t\t\tif ((a & 0x80) > 1) {\n\t\t\t\t\tposition -= 1\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a)\n\t\t\t}\n\t\t} else {\n\t\t\tlet a = src[position++]\n\t\t\tlet b = src[position++]\n\t\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0) {\n\t\t\t\tposition -= 2\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 3)\n\t\t\t\treturn fromCharCode(a, b)\n\t\t\tlet c = src[position++]\n\t\t\tif ((c & 0x80) > 0) {\n\t\t\t\tposition -= 3\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c)\n\t\t}\n\t} else {\n\t\tlet a = src[position++]\n\t\tlet b = src[position++]\n\t\tlet c = src[position++]\n\t\tlet d = src[position++]\n\t\tif ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n\t\t\tposition -= 4\n\t\t\treturn\n\t\t}\n\t\tif (length < 6) {\n\t\t\tif (length === 4)\n\t\t\t\treturn fromCharCode(a, b, c, d)\n\t\t\telse {\n\t\t\t\tlet e = src[position++]\n\t\t\t\tif ((e & 0x80) > 0) {\n\t\t\t\t\tposition -= 5\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e)\n\t\t\t}\n\t\t} else if (length < 8) {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0) {\n\t\t\t\tposition -= 6\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 7)\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f)\n\t\t\tlet g = src[position++]\n\t\t\tif ((g & 0x80) > 0) {\n\t\t\t\tposition -= 7\n\t\t\t\treturn\n\t\t\t}\n\t\t\treturn fromCharCode(a, b, c, d, e, f, g)\n\t\t} else {\n\t\t\tlet e = src[position++]\n\t\t\tlet f = src[position++]\n\t\t\tlet g = src[position++]\n\t\t\tlet h = src[position++]\n\t\t\tif ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n\t\t\t\tposition -= 8\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif (length < 10) {\n\t\t\t\tif (length === 8)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h)\n\t\t\t\telse {\n\t\t\t\t\tlet i = src[position++]\n\t\t\t\t\tif ((i & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 9\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i)\n\t\t\t\t}\n\t\t\t} else if (length < 12) {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0) {\n\t\t\t\t\tposition -= 10\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 11)\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j)\n\t\t\t\tlet k = src[position++]\n\t\t\t\tif ((k & 0x80) > 0) {\n\t\t\t\t\tposition -= 11\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k)\n\t\t\t} else {\n\t\t\t\tlet i = src[position++]\n\t\t\t\tlet j = src[position++]\n\t\t\t\tlet k = src[position++]\n\t\t\t\tlet l = src[position++]\n\t\t\t\tif ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n\t\t\t\t\tposition -= 12\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (length < 14) {\n\t\t\t\t\tif (length === 12)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l)\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\t\tif ((m & 0x80) > 0) {\n\t\t\t\t\t\t\tposition -= 13\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet m = src[position++]\n\t\t\t\t\tlet n = src[position++]\n\t\t\t\t\tif ((m & 0x80) > 0 || (n & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 14\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tif (length < 15)\n\t\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n)\n\t\t\t\t\tlet o = src[position++]\n\t\t\t\t\tif ((o & 0x80) > 0) {\n\t\t\t\t\t\tposition -= 15\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\treturn fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction readBin(length) {\n\treturn currentDecoder.copyBuffers ?\n\t\t// specifically use the copying slice (not the node one)\n\t\tUint8Array.prototype.slice.call(src, position, position += length) :\n\t\tsrc.subarray(position, position += length)\n}\nfunction readExt(length) {\n\tlet type = src[position++]\n\tif (currentExtensions[type]) {\n\t\treturn currentExtensions[type](src.subarray(position, position += length))\n\t}\n\telse\n\t\tthrow new Error('Unknown extension type ' + type)\n}\nlet f32Array = new Float32Array(1)\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4)\nfunction getFloat16() {\n\tlet byte0 = src[position++]\n\tlet byte1 = src[position++]\n\tlet exponent = (byte0 & 0x7f) >> 2;\n\tif (exponent === 0x1f) { // specials\n\t\tif (byte1 || (byte0 & 3))\n\t\t\treturn NaN;\n\t\treturn (byte0 & 0x80) ? -Infinity : Infinity;\n\t}\n\tif (exponent === 0) { // sub-normals\n\t\t// significand with 10 fractional bits and divided by 2^14\n\t\tlet abs = (((byte0 & 3) << 8) | byte1) / (1 << 24)\n\t\treturn (byte0 & 0x80) ? -abs : abs\n\t}\n\n\tu8Array[3] = (byte0 & 0x80) | // sign bit\n\t\t((exponent >> 1) + 56) // 4 of 5 of the exponent bits, re-offset-ed\n\tu8Array[2] = ((byte0 & 7) << 5) | // last exponent bit and first two mantissa bits\n\t\t(byte1 >> 3) // next 5 bits of mantissa\n\tu8Array[1] = byte1 << 5; // last three bits of mantissa\n\tu8Array[0] = 0;\n\treturn f32Array[0];\n}\n\nlet keyCache = new Array(4096)\nfunction readKey() {\n\tlet length = src[position++]\n\tif (length >= 0x60 && length < 0x78) {\n\t\t// fixstr, potentially use key cache\n\t\tlength = length - 0x60\n\t\tif (srcStringEnd >= position) // if it has been extracted, must use it (and faster anyway)\n\t\t\treturn srcString.slice(position - srcStringStart, (position += length) - srcStringStart)\n\t\telse if (!(srcStringEnd == 0 && srcEnd < 180))\n\t\t\treturn readFixedString(length)\n\t} else { // not cacheable, go back and do a standard read\n\t\tposition--\n\t\treturn read()\n\t}\n\tlet key = ((length << 5) ^ (length > 1 ? dataView.getUint16(position) : length > 0 ? src[position] : 0)) & 0xfff\n\tlet entry = keyCache[key]\n\tlet checkPosition = position\n\tlet end = position + length - 3\n\tlet chunk\n\tlet i = 0\n\tif (entry && entry.bytes == length) {\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = dataView.getUint32(checkPosition)\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcheckPosition += 4\n\t\t}\n\t\tend += 3\n\t\twhile (checkPosition < end) {\n\t\t\tchunk = src[checkPosition++]\n\t\t\tif (chunk != entry[i++]) {\n\t\t\t\tcheckPosition = 0x70000000\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif (checkPosition === end) {\n\t\t\tposition = checkPosition\n\t\t\treturn entry.string\n\t\t}\n\t\tend -= 3\n\t\tcheckPosition = position\n\t}\n\tentry = []\n\tkeyCache[key] = entry\n\tentry.bytes = length\n\twhile (checkPosition < end) {\n\t\tchunk = dataView.getUint32(checkPosition)\n\t\tentry.push(chunk)\n\t\tcheckPosition += 4\n\t}\n\tend += 3\n\twhile (checkPosition < end) {\n\t\tchunk = src[checkPosition++]\n\t\tentry.push(chunk)\n\t}\n\t// for small blocks, avoiding the overhead of the extract call is helpful\n\tlet string = length < 16 ? shortStringInJS(length) : longStringInJS(length)\n\tif (string != null)\n\t\treturn entry.string = string\n\treturn entry.string = readFixedString(length)\n}\n\nexport class Tag {\n\tconstructor(value, tag) {\n\t\tthis.value = value\n\t\tthis.tag = tag\n\t}\n}\n\ncurrentExtensions[0] = (dateString) => {\n\t// string date extension\n\treturn new Date(dateString)\n}\n\ncurrentExtensions[1] = (epochSec) => {\n\t// numeric date extension\n\treturn new Date(Math.round(epochSec * 1000))\n}\n\ncurrentExtensions[2] = (buffer) => {\n\t// bigint extension\n\tlet value = BigInt(0)\n\tfor (let i = 0, l = buffer.byteLength; i < l; i++) {\n\t\tvalue = BigInt(buffer[i]) + (value << BigInt(8))\n\t}\n\treturn value\n}\n\ncurrentExtensions[3] = (buffer) => {\n\t// negative bigint extension\n\treturn BigInt(-1) - currentExtensions[2](buffer)\n}\ncurrentExtensions[4] = (fraction) => {\n\t// best to reparse to maintain accuracy\n\treturn +(fraction[1] + 'e' + fraction[0])\n}\n\ncurrentExtensions[5] = (fraction) => {\n\t// probably not sufficiently accurate\n\treturn fraction[1] * Math.exp(fraction[0] * Math.log(2))\n}\n\n// the registration of the record definition extension\nconst recordDefinition = (id, structure) => {\n\tid = id - 0xe000\n\tlet existingStructure = currentStructures[id]\n\tif (existingStructure && existingStructure.isShared) {\n\t\t(currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure\n\t}\n\tcurrentStructures[id] = structure\n\n\tstructure.read = createStructureReader(structure)\n}\ncurrentExtensions[LEGACY_RECORD_INLINE_ID] = (data) => {\n\tlet length = data.length\n\tlet structure = data[1]\n\trecordDefinition(data[0], structure)\n\tlet object = {}\n\tfor (let i = 2; i < length; i++) {\n\t\tlet key = structure[i - 2]\n\t\tobject[safeKey(key)] = data[i]\n\t}\n\treturn object\n}\ncurrentExtensions[14] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 += value)\n\treturn new Tag(value, 14)\n}\ncurrentExtensions[15] = (value) => {\n\tif (bundledStrings)\n\t\treturn bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value)\n\treturn new Tag(value, 15)\n}\nlet glbl = { Error, RegExp }\ncurrentExtensions[27] = (data) => { // http://cbor.schmorp.de/generic-object\n\treturn (glbl[data[0]] || Error)(data[1], data[2])\n}\nconst packedTable = (read) => {\n\tif (src[position++] != 0x84) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\tif (src.length < position)\n\t\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tlet newPackedValues = read() // packed values\n\tif (!newPackedValues || !newPackedValues.length) {\n\t\tlet error = new Error('Packed values structure must be followed by a 4 element array')\n\t\terror.incomplete = true\n\t\tthrow error\n\t}\n\tpackedValues = packedValues ? newPackedValues.concat(packedValues.slice(newPackedValues.length)) : newPackedValues\n\tpackedValues.prefixes = read()\n\tpackedValues.suffixes = read()\n\treturn read() // read the rump\n}\npackedTable.handlesRead = true\ncurrentExtensions[51] = packedTable\n\ncurrentExtensions[PACKED_REFERENCE_TAG_ID] = (data) => { // packed reference\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\treturn new Tag(data, PACKED_REFERENCE_TAG_ID)\n\t}\n\tif (typeof data == 'number')\n\t\treturn packedValues[16 + (data >= 0 ? 2 * data : (-2 * data - 1))]\n\tlet error = new Error('No support for non-integer packed references yet')\n\tif (data === undefined)\n\t\terror.incomplete = true\n\tthrow error\n}\n\n// The following code is an incomplete implementation of http://cbor.schmorp.de/stringref\n// the real thing would need to implemennt more logic to populate the stringRefs table and\n// maintain a stack of stringRef \"namespaces\".\n//\n// currentExtensions[25] = (id) => {\n// \treturn stringRefs[id]\n// }\n// currentExtensions[256] = (read) => {\n// \tstringRefs = []\n// \ttry {\n// \t\treturn read()\n// \t} finally {\n// \t\tstringRefs = null\n// \t}\n// }\n// currentExtensions[256].handlesRead = true\n\ncurrentExtensions[28] = (read) => { \n\t// shareable http://cbor.schmorp.de/value-sharing (for structured clones)\n\tif (!referenceMap) {\n\t\treferenceMap = new Map()\n\t\treferenceMap.id = 0\n\t}\n\tlet id = referenceMap.id++\n\tlet startingPosition = position\n\tlet token = src[position]\n\tlet target\n\t// TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n\t// ahead past references to record structure definitions\n\tif ((token >> 5) == 4)\n\t\ttarget = []\n\telse\n\t\ttarget = {}\n\n\tlet refEntry = { target } // a placeholder object\n\treferenceMap.set(id, refEntry)\n\tlet targetProperties = read() // read the next value as the target object to id\n\tif (refEntry.used) {// there is a cycle, so we have to assign properties to original target\n\t\tif (Object.getPrototypeOf(target) !== Object.getPrototypeOf(targetProperties)) {\n\t\t\t// this means that the returned target does not match the targetProperties, so we need rerun the read to\n\t\t\t// have the correctly create instance be assigned as a reference, then we do the copy the properties back to the\n\t\t\t// target\n\t\t\t// reset the position so that the read can be repeated\n\t\t\tposition = startingPosition\n\t\t\t// the returned instance is our new target for references\n\t\t\ttarget = targetProperties\n\t\t\treferenceMap.set(id, { target })\n\t\t\ttargetProperties = read()\n\t\t}\n\t\treturn Object.assign(target, targetProperties)\n\t}\n\trefEntry.target = targetProperties // the placeholder wasn't used, replace with the deserialized one\n\treturn targetProperties // no cycle, can just use the returned read object\n}\ncurrentExtensions[28].handlesRead = true\n\ncurrentExtensions[29] = (id) => {\n\t// sharedref http://cbor.schmorp.de/value-sharing (for structured clones)\n\tlet refEntry = referenceMap.get(id)\n\trefEntry.used = true\n\treturn refEntry.target\n}\n\ncurrentExtensions[258] = (array) => new Set(array); // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n(currentExtensions[259] = (read) => {\n\t// https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec\n\t// for decoding as a standard Map\n\tif (currentDecoder.mapsAsObjects) {\n\t\tcurrentDecoder.mapsAsObjects = false\n\t\trestoreMapsAsObject = true\n\t}\n\treturn read()\n}).handlesRead = true\nfunction combine(a, b) {\n\tif (typeof a === 'string')\n\t\treturn a + b\n\tif (a instanceof Array)\n\t\treturn a.concat(b)\n\treturn Object.assign({}, a, b)\n}\nfunction getPackedValues() {\n\tif (!packedValues) {\n\t\tif (currentDecoder.getShared)\n\t\t\tloadShared()\n\t\telse\n\t\t\tthrow new Error('No packed values available')\n\t}\n\treturn packedValues\n}\nconst SHARED_DATA_TAG_ID = 0x53687264 // ascii 'Shrd'\ncurrentExtensionRanges.push((tag, input) => {\n\tif (tag >= 225 && tag <= 255)\n\t\treturn combine(getPackedValues().prefixes[tag - 224], input)\n\tif (tag >= 28704 && tag <= 32767)\n\t\treturn combine(getPackedValues().prefixes[tag - 28672], input)\n\tif (tag >= 1879052288 && tag <= 2147483647)\n\t\treturn combine(getPackedValues().prefixes[tag - 1879048192], input)\n\tif (tag >= 216 && tag <= 223)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 216])\n\tif (tag >= 27647 && tag <= 28671)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 27639])\n\tif (tag >= 1811940352 && tag <= 1879048191)\n\t\treturn combine(input, getPackedValues().suffixes[tag - 1811939328])\n\tif (tag == SHARED_DATA_TAG_ID) {// we do a special check for this so that we can keep the currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n\t\treturn {\n\t\t\tpackedValues: packedValues,\n\t\t\tstructures: currentStructures.slice(0),\n\t\t\tversion: input,\n\t\t}\n\t}\n\tif (tag == 55799) // self-descriptive CBOR tag, just return input value\n\t\treturn input\n})\n\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nexport const typedArrays = [Uint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? { name:'BigUint64Array' } : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? { name:'BigInt64Array' } : BigInt64Array, Float32Array, Float64Array]\nconst typedArrayTags = [64, 68, 69, 70, 71, 72, 77, 78, 79, 85, 86]\nfor (let i = 0; i < typedArrays.length; i++) {\n\tregisterTypedArray(typedArrays[i], typedArrayTags[i])\n}\nfunction registerTypedArray(TypedArray, tag) {\n\tlet dvMethod = 'get' + TypedArray.name.slice(0, -5)\n\tlet bytesPerElement;\n\tif (typeof TypedArray === 'function')\n\t\tbytesPerElement = TypedArray.BYTES_PER_ELEMENT;\n\telse\n\t\tTypedArray = null;\n\tfor (let littleEndian = 0; littleEndian < 2; littleEndian++) {\n\t\tif (!littleEndian && bytesPerElement == 1)\n\t\t\tcontinue\n\t\tlet sizeShift = bytesPerElement == 2 ? 1 : bytesPerElement == 4 ? 2 : bytesPerElement == 8 ? 3 : 0\n\t\tcurrentExtensions[littleEndian ? tag : (tag - 4)] = (bytesPerElement == 1 || littleEndian == isLittleEndianMachine) ? (buffer) => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tif (!currentDecoder.copyBuffers) {\n\t\t\t\t// try provide a direct view, but will only work if we are byte-aligned\n\t\t\t\tif (bytesPerElement === 1 ||\n\t\t\t\t\tbytesPerElement === 2 && !(buffer.byteOffset & 1) ||\n\t\t\t\t\tbytesPerElement === 4 && !(buffer.byteOffset & 3) ||\n\t\t\t\t\tbytesPerElement === 8 && !(buffer.byteOffset & 7))\n\t\t\t\t\treturn new TypedArray(buffer.buffer, buffer.byteOffset, buffer.byteLength >> sizeShift);\n\t\t\t}\n\t\t\t// we have to slice/copy here to get a new ArrayBuffer, if we are not word/byte aligned\n\t\t\treturn new TypedArray(Uint8Array.prototype.slice.call(buffer, 0).buffer)\n\t\t} : buffer => {\n\t\t\tif (!TypedArray)\n\t\t\t\tthrow new Error('Could not find typed array for code ' + tag)\n\t\t\tlet dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\t\t\tlet elements = buffer.length >> sizeShift\n\t\t\tlet ta = new TypedArray(elements)\n\t\t\tlet method = dv[dvMethod]\n\t\t\tfor (let i = 0; i < elements; i++) {\n\t\t\t\tta[i] = method.call(dv, i << sizeShift, littleEndian)\n\t\t\t}\n\t\t\treturn ta\n\t\t}\n\t}\n}\n\nfunction readBundleExt() {\n\tlet length = readJustLength()\n\tlet bundlePosition = position + read()\n\tfor (let i = 2; i < length; i++) {\n\t\t// skip past bundles that were already read\n\t\tlet bundleLength = readJustLength() // this will increment position, so must add to position afterwards\n\t\tposition += bundleLength\n\t}\n\tlet dataPosition = position\n\tposition = bundlePosition\n\tbundledStrings = [readStringJS(readJustLength()), readStringJS(readJustLength())]\n\tbundledStrings.position0 = 0\n\tbundledStrings.position1 = 0\n\tbundledStrings.postBundlePosition = position\n\tposition = dataPosition\n\treturn read()\n}\n\nfunction readJustLength() {\n\tlet token = src[position++] & 0x1f\n\tif (token > 0x17) {\n\t\tswitch (token) {\n\t\t\tcase 0x18:\n\t\t\t\ttoken = src[position++]\n\t\t\t\tbreak\n\t\t\tcase 0x19:\n\t\t\t\ttoken = dataView.getUint16(position)\n\t\t\t\tposition += 2\n\t\t\t\tbreak\n\t\t\tcase 0x1a:\n\t\t\t\ttoken = dataView.getUint32(position)\n\t\t\t\tposition += 4\n\t\t\t\tbreak\n\t\t}\n\t}\n\treturn token\n}\n\nfunction loadShared() {\n\tif (currentDecoder.getShared) {\n\t\tlet sharedData = saveState(() => {\n\t\t\t// save the state in case getShared modifies our buffer\n\t\t\tsrc = null\n\t\t\treturn currentDecoder.getShared()\n\t\t}) || {}\n\t\tlet updatedStructures = sharedData.structures || []\n\t\tcurrentDecoder.sharedVersion = sharedData.version\n\t\tpackedValues = currentDecoder.sharedValues = sharedData.packedValues\n\t\tif (currentStructures === true)\n\t\t\tcurrentDecoder.structures = currentStructures = updatedStructures\n\t\telse\n\t\t\tcurrentStructures.splice.apply(currentStructures, [0, updatedStructures.length].concat(updatedStructures))\n\t}\n}\n\nfunction saveState(callback) {\n\tlet savedSrcEnd = srcEnd\n\tlet savedPosition = position\n\tlet savedStringPosition = stringPosition\n\tlet savedSrcStringStart = srcStringStart\n\tlet savedSrcStringEnd = srcStringEnd\n\tlet savedSrcString = srcString\n\tlet savedStrings = strings\n\tlet savedReferenceMap = referenceMap\n\tlet savedBundledStrings = bundledStrings\n\n\t// TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n\tlet savedSrc = new Uint8Array(src.slice(0, srcEnd)) // we copy the data in case it changes while external data is processed\n\tlet savedStructures = currentStructures\n\tlet savedDecoder = currentDecoder\n\tlet savedSequentialMode = sequentialMode\n\tlet value = callback()\n\tsrcEnd = savedSrcEnd\n\tposition = savedPosition\n\tstringPosition = savedStringPosition\n\tsrcStringStart = savedSrcStringStart\n\tsrcStringEnd = savedSrcStringEnd\n\tsrcString = savedSrcString\n\tstrings = savedStrings\n\treferenceMap = savedReferenceMap\n\tbundledStrings = savedBundledStrings\n\tsrc = savedSrc\n\tsequentialMode = savedSequentialMode\n\tcurrentStructures = savedStructures\n\tcurrentDecoder = savedDecoder\n\tdataView = new DataView(src.buffer, src.byteOffset, src.byteLength)\n\treturn value\n}\nexport function clearSource() {\n\tsrc = null\n\treferenceMap = null\n\tcurrentStructures = null\n}\n\nexport function addExtension(extension) {\n\tcurrentExtensions[extension.tag] = extension.decode\n}\n\nexport function setSizeLimits(limits) {\n\tif (limits.maxMapSize) maxMapSize = limits.maxMapSize;\n\tif (limits.maxArraySize) maxArraySize = limits.maxArraySize;\n\tif (limits.maxObjectSize) maxObjectSize = limits.maxObjectSize;\n}\n\nexport const mult10 = new Array(147) // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i < 256; i++) {\n\tmult10[i] = +('1e' + Math.floor(45.15 - i * 0.30103))\n}\nlet defaultDecoder = new Decoder({ useRecords: false })\nexport const decode = defaultDecoder.decode\nexport const decodeMultiple = defaultDecoder.decodeMultiple\nexport const FLOAT32_OPTIONS = {\n\tNEVER: 0,\n\tALWAYS: 1,\n\tDECIMAL_ROUND: 3,\n\tDECIMAL_FIT: 4\n}\nexport function roundFloat32(float32Number) {\n\tf32Array[0] = float32Number\n\tlet multiplier = mult10[((u8Array[3] & 0x7f) << 1) | (u8Array[2] >> 7)]\n\treturn ((multiplier * float32Number + (float32Number > 0 ? 0.5 : -0.5)) >> 0) / multiplier\n}\n","import { Decoder, mult10, Tag, typedArrays, addExtension as decodeAddExtension } from './decode.js'\nlet textEncoder\ntry {\n\ttextEncoder = new TextEncoder()\n} catch (error) {}\nlet extensions, extensionClasses\nconst Buffer = typeof globalThis === 'object' && globalThis.Buffer;\nconst hasNodeBuffer = typeof Buffer !== 'undefined'\nconst ByteArrayAllocate = hasNodeBuffer ? Buffer.allocUnsafeSlow : Uint8Array\nconst ByteArray = hasNodeBuffer ? Buffer : Uint8Array\nconst MAX_STRUCTURES = 0x100\nconst MAX_BUFFER_SIZE = hasNodeBuffer ? 0x100000000 : 0x7fd00000\nlet serializationId = 1\nlet throwOnIterable\nlet target\nlet targetView\nlet position = 0\nlet safeEnd\nlet bundledStrings = null\nconst MAX_BUNDLE_SIZE = 0xf000\nconst hasNonLatin = /[\\u0080-\\uFFFF]/\nconst RECORD_SYMBOL = Symbol('record-id')\nexport class Encoder extends Decoder {\n\tconstructor(options) {\n\t\tsuper(options)\n\t\tthis.offset = 0\n\t\tlet typeBuffer\n\t\tlet start\n\t\tlet sharedStructures\n\t\tlet hasSharedUpdate\n\t\tlet structures\n\t\tlet referenceMap\n\t\toptions = options || {}\n\t\tlet encodeUtf8 = ByteArray.prototype.utf8Write ? function(string, position, maxBytes) {\n\t\t\treturn target.utf8Write(string, position, maxBytes)\n\t\t} : (textEncoder && textEncoder.encodeInto) ?\n\t\t\tfunction(string, position) {\n\t\t\t\treturn textEncoder.encodeInto(string, target.subarray(position)).written\n\t\t\t} : false\n\n\t\tlet encoder = this\n\t\tlet hasSharedStructures = options.structures || options.saveStructures\n\t\tlet maxSharedStructures = options.maxSharedStructures\n\t\tif (maxSharedStructures == null)\n\t\t\tmaxSharedStructures = hasSharedStructures ? 128 : 0\n\t\tif (maxSharedStructures > 8190)\n\t\t\tthrow new Error('Maximum maxSharedStructure is 8190')\n\t\tlet isSequential = options.sequential\n\t\tif (isSequential) {\n\t\t\tmaxSharedStructures = 0\n\t\t}\n\t\tif (!this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.saveStructures)\n\t\t\tthis.saveShared = this.saveStructures\n\t\tlet samplingPackedValues, packedObjectMap, sharedValues = options.sharedValues\n\t\tlet sharedPackedObjectMap\n\t\tif (sharedValues) {\n\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++) {\n\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t}\n\t\t}\n\t\tlet recordIdsToRemove = []\n\t\tlet transitionsCount = 0\n\t\tlet serializationsSinceTransitionRebuild = 0\n\t\t\n\t\tthis.mapEncode = function(value, encodeOptions) {\n\t\t\t// Experimental support for premapping keys using _keyMap instad of keyMap - not optiimised yet)\n\t\t\tif (this._keyMap && !this._mapped) {\n\t\t\t\t//console.log('encoding ', value)\n\t\t\t\tswitch (value.constructor.name) {\n\t\t\t\t\tcase 'Array': \n\t\t\t\t\t\tvalue = value.map(r => this.encodeKeys(r))\n\t\t\t\t\t\tbreak\n\t\t\t\t\t//case 'Map': \n\t\t\t\t\t//\tvalue = this.encodeKeys(value)\n\t\t\t\t\t//\tbreak\n\t\t\t\t}\n\t\t\t\t//this._mapped = true\n\t\t\t}\n\t\t\treturn this.encode(value, encodeOptions)\n\t\t}\n\t\t\n\t\tthis.encode = function(value, encodeOptions)\t{\n\t\t\tif (!target) {\n\t\t\t\ttarget = new ByteArrayAllocate(8192)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, 8192)\n\t\t\t\tposition = 0\n\t\t\t}\n\t\t\tsafeEnd = target.length - 10\n\t\t\tif (safeEnd - position < 0x800) {\n\t\t\t\t// don't start too close to the end, \n\t\t\t\ttarget = new ByteArrayAllocate(target.length)\n\t\t\t\ttargetView = new DataView(target.buffer, 0, target.length)\n\t\t\t\tsafeEnd = target.length - 10\n\t\t\t\tposition = 0\n\t\t\t} else if (encodeOptions === REUSE_BUFFER_MODE)\n\t\t\t\tposition = (position + 7) & 0x7ffffff8 // Word align to make any future copying of this buffer faster\n\t\t\tstart = position\n\t\t\tif (encoder.useSelfDescribedHeader) {\n\t\t\t\ttargetView.setUint32(position, 0xd9d9f700) // tag two byte, then self-descriptive tag\n\t\t\t\tposition += 3\n\t\t\t}\n\t\t\treferenceMap = encoder.structuredClone ? new Map() : null\n\t\t\tif (encoder.bundleStrings && typeof value !== 'string') {\n\t\t\t\tbundledStrings = []\n\t\t\t\tbundledStrings.size = Infinity // force a new bundle start on first string\n\t\t\t} else\n\t\t\t\tbundledStrings = null\n\n\t\t\tsharedStructures = encoder.structures\n\t\t\tif (sharedStructures) {\n\t\t\t\tif (sharedStructures.uninitialized) {\n\t\t\t\t\tlet sharedData = encoder.getShared() || {}\n\t\t\t\t\tencoder.structures = sharedStructures = sharedData.structures || []\n\t\t\t\t\tencoder.sharedVersion = sharedData.version\n\t\t\t\t\tlet sharedValues = encoder.sharedValues = sharedData.packedValues\n\t\t\t\t\tif (sharedValues) {\n\t\t\t\t\t\tsharedPackedObjectMap = {}\n\t\t\t\t\t\tfor (let i = 0, l = sharedValues.length; i < l; i++)\n\t\t\t\t\t\t\tsharedPackedObjectMap[sharedValues[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet sharedStructuresLength = sharedStructures.length\n\t\t\t\tif (sharedStructuresLength > maxSharedStructures && !isSequential)\n\t\t\t\t\tsharedStructuresLength = maxSharedStructures\n\t\t\t\tif (!sharedStructures.transitions) {\n\t\t\t\t\t// rebuild our structure transitions\n\t\t\t\t\tsharedStructures.transitions = Object.create(null)\n\t\t\t\t\tfor (let i = 0; i < sharedStructuresLength; i++) {\n\t\t\t\t\t\tlet keys = sharedStructures[i]\n\t\t\t\t\t\t//console.log('shared struct keys:', keys)\n\t\t\t\t\t\tif (!keys)\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\tlet nextTransition, transition = sharedStructures.transitions\n\t\t\t\t\t\tfor (let j = 0, l = keys.length; j < l; j++) {\n\t\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined)\n\t\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i\n\t\t\t\t\t\t\tlet key = keys[j]\n\t\t\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransition[RECORD_SYMBOL] = i | 0x100000\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!isSequential)\n\t\t\t\t\tsharedStructures.nextId = sharedStructuresLength\n\t\t\t}\n\t\t\tif (hasSharedUpdate)\n\t\t\t\thasSharedUpdate = false\n\t\t\tstructures = sharedStructures || []\n\t\t\tpackedObjectMap = sharedPackedObjectMap\n\t\t\tif (options.pack) {\n\t\t\t\tlet packedValues = new Map()\n\t\t\t\tpackedValues.values = []\n\t\t\t\tpackedValues.encoder = encoder\n\t\t\t\tpackedValues.maxValues = options.maxPrivatePackedValues || (sharedPackedObjectMap ? 16 : Infinity)\n\t\t\t\tpackedValues.objectMap = sharedPackedObjectMap || false\n\t\t\t\tpackedValues.samplingPackedValues = samplingPackedValues\n\t\t\t\tfindRepetitiveStrings(value, packedValues)\n\t\t\t\tif (packedValues.values.length > 0) {\n\t\t\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\twriteArrayHeader(4)\n\t\t\t\t\tlet valuesArray = packedValues.values\n\t\t\t\t\tencode(valuesArray)\n\t\t\t\t\twriteArrayHeader(0) // prefixes\n\t\t\t\t\twriteArrayHeader(0) // suffixes\n\t\t\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrowOnIterable = encodeOptions & THROW_ON_ITERABLE;\n\t\t\ttry {\n\t\t\t\tif (throwOnIterable)\n\t\t\t\t\treturn;\n\t\t\t\tencode(value)\n\t\t\t\tif (bundledStrings) {\n\t\t\t\t\twriteBundles(start, encode)\n\t\t\t\t}\n\t\t\t\tencoder.offset = position // update the offset so next serialization doesn't write over our buffer, but can continue writing to same buffer sequentially\n\t\t\t\tif (referenceMap && referenceMap.idsToInsert) {\n\t\t\t\t\tposition += referenceMap.idsToInsert.length * 2\n\t\t\t\t\tif (position > safeEnd)\n\t\t\t\t\t\tmakeRoom(position)\n\t\t\t\t\tencoder.offset = position\n\t\t\t\t\tlet serialized = insertIds(target.subarray(start, position), referenceMap.idsToInsert)\n\t\t\t\t\treferenceMap = null\n\t\t\t\t\treturn serialized\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & REUSE_BUFFER_MODE) {\n\t\t\t\t\ttarget.start = start\n\t\t\t\t\ttarget.end = position\n\t\t\t\t\treturn target\n\t\t\t\t}\n\t\t\t\treturn target.subarray(start, position) // position can change if we call encode again in saveShared, so we get the buffer now\n\t\t\t} finally {\n\t\t\t\tif (sharedStructures) {\n\t\t\t\t\tif (serializationsSinceTransitionRebuild < 10)\n\t\t\t\t\t\tserializationsSinceTransitionRebuild++\n\t\t\t\t\tif (sharedStructures.length > maxSharedStructures)\n\t\t\t\t\t\tsharedStructures.length = maxSharedStructures\n\t\t\t\t\tif (transitionsCount > 10000) {\n\t\t\t\t\t\t// force a rebuild occasionally after a lot of transitions so it can get cleaned up\n\t\t\t\t\t\tsharedStructures.transitions = null\n\t\t\t\t\t\tserializationsSinceTransitionRebuild = 0\n\t\t\t\t\t\ttransitionsCount = 0\n\t\t\t\t\t\tif (recordIdsToRemove.length > 0)\n\t\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t} else if (recordIdsToRemove.length > 0 && !isSequential) {\n\t\t\t\t\t\tfor (let i = 0, l = recordIdsToRemove.length; i < l; i++) {\n\t\t\t\t\t\t\trecordIdsToRemove[i][RECORD_SYMBOL] = undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t\trecordIdsToRemove = []\n\t\t\t\t\t\t//sharedStructures.nextId = maxSharedStructures\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hasSharedUpdate && encoder.saveShared) {\n\t\t\t\t\tif (encoder.structures.length > maxSharedStructures) {\n\t\t\t\t\t\tencoder.structures = encoder.structures.slice(0, maxSharedStructures)\n\t\t\t\t\t}\n\t\t\t\t\t// we can't rely on start/end with REUSE_BUFFER_MODE since they will (probably) change when we save\n\t\t\t\t\tlet returnBuffer = target.subarray(start, position)\n\t\t\t\t\tif (encoder.updateSharedData() === false)\n\t\t\t\t\t\treturn encoder.encode(value) // re-encode if it fails\n\t\t\t\t\treturn returnBuffer\n\t\t\t\t}\n\t\t\t\tif (encodeOptions & RESET_BUFFER_MODE)\n\t\t\t\t\tposition = start\n\t\t\t}\n\t\t}\n\t\tthis.findCommonStringsToPack = () => {\n\t\t\tsamplingPackedValues = new Map()\n\t\t\tif (!sharedPackedObjectMap)\n\t\t\t\tsharedPackedObjectMap = Object.create(null)\n\t\t\treturn (options) => {\n\t\t\t\tlet threshold = options && options.threshold || 4\n\t\t\t\tlet position = this.pack ? options.maxPrivatePackedValues || 16 : 0\n\t\t\t\tif (!sharedValues)\n\t\t\t\t\tsharedValues = this.sharedValues = []\n\t\t\t\tfor (let [ key, status ] of samplingPackedValues) {\n\t\t\t\t\tif (status.count > threshold) {\n\t\t\t\t\t\tsharedPackedObjectMap[key] = position++\n\t\t\t\t\t\tsharedValues.push(key)\n\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (this.saveShared && this.updateSharedData() === false) {}\n\t\t\t\tsamplingPackedValues = null\n\t\t\t}\n\t\t}\n\t\tconst encode = (value) => {\n\t\t\tif (position > safeEnd)\n\t\t\t\ttarget = makeRoom(position)\n\n\t\t\tvar type = typeof value\n\t\t\tvar length\n\t\t\tif (type === 'string') {\n\t\t\t\tif (packedObjectMap) {\n\t\t\t\t\tlet packedPosition = packedObjectMap[value]\n\t\t\t\t\tif (packedPosition >= 0) {\n\t\t\t\t\t\tif (packedPosition < 16)\n\t\t\t\t\t\t\ttarget[position++] = packedPosition + 0xe0 // simple values, defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget[position++] = 0xc6 // tag 6 defined in https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\t\t\t\t\tif (packedPosition & 1)\n\t\t\t\t\t\t\t\tencode((15 - packedPosition) >> 1)\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tencode((packedPosition - 16) >> 1)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn\n/*\t\t\t\t\t\t} else if (packedStatus.serializationId != serializationId) {\n\t\t\t\t\t\t\tpackedStatus.serializationId = serializationId\n\t\t\t\t\t\t\tpackedStatus.count = 1\n\t\t\t\t\t\t\tif (options.sharedPack) {\n\t\t\t\t\t\t\t\tlet sharedCount = packedStatus.sharedCount = (packedStatus.sharedCount || 0) + 1\n\t\t\t\t\t\t\t\tif (shareCount > (options.sharedPack.threshold || 5)) {\n\t\t\t\t\t\t\t\t\tlet sharedPosition = packedStatus.position = packedStatus.nextSharedPosition\n\t\t\t\t\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t\t\t\t\t\tif (sharedPosition < 16)\n\t\t\t\t\t\t\t\t\t\ttarget[position++] = sharedPosition + 0xc0\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} // else any in-doc incrementation?*/\n\t\t\t\t\t} else if (samplingPackedValues && !options.pack) {\n\t\t\t\t\t\tlet status = samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsamplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet strLength = value.length\n\t\t\t\tif (bundledStrings && strLength >= 4 && strLength < 0x400) {\n\t\t\t\t\tif ((bundledStrings.size += strLength) > MAX_BUNDLE_SIZE) {\n\t\t\t\t\t\tlet extStart\n\t\t\t\t\t\tlet maxBytes = (bundledStrings[0] ? bundledStrings[0].length * 3 + bundledStrings[1].length : 0) + 10\n\t\t\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\t\t\t\t\t\ttarget[position++] = 0xd9 // tag 16-bit\n\t\t\t\t\t\ttarget[position++] = 0xdf // tag 0xdff9\n\t\t\t\t\t\ttarget[position++] = 0xf9\n\t\t\t\t\t\t// TODO: If we only have one bundle with any string data, only write one string bundle\n\t\t\t\t\t\ttarget[position++] = bundledStrings.position ? 0x84 : 0x82 // array of 4 or 2 elements depending on if we write bundles\n\t\t\t\t\t\ttarget[position++] = 0x1a // 32-bit unsigned int\n\t\t\t\t\t\textStart = position - start\n\t\t\t\t\t\tposition += 4 // reserve for writing bundle reference\n\t\t\t\t\t\tif (bundledStrings.position) {\n\t\t\t\t\t\t\twriteBundles(start, encode) // write the last bundles\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbundledStrings = ['', ''] // create new ones\n\t\t\t\t\t\tbundledStrings.size = 0\n\t\t\t\t\t\tbundledStrings.position = extStart\n\t\t\t\t\t}\n\t\t\t\t\tlet twoByte = hasNonLatin.test(value)\n\t\t\t\t\tbundledStrings[twoByte ? 0 : 1] += value\n\t\t\t\t\ttarget[position++] = twoByte ? 0xce : 0xcf\n\t\t\t\t\tencode(strLength);\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tlet headerSize\n\t\t\t\t// first we estimate the header size, so we can write to the correct location\n\t\t\t\tif (strLength < 0x20) {\n\t\t\t\t\theaderSize = 1\n\t\t\t\t} else if (strLength < 0x100) {\n\t\t\t\t\theaderSize = 2\n\t\t\t\t} else if (strLength < 0x10000) {\n\t\t\t\t\theaderSize = 3\n\t\t\t\t} else {\n\t\t\t\t\theaderSize = 5\n\t\t\t\t}\n\t\t\t\tlet maxBytes = strLength * 3\n\t\t\t\tif (position + maxBytes > safeEnd)\n\t\t\t\t\ttarget = makeRoom(position + maxBytes)\n\n\t\t\t\tif (strLength < 0x40 || !encodeUtf8) {\n\t\t\t\t\tlet i, c1, c2, strPosition = position + headerSize\n\t\t\t\t\tfor (i = 0; i < strLength; i++) {\n\t\t\t\t\t\tc1 = value.charCodeAt(i)\n\t\t\t\t\t\tif (c1 < 0x80) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1\n\t\t\t\t\t\t} else if (c1 < 0x800) {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 | 0xc0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t(c1 & 0xfc00) === 0xd800 &&\n\t\t\t\t\t\t\t((c2 = value.charCodeAt(i + 1)) & 0xfc00) === 0xdc00\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tc1 = 0x10000 + ((c1 & 0x03ff) << 10) + (c2 & 0x03ff)\n\t\t\t\t\t\t\ti++\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 18 | 0xf0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 12 | 0xe0\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 >> 6 & 0x3f | 0x80\n\t\t\t\t\t\t\ttarget[strPosition++] = c1 & 0x3f | 0x80\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlength = strPosition - position - headerSize\n\t\t\t\t} else {\n\t\t\t\t\tlength = encodeUtf8(value, position + headerSize, maxBytes)\n\t\t\t\t}\n\n\t\t\t\tif (length < 0x18) {\n\t\t\t\t\ttarget[position++] = 0x60 | length\n\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\tif (headerSize < 2) {\n\t\t\t\t\t\ttarget.copyWithin(position + 2, position + 1, position + 1 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x78\n\t\t\t\t\ttarget[position++] = length\n\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\tif (headerSize < 3) {\n\t\t\t\t\t\ttarget.copyWithin(position + 3, position + 2, position + 2 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x79\n\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t} else {\n\t\t\t\t\tif (headerSize < 5) {\n\t\t\t\t\t\ttarget.copyWithin(position + 5, position + 3, position + 3 + length)\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0x7a\n\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\tposition += 4\n\t\t\t\t}\n\t\t\t\tposition += length\n\t\t\t} else if (type === 'number') {\n\t\t\t\tif (!this.alwaysUseFloat && value >>> 0 === value) {// positive integer, 32-bit or less\n\t\t\t\t\t// positive uint\n\t\t\t\t\tif (value < 0x18) {\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x18\n\t\t\t\t\t\ttarget[position++] = value\n\t\t\t\t\t} else if (value < 0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x19\n\t\t\t\t\t\ttarget[position++] = value >> 8\n\t\t\t\t\t\ttarget[position++] = value & 0xff\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x1a\n\t\t\t\t\t\ttargetView.setUint32(position, value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else if (!this.alwaysUseFloat && value >> 0 === value) { // negative integer\n\t\t\t\t\tif (value >= -0x18) {\n\t\t\t\t\t\ttarget[position++] = 0x1f - value\n\t\t\t\t\t} else if (value >= -0x100) {\n\t\t\t\t\t\ttarget[position++] = 0x38\n\t\t\t\t\t\ttarget[position++] = ~value\n\t\t\t\t\t} else if (value >= -0x10000) {\n\t\t\t\t\t\ttarget[position++] = 0x39\n\t\t\t\t\t\ttargetView.setUint16(position, ~value)\n\t\t\t\t\t\tposition += 2\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget[position++] = 0x3a\n\t\t\t\t\t\ttargetView.setUint32(position, ~value)\n\t\t\t\t\t\tposition += 4\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet useFloat32\n\t\t\t\t\tif ((useFloat32 = this.useFloat32) > 0 && value < 0x100000000 && value >= -0x80000000) {\n\t\t\t\t\t\ttarget[position++] = 0xfa\n\t\t\t\t\t\ttargetView.setFloat32(position, value)\n\t\t\t\t\t\tlet xShifted\n\t\t\t\t\t\tif (useFloat32 < 4 ||\n\t\t\t\t\t\t\t\t// this checks for rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n\t\t\t\t\t\t\t\t((xShifted = value * mult10[((target[position] & 0x7f) << 1) | (target[position + 1] >> 7)]) >> 0) === xShifted) {\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tposition-- // move back into position for writing a double\n\t\t\t\t\t}\n\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\ttargetView.setFloat64(position, value)\n\t\t\t\t\tposition += 8\n\t\t\t\t}\n\t\t\t} else if (type === 'object') {\n\t\t\t\tif (!value)\n\t\t\t\t\ttarget[position++] = 0xf6\n\t\t\t\telse {\n\t\t\t\t\tif (referenceMap) {\n\t\t\t\t\t\tlet referee = referenceMap.get(value)\n\t\t\t\t\t\tif (referee) {\n\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\ttarget[position++] = 29 // http://cbor.schmorp.de/value-sharing\n\t\t\t\t\t\t\ttarget[position++] = 0x19 // 16-bit uint\n\t\t\t\t\t\t\tif (!referee.references) {\n\t\t\t\t\t\t\t\tlet idsToInsert = referenceMap.idsToInsert || (referenceMap.idsToInsert = [])\n\t\t\t\t\t\t\t\treferee.references = []\n\t\t\t\t\t\t\t\tidsToInsert.push(referee)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treferee.references.push(position - start)\n\t\t\t\t\t\t\tposition += 2 // TODO: also support 32-bit\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else \n\t\t\t\t\t\t\treferenceMap.set(value, { offset: position - start })\n\t\t\t\t\t}\n\t\t\t\t\tlet constructor = value.constructor\n\t\t\t\t\tif (constructor === Object) {\n\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t} else if (constructor === Array) {\n\t\t\t\t\t\tlength = value.length\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twriteArrayHeader(length)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\t\tencode(value[i])\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (constructor === Map) {\n\t\t\t\t\t\tif (this.mapsAsObjects ? this.useTag259ForMaps !== false : this.useTag259ForMaps) {\n\t\t\t\t\t\t\t// use Tag 259 (https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec--explicit-maps.md) for maps if the user wants it that way\n\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\ttarget[position++] = 1\n\t\t\t\t\t\t\ttarget[position++] = 3\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlength = value.size\n\t\t\t\t\t\tif (length < 0x18) {\n\t\t\t\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t\t\t\t} else if (length < 0x100) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\t\t\t\ttarget[position++] = length\n\t\t\t\t\t\t} else if (length < 0x10000) {\n\t\t\t\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget[position++] = 0xba\n\t\t\t\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (encoder.keyMap) { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t} else { \n\t\t\t\t\t\t\tfor (let [ key, entryValue ] of value) {\n\t\t\t\t\t\t\t\tencode(key) \n\t\t\t\t\t\t\t\tencode(entryValue)\n\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let i = 0, l = extensions.length; i < l; i++) {\n\t\t\t\t\t\t\tlet extensionClass = extensionClasses[i]\n\t\t\t\t\t\t\tif (value instanceof extensionClass) {\n\t\t\t\t\t\t\t\tlet extension = extensions[i]\n\t\t\t\t\t\t\t\tlet tag = extension.tag\n\t\t\t\t\t\t\t\tif (tag == undefined)\n\t\t\t\t\t\t\t\t\ttag = extension.getTag && extension.getTag.call(this, value)\n\t\t\t\t\t\t\t\tif (tag < 0x18) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xc0 | tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x100) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag\n\t\t\t\t\t\t\t\t} else if (tag < 0x10000) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag >> 8\n\t\t\t\t\t\t\t\t\ttarget[position++] = tag & 0xff\n\t\t\t\t\t\t\t\t} else if (tag > -1) {\n\t\t\t\t\t\t\t\t\ttarget[position++] = 0xda\n\t\t\t\t\t\t\t\t\ttargetView.setUint32(position, tag)\n\t\t\t\t\t\t\t\t\tposition += 4\n\t\t\t\t\t\t\t\t} // else undefined, don't write tag\n\t\t\t\t\t\t\t\textension.encode.call(this, value, encode, makeRoom)\n\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.iterator]) {\n\t\t\t\t\t\t\tif (throwOnIterable) {\n\t\t\t\t\t\t\t\tlet error = new Error('Iterable should be serialized as iterator')\n\t\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0x9f // indefinite length array\n\t\t\t\t\t\t\tfor (let entry of value) {\n\t\t\t\t\t\t\t\tencode(entry)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttarget[position++] = 0xff // stop-code\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value[Symbol.asyncIterator] || isBlob(value)) {\n\t\t\t\t\t\t\tlet error = new Error('Iterable/blob should be serialized as iterator')\n\t\t\t\t\t\t\terror.iteratorNotHandled = true;\n\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.useToJSON && value.toJSON) {\n\t\t\t\t\t\t\tconst json = value.toJSON()\n\t\t\t\t\t\t\t// if for some reason value.toJSON returns itself it'll loop forever\n\t\t\t\t\t\t\tif (json !== value)\n\t\t\t\t\t\t\t\treturn encode(json)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// no extension found, write as a plain object\n\t\t\t\t\t\twriteObject(value)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'boolean') {\n\t\t\t\ttarget[position++] = value ? 0xf5 : 0xf4\n\t\t\t} else if (type === 'bigint') {\n\t\t\t\tif (value < (BigInt(1)<<BigInt(64)) && value >= 0) {\n\t\t\t\t\t// use an unsigned int as long as it fits\n\t\t\t\t\ttarget[position++] = 0x1b\n\t\t\t\t\ttargetView.setBigUint64(position, value)\n\t\t\t\t} else if (value > -(BigInt(1)<<BigInt(64)) && value < 0) {\n\t\t\t\t\t// if we can fit an unsigned int, use that\n\t\t\t\t\ttarget[position++] = 0x3b\n\t\t\t\t\ttargetView.setBigUint64(position, -value - BigInt(1))\n\t\t\t\t} else {\n\t\t\t\t\t// overflow\n\t\t\t\t\tif (this.largeBigIntToFloat) {\n\t\t\t\t\t\ttarget[position++] = 0xfb\n\t\t\t\t\t\ttargetView.setFloat64(position, Number(value))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (value >= BigInt(0))\n\t\t\t\t\t\t\ttarget[position++] = 0xc2 // tag 2\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttarget[position++] = 0xc3 // tag 2\n\t\t\t\t\t\t\tvalue = BigInt(-1) - value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet bytes = [];\n\t\t\t\t\t\twhile (value) {\n\t\t\t\t\t\t\tbytes.push(Number(value & BigInt(0xff)));\n\t\t\t\t\t\t\tvalue >>= BigInt(8);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twriteBuffer(new Uint8Array(bytes.reverse()), makeRoom);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tposition += 8\n\t\t\t} else if (type === 'undefined') {\n\t\t\t\ttarget[position++] = 0xf7\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown type: ' + type)\n\t\t\t}\n\t\t}\n\n\t\tconst writeObject = this.useRecords === false ? this.variableMapSize ? (object) => {\n\t\t\t// this method is slightly slower, but generates \"preferred serialization\" (optimally small for smaller objects)\n\t\t\tlet keys = Object.keys(object)\n\t\t\tlet vals = Object.values(object)\n\t\t\tlet length = keys.length\n\t\t\tif (length < 0x18) {\n\t\t\t\ttarget[position++] = 0xa0 | length\n\t\t\t} else if (length < 0x100) {\n\t\t\t\ttarget[position++] = 0xb8\n\t\t\t\ttarget[position++] = length\n\t\t\t} else if (length < 0x10000) {\n\t\t\t\ttarget[position++] = 0xb9\n\t\t\t\ttarget[position++] = length >> 8\n\t\t\t\ttarget[position++] = length & 0xff\n\t\t\t} else {\n\t\t\t\ttarget[position++] = 0xba\n\t\t\t\ttargetView.setUint32(position, length)\n\t\t\t\tposition += 4\n\t\t\t}\n\t\t\tlet key\n\t\t\tif (encoder.keyMap) { \n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(encoder.encodeKey(keys[i]))\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tencode(keys[i])\n\t\t\t\t\tencode(vals[i])\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\t\t(object) => {\n\t\t\ttarget[position++] = 0xb9 // always use map 16, so we can preallocate and set the length afterwards\n\t\t\tlet objectOffset = position - start\n\t\t\tposition += 2\n\t\t\tlet size = 0\n\t\t\tif (encoder.keyMap) {\n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tencode(encoder.encodeKey(key))\n\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t} else { \n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\t\tencode(key)\n\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\tsize++\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget[objectOffset++ + start] = size >> 8\n\t\t\ttarget[objectOffset + start] = size & 0xff\n\t\t} :\n\t\t(object, skipValues) => {\n\t\t\tlet nextTransition, transition = structures.transitions || (structures.transitions = Object.create(null))\n\t\t\tlet newTransitions = 0\n\t\t\tlet length = 0\n\t\t\tlet parentRecordId\n\t\t\tlet keys\n\t\t\tif (this.keyMap) {\n\t\t\t\tkeys = Object.keys(object).map(k => this.encodeKey(k))\n\t\t\t\tlength = keys.length\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet key = keys[i]\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t}\t\t\t\t\n\t\t\t} else {\n\t\t\t\tfor (let key in object) if (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key)) {\n\t\t\t\t\tnextTransition = transition[key]\n\t\t\t\t\tif (!nextTransition) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] & 0x100000) {// this indicates it is a brancheable/extendable terminal node, so we will use this record id and extend it\n\t\t\t\t\t\t\tparentRecordId = transition[RECORD_SYMBOL] & 0xffff\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextTransition = transition[key] = Object.create(null)\n\t\t\t\t\t\tnewTransitions++\n\t\t\t\t\t}\n\t\t\t\t\ttransition = nextTransition\n\t\t\t\t\tlength++\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet recordId = transition[RECORD_SYMBOL]\n\t\t\tif (recordId !== undefined) {\n\t\t\t\trecordId &= 0xffff\n\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t} else {\n\t\t\t\tif (!keys)\n\t\t\t\t\tkeys = transition.__keys__ || (transition.__keys__ = Object.keys(object))\n\t\t\t\tif (parentRecordId === undefined) {\n\t\t\t\t\trecordId = structures.nextId++\n\t\t\t\t\tif (!recordId) {\n\t\t\t\t\t\trecordId = 0\n\t\t\t\t\t\tstructures.nextId = 1\n\t\t\t\t\t}\n\t\t\t\t\tif (recordId >= MAX_STRUCTURES) {// cycle back around\n\t\t\t\t\t\tstructures.nextId = (recordId = maxSharedStructures) + 1\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trecordId = parentRecordId\n\t\t\t\t}\n\t\t\t\tstructures[recordId] = keys\n\t\t\t\tif (recordId < maxSharedStructures) {\n\t\t\t\t\ttarget[position++] = 0xd9\n\t\t\t\t\ttarget[position++] = (recordId >> 8) | 0xe0\n\t\t\t\t\ttarget[position++] = recordId & 0xff\n\t\t\t\t\ttransition = structures.transitions\n\t\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\t\tif (transition[RECORD_SYMBOL] === undefined || (transition[RECORD_SYMBOL] & 0x100000))\n\t\t\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\t\ttransition = transition[keys[i]]\n\t\t\t\t\t}\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId | 0x100000 // indicates it is a extendable terminal\n\t\t\t\t\thasSharedUpdate = true\n\t\t\t\t} else {\n\t\t\t\t\ttransition[RECORD_SYMBOL] = recordId\n\t\t\t\t\ttargetView.setUint32(position, 0xd9dfff00) // tag two byte, then record definition id\n\t\t\t\t\tposition += 3\n\t\t\t\t\tif (newTransitions)\n\t\t\t\t\t\ttransitionsCount += serializationsSinceTransitionRebuild * newTransitions\n\t\t\t\t\t// record the removal of the id, we can maintain our shared structure\n\t\t\t\t\tif (recordIdsToRemove.length >= MAX_STRUCTURES - maxSharedStructures)\n\t\t\t\t\t\trecordIdsToRemove.shift()[RECORD_SYMBOL] = undefined // we are cycling back through, and have to remove old ones\n\t\t\t\t\trecordIdsToRemove.push(transition)\n\t\t\t\t\twriteArrayHeader(length + 2)\n\t\t\t\t\tencode(0xe000 + recordId)\n\t\t\t\t\tencode(keys)\n\t\t\t\t\tif (skipValues) return; // special exit for iterator\n\t\t\t\t\tfor (let key in object)\n\t\t\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key))\n\t\t\t\t\t\t\tencode(object[key])\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (length < 0x18) { // write the array header\n\t\t\t\ttarget[position++] = 0x80 | length\n\t\t\t} else {\n\t\t\t\twriteArrayHeader(length)\n\t\t\t}\n\t\t\tif (skipValues) return; // special exit for iterator\n\t\t\tfor (let key in object)\n\t\t\t\tif (typeof object.hasOwnProperty !== 'function' || object.hasOwnProperty(key))\n\t\t\t\t\tencode(object[key])\n\t\t}\n\t\tconst makeRoom = (end) => {\n\t\t\tlet newSize\n\t\t\tif (end > 0x1000000) {\n\t\t\t\t// special handling for really large buffers\n\t\t\t\tif ((end - start) > MAX_BUFFER_SIZE)\n\t\t\t\t\tthrow new Error('Encoded buffer would be larger than maximum buffer size')\n\t\t\t\tnewSize = Math.min(MAX_BUFFER_SIZE,\n\t\t\t\t\tMath.round(Math.max((end - start) * (end > 0x4000000 ? 1.25 : 2), 0x400000) / 0x1000) * 0x1000)\n\t\t\t} else // faster handling for smaller buffers\n\t\t\t\tnewSize = ((Math.max((end - start) << 2, target.length - 1) >> 12) + 1) << 12\n\t\t\tlet newBuffer = new ByteArrayAllocate(newSize)\n\t\t\ttargetView = new DataView(newBuffer.buffer, 0, newSize)\n\t\t\tif (target.copy)\n\t\t\t\ttarget.copy(newBuffer, 0, start, end)\n\t\t\telse\n\t\t\t\tnewBuffer.set(target.slice(start, end))\n\t\t\tposition -= start\n\t\t\tstart = 0\n\t\t\tsafeEnd = newBuffer.length - 10\n\t\t\treturn target = newBuffer\n\t\t}\n\t\tlet chunkThreshold = 100;\n\t\tlet continuedChunkThreshold = 1000;\n\t\tthis.encodeAsIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsIterable);\n\t\t}\n\t\tthis.encodeAsAsyncIterable = function(value, options) {\n\t\t\treturn startEncoding(value, options, encodeObjectAsAsyncIterable);\n\t\t}\n\n\t\tfunction* encodeObjectAsIterable(object, iterateProperties, finalIterable) {\n\t\t\tlet constructor = object.constructor;\n\t\t\tif (constructor === Object) {\n\t\t\t\tlet useRecords = encoder.useRecords !== false;\n\t\t\t\tif (useRecords)\n\t\t\t\t\twriteObject(object, true); // write the record identifier\n\t\t\t\telse\n\t\t\t\t\twriteEntityLength(Object.keys(object).length, 0xa0);\n\t\t\t\tfor (let key in object) {\n\t\t\t\t\tlet value = object[key];\n\t\t\t\t\tif (!useRecords) encode(key);\n\t\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\t\tif (iterateProperties[key])\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties[key]);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, key);\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (constructor === Array) {\n\t\t\t\tlet length = object.length;\n\t\t\t\twriteArrayHeader(length);\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tlet value = object[i];\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t} else if (object[Symbol.iterator] && !object.buffer) { // iterator, but exclude typed arrays\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tfor (let value of object) {\n\t\t\t\t\tif (value && (typeof value === 'object' || position - start > chunkThreshold)) {\n\t\t\t\t\t\tif (iterateProperties.element)\n\t\t\t\t\t\t\tyield* encodeObjectAsIterable(value, iterateProperties.element);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tyield* tryEncode(value, iterateProperties, 'element');\n\t\t\t\t\t} else encode(value);\n\t\t\t\t}\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else if (isBlob(object)){\n\t\t\t\twriteEntityLength(object.size, 0x40); // encode as binary data\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return blobs, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t} else if (object[Symbol.asyncIterator]) {\n\t\t\t\ttarget[position++] = 0x9f; // start indefinite array\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\tyield object; // directly return async iterators, they have to be encoded asynchronously\n\t\t\t\trestartEncoding();\n\t\t\t\ttarget[position++] = 0xff; // stop byte\n\t\t\t} else {\n\t\t\t\tencode(object);\n\t\t\t}\n\t\t\tif (finalIterable && position > start) yield target.subarray(start, position);\n\t\t\telse if (position - start > chunkThreshold) {\n\t\t\t\tyield target.subarray(start, position);\n\t\t\t\trestartEncoding();\n\t\t\t}\n\t\t}\n\t\tfunction* tryEncode(value, iterateProperties, key) {\n\t\t\tlet restart = position - start;\n\t\t\ttry {\n\t\t\t\tencode(value);\n\t\t\t\tif (position - start > chunkThreshold) {\n\t\t\t\t\tyield target.subarray(start, position);\n\t\t\t\t\trestartEncoding();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (error.iteratorNotHandled) {\n\t\t\t\t\titerateProperties[key] = {};\n\t\t\t\t\tposition = start + restart; // restart our position so we don't have partial data from last encode\n\t\t\t\t\tyield* encodeObjectAsIterable.call(this, value, iterateProperties[key]);\n\t\t\t\t} else throw error;\n\t\t\t}\n\t\t}\n\t\tfunction restartEncoding() {\n\t\t\tchunkThreshold = continuedChunkThreshold;\n\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // restart encoding\n\t\t}\n\t\tfunction startEncoding(value, options, encodeIterable) {\n\t\t\tif (options && options.chunkThreshold) // explicitly specified chunk sizes\n\t\t\t\tchunkThreshold = continuedChunkThreshold = options.chunkThreshold;\n\t\t\telse // we start with a smaller threshold to get initial bytes sent quickly\n\t\t\t\tchunkThreshold = 100;\n\t\t\tif (value && typeof value === 'object') {\n\t\t\t\tencoder.encode(null, THROW_ON_ITERABLE); // start encoding\n\t\t\t\treturn encodeIterable(value, encoder.iterateProperties || (encoder.iterateProperties = {}), true);\n\t\t\t}\n\t\t\treturn [encoder.encode(value)];\n\t\t}\n\n\t\tasync function* encodeObjectAsAsyncIterable(value, iterateProperties) {\n\t\t\tfor (let encodedValue of encodeObjectAsIterable(value, iterateProperties, true)) {\n\t\t\t\tlet constructor = encodedValue.constructor;\n\t\t\t\tif (constructor === ByteArray || constructor === Uint8Array)\n\t\t\t\t\tyield encodedValue;\n\t\t\t\telse if (isBlob(encodedValue)) {\n\t\t\t\t\tlet reader = encodedValue.stream().getReader();\n\t\t\t\t\tlet next;\n\t\t\t\t\twhile (!(next = await reader.read()).done) {\n\t\t\t\t\t\tyield next.value;\n\t\t\t\t\t}\n\t\t\t\t} else if (encodedValue[Symbol.asyncIterator]) {\n\t\t\t\t\tfor await (let asyncValue of encodedValue) {\n\t\t\t\t\t\trestartEncoding();\n\t\t\t\t\t\tif (asyncValue)\n\t\t\t\t\t\t\tyield* encodeObjectAsAsyncIterable(asyncValue, iterateProperties.async || (iterateProperties.async = {}));\n\t\t\t\t\t\telse yield encoder.encode(asyncValue);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tyield encodedValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tuseBuffer(buffer) {\n\t\t// this means we are finished using our own buffer and we can write over it safely\n\t\ttarget = buffer\n\t\ttargetView = new DataView(target.buffer, target.byteOffset, target.byteLength)\n\t\tposition = 0\n\t}\n\tclearSharedData() {\n\t\tif (this.structures)\n\t\t\tthis.structures = []\n\t\tif (this.sharedValues)\n\t\t\tthis.sharedValues = undefined\n\t}\n\tupdateSharedData() {\n\t\tlet lastVersion = this.sharedVersion || 0\n\t\tthis.sharedVersion = lastVersion + 1\n\t\tlet structuresCopy = this.structures.slice(0)\n\t\tlet sharedData = new SharedData(structuresCopy, this.sharedValues, this.sharedVersion)\n\t\tlet saveResults = this.saveShared(sharedData,\n\t\t\t\texistingShared => (existingShared && existingShared.version || 0) == lastVersion)\n\t\tif (saveResults === false) {\n\t\t\t// get updated structures and try again if the update failed\n\t\t\tsharedData = this.getShared() || {}\n\t\t\tthis.structures = sharedData.structures || []\n\t\t\tthis.sharedValues = sharedData.packedValues\n\t\t\tthis.sharedVersion = sharedData.version\n\t\t\tthis.structures.nextId = this.structures.length\n\t\t} else {\n\t\t\t// restore structures\n\t\t\tstructuresCopy.forEach((structure, i) => this.structures[i] = structure)\n\t\t}\n\t\t// saveShared may fail to write and reload, or may have reloaded to check compatibility and overwrite saved data, either way load the correct shared data\n\t\treturn saveResults\n\t}\n}\nfunction writeEntityLength(length, majorValue) {\n\tif (length < 0x18)\n\t\ttarget[position++] = majorValue | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = majorValue | 0x18\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = majorValue | 0x19\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = majorValue | 0x1a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\n}\nclass SharedData {\n\tconstructor(structures, values, version) {\n\t\tthis.structures = structures\n\t\tthis.packedValues = values\n\t\tthis.version = version\n\t}\n}\n\nfunction writeArrayHeader(length) {\n\tif (length < 0x18)\n\t\ttarget[position++] = 0x80 | length\n\telse if (length < 0x100) {\n\t\ttarget[position++] = 0x98\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x99\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x9a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n}\n\nconst BlobConstructor = typeof Blob === 'undefined' ? function(){} : Blob;\nfunction isBlob(object) {\n\tif (object instanceof BlobConstructor)\n\t\treturn true;\n\tlet tag = object[Symbol.toStringTag];\n\treturn tag === 'Blob' || tag === 'File';\n}\nfunction findRepetitiveStrings(value, packedValues) {\n\tswitch(typeof value) {\n\t\tcase 'string':\n\t\t\tif (value.length > 3) {\n\t\t\t\tif (packedValues.objectMap[value] > -1 || packedValues.values.length >= packedValues.maxValues)\n\t\t\t\t\treturn\n\t\t\t\tlet packedStatus = packedValues.get(value)\n\t\t\t\tif (packedStatus) {\n\t\t\t\t\tif (++packedStatus.count == 2) {\n\t\t\t\t\t\tpackedValues.values.push(value)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tpackedValues.set(value, {\n\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t})\n\t\t\t\t\tif (packedValues.samplingPackedValues) {\n\t\t\t\t\t\tlet status = packedValues.samplingPackedValues.get(value)\n\t\t\t\t\t\tif (status)\n\t\t\t\t\t\t\tstatus.count++\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tpackedValues.samplingPackedValues.set(value, {\n\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'object':\n\t\t\tif (value) {\n\t\t\t\tif (value instanceof Array) {\n\t\t\t\t\tfor (let i = 0, l = value.length; i < l; i++) {\n\t\t\t\t\t\tfindRepetitiveStrings(value[i], packedValues)\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tlet includeKeys = !packedValues.encoder.useRecords\n\t\t\t\t\tfor (var key in value) {\n\t\t\t\t\t\tif (value.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tif (includeKeys)\n\t\t\t\t\t\t\t\tfindRepetitiveStrings(key, packedValues)\n\t\t\t\t\t\t\tfindRepetitiveStrings(value[key], packedValues)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak\n\t\tcase 'function': console.log(value)\n\t}\n}\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1\nextensionClasses = [ Date, Set, Error, RegExp, Tag, ArrayBuffer,\n\tUint8Array, Uint8ClampedArray, Uint16Array, Uint32Array,\n\ttypeof BigUint64Array == 'undefined' ? function() {} : BigUint64Array, Int8Array, Int16Array, Int32Array,\n\ttypeof BigInt64Array == 'undefined' ? function() {} : BigInt64Array,\n\tFloat32Array, Float64Array, SharedData ]\n\n//Object.getPrototypeOf(Uint8Array.prototype).constructor /*TypedArray*/\nextensions = [{ // Date\n\ttag: 1,\n\tencode(date, encode) {\n\t\tlet seconds = date.getTime() / 1000\n\t\tif ((this.useTimestamp32 || date.getMilliseconds() === 0) && seconds >= 0 && seconds < 0x100000000) {\n\t\t\t// Timestamp 32\n\t\t\ttarget[position++] = 0x1a\n\t\t\ttargetView.setUint32(position, seconds)\n\t\t\tposition += 4\n\t\t} else {\n\t\t\t// Timestamp float64\n\t\t\ttarget[position++] = 0xfb\n\t\t\ttargetView.setFloat64(position, seconds)\n\t\t\tposition += 8\n\t\t}\n\t}\n}, { // Set\n\ttag: 258, // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n\tencode(set, encode) {\n\t\tlet array = Array.from(set)\n\t\tencode(array)\n\t}\n}, { // Error\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(error, encode) {\n\t\tencode([ error.name, error.message ])\n\t}\n}, { // RegExp\n\ttag: 27, // http://cbor.schmorp.de/generic-object\n\tencode(regex, encode) {\n\t\tencode([ 'RegExp', regex.source, regex.flags ])\n\t}\n}, { // Tag\n\tgetTag(tag) {\n\t\treturn tag.tag\n\t},\n\tencode(tag, encode) {\n\t\tencode(tag.value)\n\t}\n}, { // ArrayBuffer\n\tencode(arrayBuffer, encode, makeRoom) {\n\t\twriteBuffer(arrayBuffer, makeRoom)\n\t}\n}, { // Uint8Array\n\tgetTag(typedArray) {\n\t\tif (typedArray.constructor === Uint8Array) {\n\t\t\tif (this.tagUint8Array || hasNodeBuffer && this.tagUint8Array !== false)\n\t\t\t\treturn 64;\n\t\t} // else no tag\n\t},\n\tencode(typedArray, encode, makeRoom) {\n\t\twriteBuffer(typedArray, makeRoom)\n\t}\n},\n\ttypedArrayEncoder(68, 1),\n\ttypedArrayEncoder(69, 2),\n\ttypedArrayEncoder(70, 4),\n\ttypedArrayEncoder(71, 8),\n\ttypedArrayEncoder(72, 1),\n\ttypedArrayEncoder(77, 2),\n\ttypedArrayEncoder(78, 4),\n\ttypedArrayEncoder(79, 8),\n\ttypedArrayEncoder(85, 4),\n\ttypedArrayEncoder(86, 8),\n{\n\tencode(sharedData, encode) { // write SharedData\n\t\tlet packedValues = sharedData.packedValues || []\n\t\tlet sharedStructures = sharedData.structures || []\n\t\tif (packedValues.values.length > 0) {\n\t\t\ttarget[position++] = 0xd8 // one-byte tag\n\t\t\ttarget[position++] = 51 // tag 51 for packed shared structures https://www.potaroo.net/ietf/ids/draft-ietf-cbor-packed-03.txt\n\t\t\twriteArrayHeader(4)\n\t\t\tlet valuesArray = packedValues.values\n\t\t\tencode(valuesArray)\n\t\t\twriteArrayHeader(0) // prefixes\n\t\t\twriteArrayHeader(0) // suffixes\n\t\t\tpackedObjectMap = Object.create(sharedPackedObjectMap || null)\n\t\t\tfor (let i = 0, l = valuesArray.length; i < l; i++) {\n\t\t\t\tpackedObjectMap[valuesArray[i]] = i\n\t\t\t}\n\t\t}\n\t\tif (sharedStructures) {\n\t\t\ttargetView.setUint32(position, 0xd9dffe00)\n\t\t\tposition += 3\n\t\t\tlet definitions = sharedStructures.slice(0)\n\t\t\tdefinitions.unshift(0xe000)\n\t\t\tdefinitions.push(new Tag(sharedData.version, 0x53687264))\n\t\t\tencode(definitions)\n\t\t} else\n\t\t\tencode(new Tag(sharedData.version, 0x53687264))\n\t\t}\n\t}]\nfunction typedArrayEncoder(tag, size) {\n\tif (!isLittleEndianMachine && size > 1)\n\t\ttag -= 4 // the big endian equivalents are 4 less\n\treturn {\n\t\ttag: tag,\n\t\tencode: function writeExtBuffer(typedArray, encode) {\n\t\t\tlet length = typedArray.byteLength\n\t\t\tlet offset = typedArray.byteOffset || 0\n\t\t\tlet buffer = typedArray.buffer || typedArray\n\t\t\tencode(hasNodeBuffer ? Buffer.from(buffer, offset, length) :\n\t\t\t\tnew Uint8Array(buffer, offset, length))\n\t\t}\n\t}\n}\nfunction writeBuffer(buffer, makeRoom) {\n\tlet length = buffer.byteLength\n\tif (length < 0x18) {\n\t\ttarget[position++] = 0x40 + length\n\t} else if (length < 0x100) {\n\t\ttarget[position++] = 0x58\n\t\ttarget[position++] = length\n\t} else if (length < 0x10000) {\n\t\ttarget[position++] = 0x59\n\t\ttarget[position++] = length >> 8\n\t\ttarget[position++] = length & 0xff\n\t} else {\n\t\ttarget[position++] = 0x5a\n\t\ttargetView.setUint32(position, length)\n\t\tposition += 4\n\t}\n\tif (position + length >= target.length) {\n\t\tmakeRoom(position + length)\n\t}\n\t// if it is already a typed array (has an ArrayBuffer), use that, but if it is an ArrayBuffer itself,\n\t// must wrap it to set it.\n\ttarget.set(buffer.buffer ? buffer : new Uint8Array(buffer), position)\n\tposition += length\n}\n\nfunction insertIds(serialized, idsToInsert) {\n\t// insert the ids that need to be referenced for structured clones\n\tlet nextId\n\tlet distanceToMove = idsToInsert.length * 2\n\tlet lastEnd = serialized.length - distanceToMove\n\tidsToInsert.sort((a, b) => a.offset > b.offset ? 1 : -1)\n\tfor (let id = 0; id < idsToInsert.length; id++) {\n\t\tlet referee = idsToInsert[id]\n\t\treferee.id = id\n\t\tfor (let position of referee.references) {\n\t\t\tserialized[position++] = id >> 8\n\t\t\tserialized[position] = id & 0xff\n\t\t}\n\t}\n\twhile (nextId = idsToInsert.pop()) {\n\t\tlet offset = nextId.offset\n\t\tserialized.copyWithin(offset + distanceToMove, offset, lastEnd)\n\t\tdistanceToMove -= 2\n\t\tlet position = offset + distanceToMove\n\t\tserialized[position++] = 0xd8\n\t\tserialized[position++] = 28 // http://cbor.schmorp.de/value-sharing\n\t\tlastEnd = offset\n\t}\n\treturn serialized\n}\nfunction writeBundles(start, encode) {\n\ttargetView.setUint32(bundledStrings.position + start, position - bundledStrings.position - start + 1) // the offset to bundle\n\tlet writeStrings = bundledStrings\n\tbundledStrings = null\n\tencode(writeStrings[0])\n\tencode(writeStrings[1])\n}\n\nexport function addExtension(extension) {\n\tif (extension.Class) {\n\t\tif (!extension.encode)\n\t\t\tthrow new Error('Extension has no encode function')\n\t\textensionClasses.unshift(extension.Class)\n\t\textensions.unshift(extension)\n\t}\n\tdecodeAddExtension(extension)\n}\nlet defaultEncoder = new Encoder({ useRecords: false })\nexport const encode = defaultEncoder.encode\nexport const encodeAsIterable = defaultEncoder.encodeAsIterable\nexport const encodeAsAsyncIterable = defaultEncoder.encodeAsAsyncIterable\nexport { FLOAT32_OPTIONS } from './decode.js'\nimport { FLOAT32_OPTIONS } from './decode.js'\nexport const { NEVER, ALWAYS, DECIMAL_ROUND, DECIMAL_FIT } = FLOAT32_OPTIONS\nexport const REUSE_BUFFER_MODE = 512\nexport const RESET_BUFFER_MODE = 1024\nexport const THROW_ON_ITERABLE = 2048\n\n\n","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","// This is an unfortunate replacement for @sindresorhus/is that we need to\n// re-implement for performance purposes. In particular the is.observable()\n// check is expensive, and unnecessary for our purposes. The values returned\n// are compatible with @sindresorhus/is, however.\n\nconst typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n]\n\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n]\n\n/**\n * @param {any} value\n * @returns {string}\n */\nexport function is (value) {\n  if (value === null) {\n    return 'null'\n  }\n  if (value === undefined) {\n    return 'undefined'\n  }\n  if (value === true || value === false) {\n    return 'boolean'\n  }\n  const typeOf = typeof value\n  if (typeofs.includes(typeOf)) {\n    return typeOf\n  }\n  /* c8 ignore next 4 */\n  // not going to bother testing this, it's not going to be valid anyway\n  if (typeOf === 'function') {\n    return 'Function'\n  }\n  if (Array.isArray(value)) {\n    return 'Array'\n  }\n  if (isBuffer(value)) {\n    return 'Buffer'\n  }\n  const objectType = getObjectType(value)\n  if (objectType) {\n    return objectType\n  }\n  /* c8 ignore next */\n  return 'Object'\n}\n\n/**\n * @param {any} value\n * @returns {boolean}\n */\nfunction isBuffer (value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value)\n}\n\n/**\n * @param {any} value\n * @returns {string|undefined}\n */\nfunction getObjectType (value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1)\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName\n  }\n  /* c8 ignore next */\n  return undefined\n}\n","class Type {\n  /**\n   * @param {number} major\n   * @param {string} name\n   * @param {boolean} terminal\n   */\n  constructor (major, name, terminal) {\n    this.major = major\n    this.majorEncoded = major << 5\n    this.name = name\n    this.terminal = terminal\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Type[${this.major}].${this.name}`\n  }\n\n  /**\n   * @param {Type} typ\n   * @returns {number}\n   */\n  compare (typ) {\n    /* c8 ignore next 1 */\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0\n  }\n}\n\n// convert to static fields when better supported\nType.uint = new Type(0, 'uint', true)\nType.negint = new Type(1, 'negint', true)\nType.bytes = new Type(2, 'bytes', true)\nType.string = new Type(3, 'string', true)\nType.array = new Type(4, 'array', false)\nType.map = new Type(5, 'map', false)\nType.tag = new Type(6, 'tag', false) // terminal?\nType.float = new Type(7, 'float', true)\nType.false = new Type(7, 'false', true)\nType.true = new Type(7, 'true', true)\nType.null = new Type(7, 'null', true)\nType.undefined = new Type(7, 'undefined', true)\nType.break = new Type(7, 'break', true)\n// Type.indefiniteLength = new Type(0, 'indefiniteLength', true)\n\nclass Token {\n  /**\n   * @param {Type} type\n   * @param {any} [value]\n   * @param {number} [encodedLength]\n   */\n  constructor (type, value, encodedLength) {\n    this.type = type\n    this.value = value\n    this.encodedLength = encodedLength\n    /** @type {Uint8Array|undefined} */\n    this.encodedBytes = undefined\n    /** @type {Uint8Array|undefined} */\n    this.byteValue = undefined\n  }\n\n  /* c8 ignore next 3 */\n  toString () {\n    return `Token[${this.type}].${this.value}`\n  }\n}\n\nexport { Type, Token }\n","// Use Uint8Array directly in the browser, use Buffer in Node.js but don't\n// speak its name directly to avoid bundlers pulling in the `Buffer` polyfill\n\n// @ts-ignore\nexport const useBuffer = globalThis.process &&\n  // @ts-ignore\n  !globalThis.process.browser &&\n  // @ts-ignore\n  globalThis.Buffer &&\n  // @ts-ignore\n  typeof globalThis.Buffer.isBuffer === 'function'\n\nconst textDecoder = new TextDecoder()\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {Uint8Array} buf\n * @returns {boolean}\n */\nfunction isBuffer (buf) {\n  // @ts-ignore\n  return useBuffer && globalThis.Buffer.isBuffer(buf)\n}\n\n/**\n * @param {Uint8Array|number[]} buf\n * @returns {Uint8Array}\n */\nexport function asU8A (buf) {\n  /* c8 ignore next */\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf)\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf\n}\n\nexport const toString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8')\n        : utf8Slice(bytes, start, end)\n    }\n  /* c8 ignore next 11 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return end - start > 64\n        ? textDecoder.decode(bytes.subarray(start, end))\n        : utf8Slice(bytes, start, end)\n    }\n\nexport const fromString = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64\n        ? // eslint-disable-line operator-linebreak\n      // @ts-ignore\n        globalThis.Buffer.from(string)\n        : utf8ToBytes(string)\n    }\n  /* c8 ignore next 7 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {string} string\n     */\n    (string) => {\n      return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string)\n    }\n\n/**\n * Buffer variant not fast enough for what we need\n * @param {number[]} arr\n * @returns {Uint8Array}\n */\nexport const fromArray = (arr) => {\n  return Uint8Array.from(arr)\n}\n\nexport const slice = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      if (isBuffer(bytes)) {\n        return new Uint8Array(bytes.subarray(start, end))\n      }\n      return bytes.slice(start, end)\n    }\n  /* c8 ignore next 9 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} bytes\n     * @param {number} start\n     * @param {number} end\n     */\n    (bytes, start, end) => {\n      return bytes.slice(start, end)\n    }\n\nexport const concat = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      // might get a stray plain Array here\n      /* c8 ignore next 1 */\n      chunks = chunks.map((c) => c instanceof Uint8Array\n        ? c\n        // this case is occasionally missed during test runs so becomes coverage-flaky\n        /* c8 ignore next 4 */\n        : // eslint-disable-line operator-linebreak\n        // @ts-ignore\n        globalThis.Buffer.from(c))\n      // @ts-ignore\n      return asU8A(globalThis.Buffer.concat(chunks, length))\n    }\n  /* c8 ignore next 19 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array[]} chunks\n     * @param {number} length\n     * @returns {Uint8Array}\n     */\n    (chunks, length) => {\n      const out = new Uint8Array(length)\n      let off = 0\n      for (let b of chunks) {\n        if (off + b.length > out.length) {\n          // final chunk that's bigger than we need\n          b = b.subarray(0, out.length - off)\n        }\n        out.set(b, off)\n        off += b.length\n      }\n      return out\n    }\n\nexport const alloc = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      // we always write over the contents we expose so this should be safe\n      // @ts-ignore\n      return globalThis.Buffer.allocUnsafe(size)\n    }\n  /* c8 ignore next 8 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {number} size\n     * @returns {Uint8Array}\n     */\n    (size) => {\n      return new Uint8Array(size)\n    }\n\nexport const toHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(toBytes(d)).toString('hex')\n    }\n  /* c8 ignore next 12 */\n  : // eslint-disable-line operator-linebreak\n    /**\n     * @param {Uint8Array} d\n     * @returns {string}\n     */\n    (d) => {\n      if (typeof d === 'string') {\n        return d\n      }\n      // @ts-ignore not smart enough to figure this out\n      return Array.prototype.reduce.call(toBytes(d), (p, c) => `${p}${c.toString(16).padStart(2, '0')}`, '')\n    }\n\nexport const fromHex = useBuffer\n  ? // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      // @ts-ignore\n      return globalThis.Buffer.from(hex, 'hex')\n    }\n  /* c8 ignore next 17 */\n  : // eslint-disable-line operator-linebreak\n  /**\n   * @param {string|Uint8Array} hex\n   * @returns {Uint8Array}\n   */\n    (hex) => {\n      if (hex instanceof Uint8Array) {\n        return hex\n      }\n      if (!hex.length) {\n        return new Uint8Array(0)\n      }\n      return new Uint8Array(hex.split('')\n        .map((/** @type {string} */ c, /** @type {number} */ i, /** @type {string[]} */ d) => i % 2 === 0 ? `0x${c}${d[i + 1]}` : '')\n        .filter(Boolean)\n        .map((/** @type {string} */ e) => parseInt(e, 16)))\n    }\n\n/**\n * @param {Uint8Array|ArrayBuffer|ArrayBufferView} obj\n * @returns {Uint8Array}\n */\nfunction toBytes (obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj)\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength)\n  }\n  /* c8 ignore next */\n  throw new Error('Unknown type, must be binary type')\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nexport function compare (b1, b2) {\n  /* c8 ignore next 5 */\n  if (isBuffer(b1) && isBuffer(b2)) {\n    // probably not possible to get here in the current API\n    // @ts-ignore Buffer\n    return b1.compare(b2)\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue\n    }\n    return b1[i] < b2[i] ? -1 : 1\n  } /* c8 ignore next 3 */\n  return 0\n}\n\n// The below code is taken from https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n// Licensed Apache-2.0.\n\n/**\n * @param {string} str\n * @returns {number[]}\n */\nfunction utf8ToBytes (str) {\n  const out = []\n  let p = 0\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i)\n    if (c < 128) {\n      out[p++] = c\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192\n      out[p++] = (c & 63) | 128\n    } else if (\n      ((c & 0xFC00) === 0xD800) && (i + 1) < str.length &&\n      ((str.charCodeAt(i + 1) & 0xFC00) === 0xDC00)) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03FF) << 10) + (str.charCodeAt(++i) & 0x03FF)\n      out[p++] = (c >> 18) | 240\n      out[p++] = ((c >> 12) & 63) | 128\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    } else {\n      out[p++] = (c >> 12) | 224\n      out[p++] = ((c >> 6) & 63) | 128\n      out[p++] = (c & 63) | 128\n    }\n  }\n  return out\n}\n\n// The below code is mostly taken from https://github.com/feross/buffer\n// Licensed MIT. Copyright (c) Feross Aboukhadijeh\n\n/**\n * @param {Uint8Array} buf\n * @param {number} offset\n * @param {number} end\n * @returns {string}\n */\nfunction utf8Slice (buf, offset, end) {\n  const res = []\n\n  while (offset < end) {\n    const firstByte = buf[offset]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xef) ? 4 : (firstByte > 0xdf) ? 3 : (firstByte > 0xbf) ? 2 : 1\n\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[offset + 1]\n          if ((secondByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1f) << 0x6 | (secondByte & 0x3f)\n            if (tempCodePoint > 0x7f) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0xc | (secondByte & 0x3f) << 0x6 | (thirdByte & 0x3f)\n            /* c8 ignore next 3 */\n            if (tempCodePoint > 0x7ff && (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[offset + 1]\n          thirdByte = buf[offset + 2]\n          fourthByte = buf[offset + 3]\n          if ((secondByte & 0xc0) === 0x80 && (thirdByte & 0xc0) === 0x80 && (fourthByte & 0xc0) === 0x80) {\n            tempCodePoint = (firstByte & 0xf) << 0x12 | (secondByte & 0x3f) << 0xc | (thirdByte & 0x3f) << 0x6 | (fourthByte & 0x3f)\n            if (tempCodePoint > 0xffff && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    /* c8 ignore next 5 */\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xfffd\n      bytesPerSequence = 1\n    } else if (codePoint > 0xffff) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3ff | 0xd800)\n      codePoint = 0xdc00 | codePoint & 0x3ff\n    }\n\n    res.push(codePoint)\n    offset += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\n/**\n * @param {number[]} codePoints\n * @returns {string}\n */\nexport function decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n  /* c8 ignore next 10 */\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n","const decodeErrPrefix = 'CBOR decode error:'\nconst encodeErrPrefix = 'CBOR encode error:'\n\nconst uintMinorPrefixBytes = []\nuintMinorPrefixBytes[23] = 1\nuintMinorPrefixBytes[24] = 2\nuintMinorPrefixBytes[25] = 3\nuintMinorPrefixBytes[26] = 5\nuintMinorPrefixBytes[27] = 9\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} need\n */\nfunction assertEnoughData (data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${decodeErrPrefix} not enough data for type`)\n  }\n}\n\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n}\n","/* globals BigInt */\n\nimport { Token, Type } from './token.js'\nimport { decodeErrPrefix, assertEnoughData } from './common.js'\n\nexport const uintBoundaries = [24, 256, 65536, 4294967296, BigInt('18446744073709551616')]\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint8 (data, offset, options) {\n  assertEnoughData(data, offset, 1)\n  const value = data[offset]\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint16 (data, offset, options) {\n  assertEnoughData(data, offset, 2)\n  const value = (data[offset] << 8) | data[offset + 1]\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number}\n */\nexport function readUint32 (data, offset, options) {\n  assertEnoughData(data, offset, 4)\n  const value = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  return value\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} offset\n * @param {DecodeOptions} options\n * @returns {number|bigint}\n */\nexport function readUint64 (data, offset, options) {\n  // assume BigInt, convert back to Number if within safe range\n  assertEnoughData(data, offset, 8)\n  const hi = (data[offset] * 16777216 /* 2 ** 24 */) + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3]\n  const lo = (data[offset + 4] * 16777216 /* 2 ** 24 */) + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7]\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo)\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${decodeErrPrefix} integer encoded in more bytes than necessary (strict decode)`)\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value)\n  }\n  if (options.allowBigInt === true) {\n    return value\n  }\n  throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`)\n}\n\n/* not required thanks to quick[] list\nconst oneByteTokens = new Array(24).fill(0).map((v, i) => new Token(Type.uint, i, 1))\nexport function decodeUintCompact (data, pos, minor, options) {\n  return oneByteTokens[minor]\n}\n*/\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint8 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint16 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint32 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUint64 (data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeUint (buf, token) {\n  return encodeUintValue(buf, 0, token.value)\n}\n\n/**\n * @param {Bl} buf\n * @param {number} major\n * @param {number|bigint} uint\n */\nexport function encodeUintValue (buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint)\n    // pack into one byte, minor=0, additional=value\n    buf.push([major | nuint])\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint)\n    // pack into two byte, minor=0, additional=24\n    buf.push([major | 24, nuint])\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint)\n    // pack into three byte, minor=0, additional=25\n    buf.push([major | 25, nuint >>> 8, nuint & 0xff])\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint)\n    // pack into five byte, minor=0, additional=26\n    buf.push([major | 26, (nuint >>> 24) & 0xff, (nuint >>> 16) & 0xff, (nuint >>> 8) & 0xff, nuint & 0xff])\n  } else {\n    const buint = BigInt(uint)\n    if (buint < uintBoundaries[4]) {\n      // pack into nine byte, minor=0, additional=27\n      const set = [major | 27, 0, 0, 0, 0, 0, 0, 0]\n      // simulate bitwise above 32 bits\n      let lo = Number(buint & BigInt(0xffffffff))\n      let hi = Number(buint >> BigInt(32) & BigInt(0xffffffff))\n      set[8] = lo & 0xff\n      lo = lo >> 8\n      set[7] = lo & 0xff\n      lo = lo >> 8\n      set[6] = lo & 0xff\n      lo = lo >> 8\n      set[5] = lo & 0xff\n      set[4] = hi & 0xff\n      hi = hi >> 8\n      set[3] = hi & 0xff\n      hi = hi >> 8\n      set[2] = hi & 0xff\n      hi = hi >> 8\n      set[1] = hi & 0xff\n      buf.push(set)\n    } else {\n      throw new Error(`${decodeErrPrefix} encountered BigInt larger than allowable range`)\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeUint.encodedSize = function encodedSize (token) {\n  return encodeUintValue.encodedSize(token.value)\n}\n\n/**\n * @param {number} uint\n * @returns {number}\n */\nencodeUintValue.encodedSize = function encodedSize (uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeUint.compareTokens = function compareTokens (tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : /* c8 ignore next */ 0\n}\n","/* eslint-env es2020 */\n\nimport { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint8 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint16 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint32 (data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5)\n}\n\nconst neg1b = BigInt(-1)\nconst pos1b = BigInt(1)\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeNegint64 (data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options)\n  if (typeof int !== 'bigint') {\n    const value = -1 - int\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9)\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${decodeErrPrefix} integers outside of the safe integer range are not supported`)\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeNegint (buf, token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeNegint.encodedSize = function encodedSize (token) {\n  const negint = token.value\n  const unsigned = (typeof negint === 'bigint' ? (negint * neg1b - pos1b) : (negint * -1 - 1))\n  /* c8 ignore next 4 */\n  // handled by quickEncode, we shouldn't get here but it's included for completeness\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5\n  }\n  return 9\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeNegint.compareTokens = function compareTokens (tok1, tok2) {\n  // opposite of the uint comparison since we store the uint version in bytes\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : /* c8 ignore next */ 0\n}\n","import { Token, Type } from './token.js'\nimport { assertEnoughData, decodeErrPrefix } from './common.js'\nimport * as uint from './0uint.js'\nimport { compare, fromString, slice } from './byte-utils.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length)\n  const buf = slice(data, pos + prefix, pos + prefix + length)\n  return new Token(Type.bytes, buf, prefix + length)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeBytesCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBytes64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer bytes lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * `encodedBytes` allows for caching when we do a byte version of a string\n * for key sorting purposes\n * @param {Token} token\n * @returns {Uint8Array}\n */\nfunction tokenBytes (token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value\n  }\n  // @ts-ignore c'mon\n  return token.encodedBytes\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeBytes (buf, token) {\n  const bytes = tokenBytes(token)\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length)\n  buf.push(bytes)\n}\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeBytes.encodedSize = function encodedSize (token) {\n  const bytes = tokenBytes(token)\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length\n}\n\n/**\n * @param {Token} tok1\n * @param {Token} tok2\n * @returns {number}\n */\nencodeBytes.compareTokens = function compareTokens (tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2))\n}\n\n/**\n * @param {Uint8Array} b1\n * @param {Uint8Array} b2\n * @returns {number}\n */\nexport function compareBytes (b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2)\n}\n","import { Token, Type } from './token.js'\nimport { assertEnoughData, decodeErrPrefix } from './common.js'\nimport * as uint from './0uint.js'\nimport { encodeBytes } from './2bytes.js'\nimport { toString, slice } from './byte-utils.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} prefix\n * @param {number} length\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction toToken (data, pos, prefix, length, options) {\n  const totLength = prefix + length\n  assertEnoughData(data, pos, totLength)\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength)\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength)\n  }\n  return tok\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeStringCompact (data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options)\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeString64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer string lengths not supported`)\n  }\n  return toToken(data, pos, 9, l, options)\n}\n\nexport const encodeString = encodeBytes\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeArrayCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArray64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer array lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeArrayIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeArray (buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value)\n}\n\n// using an array as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeArray.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeArray.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport { decodeErrPrefix } from './common.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} prefix\n * @param {number} length\n * @returns {Token}\n */\nfunction toToken (_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeMapCompact (data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap8 (data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap16 (data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options))\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap32 (data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options))\n}\n\n// TODO: maybe we shouldn't support this ..\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMap64 (data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options)\n  if (typeof l === 'bigint') {\n    throw new Error(`${decodeErrPrefix} 64-bit integer map lengths not supported`)\n  }\n  return toToken(data, pos, 9, l)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeMapIndefinite (data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return toToken(data, pos, 1, Infinity)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeMap (buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value)\n}\n\n// using a map as a map key, are you sure about this? we can only sort\n// by map length here, it's up to the encoder to decide to look deeper\nencodeMap.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeMap.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeTagCompact (_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag8 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag16 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag32 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag64 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeTag (buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n","// TODO: shift some of the bytes logic to bytes-utils so we can use Buffer\n// where possible\n\nimport { Token, Type } from './token.js'\nimport { decodeErrPrefix } from './common.js'\nimport { encodeUint } from './0uint.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n */\n\nconst MINOR_FALSE = 20\nconst MINOR_TRUE = 21\nconst MINOR_NULL = 22\nconst MINOR_UNDEFINED = 23\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeUndefined (_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${decodeErrPrefix} undefined values are not supported`)\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1)\n  }\n  return new Token(Type.undefined, undefined, 1)\n}\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeBreak (_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${decodeErrPrefix} indefinite length items not allowed`)\n  }\n  return new Token(Type.break, undefined, 1)\n}\n\n/**\n * @param {number} value\n * @param {number} bytes\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nfunction createToken (value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${decodeErrPrefix} NaN values are not supported`)\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${decodeErrPrefix} Infinity values are not supported`)\n    }\n  }\n  return new Token(Type.float, value, bytes)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat16 (data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat32 (data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeFloat64 (data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n * @param {EncodeOptions} options\n */\nexport function encodeFloat (buf, token, options) {\n  const float = token.value\n\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE])\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE])\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL])\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED])\n  } else {\n    let decoded\n    let success = false\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float)\n      decoded = readFloat16(ui8a, 1)\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 0xf9\n        buf.push(ui8a.slice(0, 3))\n        success = true\n      } else {\n        encodeFloat32(float)\n        decoded = readFloat32(ui8a, 1)\n        if (float === decoded) {\n          ui8a[0] = 0xfa\n          buf.push(ui8a.slice(0, 5))\n          success = true\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float)\n      decoded = readFloat64(ui8a, 1)\n      ui8a[0] = 0xfb\n      buf.push(ui8a.slice(0, 9))\n    }\n  }\n}\n\n/**\n * @param {Token} token\n * @param {EncodeOptions} options\n * @returns {number}\n */\nencodeFloat.encodedSize = function encodedSize (token, options) {\n  const float = token.value\n\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1\n  }\n\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float)\n    let decoded = readFloat16(ui8a, 1)\n    if (float === decoded || Number.isNaN(float)) {\n      return 3\n    }\n    encodeFloat32(float)\n    decoded = readFloat32(ui8a, 1)\n    if (float === decoded) {\n      return 5\n    }\n  }\n  return 9\n}\n\nconst buffer = new ArrayBuffer(9)\nconst dataView = new DataView(buffer, 1)\nconst ui8a = new Uint8Array(buffer, 0)\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat16 (inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 0x7c00, false)\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 0xfc00, false)\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 0x7e00, false)\n  } else {\n    dataView.setFloat32(0, inp)\n    const valu32 = dataView.getUint32(0)\n    const exponent = (valu32 & 0x7f800000) >> 23\n    const mantissa = valu32 & 0x7fffff\n\n    /* c8 ignore next 6 */\n    if (exponent === 0xff) {\n      // too big, Infinity, but this should be hard (impossible?) to trigger\n      dataView.setUint16(0, 0x7c00, false)\n    } else if (exponent === 0x00) {\n      // 0.0, -0.0 and subnormals, shouldn't be possible to get here because 0.0 should be counted as an int\n      dataView.setUint16(0, ((inp & 0x80000000) >> 16) | (mantissa >> 13), false)\n    } else { // standard numbers\n      // chunks of logic here borrowed from https://github.com/PJK/libcbor/blob/c78f437182533e3efa8d963ff4b945bb635c2284/src/cbor/encoding.c#L127\n      const logicalExponent = exponent - 127\n      // Now we know that 2^exponent <= 0 logically\n      /* c8 ignore next 6 */\n      if (logicalExponent < -24) {\n        /* No unambiguous representation exists, this float is not a half float\n          and is too small to be represented using a half, round off to zero.\n          Consistent with the reference implementation. */\n        // should be difficult (impossible?) to get here in JS\n        dataView.setUint16(0, 0)\n      } else if (logicalExponent < -14) {\n        /* Offset the remaining decimal places by shifting the significand, the\n          value is lost. This is an implementation decision that works around the\n          absence of standard half-float in the language. */\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | /* sign bit */ (1 << (24 + logicalExponent)), false)\n      } else {\n        dataView.setUint16(0, ((valu32 & 0x80000000) >> 16) | ((logicalExponent + 15) << 10) | (mantissa >> 13), false)\n      }\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat16 (ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${decodeErrPrefix} not enough data for float16`)\n  }\n\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1]\n  if (half === 0x7c00) {\n    return Infinity\n  }\n  if (half === 0xfc00) {\n    return -Infinity\n  }\n  if (half === 0x7e00) {\n    return NaN\n  }\n  const exp = (half >> 10) & 0x1f\n  const mant = half & 0x3ff\n  let val\n  if (exp === 0) {\n    val = mant * (2 ** -24)\n  } else if (exp !== 31) {\n    val = (mant + 1024) * (2 ** (exp - 25))\n  /* c8 ignore next 4 */\n  } else {\n    // may not be possible to get here\n    val = mant === 0 ? Infinity : NaN\n  }\n  return (half & 0x8000) ? -val : val\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat32 (inp) {\n  dataView.setFloat32(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat32 (ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${decodeErrPrefix} not enough data for float32`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false)\n}\n\n/**\n * @param {number} inp\n */\nfunction encodeFloat64 (inp) {\n  dataView.setFloat64(0, inp, false)\n}\n\n/**\n * @param {Uint8Array} ui8a\n * @param {number} pos\n * @returns {number}\n */\nfunction readFloat64 (ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${decodeErrPrefix} not enough data for float64`)\n  }\n  const offset = (ui8a.byteOffset || 0) + pos\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false)\n}\n\n/**\n * @param {Token} _tok1\n * @param {Token} _tok2\n * @returns {number}\n */\nencodeFloat.compareTokens = encodeUint.compareTokens\n/*\nencodeFloat.compareTokens = function compareTokens (_tok1, _tok2) {\n  return _tok1\n  throw new Error(`${encodeErrPrefix} cannot use floats as map keys`)\n}\n*/\n","import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\nimport * as negint from './1negint.js'\nimport * as bytes from './2bytes.js'\nimport * as string from './3string.js'\nimport * as array from './4array.js'\nimport * as map from './5map.js'\nimport * as tag from './6tag.js'\nimport * as float from './7float.js'\nimport { decodeErrPrefix } from './common.js'\nimport { fromArray } from './byte-utils.js'\n\n/**\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} minor\n */\nfunction invalidMinor (data, pos, minor) {\n  throw new Error(`${decodeErrPrefix} encountered invalid minor (${minor}) for major ${data[pos] >>> 5}`)\n}\n\n/**\n * @param {string} msg\n * @returns {()=>any}\n */\nfunction errorer (msg) {\n  return () => { throw new Error(`${decodeErrPrefix} ${msg}`) }\n}\n\n/** @type {((data:Uint8Array, pos:number, minor:number, options?:DecodeOptions) => any)[]} */\nexport const jump = []\n\n// unsigned integer, 0x00..0x17 (0..23)\nfor (let i = 0; i <= 0x17; i++) {\n  jump[i] = invalidMinor // uint.decodeUintCompact, handled by quick[]\n}\njump[0x18] = uint.decodeUint8 // unsigned integer, one-byte uint8_t follows\njump[0x19] = uint.decodeUint16 // unsigned integer, two-byte uint16_t follows\njump[0x1a] = uint.decodeUint32 // unsigned integer, four-byte uint32_t follows\njump[0x1b] = uint.decodeUint64 // unsigned integer, eight-byte uint64_t follows\njump[0x1c] = invalidMinor\njump[0x1d] = invalidMinor\njump[0x1e] = invalidMinor\njump[0x1f] = invalidMinor\n// negative integer, -1-0x00..-1-0x17 (-1..-24)\nfor (let i = 0x20; i <= 0x37; i++) {\n  jump[i] = invalidMinor // negintDecode, handled by quick[]\n}\njump[0x38] = negint.decodeNegint8 // negative integer, -1-n one-byte uint8_t for n follows\njump[0x39] = negint.decodeNegint16 // negative integer, -1-n two-byte uint16_t for n follows\njump[0x3a] = negint.decodeNegint32 // negative integer, -1-n four-byte uint32_t for follows\njump[0x3b] = negint.decodeNegint64 // negative integer, -1-n eight-byte uint64_t for follows\njump[0x3c] = invalidMinor\njump[0x3d] = invalidMinor\njump[0x3e] = invalidMinor\njump[0x3f] = invalidMinor\n// byte string, 0x00..0x17 bytes follow\nfor (let i = 0x40; i <= 0x57; i++) {\n  jump[i] = bytes.decodeBytesCompact\n}\njump[0x58] = bytes.decodeBytes8 // byte string, one-byte uint8_t for n, and then n bytes follow\njump[0x59] = bytes.decodeBytes16 // byte string, two-byte uint16_t for n, and then n bytes follow\njump[0x5a] = bytes.decodeBytes32 // byte string, four-byte uint32_t for n, and then n bytes follow\njump[0x5b] = bytes.decodeBytes64 // byte string, eight-byte uint64_t for n, and then n bytes follow\njump[0x5c] = invalidMinor\njump[0x5d] = invalidMinor\njump[0x5e] = invalidMinor\njump[0x5f] = errorer('indefinite length bytes/strings are not supported') // byte string, byte strings follow, terminated by \"break\"\n// UTF-8 string 0x00..0x17 bytes follow\nfor (let i = 0x60; i <= 0x77; i++) {\n  jump[i] = string.decodeStringCompact\n}\njump[0x78] = string.decodeString8 // UTF-8 string, one-byte uint8_t for n, and then n bytes follow\njump[0x79] = string.decodeString16 // UTF-8 string, two-byte uint16_t for n, and then n bytes follow\njump[0x7a] = string.decodeString32 // UTF-8 string, four-byte uint32_t for n, and then n bytes follow\njump[0x7b] = string.decodeString64 // UTF-8 string, eight-byte uint64_t for n, and then n bytes follow\njump[0x7c] = invalidMinor\njump[0x7d] = invalidMinor\njump[0x7e] = invalidMinor\njump[0x7f] = errorer('indefinite length bytes/strings are not supported') // UTF-8 strings follow, terminated by \"break\"\n// array, 0x00..0x17 data items follow\nfor (let i = 0x80; i <= 0x97; i++) {\n  jump[i] = array.decodeArrayCompact\n}\njump[0x98] = array.decodeArray8 // array, one-byte uint8_t for n, and then n data items follow\njump[0x99] = array.decodeArray16 // array, two-byte uint16_t for n, and then n data items follow\njump[0x9a] = array.decodeArray32 // array, four-byte uint32_t for n, and then n data items follow\njump[0x9b] = array.decodeArray64 // array, eight-byte uint64_t for n, and then n data items follow\njump[0x9c] = invalidMinor\njump[0x9d] = invalidMinor\njump[0x9e] = invalidMinor\njump[0x9f] = array.decodeArrayIndefinite // array, data items follow, terminated by \"break\"\n// map, 0x00..0x17 pairs of data items follow\nfor (let i = 0xa0; i <= 0xb7; i++) {\n  jump[i] = map.decodeMapCompact\n}\njump[0xb8] = map.decodeMap8 // map, one-byte uint8_t for n, and then n pairs of data items follow\njump[0xb9] = map.decodeMap16 // map, two-byte uint16_t for n, and then n pairs of data items follow\njump[0xba] = map.decodeMap32 // map, four-byte uint32_t for n, and then n pairs of data items follow\njump[0xbb] = map.decodeMap64 // map, eight-byte uint64_t for n, and then n pairs of data items follow\njump[0xbc] = invalidMinor\njump[0xbd] = invalidMinor\njump[0xbe] = invalidMinor\njump[0xbf] = map.decodeMapIndefinite // map, pairs of data items follow, terminated by \"break\"\n// tags\nfor (let i = 0xc0; i <= 0xd7; i++) {\n  jump[i] = tag.decodeTagCompact\n}\njump[0xd8] = tag.decodeTag8\njump[0xd9] = tag.decodeTag16\njump[0xda] = tag.decodeTag32\njump[0xdb] = tag.decodeTag64\njump[0xdc] = invalidMinor\njump[0xdd] = invalidMinor\njump[0xde] = invalidMinor\njump[0xdf] = invalidMinor\n// 0xe0..0xf3 simple values, unsupported\nfor (let i = 0xe0; i <= 0xf3; i++) {\n  jump[i] = errorer('simple values are not supported')\n}\njump[0xf4] = invalidMinor // false, handled by quick[]\njump[0xf5] = invalidMinor // true, handled by quick[]\njump[0xf6] = invalidMinor // null, handled by quick[]\njump[0xf7] = float.decodeUndefined // undefined\njump[0xf8] = errorer('simple values are not supported') // simple value, one byte follows, unsupported\njump[0xf9] = float.decodeFloat16 // half-precision float (two-byte IEEE 754)\njump[0xfa] = float.decodeFloat32 // single-precision float (four-byte IEEE 754)\njump[0xfb] = float.decodeFloat64 // double-precision float (eight-byte IEEE 754)\njump[0xfc] = invalidMinor\njump[0xfd] = invalidMinor\njump[0xfe] = invalidMinor\njump[0xff] = float.decodeBreak // \"break\" stop code\n\n/** @type {Token[]} */\nexport const quick = []\n// ints <24\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1)\n}\n// negints >= -24\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1)\n}\n// empty bytes\nquick[0x40] = new Token(Type.bytes, new Uint8Array(0), 1)\n// empty string\nquick[0x60] = new Token(Type.string, '', 1)\n// empty list\nquick[0x80] = new Token(Type.array, 0, 1)\n// empty map\nquick[0xa0] = new Token(Type.map, 0, 1)\n// false\nquick[0xf4] = new Token(Type.false, false, 1)\n// true\nquick[0xf5] = new Token(Type.true, true, 1)\n// null\nquick[0xf6] = new Token(Type.null, null, 1)\n\n/**\n * @param {Token} token\n * @returns {Uint8Array|undefined}\n */\nexport function quickEncodeToken (token) {\n  switch (token.type) {\n    case Type.false:\n      return fromArray([0xf4])\n    case Type.true:\n      return fromArray([0xf5])\n    case Type.null:\n      return fromArray([0xf6])\n    case Type.bytes:\n      if (!token.value.length) {\n        return fromArray([0x40])\n      }\n      return\n    case Type.string:\n      if (token.value === '') {\n        return fromArray([0x60])\n      }\n      return\n    case Type.array:\n      if (token.value === 0) {\n        return fromArray([0x80])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case Type.map:\n      if (token.value === 0) {\n        return fromArray([0xa0])\n      }\n      /* c8 ignore next 2 */\n      // shouldn't be possible if this were called when there was only one token\n      return\n    case Type.uint:\n      if (token.value < 24) {\n        return fromArray([Number(token.value)])\n      }\n      return\n    case Type.negint:\n      if (token.value >= -24) {\n        return fromArray([31 - Number(token.value)])\n      }\n  }\n}\n","import { is } from './is.js'\nimport { Token, Type } from './token.js'\nimport { Bl } from './bl.js'\nimport { encodeErrPrefix } from './common.js'\nimport { quickEncodeToken } from './jump.js'\nimport { asU8A } from './byte-utils.js'\n\nimport { encodeUint } from './0uint.js'\nimport { encodeNegint } from './1negint.js'\nimport { encodeBytes } from './2bytes.js'\nimport { encodeString } from './3string.js'\nimport { encodeArray } from './4array.js'\nimport { encodeMap } from './5map.js'\nimport { encodeTag } from './6tag.js'\nimport { encodeFloat } from './7float.js'\n\n/**\n * @typedef {import('../interface').EncodeOptions} EncodeOptions\n * @typedef {import('../interface').OptionalTypeEncoder} OptionalTypeEncoder\n * @typedef {import('../interface').Reference} Reference\n * @typedef {import('../interface').StrictTypeEncoder} StrictTypeEncoder\n * @typedef {import('../interface').TokenTypeEncoder} TokenTypeEncoder\n * @typedef {import('../interface').TokenOrNestedTokens} TokenOrNestedTokens\n */\n\n/** @type {EncodeOptions} */\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n}\n\n/** @returns {TokenTypeEncoder[]} */\nexport function makeCborEncoders () {\n  const encoders = []\n  encoders[Type.uint.major] = encodeUint\n  encoders[Type.negint.major] = encodeNegint\n  encoders[Type.bytes.major] = encodeBytes\n  encoders[Type.string.major] = encodeString\n  encoders[Type.array.major] = encodeArray\n  encoders[Type.map.major] = encodeMap\n  encoders[Type.tag.major] = encodeTag\n  encoders[Type.float.major] = encodeFloat\n  return encoders\n}\n\nconst cborEncoders = makeCborEncoders()\n\nconst buf = new Bl()\n\n/** @implements {Reference} */\nclass Ref {\n  /**\n   * @param {object|any[]} obj\n   * @param {Reference|undefined} parent\n   */\n  constructor (obj, parent) {\n    this.obj = obj\n    this.parent = parent\n  }\n\n  /**\n   * @param {object|any[]} obj\n   * @returns {boolean}\n   */\n  includes (obj) {\n    /** @type {Reference|undefined} */\n    let p = this\n    do {\n      if (p.obj === obj) {\n        return true\n      }\n    } while (p = p.parent) // eslint-disable-line\n    return false\n  }\n\n  /**\n   * @param {Reference|undefined} stack\n   * @param {object|any[]} obj\n   * @returns {Reference}\n   */\n  static createCheck (stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${encodeErrPrefix} object contains circular references`)\n    }\n    return new Ref(obj, stack)\n  }\n}\n\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n}\n\n/** @type {{[typeName: string]: StrictTypeEncoder}} */\nconst typeEncoders = {\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  number (obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj)\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj)\n    } else {\n      return new Token(Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  bigint (obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj)\n    } else {\n      return new Token(Type.negint, obj)\n    }\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Uint8Array (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  string (obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj)\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  boolean (obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  null (_obj, _typ, _options, _refStack) {\n    return simpleTokens.null\n  },\n\n  /**\n   * @param {any} _obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  undefined (_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  ArrayBuffer (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} _options\n   * @param {Reference} [_refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  DataView (obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength))\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} _typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Array (obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyArray, new Token(Type.break)]\n      }\n      return simpleTokens.emptyArray\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    const entries = []\n    let i = 0\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack)\n    }\n    if (options.addBreakTokens) {\n      return [new Token(Type.array, obj.length), entries, new Token(Type.break)]\n    }\n    return [new Token(Type.array, obj.length), entries]\n  },\n\n  /**\n   * @param {any} obj\n   * @param {string} typ\n   * @param {EncodeOptions} options\n   * @param {Reference} [refStack]\n   * @returns {TokenOrNestedTokens}\n   */\n  Object (obj, typ, options, refStack) {\n    // could be an Object or a Map\n    const isMap = typ !== 'Object'\n    // it's slightly quicker to use Object.keys() than Object.entries()\n    const keys = isMap ? obj.keys() : Object.keys(obj)\n    const length = isMap ? obj.size : keys.length\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [simpleTokens.emptyMap, new Token(Type.break)]\n      }\n      return simpleTokens.emptyMap\n    }\n    refStack = Ref.createCheck(refStack, obj)\n    /** @type {TokenOrNestedTokens[]} */\n    const entries = []\n    let i = 0\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ]\n    }\n    sortMapEntries(entries, options)\n    if (options.addBreakTokens) {\n      return [new Token(Type.map, length), entries, new Token(Type.break)]\n    }\n    return [new Token(Type.map, length), entries]\n  }\n}\n\ntypeEncoders.Map = typeEncoders.Object\ntypeEncoders.Buffer = typeEncoders.Uint8Array\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${typ}Array`] = typeEncoders.DataView\n}\n\n/**\n * @param {any} obj\n * @param {EncodeOptions} [options]\n * @param {Reference} [refStack]\n * @returns {TokenOrNestedTokens}\n */\nfunction objectToTokens (obj, options = {}, refStack) {\n  const typ = is(obj)\n  const customTypeEncoder = (options && options.typeEncoders && /** @type {OptionalTypeEncoder} */ options.typeEncoders[typ]) || typeEncoders[typ]\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack)\n    if (tokens != null) {\n      return tokens\n    }\n  }\n  const typeEncoder = typeEncoders[typ]\n  if (!typeEncoder) {\n    throw new Error(`${encodeErrPrefix} unsupported type: ${typ}`)\n  }\n  return typeEncoder(obj, typ, options, refStack)\n}\n\n/*\nCBOR key sorting is a mess.\n\nThe canonicalisation recommendation from https://tools.ietf.org/html/rfc7049#section-3.9\nincludes the wording:\n\n> The keys in every map must be sorted lowest value to highest.\n> Sorting is performed on the bytes of the representation of the key\n> data items without paying attention to the 3/5 bit splitting for\n> major types.\n> ...\n>  *  If two keys have different lengths, the shorter one sorts\n      earlier;\n>  *  If two keys have the same length, the one with the lower value\n      in (byte-wise) lexical order sorts earlier.\n\n1. It is not clear what \"bytes of the representation of the key\" means: is it\n   the CBOR representation, or the binary representation of the object itself?\n   Consider the int and uint difference here.\n2. It is not clear what \"without paying attention to\" means: do we include it\n   and compare on that? Or do we omit the special prefix byte, (mostly) treating\n   the key in its plain binary representation form.\n\nThe FIDO 2.0: Client To Authenticator Protocol spec takes the original CBOR\nwording and clarifies it according to their understanding.\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20170927/fido-client-to-authenticator-protocol-v2.0-rd-20170927.html#message-encoding\n\n> The keys in every map must be sorted lowest value to highest. Sorting is\n> performed on the bytes of the representation of the key data items without\n> paying attention to the 3/5 bit splitting for major types. The sorting rules\n> are:\n>  * If the major types are different, the one with the lower value in numerical\n>    order sorts earlier.\n>  * If two keys have different lengths, the shorter one sorts earlier;\n>  * If two keys have the same length, the one with the lower value in\n>    (byte-wise) lexical order sorts earlier.\n\nSome other implementations, such as borc, do a full encode then do a\nlength-first, byte-wise-second comparison:\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/encoder.js#L358\nhttps://github.com/dignifiedquire/borc/blob/b6bae8b0bcde7c3976b0f0f0957208095c392a36/src/utils.js#L143-L151\n\nThis has the benefit of being able to easily handle arbitrary keys, including\ncomplex types (maps and arrays).\n\nWe'll opt for the FIDO approach, since it affords some efficies since we don't\nneed a full encode of each key to determine order and can defer to the types\nto determine how to most efficiently order their values (i.e. int and uint\nordering can be done on the numbers, no need for byte-wise, for example).\n\nRecommendation: stick to single key types or you'll get into trouble, and prefer\nstring keys because it's much simpler that way.\n*/\n\n/*\n(UPDATE, Dec 2020)\nhttps://tools.ietf.org/html/rfc8949 is the updated CBOR spec and clarifies some\nof the questions above with a new recommendation for sorting order being much\ncloser to what would be expected in other environments (i.e. no length-first\nweirdness).\nThis new sorting order is not yet implemented here but could be added as an\noption. \"Determinism\" (canonicity) is system dependent and it's difficult to\nchange existing systems that are built with existing expectations. So if a new\nordering is introduced here, the old needs to be kept as well with the user\nhaving the option.\n*/\n\n/**\n * @param {TokenOrNestedTokens[]} entries\n * @param {EncodeOptions} options\n */\nfunction sortMapEntries (entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter)\n  }\n}\n\n/**\n * @param {(Token|Token[])[]} e1\n * @param {(Token|Token[])[]} e2\n * @returns {number}\n */\nfunction mapSorter (e1, e2) {\n  // the key position ([0]) could have a single token or an array\n  // almost always it'll be a single token but complex key might get involved\n  /* c8 ignore next 2 */\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0]\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0]\n\n  // different key types\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type)\n  }\n\n  const major = keyToken1.type.major\n  // TODO: handle case where cmp === 0 but there are more keyToken e. complex type)\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2)\n  /* c8 ignore next 5 */\n  if (tcmp === 0) {\n    // duplicate key or complex type where the first token matched,\n    // i.e. a map or array and we're only comparing the opening token\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone')\n  }\n  return tcmp\n}\n\n/**\n * @param {Bl} buf\n * @param {TokenOrNestedTokens} tokens\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n */\nfunction tokensToEncoded (buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options)\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options)\n  }\n}\n\n/**\n * @param {any} data\n * @param {TokenTypeEncoder[]} encoders\n * @param {EncodeOptions} options\n * @returns {Uint8Array}\n */\nfunction encodeCustom (data, encoders, options) {\n  const tokens = objectToTokens(data, options)\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens)\n    if (quickBytes) {\n      return quickBytes\n    }\n    const encoder = encoders[tokens.type.major]\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options)\n      const buf = new Bl(size)\n      encoder(buf, tokens, options)\n      /* c8 ignore next 4 */\n      // this would be a problem with encodedSize() functions\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${tokens} was wrong`)\n      }\n      return asU8A(buf.chunks[0])\n    }\n  }\n  buf.reset()\n  tokensToEncoded(buf, tokens, encoders, options)\n  return buf.toBytes(true)\n}\n\n/**\n * @param {any} data\n * @param {EncodeOptions} [options]\n * @returns {Uint8Array}\n */\nfunction encode (data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options)\n  return encodeCustom(data, cborEncoders, options)\n}\n\nexport { objectToTokens, encode, encodeCustom, Ref }\n","import { decodeErrPrefix } from './common.js'\nimport { Type } from './token.js'\nimport { jump, quick } from './jump.js'\n\n/**\n * @typedef {import('./token.js').Token} Token\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n * @typedef {import('../interface').DecodeTokenizer} DecodeTokenizer\n */\n\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass Tokeniser {\n  /**\n   * @param {Uint8Array} data\n   * @param {DecodeOptions} options\n   */\n  constructor (data, options = {}) {\n    this._pos = 0\n    this.data = data\n    this.options = options\n  }\n\n  pos () {\n    return this._pos\n  }\n\n  done () {\n    return this._pos >= this.data.length\n  }\n\n  next () {\n    const byt = this.data[this._pos]\n    let token = quick[byt]\n    if (token === undefined) {\n      const decoder = jump[byt]\n      /* c8 ignore next 4 */\n      // if we're here then there's something wrong with our jump or quick lists!\n      if (!decoder) {\n        throw new Error(`${decodeErrPrefix} no decoder for major type ${byt >>> 5} (byte 0x${byt.toString(16).padStart(2, '0')})`)\n      }\n      const minor = byt & 31\n      token = decoder(this.data, this._pos, minor, this.options)\n    }\n    // @ts-ignore we get to assume encodedLength is set (crossing fingers slightly)\n    this._pos += token.encodedLength\n    return token\n  }\n}\n\nconst DONE = Symbol.for('DONE')\nconst BREAK = Symbol.for('BREAK')\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToArray (token, tokeniser, options) {\n  const arr = []\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options)\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length array\n        break\n      }\n      throw new Error(`${decodeErrPrefix} got unexpected break to lengthed array`)\n    }\n    if (value === DONE) {\n      throw new Error(`${decodeErrPrefix} found array but not enough entries (got ${i}, expected ${token.value})`)\n    }\n    arr[i] = value\n  }\n  return arr\n}\n\n/**\n * @param {Token} token\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokenToMap (token, tokeniser, options) {\n  const useMaps = options.useMaps === true\n  const obj = useMaps ? undefined : {}\n  const m = useMaps ? new Map() : undefined\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options)\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        // normal end to indefinite length map\n        break\n      }\n      throw new Error(`${decodeErrPrefix} got unexpected break to lengthed map`)\n    }\n    if (key === DONE) {\n      throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${i} [no key], expected ${token.value})`)\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${decodeErrPrefix} non-string keys not supported (got ${typeof key})`)\n    }\n    if (options.rejectDuplicateMapKeys === true) {\n      // @ts-ignore\n      if ((useMaps && m.has(key)) || (!useMaps && (key in obj))) {\n        throw new Error(`${decodeErrPrefix} found repeat map key \"${key}\"`)\n      }\n    }\n    const value = tokensToObject(tokeniser, options)\n    if (value === DONE) {\n      throw new Error(`${decodeErrPrefix} found map but not enough entries (got ${i} [no value], expected ${token.value})`)\n    }\n    if (useMaps) {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      m.set(key, value)\n    } else {\n      // @ts-ignore TODO reconsider this .. maybe needs to be strict about key types\n      obj[key] = value\n    }\n  }\n  // @ts-ignore c'mon man\n  return useMaps ? m : obj\n}\n\n/**\n * @param {DecodeTokenizer} tokeniser\n * @param {DecodeOptions} options\n * @returns {any|BREAK|DONE}\n */\nfunction tokensToObject (tokeniser, options) {\n  // should we support array as an argument?\n  // check for tokenIter[Symbol.iterator] and replace tokenIter with what that returns?\n  if (tokeniser.done()) {\n    return DONE\n  }\n\n  const token = tokeniser.next()\n\n  if (token.type === Type.break) {\n    return BREAK\n  }\n\n  if (token.type.terminal) {\n    return token.value\n  }\n\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options)\n  }\n\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options)\n  }\n\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options)\n      return options.tags[token.value](tagged)\n    }\n    throw new Error(`${decodeErrPrefix} tag not supported (${token.value})`)\n  }\n  /* c8 ignore next */\n  throw new Error('unsupported')\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {[any, Uint8Array]}\n */\nfunction decodeFirst (data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${decodeErrPrefix} data to decode must be a Uint8Array`)\n  }\n  options = Object.assign({}, defaultDecodeOptions, options)\n  const tokeniser = options.tokenizer || new Tokeniser(data, options)\n  const decoded = tokensToObject(tokeniser, options)\n  if (decoded === DONE) {\n    throw new Error(`${decodeErrPrefix} did not find any content to decode`)\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${decodeErrPrefix} got unexpected break`)\n  }\n  return [decoded, data.subarray(tokeniser.pos())]\n}\n\n/**\n * @param {Uint8Array} data\n * @param {DecodeOptions} [options]\n * @returns {any}\n */\nfunction decode (data, options) {\n  const [decoded, remainder] = decodeFirst(data, options)\n  if (remainder.length > 0) {\n    throw new Error(`${decodeErrPrefix} too many terminals, data makes no sense`)\n  }\n  return decoded\n}\n\nexport { Tokeniser, tokensToObject, decode, decodeFirst }\n","export const empty = new Uint8Array(0);\nexport function toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nexport function fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nexport function equals(aa, bb) {\n    if (aa === bb)\n        return true;\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n        return o;\n    if (o instanceof ArrayBuffer)\n        return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nexport function isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nexport function fromString(str) {\n    return new TextEncoder().encode(str);\n}\nexport function toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map","/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;\n//# sourceMappingURL=base-x.js.map","import { coerce } from '../bytes.js';\nimport basex from '../vendor/base-x.js';\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nexport function or(left, right) {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nexport class Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nexport function from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nexport function baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = basex(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => coerce(decode(text))\n    });\n}\nfunction decode(string, alphabet, bitsPerChar, name) {\n    // Build the character lookup table:\n    const codes = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        codes[alphabet[i]] = i;\n    }\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = codes[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\n/**\n * RFC4648 Factory\n */\nexport function rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabet, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map","import { baseX } from './base.js';\nexport const base36 = baseX({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map","import { baseX } from './base.js';\nexport const base58btc = baseX({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map","/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;\n//# sourceMappingURL=varint.js.map","import varint from './vendor/varint.js';\nexport function decode(data, offset = 0) {\n    const code = varint.decode(data, offset);\n    return [code, varint.decode.bytes];\n}\nexport function encodeTo(int, target, offset = 0) {\n    varint.encode(int, target, offset);\n    return target;\n}\nexport function encodingLength(int) {\n    return varint.encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map","import { coerce, equals as equalBytes } from '../bytes.js';\nimport * as varint from '../varint.js';\n/**\n * Creates a multihash digest.\n */\nexport function create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = varint.encodingLength(code);\n    const digestOffset = sizeOffset + varint.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    varint.encodeTo(code, bytes, 0);\n    varint.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nexport function decode(multihash) {\n    const bytes = coerce(multihash);\n    const [code, sizeOffset] = varint.decode(bytes);\n    const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            equalBytes(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nexport class Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nexport function hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map","import { base32 } from './bases/base32.js';\nimport { base36 } from './bases/base36.js';\nimport { base58btc } from './bases/base58.js';\nimport { coerce } from './bytes.js';\nimport * as Digest from './hashes/digest.js';\nimport * as varint from './varint.js';\n// This way TS will also expose all the types from module\nexport * from './link/interface.js';\nexport function format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? base32.encoder));\n    }\n}\nexport function toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nexport function fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nexport class CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = Digest.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            Digest.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = Digest.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = varint.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? base58btc;\n            return [\n                base58btc.prefix,\n                decoder.decode(`${base58btc.prefix}${source}`)\n            ];\n        }\n        case base58btc.prefix: {\n            const decoder = base ?? base58btc;\n            return [base58btc.prefix, decoder.decode(source)];\n        }\n        case base32.prefix: {\n            const decoder = base ?? base32;\n            return [base32.prefix, decoder.decode(source)];\n        }\n        case base36.prefix: {\n            const decoder = base ?? base36;\n            return [base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = varint.encodingLength(version);\n    const hashOffset = codeOffset + varint.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    varint.encodeTo(version, bytes, 0);\n    varint.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map","import * as cborg from 'cborg'\nimport { CID } from 'multiformats/cid'\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ArrayBufferView<T>} ArrayBufferView\n */\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} buf\n * @returns {ByteView<T>}\n */\nexport function toByteView (buf) {\n  if (buf instanceof ArrayBuffer) {\n    return new Uint8Array(buf, 0, buf.byteLength)\n  }\n\n  return buf\n}\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst _encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\nexport const encodeOptions = {\n  ..._encodeOptions,\n  typeEncoders: {\n    ..._encodeOptions.typeEncoders\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst _decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  rejectDuplicateMapKeys: true,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n_decodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nexport const decodeOptions = {\n  ..._decodeOptions,\n  tags: _decodeOptions.tags.slice()\n}\n\nexport const name = 'dag-cbor'\nexport const code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => cborg.encode(node, _encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T> | ArrayBufferView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => cborg.decode(toByteView(data), _decodeOptions)\n","export const empty = new Uint8Array(0);\nexport function toHex(d) {\n    return d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\n}\nexport function fromHex(hex) {\n    const hexes = hex.match(/../g);\n    return hexes != null ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n}\nexport function equals(aa, bb) {\n    if (aa === bb)\n        return true;\n    if (aa.byteLength !== bb.byteLength) {\n        return false;\n    }\n    for (let ii = 0; ii < aa.byteLength; ii++) {\n        if (aa[ii] !== bb[ii]) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function coerce(o) {\n    if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n        return o;\n    if (o instanceof ArrayBuffer)\n        return new Uint8Array(o);\n    if (ArrayBuffer.isView(o)) {\n        return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n    }\n    throw new Error('Unknown type, must be binary type');\n}\nexport function isBinary(o) {\n    return o instanceof ArrayBuffer || ArrayBuffer.isView(o);\n}\nexport function fromString(str) {\n    return new TextEncoder().encode(str);\n}\nexport function toString(b) {\n    return new TextDecoder().decode(b);\n}\n//# sourceMappingURL=bytes.js.map","/* eslint-disable */\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n/**\n * @param {string} ALPHABET\n * @param {any} name\n */\nfunction base(ALPHABET, name) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError('Alphabet too long');\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for (var j = 0; j < BASE_MAP.length; j++) {\n        BASE_MAP[j] = 255;\n    }\n    for (var i = 0; i < ALPHABET.length; i++) {\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + ' is ambiguous');\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256); // log(BASE) / log(256), rounded up\n    var iFACTOR = Math.log(256) / Math.log(BASE); // log(256) / log(BASE), rounded up\n    /**\n     * @param {any[] | Iterable<number>} source\n     */\n    function encode(source) {\n        // @ts-ignore\n        if (source instanceof Uint8Array)\n            ;\n        else if (ArrayBuffer.isView(source)) {\n            source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n        }\n        else if (Array.isArray(source)) {\n            source = Uint8Array.from(source);\n        }\n        if (!(source instanceof Uint8Array)) {\n            throw new TypeError('Expected Uint8Array');\n        }\n        if (source.length === 0) {\n            return '';\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while (pbegin !== pend && source[pbegin] === 0) {\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = ((pend - pbegin) * iFACTOR + 1) >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while (pbegin !== pend) {\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n                carry += (256 * b58[it1]) >>> 0;\n                b58[it1] = (carry % BASE) >>> 0;\n                carry = (carry / BASE) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while (it2 !== size && b58[it2] === 0) {\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for (; it2 < size; ++it2) {\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    /**\n     * @param {string | string[]} source\n     */\n    function decodeUnsafe(source) {\n        if (typeof source !== 'string') {\n            throw new TypeError('Expected String');\n        }\n        if (source.length === 0) {\n            return new Uint8Array();\n        }\n        var psz = 0;\n        // Skip leading spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while (source[psz] === LEADER) {\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (((source.length - psz) * FACTOR) + 1) >>> 0; // log(58) / log(256), rounded up.\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while (source[psz]) {\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n                carry += (BASE * b256[it3]) >>> 0;\n                b256[it3] = (carry % 256) >>> 0;\n                carry = (carry / 256) >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error('Non-zero carry');\n            }\n            length = i;\n            psz++;\n        }\n        // Skip trailing spaces.\n        if (source[psz] === ' ') {\n            return;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while (it4 !== size && b256[it4] === 0) {\n            it4++;\n        }\n        var vch = new Uint8Array(zeroes + (size - it4));\n        var j = zeroes;\n        while (it4 !== size) {\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    /**\n     * @param {string | string[]} string\n     */\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(`Non-${name} character`);\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;\n//# sourceMappingURL=base-x.js.map","import { coerce } from '../bytes.js';\nimport basex from '../vendor/base-x.js';\n/**\n * Class represents both BaseEncoder and MultibaseEncoder meaning it\n * can be used to encode to multibase or base encode without multibase\n * prefix.\n */\nclass Encoder {\n    name;\n    prefix;\n    baseEncode;\n    constructor(name, prefix, baseEncode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n    }\n    encode(bytes) {\n        if (bytes instanceof Uint8Array) {\n            return `${this.prefix}${this.baseEncode(bytes)}`;\n        }\n        else {\n            throw Error('Unknown type, must be binary type');\n        }\n    }\n}\n/**\n * Class represents both BaseDecoder and MultibaseDecoder so it could be used\n * to decode multibases (with matching prefix) or just base decode strings\n * with corresponding base encoding.\n */\nclass Decoder {\n    name;\n    prefix;\n    baseDecode;\n    prefixCodePoint;\n    constructor(name, prefix, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        const prefixCodePoint = prefix.codePointAt(0);\n        /* c8 ignore next 3 */\n        if (prefixCodePoint === undefined) {\n            throw new Error('Invalid prefix character');\n        }\n        this.prefixCodePoint = prefixCodePoint;\n        this.baseDecode = baseDecode;\n    }\n    decode(text) {\n        if (typeof text === 'string') {\n            if (text.codePointAt(0) !== this.prefixCodePoint) {\n                throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);\n            }\n            return this.baseDecode(text.slice(this.prefix.length));\n        }\n        else {\n            throw Error('Can only multibase decode strings');\n        }\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n}\nclass ComposedDecoder {\n    decoders;\n    constructor(decoders) {\n        this.decoders = decoders;\n    }\n    or(decoder) {\n        return or(this, decoder);\n    }\n    decode(input) {\n        const prefix = input[0];\n        const decoder = this.decoders[prefix];\n        if (decoder != null) {\n            return decoder.decode(input);\n        }\n        else {\n            throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);\n        }\n    }\n}\nexport function or(left, right) {\n    // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n    return new ComposedDecoder({\n        ...(left.decoders ?? { [left.prefix]: left }),\n        ...(right.decoders ?? { [right.prefix]: right })\n    });\n}\nexport class Codec {\n    name;\n    prefix;\n    baseEncode;\n    baseDecode;\n    encoder;\n    decoder;\n    constructor(name, prefix, baseEncode, baseDecode) {\n        this.name = name;\n        this.prefix = prefix;\n        this.baseEncode = baseEncode;\n        this.baseDecode = baseDecode;\n        this.encoder = new Encoder(name, prefix, baseEncode);\n        this.decoder = new Decoder(name, prefix, baseDecode);\n    }\n    encode(input) {\n        return this.encoder.encode(input);\n    }\n    decode(input) {\n        return this.decoder.decode(input);\n    }\n}\nexport function from({ name, prefix, encode, decode }) {\n    return new Codec(name, prefix, encode, decode);\n}\nexport function baseX({ name, prefix, alphabet }) {\n    const { encode, decode } = basex(alphabet, name);\n    return from({\n        prefix,\n        name,\n        encode,\n        decode: (text) => coerce(decode(text))\n    });\n}\nfunction decode(string, alphabet, bitsPerChar, name) {\n    // Build the character lookup table:\n    const codes = {};\n    for (let i = 0; i < alphabet.length; ++i) {\n        codes[alphabet[i]] = i;\n    }\n    // Count the padding bytes:\n    let end = string.length;\n    while (string[end - 1] === '=') {\n        --end;\n    }\n    // Allocate the output:\n    const out = new Uint8Array((end * bitsPerChar / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n        // Read one character from the string:\n        const value = codes[string[i]];\n        if (value === undefined) {\n            throw new SyntaxError(`Non-${name} character`);\n        }\n        // Append the bits to the buffer:\n        buffer = (buffer << bitsPerChar) | value;\n        bits += bitsPerChar;\n        // Write out some bits if the buffer has a byte's worth:\n        if (bits >= 8) {\n            bits -= 8;\n            out[written++] = 0xff & (buffer >> bits);\n        }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n        throw new SyntaxError('Unexpected end of data');\n    }\n    return out;\n}\nfunction encode(data, alphabet, bitsPerChar) {\n    const pad = alphabet[alphabet.length - 1] === '=';\n    const mask = (1 << bitsPerChar) - 1;\n    let out = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < data.length; ++i) {\n        // Slurp data into the buffer:\n        buffer = (buffer << 8) | data[i];\n        bits += 8;\n        // Write out as much as we can:\n        while (bits > bitsPerChar) {\n            bits -= bitsPerChar;\n            out += alphabet[mask & (buffer >> bits)];\n        }\n    }\n    // Partial character:\n    if (bits !== 0) {\n        out += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n        while (((out.length * bitsPerChar) & 7) !== 0) {\n            out += '=';\n        }\n    }\n    return out;\n}\n/**\n * RFC4648 Factory\n */\nexport function rfc4648({ name, prefix, bitsPerChar, alphabet }) {\n    return from({\n        prefix,\n        name,\n        encode(input) {\n            return encode(input, alphabet, bitsPerChar);\n        },\n        decode(input) {\n            return decode(input, alphabet, bitsPerChar, name);\n        }\n    });\n}\n//# sourceMappingURL=base.js.map","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n    prefix: 'b',\n    name: 'base32',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n    bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n    prefix: 'B',\n    name: 'base32upper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n    bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n    prefix: 'c',\n    name: 'base32pad',\n    alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n    bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n    prefix: 'C',\n    name: 'base32padupper',\n    alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n    bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n    prefix: 'v',\n    name: 'base32hex',\n    alphabet: '0123456789abcdefghijklmnopqrstuv',\n    bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n    prefix: 'V',\n    name: 'base32hexupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n    bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n    prefix: 't',\n    name: 'base32hexpad',\n    alphabet: '0123456789abcdefghijklmnopqrstuv=',\n    bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n    prefix: 'T',\n    name: 'base32hexpadupper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n    bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n    prefix: 'h',\n    name: 'base32z',\n    alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n    bitsPerChar: 5\n});\n//# sourceMappingURL=base32.js.map","import { baseX } from './base.js';\nexport const base36 = baseX({\n    prefix: 'k',\n    name: 'base36',\n    alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n    prefix: 'K',\n    name: 'base36upper',\n    alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base36.js.map","import { baseX } from './base.js';\nexport const base58btc = baseX({\n    name: 'base58btc',\n    prefix: 'z',\n    alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n    name: 'base58flickr',\n    prefix: 'Z',\n    alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n//# sourceMappingURL=base58.js.map","/* eslint-disable */\nvar encode_1 = encode;\nvar MSB = 0x80, REST = 0x7F, MSBALL = ~REST, INT = Math.pow(2, 31);\n/**\n * @param {number} num\n * @param {number[]} out\n * @param {number} offset\n */\nfunction encode(num, out, offset) {\n    out = out || [];\n    offset = offset || 0;\n    var oldOffset = offset;\n    while (num >= INT) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num /= 128;\n    }\n    while (num & MSBALL) {\n        out[offset++] = (num & 0xFF) | MSB;\n        num >>>= 7;\n    }\n    out[offset] = num | 0;\n    // @ts-ignore\n    encode.bytes = offset - oldOffset + 1;\n    return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80, REST$1 = 0x7F;\n/**\n * @param {string | any[]} buf\n * @param {number} offset\n */\nfunction read(buf, offset) {\n    var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n    do {\n        if (counter >= l) {\n            // @ts-ignore\n            read.bytes = 0;\n            throw new RangeError('Could not decode varint');\n        }\n        b = buf[counter++];\n        res += shift < 28\n            ? (b & REST$1) << shift\n            : (b & REST$1) * Math.pow(2, shift);\n        shift += 7;\n    } while (b >= MSB$1);\n    // @ts-ignore\n    read.bytes = counter - offset;\n    return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (/** @type {number} */ value) {\n    return (value < N1 ? 1\n        : value < N2 ? 2\n            : value < N3 ? 3\n                : value < N4 ? 4\n                    : value < N5 ? 5\n                        : value < N6 ? 6\n                            : value < N7 ? 7\n                                : value < N8 ? 8\n                                    : value < N9 ? 9\n                                        : 10);\n};\nvar varint = {\n    encode: encode_1,\n    decode: decode,\n    encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;\n//# sourceMappingURL=varint.js.map","import varint from './vendor/varint.js';\nexport function decode(data, offset = 0) {\n    const code = varint.decode(data, offset);\n    return [code, varint.decode.bytes];\n}\nexport function encodeTo(int, target, offset = 0) {\n    varint.encode(int, target, offset);\n    return target;\n}\nexport function encodingLength(int) {\n    return varint.encodingLength(int);\n}\n//# sourceMappingURL=varint.js.map","import { coerce, equals as equalBytes } from '../bytes.js';\nimport * as varint from '../varint.js';\n/**\n * Creates a multihash digest.\n */\nexport function create(code, digest) {\n    const size = digest.byteLength;\n    const sizeOffset = varint.encodingLength(code);\n    const digestOffset = sizeOffset + varint.encodingLength(size);\n    const bytes = new Uint8Array(digestOffset + size);\n    varint.encodeTo(code, bytes, 0);\n    varint.encodeTo(size, bytes, sizeOffset);\n    bytes.set(digest, digestOffset);\n    return new Digest(code, size, digest, bytes);\n}\n/**\n * Turns bytes representation of multihash digest into an instance.\n */\nexport function decode(multihash) {\n    const bytes = coerce(multihash);\n    const [code, sizeOffset] = varint.decode(bytes);\n    const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n    const digest = bytes.subarray(sizeOffset + digestOffset);\n    if (digest.byteLength !== size) {\n        throw new Error('Incorrect length');\n    }\n    return new Digest(code, size, digest, bytes);\n}\nexport function equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else {\n        const data = b;\n        return (a.code === data.code &&\n            a.size === data.size &&\n            data.bytes instanceof Uint8Array &&\n            equalBytes(a.bytes, data.bytes));\n    }\n}\n/**\n * Represents a multihash digest which carries information about the\n * hashing algorithm and an actual hash digest.\n */\nexport class Digest {\n    code;\n    size;\n    digest;\n    bytes;\n    /**\n     * Creates a multihash digest.\n     */\n    constructor(code, size, digest, bytes) {\n        this.code = code;\n        this.size = size;\n        this.digest = digest;\n        this.bytes = bytes;\n    }\n}\n/**\n * Used to check that the passed multihash has the passed code\n */\nexport function hasCode(digest, code) {\n    return digest.code === code;\n}\n//# sourceMappingURL=digest.js.map","import { base32 } from './bases/base32.js';\nimport { base36 } from './bases/base36.js';\nimport { base58btc } from './bases/base58.js';\nimport { coerce } from './bytes.js';\nimport * as Digest from './hashes/digest.js';\nimport * as varint from './varint.js';\n// This way TS will also expose all the types from module\nexport * from './link/interface.js';\nexport function format(link, base) {\n    const { bytes, version } = link;\n    switch (version) {\n        case 0:\n            return toStringV0(bytes, baseCache(link), base ?? base58btc.encoder);\n        default:\n            return toStringV1(bytes, baseCache(link), (base ?? base32.encoder));\n    }\n}\nexport function toJSON(link) {\n    return {\n        '/': format(link)\n    };\n}\nexport function fromJSON(json) {\n    return CID.parse(json['/']);\n}\nconst cache = new WeakMap();\nfunction baseCache(cid) {\n    const baseCache = cache.get(cid);\n    if (baseCache == null) {\n        const baseCache = new Map();\n        cache.set(cid, baseCache);\n        return baseCache;\n    }\n    return baseCache;\n}\nexport class CID {\n    code;\n    version;\n    multihash;\n    bytes;\n    '/';\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param multihash - (Multi)hash of the of the content.\n     */\n    constructor(version, code, multihash, bytes) {\n        this.code = code;\n        this.version = version;\n        this.multihash = multihash;\n        this.bytes = bytes;\n        // flag to serializers that this is a CID and\n        // should be treated specially\n        this['/'] = bytes;\n    }\n    /**\n     * Signalling `cid.asCID === cid` has been replaced with `cid['/'] === cid.bytes`\n     * please either use `CID.asCID(cid)` or switch to new signalling mechanism\n     *\n     * @deprecated\n     */\n    get asCID() {\n        return this;\n    }\n    // ArrayBufferView\n    get byteOffset() {\n        return this.bytes.byteOffset;\n    }\n    // ArrayBufferView\n    get byteLength() {\n        return this.bytes.byteLength;\n    }\n    toV0() {\n        switch (this.version) {\n            case 0: {\n                return this;\n            }\n            case 1: {\n                const { code, multihash } = this;\n                if (code !== DAG_PB_CODE) {\n                    throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n                }\n                // sha2-256\n                if (multihash.code !== SHA_256_CODE) {\n                    throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n                }\n                return (CID.createV0(multihash));\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);\n            }\n        }\n    }\n    toV1() {\n        switch (this.version) {\n            case 0: {\n                const { code, digest } = this.multihash;\n                const multihash = Digest.create(code, digest);\n                return (CID.createV1(this.code, multihash));\n            }\n            case 1: {\n                return this;\n            }\n            default: {\n                throw Error(`Can not convert CID version ${this.version} to version 1. This is a bug please report`);\n            }\n        }\n    }\n    equals(other) {\n        return CID.equals(this, other);\n    }\n    static equals(self, other) {\n        const unknown = other;\n        return (unknown != null &&\n            self.code === unknown.code &&\n            self.version === unknown.version &&\n            Digest.equals(self.multihash, unknown.multihash));\n    }\n    toString(base) {\n        return format(this, base);\n    }\n    toJSON() {\n        return { '/': format(this) };\n    }\n    link() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'CID';\n    // Legacy\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        return `CID(${this.toString()})`;\n    }\n    /**\n     * Takes any input `value` and returns a `CID` instance if it was\n     * a `CID` otherwise returns `null`. If `value` is instanceof `CID`\n     * it will return value back. If `value` is not instance of this CID\n     * class, but is compatible CID it will return new instance of this\n     * `CID` class. Otherwise returns null.\n     *\n     * This allows two different incompatible versions of CID library to\n     * co-exist and interop as long as binary interface is compatible.\n     */\n    static asCID(input) {\n        if (input == null) {\n            return null;\n        }\n        const value = input;\n        if (value instanceof CID) {\n            // If value is instance of CID then we're all set.\n            return value;\n        }\n        else if ((value['/'] != null && value['/'] === value.bytes) || value.asCID === value) {\n            // If value isn't instance of this CID class but `this.asCID === this` or\n            // `value['/'] === value.bytes` is true it is CID instance coming from a\n            // different implementation (diff version or duplicate). In that case we\n            // rebase it to this `CID` implementation so caller is guaranteed to get\n            // instance with expected API.\n            const { version, code, multihash, bytes } = value;\n            return new CID(version, code, multihash, bytes ?? encodeCID(version, code, multihash.bytes));\n        }\n        else if (value[cidSymbol] === true) {\n            // If value is a CID from older implementation that used to be tagged via\n            // symbol we still rebase it to the this `CID` implementation by\n            // delegating that to a constructor.\n            const { version, multihash, code } = value;\n            const digest = Digest.decode(multihash);\n            return CID.create(version, code, digest);\n        }\n        else {\n            // Otherwise value is not a CID (or an incompatible version of it) in\n            // which case we return `null`.\n            return null;\n        }\n    }\n    /**\n     * @param version - Version of the CID\n     * @param code - Code of the codec content is encoded in, see https://github.com/multiformats/multicodec/blob/master/table.csv\n     * @param digest - (Multi)hash of the of the content.\n     */\n    static create(version, code, digest) {\n        if (typeof code !== 'number') {\n            throw new Error('String codecs are no longer supported');\n        }\n        if (!(digest.bytes instanceof Uint8Array)) {\n            throw new Error('Invalid digest');\n        }\n        switch (version) {\n            case 0: {\n                if (code !== DAG_PB_CODE) {\n                    throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);\n                }\n                else {\n                    return new CID(version, code, digest, digest.bytes);\n                }\n            }\n            case 1: {\n                const bytes = encodeCID(version, code, digest.bytes);\n                return new CID(version, code, digest, bytes);\n            }\n            default: {\n                throw new Error('Invalid version');\n            }\n        }\n    }\n    /**\n     * Simplified version of `create` for CIDv0.\n     */\n    static createV0(digest) {\n        return CID.create(0, DAG_PB_CODE, digest);\n    }\n    /**\n     * Simplified version of `create` for CIDv1.\n     *\n     * @param code - Content encoding format code.\n     * @param digest - Multihash of the content.\n     */\n    static createV1(code, digest) {\n        return CID.create(1, code, digest);\n    }\n    /**\n     * Decoded a CID from its binary representation. The byte array must contain\n     * only the CID with no additional bytes.\n     *\n     * An error will be thrown if the bytes provided do not contain a valid\n     * binary representation of a CID.\n     */\n    static decode(bytes) {\n        const [cid, remainder] = CID.decodeFirst(bytes);\n        if (remainder.length !== 0) {\n            throw new Error('Incorrect length');\n        }\n        return cid;\n    }\n    /**\n     * Decoded a CID from its binary representation at the beginning of a byte\n     * array.\n     *\n     * Returns an array with the first element containing the CID and the second\n     * element containing the remainder of the original byte array. The remainder\n     * will be a zero-length byte array if the provided bytes only contained a\n     * binary CID representation.\n     */\n    static decodeFirst(bytes) {\n        const specs = CID.inspectBytes(bytes);\n        const prefixSize = specs.size - specs.multihashSize;\n        const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n        if (multihashBytes.byteLength !== specs.multihashSize) {\n            throw new Error('Incorrect length');\n        }\n        const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n        const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n        const cid = specs.version === 0\n            ? CID.createV0(digest)\n            : CID.createV1(specs.codec, digest);\n        return [cid, bytes.subarray(specs.size)];\n    }\n    /**\n     * Inspect the initial bytes of a CID to determine its properties.\n     *\n     * Involves decoding up to 4 varints. Typically this will require only 4 to 6\n     * bytes but for larger multicodec code values and larger multihash digest\n     * lengths these varints can be quite large. It is recommended that at least\n     * 10 bytes be made available in the `initialBytes` argument for a complete\n     * inspection.\n     */\n    static inspectBytes(initialBytes) {\n        let offset = 0;\n        const next = () => {\n            const [i, length] = varint.decode(initialBytes.subarray(offset));\n            offset += length;\n            return i;\n        };\n        let version = next();\n        let codec = DAG_PB_CODE;\n        if (version === 18) {\n            // CIDv0\n            version = 0;\n            offset = 0;\n        }\n        else {\n            codec = next();\n        }\n        if (version !== 0 && version !== 1) {\n            throw new RangeError(`Invalid CID version ${version}`);\n        }\n        const prefixSize = offset;\n        const multihashCode = next(); // multihash code\n        const digestSize = next(); // multihash length\n        const size = offset + digestSize;\n        const multihashSize = size - prefixSize;\n        return { version, codec, multihashCode, digestSize, multihashSize, size };\n    }\n    /**\n     * Takes cid in a string representation and creates an instance. If `base`\n     * decoder is not provided will use a default from the configuration. It will\n     * throw an error if encoding of the CID is not compatible with supplied (or\n     * a default decoder).\n     */\n    static parse(source, base) {\n        const [prefix, bytes] = parseCIDtoBytes(source, base);\n        const cid = CID.decode(bytes);\n        if (cid.version === 0 && source[0] !== 'Q') {\n            throw Error('Version 0 CID string must not include multibase prefix');\n        }\n        // Cache string representation to avoid computing it on `this.toString()`\n        baseCache(cid).set(prefix, source);\n        return cid;\n    }\n}\nfunction parseCIDtoBytes(source, base) {\n    switch (source[0]) {\n        // CIDv0 is parsed differently\n        case 'Q': {\n            const decoder = base ?? base58btc;\n            return [\n                base58btc.prefix,\n                decoder.decode(`${base58btc.prefix}${source}`)\n            ];\n        }\n        case base58btc.prefix: {\n            const decoder = base ?? base58btc;\n            return [base58btc.prefix, decoder.decode(source)];\n        }\n        case base32.prefix: {\n            const decoder = base ?? base32;\n            return [base32.prefix, decoder.decode(source)];\n        }\n        case base36.prefix: {\n            const decoder = base ?? base36;\n            return [base36.prefix, decoder.decode(source)];\n        }\n        default: {\n            if (base == null) {\n                throw Error('To parse non base32, base36 or base58btc encoded CID multibase decoder must be provided');\n            }\n            return [source[0], base.decode(source)];\n        }\n    }\n}\nfunction toStringV0(bytes, cache, base) {\n    const { prefix } = base;\n    if (prefix !== base58btc.prefix) {\n        throw Error(`Cannot string encode V0 in ${base.name} encoding`);\n    }\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes).slice(1);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nfunction toStringV1(bytes, cache, base) {\n    const { prefix } = base;\n    const cid = cache.get(prefix);\n    if (cid == null) {\n        const cid = base.encode(bytes);\n        cache.set(prefix, cid);\n        return cid;\n    }\n    else {\n        return cid;\n    }\n}\nconst DAG_PB_CODE = 0x70;\nconst SHA_256_CODE = 0x12;\nfunction encodeCID(version, code, multihash) {\n    const codeOffset = varint.encodingLength(version);\n    const hashOffset = codeOffset + varint.encodingLength(code);\n    const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n    varint.encodeTo(version, bytes, 0);\n    varint.encodeTo(code, bytes, codeOffset);\n    bytes.set(multihash, hashOffset);\n    return bytes;\n}\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\n//# sourceMappingURL=cid.js.map","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","import varint from 'varint'\n\nexport const CIDV0_BYTES = {\n  SHA2_256: 0x12,\n  LENGTH: 0x20,\n  DAG_PB: 0x70\n}\n\nexport const V2_HEADER_LENGTH = /* characteristics */ 16 /* v1 offset */ + 8 /* v1 size */ + 8 /* index offset */ + 8\n\n/**\n * Decodes varint and seeks the buffer\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @param {import('./coding').Seekable} seeker\n * @returns {number}\n */\nexport function decodeVarint (bytes, seeker) {\n  if (!bytes.length) {\n    throw new Error('Unexpected end of data')\n  }\n  const i = varint.decode(bytes)\n  seeker.seek(/** @type {number} */(varint.decode.bytes))\n  return i\n}\n\n/**\n * Decode v2 header\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.exactly(V2_HEADER_LENGTH, true) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n * @returns {import('./coding').CarV2FixedHeader}\n */\nexport function decodeV2Header (bytes) {\n  const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  let offset = 0\n  const header = {\n    version: 2,\n    /** @type {[bigint, bigint]} */\n    characteristics: [\n      dv.getBigUint64(offset, true),\n      dv.getBigUint64(offset += 8, true)\n    ],\n    dataOffset: Number(dv.getBigUint64(offset += 8, true)),\n    dataSize: Number(dv.getBigUint64(offset += 8, true)),\n    indexOffset: Number(dv.getBigUint64(offset += 8, true))\n  }\n  return header\n}\n\n/**\n * Checks the length of the multihash to be read afterwards\n *\n * ```js\n * // needs bytes to be read first\n * const bytes = reader.upTo(8) // maybe async\n * ```\n *\n * @param {Uint8Array} bytes\n */\nexport function getMultihashLength (bytes) {\n  // | code | length | .... |\n  // where both code and length are varints, so we have to decode\n  // them first before we can know total length\n\n  varint.decode(bytes) // code\n  const codeLength = /** @type {number} */(varint.decode.bytes)\n  const length = varint.decode(bytes.subarray(varint.decode.bytes))\n  const lengthLength = /** @type {number} */(varint.decode.bytes)\n  const mhLength = codeLength + lengthLength + length\n\n  return mhLength\n}\n","/** Auto-generated with @ipld/schema@v4.2.0 at Thu Sep 14 2023 from IPLD Schema:\n *\n * # CarV1HeaderOrV2Pragma is a more relaxed form, and can parse {version:x} where\n * # roots are optional. This is typically useful for the {verison:2} CARv2\n * # pragma.\n *\n * type CarV1HeaderOrV2Pragma struct {\n * \troots optional [&Any]\n * \t# roots is _not_ optional for CarV1 but we defer that check within code to\n * \t# gracefully handle the V2 case where it's just {version:X}\n * \tversion Int\n * }\n *\n * # CarV1Header is the strict form of the header, and requires roots to be\n * # present. This is compatible with the CARv1 specification.\n *\n * # type CarV1Header struct {\n * # \troots [&Any]\n * # \tversion Int\n * # }\n *\n */\n\nconst Kinds = {\n  Null: /** @returns {undefined|null} */ (/** @type {any} */ obj) => obj === null ? obj : undefined,\n  Int: /** @returns {undefined|number} */ (/** @type {any} */ obj) => Number.isInteger(obj) ? obj : undefined,\n  Float: /** @returns {undefined|number} */ (/** @type {any} */ obj) => typeof obj === 'number' && Number.isFinite(obj) ? obj : undefined,\n  String: /** @returns {undefined|string} */ (/** @type {any} */ obj) => typeof obj === 'string' ? obj : undefined,\n  Bool: /** @returns {undefined|boolean} */ (/** @type {any} */ obj) => typeof obj === 'boolean' ? obj : undefined,\n  Bytes: /** @returns {undefined|Uint8Array} */ (/** @type {any} */ obj) => obj instanceof Uint8Array ? obj : undefined,\n  Link: /** @returns {undefined|object} */ (/** @type {any} */ obj) => obj !== null && typeof obj === 'object' && obj.asCID === obj ? obj : undefined,\n  List: /** @returns {undefined|Array<any>} */ (/** @type {any} */ obj) => Array.isArray(obj) ? obj : undefined,\n  Map: /** @returns {undefined|object} */ (/** @type {any} */ obj) => obj !== null && typeof obj === 'object' && obj.asCID !== obj && !Array.isArray(obj) && !(obj instanceof Uint8Array) ? obj : undefined\n}\n/** @type {{ [k in string]: (obj:any)=>undefined|any}} */\nconst Types = {\n  'CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarV1HeaderOrV2Pragma > roots (anon)': /** @returns {undefined|any} */ (/** @type {any} */ obj) => {\n    if (Kinds.List(obj) === undefined) {\n      return undefined\n    }\n    for (let i = 0; i < obj.length; i++) {\n      let v = obj[i]\n      v = Types['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n      if (v === undefined) {\n        return undefined\n      }\n      if (v !== obj[i]) {\n        const ret = obj.slice(0, i)\n        for (let j = i; j < obj.length; j++) {\n          let v = obj[j]\n          v = Types['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n          if (v === undefined) {\n            return undefined\n          }\n          ret.push(v)\n        }\n        return ret\n      }\n    }\n    return obj\n  },\n  Int: Kinds.Int,\n  CarV1HeaderOrV2Pragma: /** @returns {undefined|any} */ (/** @type {any} */ obj) => {\n    if (Kinds.Map(obj) === undefined) {\n      return undefined\n    }\n    const entries = Object.entries(obj)\n    /** @type {{[k in string]: any}} */\n    let ret = obj\n    let requiredCount = 1\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i]\n      switch (key) {\n        case 'roots':\n          {\n            const v = Types['CarV1HeaderOrV2Pragma > roots (anon)'](obj[key])\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.roots = v\n            }\n          }\n          break\n        case 'version':\n          {\n            requiredCount--\n            const v = Types.Int(obj[key])\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.version = v\n            }\n          }\n          break\n        default:\n          return undefined\n      }\n    }\n\n    if (requiredCount > 0) {\n      return undefined\n    }\n    return ret\n  }\n}\n/** @type {{ [k in string]: (obj:any)=>undefined|any}} */\nconst Reprs = {\n  'CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarV1HeaderOrV2Pragma > roots (anon)': /** @returns {undefined|any} */ (/** @type {any} */ obj) => {\n    if (Kinds.List(obj) === undefined) {\n      return undefined\n    }\n    for (let i = 0; i < obj.length; i++) {\n      let v = obj[i]\n      v = Reprs['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n      if (v === undefined) {\n        return undefined\n      }\n      if (v !== obj[i]) {\n        const ret = obj.slice(0, i)\n        for (let j = i; j < obj.length; j++) {\n          let v = obj[j]\n          v = Reprs['CarV1HeaderOrV2Pragma > roots (anon) > valueType (anon)'](v)\n          if (v === undefined) {\n            return undefined\n          }\n          ret.push(v)\n        }\n        return ret\n      }\n    }\n    return obj\n  },\n  Int: Kinds.Int,\n  CarV1HeaderOrV2Pragma: /** @returns {undefined|any} */ (/** @type {any} */ obj) => {\n    if (Kinds.Map(obj) === undefined) {\n      return undefined\n    }\n    const entries = Object.entries(obj)\n    /** @type {{[k in string]: any}} */\n    let ret = obj\n    let requiredCount = 1\n    for (let i = 0; i < entries.length; i++) {\n      const [key, value] = entries[i]\n      switch (key) {\n        case 'roots':\n          {\n            const v = Reprs['CarV1HeaderOrV2Pragma > roots (anon)'](value)\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.roots = v\n            }\n          }\n          break\n        case 'version':\n          {\n            requiredCount--\n            const v = Reprs.Int(value)\n            if (v === undefined) {\n              return undefined\n            }\n            if (v !== value || ret !== obj) {\n              if (ret === obj) {\n                /** @type {{[k in string]: any}} */\n                ret = {}\n                for (let j = 0; j < i; j++) {\n                  ret[entries[j][0]] = entries[j][1]\n                }\n              }\n              ret.version = v\n            }\n          }\n          break\n        default:\n          return undefined\n      }\n    }\n    if (requiredCount > 0) {\n      return undefined\n    }\n    return ret\n  }\n}\n\nexport const CarV1HeaderOrV2Pragma = {\n  toTyped: Types.CarV1HeaderOrV2Pragma,\n  toRepresentation: Reprs.CarV1HeaderOrV2Pragma\n}\n","import { decode as decodeDagCbor } from '@ipld/dag-cbor'\nimport { CID } from 'multiformats/cid'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { CIDV0_BYTES, decodeV2Header, decodeVarint, getMultihashLength, V2_HEADER_LENGTH } from './decoder-common.js'\nimport { CarV1HeaderOrV2Pragma } from './header-validator.js'\n\n/**\n * @typedef {import('./api').Block} Block\n * @typedef {import('./api').BlockHeader} BlockHeader\n * @typedef {import('./api').BlockIndex} BlockIndex\n * @typedef {import('./coding').BytesBufferReader} BytesBufferReader\n * @typedef {import('./coding').CarHeader} CarHeader\n * @typedef {import('./coding').CarV2Header} CarV2Header\n * @typedef {import('./coding').CarV2FixedHeader} CarV2FixedHeader\n */\n\n/**\n * Reads header data from a `BytesReader`. The header may either be in the form\n * of a `CarHeader` or `CarV2Header` depending on the CAR being read.\n *\n * @name decoder.readHeader(reader)\n * @param {BytesBufferReader} reader\n * @param {number} [strictVersion]\n * @returns {CarHeader | CarV2Header}\n */\nexport function readHeader (reader, strictVersion) {\n  const length = decodeVarint(reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)')\n  }\n  const header = reader.exactly(length, true)\n  const block = decodeDagCbor(header)\n  if (CarV1HeaderOrV2Pragma.toTyped(block) === undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  if ((block.version !== 1 && block.version !== 2) || (strictVersion !== undefined && block.version !== strictVersion)) {\n    throw new Error(`Invalid CAR version: ${block.version}${strictVersion !== undefined ? ` (expected ${strictVersion})` : ''}`)\n  }\n  if (block.version === 1) {\n    // CarV1HeaderOrV2Pragma makes roots optional, let's make it mandatory\n    if (!Array.isArray(block.roots)) {\n      throw new Error('Invalid CAR header format')\n    }\n    return block\n  }\n  // version 2\n  if (block.roots !== undefined) {\n    throw new Error('Invalid CAR header format')\n  }\n  const v2Header = decodeV2Header(reader.exactly(V2_HEADER_LENGTH, true))\n  reader.seek(v2Header.dataOffset - reader.pos)\n  const v1Header = readHeader(reader, 1)\n  return Object.assign(v1Header, v2Header)\n}\n\n/**\n * Reads CID sync\n *\n * @param {BytesBufferReader} reader\n * @returns {CID}\n */\nfunction readCid (reader) {\n  const first = reader.exactly(2, false)\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    // cidv0 32-byte sha2-256\n    const bytes = reader.exactly(34, true)\n    const multihash = Digest.decode(bytes)\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash)\n  }\n\n  const version = decodeVarint(reader.upTo(8), reader)\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${version})`)\n  }\n  const codec = decodeVarint(reader.upTo(8), reader)\n  const bytes = reader.exactly(getMultihashLength(reader.upTo(8)), true)\n  const multihash = Digest.decode(bytes)\n  return CID.create(version, codec, multihash)\n}\n\n/**\n * Reads the leading data of an individual block from CAR data from a\n * `BytesBufferReader`. Returns a `BlockHeader` object which contains\n * `{ cid, length, blockLength }` which can be used to either index the block\n * or read the block binary data.\n *\n * @name async decoder.readBlockHead(reader)\n * @param {BytesBufferReader} reader\n * @returns {BlockHeader}\n */\nexport function readBlockHead (reader) {\n  // length includes a CID + Binary, where CID has a variable length\n  // we have to deal with\n  const start = reader.pos\n  let length = decodeVarint(reader.upTo(8), reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)')\n  }\n  length += (reader.pos - start)\n  const cid = readCid(reader)\n  const blockLength = length - Number(reader.pos - start) // subtract CID length\n\n  return { cid, length, blockLength }\n}\n\n/**\n * Returns Car header and blocks from a Uint8Array\n *\n * @param {Uint8Array} bytes\n * @returns {{ header : CarHeader | CarV2Header , blocks: Block[]}}\n */\nexport function fromBytes (bytes) {\n  let reader = bytesReader(bytes)\n  const header = readHeader(reader)\n  if (header.version === 2) {\n    const v1length = reader.pos - header.dataOffset\n    reader = limitReader(reader, header.dataSize - v1length)\n  }\n\n  const blocks = []\n  while (reader.upTo(8).length > 0) {\n    const { cid, blockLength } = readBlockHead(reader)\n\n    blocks.push({ cid, bytes: reader.exactly(blockLength, true) })\n  }\n\n  return {\n    header, blocks\n  }\n}\n\n/**\n * Creates a `BytesBufferReader` from a `Uint8Array`.\n *\n * @name decoder.bytesReader(bytes)\n * @param {Uint8Array} bytes\n * @returns {BytesBufferReader}\n */\nexport function bytesReader (bytes) {\n  let pos = 0\n\n  /** @type {BytesBufferReader} */\n  return {\n    upTo (length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos))\n    },\n\n    exactly (length, seek = false) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data')\n      }\n\n      const out = bytes.subarray(pos, pos + length)\n      if (seek) {\n        pos += length\n      }\n      return out\n    },\n\n    seek (length) {\n      pos += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * Wraps a `BytesBufferReader` in a limiting `BytesBufferReader` which limits maximum read\n * to `byteLimit` bytes. It _does not_ update `pos` of the original\n * `BytesBufferReader`.\n *\n * @name decoder.limitReader(reader, byteLimit)\n * @param {BytesBufferReader} reader\n * @param {number} byteLimit\n * @returns {BytesBufferReader}\n */\nexport function limitReader (reader, byteLimit) {\n  let bytesRead = 0\n\n  /** @type {BytesBufferReader} */\n  return {\n    upTo (length) {\n      let bytes = reader.upTo(length)\n      if (bytes.length + bytesRead > byteLimit) {\n        bytes = bytes.subarray(0, byteLimit - bytesRead)\n      }\n      return bytes\n    },\n\n    exactly (length, seek = false) {\n      const bytes = reader.exactly(length, seek)\n      if (bytes.length + bytesRead > byteLimit) {\n        throw new Error('Unexpected end of data')\n      }\n      if (seek) {\n        bytesRead += length\n      }\n      return bytes\n    },\n\n    seek (length) {\n      bytesRead += length\n      reader.seek(length)\n    },\n\n    get pos () {\n      return reader.pos\n    }\n  }\n}\n","import * as BufferDecoder from './buffer-decoder.js'\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api').Block} Block\n * @typedef {import('./api').CarBufferReader} ICarBufferReader\n * @typedef {import('./coding').CarHeader} CarHeader\n * @typedef {import('./coding').CarV2Header} CarV2Header\n */\n\n/**\n * Provides blockstore-like access to a CAR.\n *\n * Implements the `RootsBufferReader` interface:\n * {@link ICarBufferReader.getRoots `getRoots()`}. And the `BlockBufferReader` interface:\n * {@link ICarBufferReader.get `get()`}, {@link ICarBufferReader.has `has()`},\n * {@link ICarBufferReader.blocks `blocks()`} and\n * {@link ICarBufferReader.cids `cids()`}.\n *\n * Load this class with either `import { CarBufferReader } from '@ipld/car/buffer-reader'`\n * (`const { CarBufferReader } = require('@ipld/car/buffer-reader')`). Or\n * `import { CarBufferReader } from '@ipld/car'` (`const { CarBufferReader } = require('@ipld/car')`).\n * The former will likely result in smaller bundle sizes where this is\n * important.\n *\n * @name CarBufferReader\n * @class\n * @implements {ICarBufferReader}\n * @property {number} version The version number of the CAR referenced by this\n * reader (should be `1` or `2`).\n */\nexport class CarBufferReader {\n  /**\n   * @constructs CarBufferReader\n   * @param {CarHeader|CarV2Header} header\n   * @param {Block[]} blocks\n   */\n  constructor (header, blocks) {\n    this._header = header\n    this._blocks = blocks\n    this._cids = undefined\n  }\n\n  /**\n   * @property version\n   * @memberof CarBufferReader\n   * @instance\n   */\n  get version () {\n    return this._header.version\n  }\n\n  /**\n   * Get the list of roots defined by the CAR referenced by this reader. May be\n   * zero or more `CID`s.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {CID[]}\n   */\n  getRoots () {\n    return this._header.roots\n  }\n\n  /**\n   * Check whether a given `CID` exists within the CAR referenced by this\n   * reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @param {CID} key\n   * @returns {boolean}\n   */\n  has (key) {\n    return this._blocks.some(b => b.cid.equals(key))\n  }\n\n  /**\n   * Fetch a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) from the CAR\n   * referenced by this reader matching the provided `CID`. In the case where\n   * the provided `CID` doesn't exist within the CAR, `undefined` will be\n   * returned.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @param {CID} key\n   * @returns {Block | undefined}\n   */\n  get (key) {\n    return this._blocks.find(b => b.cid.equals(key))\n  }\n\n  /**\n   * Returns a `Block[]` of the `Block`s (`{ cid:CID, bytes:Uint8Array }` pairs) contained within\n   * the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {Block[]}\n   */\n  blocks () {\n    return this._blocks\n  }\n\n  /**\n   * Returns a `CID[]` of the `CID`s contained within the CAR referenced by this reader.\n   *\n   * @function\n   * @memberof CarBufferReader\n   * @instance\n   * @returns {CID[]}\n   */\n  cids () {\n    if (!this._cids) {\n      this._cids = this._blocks.map(b => b.cid)\n    }\n    return this._cids\n  }\n\n  /**\n   * Instantiate a {@link CarBufferReader} from a `Uint8Array` blob. This performs a\n   * decode fully in memory and maintains the decoded state in memory for full\n   * access to the data via the `CarReader` API.\n   *\n   * @static\n   * @memberof CarBufferReader\n   * @param {Uint8Array} bytes\n   * @returns {CarBufferReader}\n   */\n  static fromBytes (bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array')\n    }\n\n    const { header, blocks } = BufferDecoder.fromBytes(bytes)\n    return new CarBufferReader(header, blocks)\n  }\n}\n\nexport const __browser = true\n","// @ts-check\n\nimport {\n  addExtension as cbor_x_addExtension,\n  decodeMultiple as cbor_x_decodeMultiple,\n  decode as cbor_x_decode\n} from 'cbor-x';\nimport { CID as multiformats_CID } from 'multiformats';\nimport { CarBufferReader as ipld_CarBufferReader } from '@ipld/car/buffer-reader';\n\n/**\n * @typedef {{\n *   receiveTimestamp: number,\n *   since: string,\n *   time: string,\n *   messages: FirehoseRecord[],\n *   deletes?: FirehoseRecord[],\n *   unexpected?: FirehoseRecord[],\n *   error?: { message: string, [prop: string]: any }[],\n *   parseTime: number\n * }} FirehoseBlock\n */\n\n/**\n * @typedef {{\n *  'app.bsky.feed.like': import('@atproto/api').AppBskyFeedLike.Record,\n *  'app.bsky.feed.post': import('@atproto/api').AppBskyFeedPost.Record,\n *  'app.bsky.feed.repost': import('@atproto/api').AppBskyFeedRepost.Record,\n *  'app.bsky.feed.threadgate': import('@atproto/api').AppBskyFeedThreadgate.Record,\n *  'app.bsky.graph.follow': import('@atproto/api').AppBskyGraphFollow.Record,\n *  'app.bsky.graph.block': import('@atproto/api').AppBskyGraphBlock.Record,\n *  'app.bsky.graph.list': import('@atproto/api').AppBskyGraphList.Record,\n *  'app.bsky.graph.listitem': import('@atproto/api').AppBskyGraphListitem.Record,\n *  'app.bsky.graph.listblock': import('@atproto/api').AppBskyGraphListblock.Record,\n *  'app.bsky.actor.profile': import('@atproto/api').AppBskyActorProfile.Record\n *  'app.bsky.feed.generator': import('@atproto/api').AppBskyFeedGenerator.Record\n *  'app.bsky.feed.postgate': import('@atproto/api').AppBskyFeedPostgate.Record\n *  'chat.bsky.actor.declaration': import('@atproto/api').ChatBskyActorDeclaration.Record,\n *  'app.bsky.graph.starterpack': import('@atproto/api').AppBskyGraphStarterpack.Record\n * }} RepoRecord$Typed\n */\n\n/**\n * @template {keyof RepoRecord$Typed} $Type\n * @typedef {{ repo: string, uri: string, action: 'create' | 'delete' | 'update', path: string, $type: $Type } &\n *  RepoRecord$Typed[$Type]\n * } FirehoseRecord$Typed\n */\n\n/**\n * @typedef {{\n *  $type: '#identity',\n *  repo: string,\n *  handle: string,\n *  time: string\n * }} FirehoseRecordIdentity\n */\n\n/**\n * @typedef {{\n *  $type: '#identity',\n *  repo: string,\n *  active: boolean,\n *  time: string\n * }} FirehoseRecordAccount\n */\n\n/**\n * @typedef {FirehoseRecord$Typed<'app.bsky.feed.like'> |\n * FirehoseRecord$Typed<'app.bsky.feed.post'> |\n * FirehoseRecord$Typed<'app.bsky.feed.repost'> |\n * FirehoseRecord$Typed<'app.bsky.feed.threadgate'> |\n * FirehoseRecord$Typed<'app.bsky.graph.follow'> |\n * FirehoseRecord$Typed<'app.bsky.graph.block'> |\n * FirehoseRecord$Typed<'app.bsky.graph.list'> |\n * FirehoseRecord$Typed<'app.bsky.graph.listitem'> |\n * FirehoseRecord$Typed<'app.bsky.graph.listblock'> |\n * FirehoseRecord$Typed<'app.bsky.actor.profile'> |\n * FirehoseRecord$Typed<'app.bsky.feed.generator'> |\n * FirehoseRecord$Typed<'app.bsky.feed.postgate'> |\n * FirehoseRecord$Typed<'chat.bsky.actor.declaration'> |\n * FirehoseRecord$Typed<'app.bsky.graph.starterpack'> |\n * FirehoseRecordIdentity |\n * FirehoseRecordAccount\n * } FirehoseRecord\n */\n\nexport const known$Types = [\n  'app.bsky.feed.like', 'app.bsky.feed.post', 'app.bsky.feed.repost', 'app.bsky.feed.threadgate',\n  'app.bsky.graph.follow', 'app.bsky.graph.block', 'app.bsky.graph.list', 'app.bsky.graph.listitem', 'app.bsky.graph.listblock',\n  'app.bsky.actor.profile',\n  'app.bsky.feed.generator',\n  'app.bsky.feed.postgate',\n  'chat.bsky.actor.declaration',\n  'app.bsky.graph.starterpack'\n];\n\nfirehose.knownTypes = known$Types;\n\nlet cbor_x_extended = false;\n\nexport async function* firehoseRecords() {\n  for await (const { messages, deletes, unexpected, ...rest } of firehose()) {\n    if (deletes?.length) {\n      for (const record of deletes) {\n        yield { ...rest, action: 'delete', record };\n      }\n    }\n\n    if (!messages.length) continue;\n    for (const record of messages) {\n      yield { ...rest, record };\n    }\n\n    for (const record of unexpected || []) {\n      yield { ...rest, action: 'unexpected', record };\n    }\n  }\n}\n\nfunction requireWebsocket() {\n  const globalObj = typeof global !== 'undefined' && global || typeof globalThis !== 'undefined' && globalThis;\n  const requireFn = globalObj?.['require'];\n  if (typeof requireFn === 'function') return /** @type {typeof WebSocket} */(requireFn('ws'));\n  throw new Error('WebSocket not available');\n}\n\n/**\n * @returns {AsyncGenerator<FirehoseBlock, void, void>}\n */\nexport async function* firehose() {\n  ensureCborXExtended();\n\n  /** @type {typeof WebSocket} */\n  const WebSocketImpl = typeof WebSocket === 'function' ? WebSocket :\n    requireWebsocket();\n\n  const wsAddress = 'wss://bsky.network/xrpc/com.atproto.sync.subscribeRepos';\n\n  const ws = new WebSocketImpl(wsAddress);\n  ws.binaryType = 'arraybuffer';\n  ws.addEventListener('message', handleMessage);\n  ws.addEventListener('error', handleError);\n  ws.addEventListener('close', handleClose)\n\n  let buf = createAwaitPromise();\n  let closed = false;\n\n  try {\n\n    while (true) {\n      await buf.promise;\n      const block = buf.block;\n      buf = createAwaitPromise();\n      if (closed) {\n        if (block.messages.length || block.deletes?.length || block.unexpected?.length) yield block;\n        break;\n      }\n      yield block;\n    }\n  } finally {\n    if (!closed) {\n      try { ws.close(); }\n      catch (error) { }\n    }\n  }\n\n  function handleClose() {\n    closed = true;\n    buf.resolve();\n  }\n\n  function handleMessage(event) {\n    const receiveTimestamp = Date.now();\n    buf.block.receiveTimestamp = receiveTimestamp;\n\n    if (typeof event.data?.byteLength === 'number') {\n      parseMessageBufAndResolve(event.data);\n    } else if (typeof event.data?.arrayBuffer === 'function') {\n      event.data.arrayBuffer().then(parseMessageBufAndResolve)\n    } else {\n      addBufError('WebSocket message type not supported ' + typeof event.data);\n      buf.resolve();\n    }\n  }\n\n  function parseMessageBufAndResolve(messageBuf) {\n    parseMessageBuf(messageBuf);\n    buf.resolve();\n  }\n\n  function parseMessageBuf(messageBuf) {\n    try {\n      parseMessageBufWorker(messageBuf);\n      buf.resolve();\n    } catch (parseError) {\n      addBufError(parseError.message);\n    }\n\n    buf.resolve();\n  }\n\n  /**\n   * @param {ArrayBuffer} messageBuf\n   */\n  function parseMessageBufWorker(messageBuf) {\n    const parseStart = Date.now();\n\n    const entry = /** @type {any[]} */(cbor_x_decodeMultiple(new Uint8Array(messageBuf)));\n\n    if (!entry) return addBufError('CBOR decodeMultiple returned empty.');\n    if (entry[0]?.op !== 1) return addBufError('Expected CBOR op:1, received:' + entry[0]?.op);\n\n    const commit = entry[1];\n    const t = entry[0].t;\n    if (t === '#identity' && commit.did) {\n      /** @type {FirehoseRecordIdentity} */\n      const identityRecord = {\n        $type: '#identity',\n        repo: commit.did,\n        handle: commit.handle,\n        time: commit.time\n      };\n      buf.block.messages.push(identityRecord);\n      return;\n    } else if (t === '#account' && commit.did) {\n      /** @type {FirehoseRecordAccount} */\n      const accountRecord = {\n        $type: '#identity',\n        repo: commit.did,\n        active: commit.active,\n        time: commit.time\n      };\n      buf.block.messages.push(accountRecord);\n      return;\n    }\n\n    if (!commit.blocks) return addBufError('Expected operation with commit.blocks, received ' + commit.blocks);\n    if (!commit.ops?.length) return addBufError('Expected operation with commit.ops, received ' + commit.ops);\n\n    const car = ipld_CarBufferReader.fromBytes(commit.blocks);\n\n    if (!buf.block.since)\n      buf.block.since = commit.since;\n\n    buf.block.time = commit.time;\n\n    let opIndex = 0;\n    for (const op of commit.ops) {\n      opIndex++;\n\n      if (!op.cid) {\n        if (op.action === 'delete') {\n          /** @type {FirehoseRecord} */\n          const deleteRecord = {\n            repo: commit.repo,\n            path: op.path,\n            uri: 'at://' + commit.repo + '/' + op.path,\n            action: 'delete',\n            $type: /** @type {*} */(null)\n          };\n          if (!buf.block.deletes) buf.block.deletes = [deleteRecord];\n          else buf.block.deletes.push(deleteRecord);\n        } else {\n          addBufError('Missing commit[' + (opIndex - 1) + '].op.cid: ' + op.cid);\n        }\n        continue;\n      }\n\n      const block = car.get(/** @type {*} */(op.cid));\n      if (!block) {\n        addBufError('Unresolvable commit[' + (opIndex - 1) + '].op.cid: ' + op.cid);\n        continue;\n      }\n\n      const record = cbor_x_decode(block.bytes);\n      // record.seq = commit.seq; 471603945\n      // record.since = /** @type {string} */(commit.since); 3ksfhcmgghv2g\n      // record.action = op.action;\n      // record.cid = cid;\n      // record.path = op.path;\n      // record.timestamp = commit.time ? Date.parse(commit.time) : Date.now(); 2024-05-13T19:59:10.457Z\n\n      record.repo = commit.repo;\n      record.uri = 'at://' + commit.repo + '/' + op.path;\n      record.action = op.action;\n\n      let unexpected =\n        (op.action !== 'create' && op.action !== 'update' && op.action !== 'delete') ||\n        known$Types.indexOf(record.$type) < 0;\n\n      if (unexpected) {\n        console.warn('unexpected ', record);\n        if (!buf.block.unexpected) buf.block.unexpected = [];\n        buf.block.unexpected.push(record);\n      } else if (op.action === 'delete') {\n        if (!buf.block.deletes) buf.block.deletes = [];\n        buf.block.deletes.push(record);\n      } else {\n        buf.block.messages.push(record);\n      }\n\n      buf.block.parseTime += Date.now() - parseStart;\n    }\n  }\n\n  /**\n   * @param {string} errorStr\n   */\n  function addBufError(errorStr) {\n    if (!buf.block.error) buf.block.error = [];\n    buf.block.error.push({ message: errorStr });\n  }\n\n  function handleError(error) {\n    console.error(error);\n    const errorText =\n      error.message || 'WebSocket error ' + error;\n    buf.reject(new Error(errorText));\n  }\n\n}\n\n/** @returns {{\n *  block: FirehoseBlock,\n *  resolve: () => void,\n *  reject: (reason?: any) => void,\n *  promise: Promise<void>\n * }} */\nfunction createAwaitPromise() {\n  const result = {\n    /** @type {FirehoseBlock} */\n    block: {\n      receiveTimestamp: 0,\n      since: '',\n      time: '',\n      messages: [],\n      parseTime: 0\n    }\n  };\n  result.promise = new Promise((resolve, reject) => {\n    result.resolve = resolve;\n    result.reject = reject;\n  });\n  return /** @type {*} */(result);\n}\n\nexport function ensureCborXExtended() {\n  if (cbor_x_extended) return;\n\n  cbor_x_addExtension({\n    Class: multiformats_CID,\n    tag: 42,\n    encode: () => {\n      throw new Error(\"cannot encode cids\");\n    },\n    decode: (bytes) => {\n      if (bytes[0] !== 0) throw new Error(\"invalid cid for cbor tag 42\");\n      return multiformats_CID.decode(bytes.subarray(1)); // ignore leading 0x00\n    },\n  });\n\n  cbor_x_extended = true;\n}\n"],"names":["decoder","TextDecoder","error","src","srcEnd","position","LEGACY_RECORD_INLINE_ID","RECORD_DEFINITIONS_ID","RECORD_INLINE_ID","BUNDLED_STRINGS_ID","PACKED_REFERENCE_TAG_ID","STOP_CODE","maxArraySize","maxMapSize","currentDecoder","currentStructures","srcString","srcStringStart","srcStringEnd","bundledStrings","referenceMap","currentExtensions","currentExtensionRanges","packedValues","dataView","restoreMapsAsObject","defaultOptions","useRecords","mapsAsObjects","sequentialMode","inlineObjectReadThreshold","Function","Infinity","Decoder","constructor","options","keyMap","_keyMap","undefined","getStructures","getShared","structures","uninitialized","mapKey","Map","k","v","Object","entries","set","assign","decodeKey","key","get","encodeKey","hasOwnProperty","encodeKeys","rec","map","decodeKeys","name","_mapKey","res","forEach","safeKey","has","mapDecode","source","end","decode","r","saveState","clearSource","prototype","call","length","DataView","buffer","byteOffset","byteLength","Uint8Array","Error","sharedValues","pack","Array","maxPrivatePackedValues","concat","checkedRead","decodeMultiple","values","lastPosition","size","value","defaultDecoder","push","result","read","postBundlePosition","incomplete","RangeError","message","startsWith","token","majorType","getFloat16","getUint16","getFloat32","useFloat32","multiplier","mult10","getUint32","getFloat64","int64AsNumber","getBigUint64","array","i","join","Buffer","object","readBin","slice","string","shortStringInJS","longStringInJS","readFixedString","structure","createStructureReader","readJustLength","id","recordDefinition","readBundleExt","loadShared","extension","handlesRead","input","Tag","packedValue","getPackedValues","isNaN","validName","readObject","compiledReader","propertyCount","next","slowReads","test","JSON","stringify","toString","readStringJS","subarray","units","byte1","byte2","byte3","byte4","unit","fromCharCode","apply","String","start","bytes","byte","a","b","c","d","e","f","g","h","j","l","m","n","o","copyBuffers","f32Array","Float32Array","u8Array","byte0","exponent","NaN","abs","tag","dateString","Date","epochSec","Math","round","BigInt","fraction","exp","log","existingStructure","isShared","restoreStructures","data","position0","position1","glbl","RegExp","packedTable","newPackedValues","prefixes","suffixes","startingPosition","target","refEntry","targetProperties","used","getPrototypeOf","Set","combine","SHARED_DATA_TAG_ID","version","isLittleEndianMachine","Uint16Array","typedArrays","Uint8ClampedArray","Uint32Array","BigUint64Array","Int8Array","Int16Array","Int32Array","BigInt64Array","Float64Array","typedArrayTags","registerTypedArray","TypedArray","dvMethod","bytesPerElement","BYTES_PER_ELEMENT","littleEndian","sizeShift","dv","elements","ta","method","bundlePosition","bundleLength","dataPosition","sharedData","updatedStructures","sharedVersion","splice","callback","savedSrcEnd","savedPosition","savedSrcStringStart","savedSrcStringEnd","savedSrcString","savedReferenceMap","savedBundledStrings","savedSrc","savedStructures","savedDecoder","savedSequentialMode","addExtension","floor","textEncoder","TextEncoder","extensions","extensionClasses","globalThis","hasNodeBuffer","ByteArrayAllocate","allocUnsafeSlow","ByteArray","MAX_STRUCTURES","MAX_BUFFER_SIZE","throwOnIterable","targetView","safeEnd","MAX_BUNDLE_SIZE","hasNonLatin","RECORD_SYMBOL","Symbol","Encoder","offset","sharedStructures","hasSharedUpdate","encodeUtf8","utf8Write","maxBytes","encodeInto","written","encoder","hasSharedStructures","saveStructures","maxSharedStructures","isSequential","sequential","saveShared","samplingPackedValues","packedObjectMap","sharedPackedObjectMap","create","recordIdsToRemove","transitionsCount","serializationsSinceTransitionRebuild","mapEncode","encodeOptions","_mapped","encode","REUSE_BUFFER_MODE","useSelfDescribedHeader","setUint32","structuredClone","bundleStrings","sharedStructuresLength","transitions","keys","nextTransition","transition","nextId","maxValues","objectMap","findRepetitiveStrings","writeArrayHeader","valuesArray","THROW_ON_ITERABLE","writeBundles","idsToInsert","makeRoom","serialized","insertIds","returnBuffer","updateSharedData","RESET_BUFFER_MODE","findCommonStringsToPack","threshold","status","count","type","packedPosition","strLength","extStart","twoByte","headerSize","c1","c2","strPosition","charCodeAt","copyWithin","alwaysUseFloat","setUint16","setFloat32","xShifted","setFloat64","referee","references","writeObject","useTag259ForMaps","entryValue","extensionClass","getTag","iterator","iteratorNotHandled","entry","asyncIterator","isBlob","useToJSON","toJSON","json","setBigUint64","largeBigIntToFloat","Number","writeBuffer","reverse","variableMapSize","vals","objectOffset","skipValues","newTransitions","parentRecordId","recordId","__keys__","shift","newSize","min","max","newBuffer","copy","chunkThreshold","continuedChunkThreshold","encodeAsIterable","startEncoding","encodeObjectAsIterable","encodeAsAsyncIterable","encodeObjectAsAsyncIterable","iterateProperties","finalIterable","writeEntityLength","tryEncode","element","restartEncoding","restart","encodeIterable","encodedValue","reader","stream","getReader","done","asyncValue","async","useBuffer","clearSharedData","lastVersion","structuresCopy","SharedData","saveResults","existingShared","majorValue","BlobConstructor","Blob","toStringTag","packedStatus","includeKeys","console","ArrayBuffer","date","seconds","getTime","useTimestamp32","getMilliseconds","from","regex","flags","arrayBuffer","typedArray","tagUint8Array","typedArrayEncoder","definitions","unshift","writeExtBuffer","distanceToMove","lastEnd","sort","pop","writeStrings","Class","decodeAddExtension","defaultEncoder","encode_1","MSB","REST","MSBALL","INT","pow","num","out","oldOffset","MSB$1","REST$1","buf","counter","N1","N2","N3","N4","N5","N6","N7","N8","N9","varint","encodingLength","_brrp_varint","code","encodeTo","int","equals","aa","bb","ii","coerce","isView","digest","sizeOffset","digestOffset","Digest","multihash","equalBytes","base","ALPHABET","TypeError","BASE_MAP","x","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","isArray","zeroes","pbegin","pend","b58","carry","it1","it2","str","repeat","decodeUnsafe","psz","b256","it3","it4","vch","_brrp__multiformats_scope_baseX","prefix","baseEncode","baseDecode","codePointAt","prefixCodePoint","text","or","ComposedDecoder","decoders","left","right","Codec","baseX","alphabet","basex","bitsPerChar","codes","bits","SyntaxError","pad","mask","rfc4648","base58btc","base32","CID","asCID","_baseCache","defineProperties","hidden","readonly","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","createV1","other","toStringV0","toStringV1","hash","for","isCID","deprecate","IS_CID_DEPRECATION","cidSymbol","toBaseEncodedString","codec","multibaseName","encodeCID","cid","remainder","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","initialBytes","parse","parseCIDtoBytes","cache","codeOffset","hashOffset","writable","configurable","enumerable","range","warn","typeofs","objectTypeNames","is","typeOf","includes","isBuffer","objectType","getObjectType","objectTypeName","Type","major","terminal","majorEncoded","compare","typ","uint","negint","float","false","true","null","break","Token","encodedLength","encodedBytes","byteValue","process","browser","textDecoder","utf8Slice","fromString","utf8ToBytes","b1","b2","p","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","len","decodeErrPrefix","encodeErrPrefix","assertEnoughData","pos","need","uintBoundaries","readUint8","strict","readUint16","readUint32","readUint64","hi","lo","MAX_SAFE_INTEGER","allowBigInt","decodeUint8","_minor","decodeUint16","decodeUint32","decodeUint64","encodeUint","encodeUintValue","nuint","buint","encodedSize","compareTokens","tok1","tok2","decodeNegint8","decodeNegint16","decodeNegint32","neg1b","pos1b","decodeNegint64","MIN_SAFE_INTEGER","encodeNegint","unsigned","toToken","decodeBytesCompact","minor","_options","decodeBytes8","decodeBytes16","decodeBytes32","decodeBytes64","tokenBytes","encodeBytes","compareBytes","totLength","tok","retainStringBytes","decodeStringCompact","decodeString8","decodeString16","decodeString32","decodeString64","encodeString","_data","_pos","decodeArrayCompact","decodeArray8","decodeArray16","decodeArray32","decodeArray64","decodeArrayIndefinite","allowIndefinite","encodeArray","decodeMapCompact","decodeMap8","decodeMap16","decodeMap32","decodeMap64","decodeMapIndefinite","encodeMap","decodeTagCompact","decodeTag8","decodeTag16","decodeTag32","decodeTag64","encodeTag","MINOR_FALSE","MINOR_TRUE","MINOR_NULL","MINOR_UNDEFINED","decodeUndefined","allowUndefined","coerceUndefinedToNull","decodeBreak","createToken","allowNaN","allowInfinity","decodeFloat16","readFloat16","decodeFloat32","readFloat32","decodeFloat64","readFloat64","encodeFloat","decoded","success","float64","encodeFloat16","ui8a","encodeFloat32","encodeFloat64","inp","valu32","mantissa","logicalExponent","half","mant","val","invalidMinor","errorer","msg","jump","quick","makeCborEncoders","encoders","Ref","obj","parent","createCheck","stack","simpleTokens","emptyArray","emptyMap","typeEncoders","number","_typ","_refStack","isInteger","isSafeInteger","bigint","boolean","_obj","refStack","addBreakTokens","objectToTokens","isMap","sortMapEntries","split","customTypeEncoder","tokens","typeEncoder","mapSorter","defaultDecodeOptions","Tokeniser","byt","padStart","DONE","BREAK","tokenToArray","tokeniser","arr","tokensToObject","tokenToMap","useMaps","rejectDuplicateMapKeys","tags","tagged","tokenizer","base36","format","link","baseCache","WeakMap","self","unknown","CID_CBOR_TAG","toByteView","cidEncoder","cborg","undefinedEncoder","numberEncoder","_encodeOptions","cidDecoder","_decodeOptions","require$$0","require$$1","require$$2","CIDV0_BYTES","SHA2_256","LENGTH","DAG_PB","V2_HEADER_LENGTH","decodeVarint","seeker","seek","decodeV2Header","header","characteristics","dataOffset","dataSize","indexOffset","getMultihashLength","codeLength","lengthLength","mhLength","Kinds","Null","Int","Float","isFinite","Bool","Bytes","Link","List","Types","CarV1HeaderOrV2Pragma > roots (anon)","ret","CarV1HeaderOrV2Pragma","requiredCount","roots","Reprs","toTyped","toRepresentation","readHeader","strictVersion","upTo","exactly","block","decodeDagCbor","v2Header","v1Header","readCid","first","readBlockHead","blockLength","fromBytes","bytesReader","v1length","limitReader","blocks","byteLimit","bytesRead","CarBufferReader","_header","_blocks","_cids","getRoots","some","find","cids","BufferDecoder","known$Types","firehose","knownTypes","cbor_x_extended","firehoseRecords","messages","deletes","unexpected","rest","record","action","requireWebsocket","globalObj","global","requireFn","ensureCborXExtended","WebSocketImpl","WebSocket","wsAddress","ws","binaryType","addEventListener","handleMessage","handleError","handleClose","createAwaitPromise","closed","promise","close","resolve","event","receiveTimestamp","now","parseMessageBufAndResolve","then","addBufError","messageBuf","parseMessageBuf","parseMessageBufWorker","parseError","parseStart","cbor_x_decodeMultiple","op","commit","t","did","identityRecord","$type","repo","handle","time","accountRecord","active","ops","car","ipld_CarBufferReader","since","opIndex","deleteRecord","path","uri","cbor_x_decode","indexOf","parseTime","errorStr","errorText","reject","Promise","cbor_x_addExtension","multiformats_CID"],"mappings":"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IAAI,CAAC+yB,OAAO,CAACI,IAAI,CAACnsB,CAAC,IAAIA,CAAC,CAAC6Y,GAAG,CAACzF,MAAM,CAACpa,GAAG,CAAC,CAAC;AAClD;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE0yB,EAAAA,MAAMA,GAAI;IACR,OAAO,IAAI,CAACK,OAAO;AACrB;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEK,EAAAA,IAAIA,GAAI;AACN,IAAA,IAAI,CAAC,IAAI,CAACJ,KAAK,EAAE;AACf,MAAA,IAAI,CAACA,KAAK,GAAG,IAAI,CAACD,OAAO,CAACzyB,GAAG,CAAC0G,CAAC,IAAIA,CAAC,CAAC6Y,GAAG,CAAC;AAC3C;IACA,OAAO,IAAI,CAACmT,KAAK;AACnB;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,OAAOV,SAASA,CAAEzrB,KAAK,EAAE;AACvB,IAAA,IAAI,EAAEA,KAAK,YAAYjF,UAAU,CAAC,EAAE;AAClC,MAAA,MAAM,IAAIsZ,SAAS,CAAC,mCAAmC,CAAC;AAC1D;IAEA,MAAM;MAAE6U,MAAM;AAAE2C,MAAAA;AAAO,KAAC,GAAGW,SAAuB,CAACxsB,KAAK,CAAC;AACzD,IAAA,OAAO,IAAIgsB,eAAe,CAAC9C,MAAM,EAAE2C,MAAM,CAAC;AAC5C;AACF;;AC7IA;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEaY,MAAAA,WAAW,GAAG,CACzB,oBAAoB,EAAE,oBAAoB,E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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54]}
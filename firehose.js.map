{"version":3,"file":"firehose.js","sources":["node_modules/bski/src/decode/car/utilities/byte-reader.js","node_modules/bski/src/decode/multibase/utils.js","node_modules/bski/src/decode/multibase/base32.js","node_modules/bski/src/decode/cbor/varint.js","node_modules/bski/src/decode/cbor/cid.js","node_modules/bski/src/decode/multibase/base64.js","node_modules/bski/src/decode/cbor/bytes.js","node_modules/bski/src/decode/cbor/cid-link.js","node_modules/bski/src/decode/cbor/decode.js","node_modules/bski/src/decode/car/utilities/sync-car-reader.js","node_modules/bski/src/decode/car/reader.js","node_modules/bski/src/firehose.js","package/firehose.js"],"sourcesContent":["// @ts-check\n\n/**\n * @typedef {{\n *  readonly pos: number;\n *  upto(size: number): Uint8Array;\n *  exactly(size: number, seek: boolean): Uint8Array;\n *  seek(size: number): void;\n * }} SyncByteReader\n */\n\n/**\n * @param {Uint8Array} buf\n * @returns {SyncByteReader}\n */\nexport const createUint8Reader = (buf) => {\n  let pos = 0;\n\n  return {\n    get pos() {\n      return pos;\n    },\n\n    seek(size) {\n      pos += size;\n    },\n    upto(size) {\n      return buf.subarray(pos, pos + Math.min(size, buf.length - pos));\n    },\n    exactly(size, seek) {\n      if (size > buf.length - pos) {\n        throw new RangeError('unexpected end of data');\n      }\n\n      const slice = buf.subarray(pos, pos + size);\n      if (seek) {\n        pos += size;\n      }\n\n      return slice;\n    },\n  };\n};\n","// @ts-check\n\nexport const allocUnsafe = (size) => {\n  return new Uint8Array(size);\n};\n\nexport const createRfc4648Encode = (alphabet, bitsPerChar, pad) => {\n  return (bytes) => {\n    const mask = (1 << bitsPerChar) - 1;\n    let str = '';\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    for (let i = 0; i < bytes.length; ++i) {\n      // Slurp data into the buffer:\n      buffer = (buffer << 8) | bytes[i];\n      bits += 8;\n      // Write out as much as we can:\n      while (bits > bitsPerChar) {\n        bits -= bitsPerChar;\n        str += alphabet[mask & (buffer >> bits)];\n      }\n    }\n    // Partial character:\n    if (bits !== 0) {\n      str += alphabet[mask & (buffer << (bitsPerChar - bits))];\n    }\n    // Add padding characters until we hit a byte boundary:\n    if (pad) {\n      while (((str.length * bitsPerChar) & 7) !== 0) {\n        str += '=';\n      }\n    }\n    return str;\n  };\n};\n\nexport const createRfc4648Decode = (alphabet, bitsPerChar, pad) => {\n  // Build the character lookup table:\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  return (str) => {\n    // Count the padding bytes:\n    let end = str.length;\n    while (pad && str[end - 1] === '=') {\n      --end;\n    }\n    // Allocate the output:\n    const bytes = allocUnsafe(((end * bitsPerChar) / 8) | 0);\n    // Parse the data:\n    let bits = 0; // Number of bits currently in the buffer\n    let buffer = 0; // Bits waiting to be written out, MSB first\n    let written = 0; // Next byte to write\n    for (let i = 0; i < end; ++i) {\n      // Read one character from the string:\n      const value = codes[str[i]];\n      if (value === undefined) {\n        throw new SyntaxError(`invalid base string`);\n      }\n      // Append the bits to the buffer:\n      buffer = (buffer << bitsPerChar) | value;\n      bits += bitsPerChar;\n      // Write out some bits if the buffer has a byte's worth:\n      if (bits >= 8) {\n        bits -= 8;\n        bytes[written++] = 0xff & (buffer >> bits);\n      }\n    }\n    // Verify that we have received just enough bits:\n    if (bits >= bitsPerChar || (0xff & (buffer << (8 - bits))) !== 0) {\n      throw new SyntaxError('unexpected end of data');\n    }\n    return bytes;\n  };\n};","// @ts-check\n\nimport { createRfc4648Decode, createRfc4648Encode } from './utils';\n\nconst BASE32_CHARSET = 'abcdefghijklmnopqrstuvwxyz234567';\nexport const fromBase32 = /*#__PURE__*/ createRfc4648Decode(BASE32_CHARSET, 5, false);\nexport const toBase32 = /*#__PURE__*/ createRfc4648Encode(BASE32_CHARSET, 5, false);\n","// @ts-check\n\nconst MSB = 0x80;\nconst REST = 0x7f;\nconst MSBALL = ~REST;\nconst INT = 2 ** 31;\nconst N1 = 2 ** 7;\nconst N2 = 2 ** 14;\nconst N3 = 2 ** 21;\nconst N4 = 2 ** 28;\nconst N5 = 2 ** 35;\nconst N6 = 2 ** 42;\nconst N7 = 2 ** 49;\nconst N8 = 2 ** 56;\nconst N9 = 2 ** 63;\n/**\n * Encodes a varint\n * @param num Number to encode\n * @param buf Buffer to write on\n * @param offset Starting position on the buffer\n * @returns The amount of bytes written\n */\nexport const encode = (num, buf, offset = 0) => {\n  if (num > Number.MAX_SAFE_INTEGER) {\n    throw new RangeError('could not encode varint');\n  }\n  const start = offset;\n  while (num >= INT) {\n    buf[offset++] = (num & 0xff) | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    buf[offset++] = (num & 0xff) | MSB;\n    num >>>= 7;\n  }\n  buf[offset] = num | 0;\n  return offset - start + 1;\n};\n/**\n * Decodes a varint\n * @param buf Buffer to read from\n * @param offset Starting position on the buffer\n * @returns A tuple containing the resulting number, and the amount of bytes read\n */\nexport const decode = (buf, offset = 0) => {\n  // deno-lint-ignore prefer-const\n  let l = buf.length;\n  let res = 0;\n  let shift = 0;\n  let counter = offset;\n  let b;\n  do {\n    if (counter >= l) {\n      throw new RangeError('could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST) << shift : (b & REST) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB);\n  return [res, counter - offset];\n};\n/**\n * Returns encoding length\n * @param num The number to encode\n * @returns Amount of bytes needed for encoding\n */\nexport const encodingLength = (num) => {\n  return num < N1\n    ? 1\n    : num < N2\n      ? 2\n      : num < N3\n        ? 3\n        : num < N4\n          ? 4\n          : num < N5\n            ? 5\n            : num < N6\n              ? 6\n              : num < N7\n                ? 7\n                : num < N8\n                  ? 8\n                  : num < N9\n                    ? 9\n                    : 10;\n};\n","// @ts-check\n\n/**\n * Raw digest information\n * @typedef {{\n *  code: number;\n *  size: number;\n *  digest: Uint8Array;\n *  bytes: Uint8Array;\n * }} Digest\n */\n\n/**\n * CID information\n * @typedef {{\n *  version: number;\n *  code: number;\n *  digest: Digest;\n *  bytes: Uint8Array;\n * }} CID\n */\n\n\n/**\n * @module\n * Bare minimum implementation for creating, parsing, and formatting\n * AT Protocol-blessed CIDv1 format.\n *\n * As specified by AT Protocol, the blessed format is:\n * - Multibase: `base32` (b)\n * - Multicodec: `dag-cbor` (0x71) for record, `raw` (0x55) for blobs\n * - Multihash: `sha-256` (0x12)\n */\nimport { fromBase32, toBase32 } from '../multibase/base32';\n\nimport { decode as varint_decode, encode as varint_encode, encodingLength as varint_encodingLength } from './varint';\n\n/**\n * Parse a CID string\n */\nexport const parse = (cid) => {\n  if (cid[0] !== 'b') {\n    throw new Error(`only base32 cidv1 is supported`);\n  }\n  const bytes = fromBase32(cid.slice(1));\n  return decode(bytes);\n};\n/**\n * Provides information regarding the CID buffer\n */\nexport const inspect = (initialBytes) => {\n  let offset = 0;\n  const next = () => {\n    const [i, length] = varint_decode(initialBytes.subarray(offset));\n    offset += length;\n    return i;\n  };\n  let version = next();\n  let codec = 0x70; // dag-pb\n  if (version === 18) {\n    // CIDv0\n    version = 0;\n    offset = 0;\n  }\n  else {\n    codec = next();\n  }\n  if (version !== 1) {\n    throw new RangeError(`only cidv1 is supported`);\n  }\n  const prefixSize = offset;\n  const multihashCode = next();\n  const digestSize = next();\n  const size = offset + digestSize;\n  const multihashSize = size - prefixSize;\n  return { version, codec, multihashCode, digestSize, multihashSize, size };\n};\n/**\n * Decode the first CID contained, and return the remainder.\n * @param bytes Buffer to decode\n * @returns A tuple containing the first CID in the buffer, and the remainder\n */\nexport const decodeFirst = (bytes) => {\n  const specs = inspect(bytes);\n  const prefixSize = specs.size - specs.multihashSize;\n  const multihashBytes = bytes.subarray(prefixSize, prefixSize + specs.multihashSize);\n  if (multihashBytes.byteLength !== specs.multihashSize) {\n    throw new RangeError('incorrect cid length');\n  }\n  const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n  const digest = {\n    code: specs.multihashCode,\n    size: specs.multihashSize,\n    digest: digestBytes,\n    bytes: multihashBytes,\n  };\n  const cid = {\n    version: 1,\n    code: specs.codec,\n    digest: digest,\n    bytes: bytes.subarray(0, specs.size),\n  };\n  return [cid, bytes.subarray(specs.size)];\n};\n/**\n * Decodes a CID buffer\n */\nexport const decode = (bytes) => {\n  const [cid, remainder] = decodeFirst(bytes);\n  if (remainder.length !== 0) {\n    throw new Error(`incorrect cid length`);\n  }\n  return cid;\n};\n/**\n * Creates a CID\n */\nexport const create = async (code, input) => {\n  const digest = createDigest(0x12, new Uint8Array(await crypto.subtle.digest('sha-256', input)));\n  const bytes = encode(1, code, digest.bytes);\n  return {\n    version: 1,\n    code: code,\n    digest: digest,\n    bytes: bytes,\n  };\n};\n/**\n * Serialize CID into a string\n */\nexport const format = (cid) => {\n  return 'b' + toBase32(cid.bytes);\n};\nexport const createDigest = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint_encodingLength(code);\n  const digestOffset = sizeOffset + varint_encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint_encode(code, bytes, 0);\n  varint_encode(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return {\n    code: code,\n    size: size,\n    digest: digest,\n    bytes: bytes,\n  };\n};\nexport const encode = (version, code, multihash) => {\n  const codeOffset = varint_encodingLength(version);\n  const hashOffset = codeOffset + varint_encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint_encode(version, bytes, 0);\n  varint_encode(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\n","// @ts-check\n\nimport { createRfc4648Decode, createRfc4648Encode } from './utils';\n\nconst BASE64_CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nconst HAS_UINT8_BASE64_SUPPORT = 'fromBase64' in Uint8Array;\n\nexport const _fromBase64Polyfill = /*#__PURE__*/ createRfc4648Decode(BASE64_CHARSET, 6, false);\n\nexport const _toBase64Polyfill = /*#__PURE__*/ createRfc4648Encode(BASE64_CHARSET, 6, false);\n\nconst WS_PAD_RE = /[\\s=]/;\n\nexport const _fromBase64Native = (str) => {\n  if (str.length % 4 === 1 || WS_PAD_RE.test(str)) {\n    throw new SyntaxError(`invalid base64 string`);\n  }\n  return /** @type {*} */(Uint8Array).fromBase64(str, { alphabet: 'base64', lastChunkHandling: 'loose' });\n};\n\nexport const _toBase64Native = (bytes) => {\n  return bytes.toBase64({ alphabet: 'base64', omitPadding: true });\n};\n\nexport const fromBase64 = !HAS_UINT8_BASE64_SUPPORT ? _fromBase64Polyfill : _fromBase64Native;\n\nexport const toBase64 = !HAS_UINT8_BASE64_SUPPORT ? _toBase64Polyfill : _toBase64Native;\n","// @ts-check\n\nimport { fromBase64, toBase64 } from '../multibase/base64';\n\nexport class BytesWrapper {\n  buf;\n  constructor(buf) {\n    this.buf = buf;\n  }\n  get $bytes() {\n    return toBase64(this.buf);\n  }\n  toJSON() {\n    return { $bytes: this.$bytes };\n  }\n}\nexport const toBytes = (buf) => {\n  return new BytesWrapper(buf);\n};\nexport const fromBytes = (bytes) => {\n  if (bytes instanceof BytesWrapper) {\n    return bytes.buf;\n  }\n  return fromBase64(bytes.$bytes);\n};\n\n","// @ts-check\n\nimport { decode, parse } from './cid';\nimport { toBase32 } from '../multibase/base32';\nclass CIDLinkWrapper {\n  $bytes;\n  constructor($bytes) {\n    this.$bytes = $bytes;\n  }\n  get $cid() {\n    return decode(this.$bytes);\n  }\n  get $link() {\n    return 'b' + toBase32(this.$bytes);\n  }\n  toJSON() {\n    return { $link: this.$link };\n  }\n}\nexport const toCIDLink = (value) => {\n  return 'b' + toBase32(value.bytes || value);\n  if (value instanceof Uint8Array) {\n    return 'b' + toBase32(value);\n    return new CIDLinkWrapper(value);\n  }\n  return 'b' + toBase32(value.bytes);\n  return new CIDLinkWrapper(value.bytes);\n};\n\nexport const fromCIDLink = (link) => {\n  if (link instanceof CIDLinkWrapper) {\n    return link.$cid;\n  }\n  return parse(link.$link);\n};\n//# sourceMappingURL=cid-link.js.map","// @ts-check\n\nimport { toBytes } from './bytes';\nimport { toCIDLink } from './cid-link';\nconst utf8d = new TextDecoder();\nconst readArgument = (state, info) => {\n  if (info < 24) {\n    return info;\n  }\n  switch (info) {\n    case 24:\n      return readUint8(state);\n    case 25:\n      return readUint16(state);\n    case 26:\n      return readUint32(state);\n    case 27:\n      return readUint64(state);\n  }\n  throw new Error(`invalid argument encoding; got ${info}`);\n};\nconst readFloat64 = (state) => {\n  const value = state.v.getFloat64(state.p);\n  state.p += 8;\n  return value;\n};\nconst readUint8 = (state) => {\n  const value = state.v.getUint8(state.p);\n  state.p += 1;\n  return value;\n};\nconst readUint16 = (state) => {\n  const value = state.v.getUint16(state.p);\n  state.p += 2;\n  return value;\n};\nconst readUint32 = (state) => {\n  const value = state.v.getUint32(state.p);\n  state.p += 4;\n  return value;\n};\nconst readUint64 = (state) => {\n  const hi = state.v.getUint32(state.p);\n  const lo = state.v.getUint32(state.p + 4);\n  if (hi > 0x1fffff) {\n    throw new RangeError(`can't decode integers beyond safe integer range`);\n  }\n  // prettier-ignore\n  const value = (hi * (2 ** 32)) + lo;\n  state.p += 8;\n  return value;\n};\nconst readString = (state, length) => {\n  const slice = state.b.subarray(state.p, (state.p += length));\n  return utf8d.decode(slice);\n};\nconst readBytes = (state, length) => {\n  const slice = state.b.subarray(state.p, (state.p += length));\n  return toBytes(slice);\n};\nconst readCid = (state, length) => {\n  // CID bytes are prefixed with 0x00 for historical reasons, apparently.\n  const slice = state.b.subarray(state.p + 1, (state.p += length));\n  return toCIDLink(slice);\n};\nconst readValue = (state) => {\n  const prelude = readUint8(state);\n  const type = prelude >> 5;\n  const info = prelude & 0x1f;\n  if (type === 0) {\n    const value = readArgument(state, info);\n    return value;\n  }\n  if (type === 1) {\n    const value = readArgument(state, info);\n    return -1 - value;\n  }\n  if (type === 2) {\n    const len = readArgument(state, info);\n    return readBytes(state, len);\n  }\n  if (type === 3) {\n    const len = readArgument(state, info);\n    return readString(state, len);\n  }\n  if (type === 4) {\n    const len = readArgument(state, info);\n    const array = new Array(len);\n    for (let idx = 0; idx < len; idx++) {\n      array[idx] = readValue(state);\n    }\n    return array;\n  }\n  if (type === 5) {\n    const len = readArgument(state, info);\n    const object = {};\n    for (let idx = 0; idx < len; idx++) {\n      const key = readValue(state);\n      if (typeof key !== 'string') {\n        throw new TypeError(`expected map to only have string keys; got ${typeof key}`);\n      }\n      object[key] = readValue(state);\n    }\n    return object;\n  }\n  if (type === 6) {\n    const tag = readArgument(state, info);\n    if (tag === 42) {\n      const prelude = readUint8(state);\n      const type = prelude >> 5;\n      const info = prelude & 0x1f;\n      if (type !== 2) {\n        throw new TypeError(`expected cid tag to have bytes value; got ${type}`);\n      }\n      const len = readArgument(state, info);\n      return readCid(state, len);\n    }\n    throw new TypeError(`unsupported tag; got ${tag}`);\n  }\n  if (type === 7) {\n    switch (info) {\n      case 20:\n        return false;\n      case 21:\n        return true;\n      case 22:\n        return null;\n      case 27:\n        return readFloat64(state);\n    }\n    throw new Error(`invalid simple value; got ${info}`);\n  }\n  throw new TypeError(`invalid type; got ${type}`);\n};\nexport const decodeFirst = (buf) => {\n  const state = {\n    b: buf,\n    v: new DataView(buf.buffer, buf.byteOffset, buf.byteLength),\n    p: 0,\n  };\n  const value = readValue(state);\n  const remainder = buf.subarray(state.p);\n  return [value, remainder];\n};\nexport const decode = (buf) => {\n  const [value, remainder] = decodeFirst(buf);\n  if (remainder.length !== 0) {\n    throw new Error(`decoded value contains remainder`);\n  }\n  return value;\n};","// @ts-check\n\nimport { encode as CID_encode } from '../../cbor/cid';\nimport { decode as varint_decode } from '../../cbor/varint';\nimport { decode as CBOR_decode } from '../../cbor/decode';\n\n/**\n * @typedef {{\n *  version: 1;\n *  roots: string[];\n * }} CarV1Header\n */\n\n/** @returns {value is CarV1Header} */\nconst isCarV1Header = (value) => {\n  if (value === null || typeof value !== 'object') {\n    return false;\n  }\n\n  const { version, roots } = value;\n  return version === 1 && Array.isArray(roots) && roots.every((root) => typeof root === 'string');\n};\n\n/**\n * @param {import('./byte-reader').SyncByteReader} reader\n * @param {number} size\n */\nconst readVarint = (reader, size) => {\n  const buf = reader.upto(size);\n  if (buf.length === 0) {\n    throw new RangeError(`unexpected end of data`);\n  }\n\n  const [int, read] = varint_decode(buf);\n  reader.seek(read);\n\n  return int;\n};\n\n/**\n * @param {import('./byte-reader').SyncByteReader} reader\n */\nconst readHeader = (reader) => {\n  const length = readVarint(reader, 8);\n  if (length === 0) {\n    throw new RangeError(`invalid car header; length=0`);\n  }\n\n  const rawHeader = reader.exactly(length, true);\n  const header = CBOR_decode(rawHeader);\n  if (!isCarV1Header(header)) {\n    throw new TypeError(`expected a car v1 archive`);\n  }\n\n  return header;\n};\n\n/**\n * @param {import('./byte-reader').SyncByteReader} reader\n */\nconst readMultihashDigest = (reader) => {\n  const first = reader.upto(8);\n\n  const [code, codeOffset] = varint_decode(first);\n  const [size, sizeOffset] = varint_decode(first.subarray(codeOffset));\n\n  const offset = codeOffset + sizeOffset;\n\n  const bytes = reader.exactly(offset + size, true);\n  const digest = bytes.subarray(offset);\n\n  return {\n    code: code,\n    size: size,\n    digest: digest,\n    bytes: bytes,\n  };\n};\n\n/**\n * @param {import('./byte-reader').SyncByteReader} reader\n */\nconst readCid = (reader) => {\n  const version = readVarint(reader, 8);\n  if (version !== 1) {\n    throw new Error(`expected a cidv1`);\n  }\n\n  const codec = readVarint(reader, 8);\n  const digest = readMultihashDigest(reader);\n\n  const cid = {\n    version: version,\n    code: codec,\n    digest: digest,\n    bytes: CID_encode(version, codec, digest.bytes),\n  };\n\n  return cid;\n};\n\n/**\n * @param {import('./byte-reader').SyncByteReader} reader\n */\nconst readBlockHeader = (reader) => {\n  const start = reader.pos;\n\n  let size = readVarint(reader, 8);\n  if (size === 0) {\n    throw new Error(`invalid car section; length=0`);\n  }\n\n  size += reader.pos - start;\n\n  const cid = readCid(reader);\n  const blockSize = size - Number(reader.pos - start);\n\n  return { cid, blockSize };\n};\n\n/**\n * @param {import('./byte-reader').SyncByteReader} reader\n */\nexport const createCarReader = (reader) => {\n  const { roots } = readHeader(reader);\n\n  return {\n    roots,\n    /** @returns {Generator<{ cid: import('../../cbor/cid').CID; bytes: Uint8Array }>} */\n    *iterate() {\n      while (reader.upto(8).length > 0) {\n        const { cid, blockSize } = readBlockHeader(reader);\n        const bytes = reader.exactly(blockSize, true);\n\n        yield { cid, bytes };\n      }\n    },\n  };\n};\n","// @ts-check\n\nimport { createUint8Reader } from './utilities/byte-reader';\nimport { createCarReader } from './utilities/sync-car-reader';\n\n/** @param {Uint8Array} buffer */\nexport const readCar = (buffer) => {\n  const reader = createUint8Reader(buffer);\n  return createCarReader(reader);\n};\n","// @ts-check\n/// <reference types='@atproto/api' />\n\nimport { readCar } from './decode/car/reader';\nimport { fromBytes } from './decode/cbor/bytes';\nimport { toCIDLink } from './decode/cbor/cid-link';\nimport { decode, decodeFirst } from './decode/cbor/decode';\n\nimport { version } from '../package.json';\nexport { version };\n\nconst emptyUint8Array = new Uint8Array();\n\n/**\n * @typedef {{\n *  'app.bsky.feed.like': import('@atproto/api').AppBskyFeedLike.Record,\n *  'app.bsky.feed.post': import('@atproto/api').AppBskyFeedPost.Record,\n *  'app.bsky.feed.repost': import('@atproto/api').AppBskyFeedRepost.Record,\n *  'app.bsky.feed.threadgate': import('@atproto/api').AppBskyFeedThreadgate.Record,\n *  'app.bsky.graph.follow': import('@atproto/api').AppBskyGraphFollow.Record,\n *  'app.bsky.graph.block': import('@atproto/api').AppBskyGraphBlock.Record,\n *  'app.bsky.graph.list': import('@atproto/api').AppBskyGraphList.Record,\n *  'app.bsky.graph.listitem': import('@atproto/api').AppBskyGraphListitem.Record,\n *  'app.bsky.graph.listblock': import('@atproto/api').AppBskyGraphListblock.Record,\n *  'app.bsky.actor.profile': import('@atproto/api').AppBskyActorProfile.Record\n *  'app.bsky.feed.generator': import('@atproto/api').AppBskyFeedGenerator.Record\n *  'app.bsky.feed.postgate': import('@atproto/api').AppBskyFeedPostgate.Record\n *  'chat.bsky.actor.declaration': import('@atproto/api').ChatBskyActorDeclaration.Record,\n *  'app.bsky.graph.starterpack': import('@atproto/api').AppBskyGraphStarterpack.Record\n * }} RepositoryRecordTypes$\n */\n\n/**\n * @template {keyof RepositoryRecordTypes$} $Type\n * @typedef {RepositoryRecordTypes$[$Type] & {\n *  repo: string,\n *  uri: string,\n *  cid: string,\n *  action: 'create' | 'update',\n *  path: string,\n *  $type: $Type,\n *  since: string,\n *  time: string,\n *  receiveTimestamp: number,\n *  parseTime: number\n * }} FirehoseRepositoryRecord\n */\n\n/**\n * @typedef {{\n *  repo: string,\n *  uri: string,\n *  action: 'delete',\n *  path: string,\n *  $type: keyof RepositoryRecordTypes$,\n *  since: string,\n *  time: string,\n *  receiveTimestamp: number,\n *  parseTime: number\n * }} FirehoseDeleteRecord\n */\n\n\n/**\n * @typedef {{\n *  $type: '#identity',\n *  repo: string,\n *  action?: never,\n *  handle: string,\n *  time: string,\n *  receiveTimestamp: number,\n *  parseTime: number\n * }} FirehoseIdentityRecord\n */\n\n/**\n * @typedef {{\n *  $type: '#identity',\n *  repo: string,\n *  action?: never,\n *  active: boolean,\n *  time: string,\n *  receiveTimestamp: number,\n *  parseTime: number\n * }} FirehoseAccountRecord\n */\n\n/**\n * @typedef {{\n *  $type: 'error',\n *  action?: never,\n *  message: string,\n *  receiveTimestamp: number,\n *  parseTime: number\n * } & Record<string, unknown>} FirehoseErrorRecord\n */\n\n/**\n * @typedef {FirehoseRepositoryRecord<'app.bsky.feed.like'> |\n * FirehoseRepositoryRecord<'app.bsky.feed.post'> |\n * FirehoseRepositoryRecord<'app.bsky.feed.repost'> |\n * FirehoseRepositoryRecord<'app.bsky.feed.threadgate'> |\n * FirehoseRepositoryRecord<'app.bsky.graph.follow'> |\n * FirehoseRepositoryRecord<'app.bsky.graph.block'> |\n * FirehoseRepositoryRecord<'app.bsky.graph.list'> |\n * FirehoseRepositoryRecord<'app.bsky.graph.listitem'> |\n * FirehoseRepositoryRecord<'app.bsky.graph.listblock'> |\n * FirehoseRepositoryRecord<'app.bsky.actor.profile'> |\n * FirehoseRepositoryRecord<'app.bsky.feed.generator'> |\n * FirehoseRepositoryRecord<'app.bsky.feed.postgate'> |\n * FirehoseRepositoryRecord<'chat.bsky.actor.declaration'> |\n * FirehoseRepositoryRecord<'app.bsky.graph.starterpack'> |\n * FirehoseDeleteRecord |\n * FirehoseIdentityRecord |\n * FirehoseAccountRecord |\n * FirehoseErrorRecord\n * } FirehoseRecord\n */\n\nexport const known$Types = /** @type {const} */([\n  'app.bsky.feed.like', 'app.bsky.feed.post', 'app.bsky.feed.repost', 'app.bsky.feed.threadgate',\n  'app.bsky.graph.follow', 'app.bsky.graph.block', 'app.bsky.graph.list', 'app.bsky.graph.listitem', 'app.bsky.graph.listblock',\n  'app.bsky.actor.profile',\n  'app.bsky.feed.generator',\n  'app.bsky.feed.postgate',\n  'chat.bsky.actor.declaration',\n  'app.bsky.graph.starterpack'\n]);\n\nfirehose.knownTypes = known$Types;\n\nfunction requireWebsocket() {\n  const globalObj = typeof global !== 'undefined' && global || typeof globalThis !== 'undefined' && globalThis;\n  const requireFn = globalObj?.['require'];\n  if (typeof requireFn === 'function') return /** @type {typeof WebSocket} */(requireFn('ws'));\n  throw new Error('WebSocket not available');\n}\n\nfirehose.each = each;\nfirehose.version = version;\n\n/**\n * @param {string} [address]\n * @returns {AsyncGenerator<FirehoseRecord[], void, void>}\n */\nexport async function* firehose(address) {\n  const WebSocketImpl = typeof WebSocket === 'function' ? WebSocket :\n    requireWebsocket();\n\n  const wsAddress = address || 'wss://bsky.network/xrpc/com.atproto.sync.subscribeRepos';\n\n  const ws = new WebSocketImpl(wsAddress);\n  ws.binaryType = 'arraybuffer';\n  ws.addEventListener('message', handleMessage);\n  ws.addEventListener('error', handleError);\n  ws.addEventListener('close', handleClose)\n\n  let buf = createAwaitPromise();\n  let closed = false;\n\n  try {\n\n    while (true) {\n      await buf.promise;\n      if (buf.block?.length) {\n        const block = buf.block;\n        buf = createAwaitPromise();\n        if (closed) {\n          block['messages'] = block; // backwards compatibility trick\n          if (block.length) yield block;\n          break;\n        }\n        yield block;\n      } else {\n        buf = createAwaitPromise();\n      }\n    }\n  } finally {\n    if (!closed) {\n      try { ws.close(); }\n      catch (error) { }\n    }\n  }\n\n  function handleClose() {\n    closed = true;\n    buf.resolve();\n  }\n\n  function handleMessage(event) {\n    const receiveTimestamp = Date.now();\n\n    if (typeof event.data?.byteLength === 'number') {\n      parseMessageBufAndResolve(receiveTimestamp, event.data);\n    } else if (typeof event.data?.arrayBuffer === 'function') {\n      event.data.arrayBuffer().then(arrayBuffer => parseMessageBufAndResolve(receiveTimestamp, arrayBuffer))\n    } else {\n      buf.block.push({\n        $type: 'error',\n        message: 'WebSocket message type not supported.',\n        data: event.data,\n        receiveTimestamp,\n        parseTime: 0\n      });\n      buf.resolve();\n    }\n  }\n\n  /**\n   * @param {number} receiveTimestamp\n   * @param {ArrayBuffer} arrayBuf\n   */\n  function parseMessageBufAndResolve(receiveTimestamp, arrayBuf) {\n    parseMessageBuf(receiveTimestamp, new Uint8Array(arrayBuf));\n    buf.resolve();\n  }\n\n  /**\n   * @param {number} receiveTimestamp\n   * @param {Uint8Array} messageBuf\n   */\n  function parseMessageBuf(receiveTimestamp, messageBuf) {\n    const parseStart = performance.now();\n    try {\n      parseMessageBufWorker(receiveTimestamp, parseStart, messageBuf);\n      buf.resolve();\n    } catch (parseError) {\n      buf.block.push({\n        $type: 'error',\n        message: parseError.message,\n        receiveTimestamp,\n        parseTime: performance.now() - parseStart\n      });\n    }\n\n    buf.resolve();\n  }\n\n  /**\n * @param {number} receiveTimestamp\n * @param {number} parseStart\n * @param {Uint8Array} messageBuf\n */\n  function parseMessageBufWorker(receiveTimestamp, parseStart, messageBuf) {\n    const [header, remainder] = decodeFirst(messageBuf);\n    const [body, remainder2] = decodeFirst(remainder);\n    if (remainder2.length > 0) {\n      return buf.block.push({\n        $type: 'error',\n        message: 'Excess bytes in message.',\n        receiveTimestamp,\n        parseTime: performance.now() - parseStart\n      });\n    }\n\n    const { t, op } = header;\n\n    if (op === -1) {\n      return buf.block.push({\n        $type: 'error',\n        message: 'Error header#' + body.error + ': ' + body.message,\n        receiveTimestamp,\n        parseTime: performance.now() - parseStart\n      });\n    }\n\n    if (t === '#commit') {\n      const commit = body;\n\n      // A commit can contain no changes\n      if (!('blocks' in commit) || !(commit.blocks.$bytes.length)) {\n        return buf.block.push({\n          $type: 'com.atproto.sync.subscribeRepos#commit',\n          ...commit,\n          blocks: emptyUint8Array,\n          ops: [],\n          receiveTimestamp,\n          parseTime: performance.now() - parseStart\n        });\n      }\n\n      const blocks = fromBytes(commit.blocks);\n      const car = readCarToMap(blocks);\n      for (let opIndex = 0; opIndex < commit.ops.length; opIndex++) {\n        const op = commit.ops[opIndex];\n        const action = op.action;\n\n        const now = performance.now();\n        const record = op.cid ? car.get(op.cid) : undefined;\n\n        if (action === 'create' || action === 'update') {\n          if (!op.cid) {\n            buf.block.push({\n              $type: 'error',\n              message: 'Missing commit.ops[' + (opIndex - 1) + '].cid.',\n              receiveTimestamp,\n              parseTime: now - parseStart,\n              commit\n            });\n            parseStart = now;\n            continue;\n          }\n\n          if (!record) {\n            buf.block.push({\n              $type: 'error',\n              message: 'Unresolved commit.ops[' + (opIndex - 1) + '].cid ' + op.cid,\n              receiveTimestamp,\n              parseTime: now - parseStart,\n              commit\n            });\n            parseStart = now;\n            continue;\n          }\n\n          record.action = action;\n          record.uri = 'at://' + commit.repo + '/' + op.path;\n          record.path = op.path;\n          record.cid = op.cid;\n          record.receiveTimestamp = receiveTimestamp;\n          record.parseTime = now - parseStart;\n\n          buf.block.push(record);\n          continue;\n        } else if (action === 'delete') {\n          buf.block.push({\n            action,\n            path: op.path,\n            receiveTimestamp,\n            parseTime: now - parseStart\n          });\n          parseStart = now;\n        } else {\n          buf.block.push({\n            $type: 'error',\n            message: 'Unknown action ' + op.action,\n            ...record,\n            receiveTimestamp,\n            parseTime: now - parseStart\n          });\n          parseStart = now;\n          continue;\n        }\n      }\n      return;\n    }\n\n    return buf.block.push({\n      $type: t,\n      ...body,\n      receiveTimestamp,\n      parseTime: performance.now() - parseStart\n    });\n  }\n\n  function handleError(error) {\n    console.error(error);\n    const errorText =\n      error.message || 'WebSocket error ' + error;\n    buf.reject(new Error(errorText));\n  }\n\n}\n\n/**\n * @param {string} [address]\n * @returns {AsyncGenerator<FirehoseRecord, void, void>}\n */\nasync function* each(address) {\n  for await (const block of firehose(address)) {\n    yield* block;\n  }\n}\n\n/**\n * @returns {{\n *  block: FirehoseRecord[],\n *  resolve: () => void,\n *  reject: (reason?: any) => void,\n *  promise: Promise<void>\n * }} */\nfunction createAwaitPromise() {\n  const result = {\n    /** @type {FirehoseRecord[]} */\n    block: []\n  };\n  result.promise = new Promise((resolve, reject) => {\n    result.resolve = resolve;\n    result.reject = reject;\n  });\n  return /** @type {*} */(result);\n}\n\n/** @param {Uint8Array} buffer */\nfunction readCarToMap(buffer) {\n  const records = new Map();\n  for (const { cid, bytes } of readCar(buffer).iterate()) {\n    records.set(toCIDLink(cid), decode(bytes));\n  }\n  return records;\n}\n","// @ts-check\n\nimport { firehose as bski_firehose } from 'bski';\n\n/** @param {string} [address] */\nexport async function* firehose(address) {\n  for await (const record of bski_firehose(address)) {\n    record['messages'] = record;\n    yield record;\n  }\n}\n"],"names":["createUint8Reader","buf","pos","seek","size","upto","subarray","Math","min","length","exactly","RangeError","slice","allocUnsafe","Uint8Array","createRfc4648Encode","alphabet","bitsPerChar","pad","bytes","mask","str","bits","buffer","i","createRfc4648Decode","codes","end","written","value","undefined","SyntaxError","BASE32_CHARSET","toBase32","MSB","REST","MSBALL","INT","N1","N2","N3","N4","N5","N6","N7","N8","N9","encode","num","offset","Number","MAX_SAFE_INTEGER","start","decode","l","res","shift","counter","b","pow","encodingLength","version","code","multihash","codeOffset","varint_encodingLength","hashOffset","byteLength","varint_encode","set","BASE64_CHARSET","HAS_UINT8_BASE64_SUPPORT","_fromBase64Polyfill","_toBase64Polyfill","WS_PAD_RE","_fromBase64Native","test","fromBase64","lastChunkHandling","_toBase64Native","toBase64","omitPadding","BytesWrapper","constructor","$bytes","toJSON","toBytes","fromBytes","toCIDLink","utf8d","TextDecoder","readArgument","state","info","readUint8","readUint16","readUint32","readUint64","Error","readFloat64","v","getFloat64","p","getUint8","getUint16","getUint32","hi","lo","readString","readBytes","readCid","readValue","prelude","type","len","array","Array","idx","object","key","TypeError","tag","decodeFirst","DataView","byteOffset","remainder","isCarV1Header","roots","isArray","every","root","readVarint","reader","int","read","varint_decode","readHeader","rawHeader","header","CBOR_decode","readMultihashDigest","first","sizeOffset","digest","codec","cid","CID_encode","readBlockHeader","blockSize","createCarReader","iterate","readCar","emptyUint8Array","known$Types","firehose","knownTypes","requireWebsocket","globalObj","global","globalThis","requireFn","each","address","WebSocketImpl","WebSocket","wsAddress","ws","binaryType","addEventListener","handleMessage","handleError","handleClose","createAwaitPromise","closed","promise","block","close","error","resolve","event","receiveTimestamp","Date","now","data","parseMessageBufAndResolve","arrayBuffer","then","push","$type","message","parseTime","arrayBuf","parseMessageBuf","messageBuf","parseStart","performance","parseMessageBufWorker","parseError","body","remainder2","t","op","commit","blocks","ops","car","readCarToMap","opIndex","action","record","get","uri","repo","path","console","errorText","reject","result","Promise","records","Map","bski_firehose"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}